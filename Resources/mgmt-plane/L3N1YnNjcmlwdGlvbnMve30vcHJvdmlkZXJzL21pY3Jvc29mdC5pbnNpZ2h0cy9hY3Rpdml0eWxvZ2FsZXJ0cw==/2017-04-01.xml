<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.insights/activitylogalerts" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2FjdGl2aXR5TG9nQWxlcnRz/V/MjAxNy0wNC0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHM=/V/MjAxNy0wNC0wMQ=="/>
  <commandGroup name="monitor activity-log alert">
    <command name="list" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.insights/activitylogalerts" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2FjdGl2aXR5TG9nQWxlcnRz/V/MjAxNy0wNC0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHM=/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" group="" idPart="resource_group">
          <help short="Name of the resource group under which the activity log alert rules are                           being listed. If it is omitted, all the activity log alert rules under the current subscription are listed."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_ActivityLogAlerts_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_ActivityLogAlerts_ListBySubscriptionId">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_ActivityLogAlerts_ListByResourceGroup" operationId="ActivityLogAlerts_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/activityLogAlerts">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/microsoft.insights/activityLogAlerts/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="actions" required="True">
                          <prop type="array<object>" name="actionGroups">
                            <item type="object">
                              <prop type="string" name="actionGroupId" required="True"/>
                              <prop type="object" name="webhookProperties">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="condition" required="True">
                          <prop type="array<object>" name="allOf" required="True">
                            <item type="object">
                              <prop type="string" name="equals" required="True"/>
                              <prop type="string" name="field" required="True"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="string" name="description"/>
                        <prop type="boolean" name="enabled">
                          <default value="true"/>
                        </prop>
                        <prop type="array<string>" name="scopes" required="True">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_ActivityLogAlerts_ListBySubscriptionId" operationId="ActivityLogAlerts_ListBySubscriptionId">
        <http path="/subscriptions/{subscriptionId}/providers/microsoft.insights/activityLogAlerts">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/microsoft.insights/activityLogAlerts/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="actions" required="True">
                          <prop type="array<object>" name="actionGroups">
                            <item type="object">
                              <prop type="string" name="actionGroupId" required="True"/>
                              <prop type="object" name="webhookProperties">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="condition" required="True">
                          <prop type="array<object>" name="allOf" required="True">
                            <item type="object">
                              <prop type="string" name="equals" required="True"/>
                              <prop type="string" name="field" required="True"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="string" name="description"/>
                        <prop type="boolean" name="enabled">
                          <default value="true"/>
                        </prop>
                        <prop type="array<string>" name="scopes" required="True">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
