<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2017-10-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAxNy0xMC0wMQ=="/>
  <commandGroup name="network nsg rule">
    <command name="show" version="2017-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2017-10-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAxNy0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" group="" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SecurityRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="get">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_read"/>
                    </prop>
                    <prop type="string" name="destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority"/>
                    <prop type="string" name="protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop readOnly="True" type="string" name="resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2017-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2017-10-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAxNy0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" group="" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SecurityRules_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="delete">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2017-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2017-10-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAxNy0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" group="" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$securityRuleParameters.properties.access" options="access" group="">
          <help short="Network traffic is allowed or denied."/>
          <default value="&quot;Allow&quot;"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.description" options="description" group="">
          <help short="Description for this rule. Restricted to 140 chars."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.direction" options="direction" group="">
          <help short="Direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic."/>
          <default value="&quot;Inbound&quot;"/>
          <enum>
            <item name="Inbound" value="&quot;Inbound&quot;"/>
            <item name="Outbound" value="&quot;Outbound&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$securityRuleParameters.properties.priority" options="priority" group="">
          <help short="Priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.protocol" options="protocol" group="">
          <help short="Network protocol this rule applies to."/>
          <default value="&quot;*&quot;"/>
          <enum>
            <item name="*" value="&quot;*&quot;"/>
            <item name="Tcp" value="&quot;Tcp&quot;"/>
            <item name="Udp" value="&quot;Udp&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg type="string" var="$securityRuleParameters.properties.destinationAddressPrefix" options="destination-address-prefix" group="Destination">
          <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
        </arg>
        <arg type="array<string>" var="$securityRuleParameters.properties.destinationAddressPrefixes" options="destination-address-prefixes" group="Destination">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <default value="[&quot;*&quot;]"/>
          <item type="string"/>
        </arg>
        <arg type="array<@ApplicationSecurityGroup_create>" var="$securityRuleParameters.properties.destinationApplicationSecurityGroups" options="destination-application-security-groups" group="Destination">
          <help short="Application security group specified as destination."/>
          <item type="@ApplicationSecurityGroup_create"/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.destinationPortRange" options="destination-port-range" group="Destination">
          <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
        </arg>
        <arg type="array<string>" var="$securityRuleParameters.properties.destinationPortRanges" options="destination-port-ranges" group="Destination">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports."/>
          <default value="[&quot;80&quot;]"/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$securityRuleParameters.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
        </arg>
      </argGroup>
      <argGroup name="SecurityRuleParameters">
        <arg type="string" var="$securityRuleParameters.etag" options="etag" hide="True" group="SecurityRuleParameters">
          <help short="A unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg type="ResourceId" var="$securityRuleParameters.id" options="id" hide="True" group="SecurityRuleParameters">
          <help short="Resource ID."/>
        </arg>
      </argGroup>
      <argGroup name="Source">
        <arg type="string" var="$securityRuleParameters.properties.sourceAddressPrefix" options="source-address-prefix" group="Source">
          <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."/>
        </arg>
        <arg type="array<string>" var="$securityRuleParameters.properties.sourceAddressPrefixes" options="source-address-prefixes" group="Source">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <default value="[&quot;*&quot;]"/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$securityRuleParameters.properties.sourceApplicationSecurityGroups" options="source-application-security-groups" group="Source">
          <help short="Application security group specified as source."/>
          <item type="object" cls="ApplicationSecurityGroup_create">
            <arg type="ResourceId" var="@ApplicationSecurityGroup_create.id" options="id" group="">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@ApplicationSecurityGroup_create.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg type="object" var="@ApplicationSecurityGroup_create.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.sourcePortRange" options="source-port-range" group="Source">
          <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
        </arg>
        <arg type="array<string>" var="$securityRuleParameters.properties.sourcePortRanges" options="source-port-ranges" group="Source">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports."/>
          <default value="[&quot;*&quot;]"/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="SecurityRules_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="put">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-10-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="securityRuleParameters" required="True" clientFlatten="True">
                  <prop type="string" name="etag" arg="$securityRuleParameters.etag"/>
                  <prop type="ResourceId" name="id" arg="$securityRuleParameters.id"/>
                  <prop type="string" name="name" arg="$Path.securityRuleName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" arg="$securityRuleParameters.properties.access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$securityRuleParameters.properties.description"/>
                    <prop type="string" name="destinationAddressPrefix" arg="$securityRuleParameters.properties.destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes" arg="$securityRuleParameters.properties.destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_create>" name="destinationApplicationSecurityGroups" arg="$securityRuleParameters.properties.destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_create"/>
                    </prop>
                    <prop type="string" name="destinationPortRange" arg="$securityRuleParameters.properties.destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges" arg="$securityRuleParameters.properties.destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" arg="$securityRuleParameters.properties.direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority" arg="$securityRuleParameters.properties.priority"/>
                    <prop type="string" name="protocol" arg="$securityRuleParameters.properties.protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$securityRuleParameters.properties.provisioningState"/>
                    <prop type="string" name="sourceAddressPrefix" arg="$securityRuleParameters.properties.sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes" arg="$securityRuleParameters.properties.sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups" arg="$securityRuleParameters.properties.sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_create">
                        <prop type="ResourceId" name="id" arg="@ApplicationSecurityGroup_create.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="@ApplicationSecurityGroup_create.location"/>
                        <prop type="object" name="tags" arg="@ApplicationSecurityGroup_create.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange" arg="$securityRuleParameters.properties.sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges" arg="$securityRuleParameters.properties.sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_read"/>
                    </prop>
                    <prop type="string" name="destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority"/>
                    <prop type="string" name="protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop readOnly="True" type="string" name="resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2017-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networksecuritygroups/{}/securityrules/{}" version="2017-10-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrU2VjdXJpdHlHcm91cHMve25ldHdvcmtTZWN1cml0eUdyb3VwTmFtZX0vc2VjdXJpdHlSdWxlcy97c2VjdXJpdHlSdWxlTmFtZX0=/V/MjAxNy0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkSecurityGroupName" options="nsg-name" required="True" group="" idPart="name">
          <help short="Name of the network security group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityRuleName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the network security group rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$securityRuleParameters.properties.access" options="access" group="">
          <help short="Network traffic is allowed or denied."/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.description" options="description" group="">
          <help short="Description for this rule. Restricted to 140 chars."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.direction" options="direction" group="">
          <help short="Direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic."/>
          <enum>
            <item name="Inbound" value="&quot;Inbound&quot;"/>
            <item name="Outbound" value="&quot;Outbound&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$securityRuleParameters.properties.priority" options="priority" group="">
          <help short="Priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
        </arg>
        <arg type="string" var="$securityRuleParameters.properties.protocol" options="protocol" group="">
          <help short="Network protocol this rule applies to."/>
          <enum>
            <item name="*" value="&quot;*&quot;"/>
            <item name="Tcp" value="&quot;Tcp&quot;"/>
            <item name="Udp" value="&quot;Udp&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.destinationAddressPrefix" options="destination-address-prefix" group="Destination">
          <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.destinationAddressPrefixes" options="destination-address-prefixes" group="Destination">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<@ApplicationSecurityGroup_update>" var="$securityRuleParameters.properties.destinationApplicationSecurityGroups" options="destination-application-security-groups" group="Destination">
          <help short="Application security group specified as destination."/>
          <item nullable="True" type="@ApplicationSecurityGroup_update"/>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.destinationPortRange" options="destination-port-range" group="Destination">
          <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.destinationPortRanges" options="destination-port-ranges" group="Destination">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
        </arg>
      </argGroup>
      <argGroup name="SecurityRuleParameters">
        <arg nullable="True" type="string" var="$securityRuleParameters.etag" options="etag" hide="True" group="SecurityRuleParameters">
          <help short="A unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg nullable="True" type="ResourceId" var="$securityRuleParameters.id" options="id" hide="True" group="SecurityRuleParameters">
          <help short="Resource ID."/>
        </arg>
      </argGroup>
      <argGroup name="Source">
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.sourceAddressPrefix" options="source-address-prefix" group="Source">
          <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.sourceAddressPrefixes" options="source-address-prefixes" group="Source">
          <help short="Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$securityRuleParameters.properties.sourceApplicationSecurityGroups" options="source-application-security-groups" group="Source">
          <help short="Application security group specified as source."/>
          <item nullable="True" type="object" cls="ApplicationSecurityGroup_update">
            <arg nullable="True" type="ResourceId" var="@ApplicationSecurityGroup_update.id" options="id" group="">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
            </arg>
            <arg nullable="True" type="ResourceLocation" var="@ApplicationSecurityGroup_update.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg nullable="True" type="object" var="@ApplicationSecurityGroup_update.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$securityRuleParameters.properties.sourcePortRange" options="source-port-range" group="Source">
          <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$securityRuleParameters.properties.sourcePortRanges" options="source-port-ranges" group="Source">
          <help short="Space-separated list of ports or port ranges between 0-65535. Use '*' to match all ports."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <operation operationId="SecurityRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="get">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SecurityRule_read">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="access" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="destinationAddressPrefix"/>
                    <prop type="array<string>" name="destinationAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_read"/>
                    </prop>
                    <prop type="string" name="destinationPortRange"/>
                    <prop type="array<string>" name="destinationPortRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="direction" required="True">
                      <enum>
                        <item value="&quot;Inbound&quot;"/>
                        <item value="&quot;Outbound&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="priority"/>
                    <prop type="string" name="protocol" required="True">
                      <enum>
                        <item value="&quot;*&quot;"/>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="sourceAddressPrefix"/>
                    <prop type="array<string>" name="sourceAddressPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="sourceApplicationSecurityGroups">
                      <item type="object" cls="ApplicationSecurityGroup_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop readOnly="True" type="string" name="resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourcePortRange"/>
                    <prop type="array<string>" name="sourcePortRanges">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="securityRuleParameters" required="True" clientFlatten="True">
              <prop type="string" name="etag" arg="$securityRuleParameters.etag"/>
              <prop type="ResourceId" name="id" arg="$securityRuleParameters.id"/>
              <prop type="string" name="name" arg="$Path.securityRuleName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="access" arg="$securityRuleParameters.properties.access" required="True">
                  <enum>
                    <item value="&quot;Allow&quot;"/>
                    <item value="&quot;Deny&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$securityRuleParameters.properties.description"/>
                <prop type="string" name="destinationAddressPrefix" arg="$securityRuleParameters.properties.destinationAddressPrefix"/>
                <prop type="array<string>" name="destinationAddressPrefixes" arg="$securityRuleParameters.properties.destinationAddressPrefixes">
                  <item type="string"/>
                </prop>
                <prop type="array<@ApplicationSecurityGroup_update>" name="destinationApplicationSecurityGroups" arg="$securityRuleParameters.properties.destinationApplicationSecurityGroups">
                  <item type="@ApplicationSecurityGroup_update"/>
                </prop>
                <prop type="string" name="destinationPortRange" arg="$securityRuleParameters.properties.destinationPortRange"/>
                <prop type="array<string>" name="destinationPortRanges" arg="$securityRuleParameters.properties.destinationPortRanges">
                  <item type="string"/>
                </prop>
                <prop type="string" name="direction" arg="$securityRuleParameters.properties.direction" required="True">
                  <enum>
                    <item value="&quot;Inbound&quot;"/>
                    <item value="&quot;Outbound&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="priority" arg="$securityRuleParameters.properties.priority"/>
                <prop type="string" name="protocol" arg="$securityRuleParameters.properties.protocol" required="True">
                  <enum>
                    <item value="&quot;*&quot;"/>
                    <item value="&quot;Tcp&quot;"/>
                    <item value="&quot;Udp&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="provisioningState" arg="$securityRuleParameters.properties.provisioningState"/>
                <prop type="string" name="sourceAddressPrefix" arg="$securityRuleParameters.properties.sourceAddressPrefix"/>
                <prop type="array<string>" name="sourceAddressPrefixes" arg="$securityRuleParameters.properties.sourceAddressPrefixes">
                  <item type="string"/>
                </prop>
                <prop type="array<object>" name="sourceApplicationSecurityGroups" arg="$securityRuleParameters.properties.sourceApplicationSecurityGroups">
                  <item type="object" cls="ApplicationSecurityGroup_update">
                    <prop type="ResourceId" name="id" arg="@ApplicationSecurityGroup_update.id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" arg="@ApplicationSecurityGroup_update.location"/>
                    <prop type="object" name="tags" arg="@ApplicationSecurityGroup_update.tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="sourcePortRange" arg="$securityRuleParameters.properties.sourcePortRange"/>
                <prop type="array<string>" name="sourcePortRanges" arg="$securityRuleParameters.properties.sourcePortRanges">
                  <item type="string"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="SecurityRules_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}">
          <request method="put">
            <path>
              <param type="string" name="networkSecurityGroupName" arg="$Path.networkSecurityGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="securityRuleName" arg="$Path.securityRuleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-10-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SecurityRule_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
