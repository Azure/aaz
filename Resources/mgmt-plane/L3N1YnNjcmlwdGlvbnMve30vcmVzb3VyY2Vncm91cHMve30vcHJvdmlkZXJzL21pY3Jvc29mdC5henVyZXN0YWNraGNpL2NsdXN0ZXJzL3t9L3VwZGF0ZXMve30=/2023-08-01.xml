<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/updates/{}" version="2023-08-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L3VwZGF0ZXMve3VwZGF0ZU5hbWV9/V/MjAyMy0wOC0wMQ=="/>
  <commandGroup name="stack-hci cluster-update">
    <command name="show" version="2023-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/updates/{}" version="2023-08-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L3VwZGF0ZXMve3VwZGF0ZU5hbWV9/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.updateName" options="update-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Update"/>
        </arg>
      </argGroup>
      <operation operationId="Updates_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="updateName" arg="$Path.updateName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}/updates/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="additionalProperties"/>
                    <prop type="string" name="availabilityType">
                      <enum>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Notify&quot;"/>
                        <item value="&quot;Online&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="componentVersions" identifiers="version">
                      <item type="object">
                        <prop type="dateTime" name="lastUpdated"/>
                        <prop type="string" name="packageType"/>
                        <prop type="string" name="version"/>
                      </item>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="dateTime" name="healthCheckDate"/>
                    <prop type="array<object>" name="healthCheckResult">
                      <item type="object">
                        <prop type="string" name="additionalData"/>
                        <prop type="string" name="description"/>
                        <prop type="string" name="healthCheckSource"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="remediation"/>
                        <prop type="string" name="severity">
                          <enum>
                            <item value="&quot;Critical&quot;"/>
                            <item value="&quot;Hidden&quot;"/>
                            <item value="&quot;Informational&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <prop type="string" name="key"/>
                          <prop type="string" name="value"/>
                        </prop>
                        <prop type="string" name="targetResourceID"/>
                        <prop type="string" name="targetResourceName"/>
                        <prop type="dateTime" name="timestamp"/>
                        <prop type="string" name="title"/>
                      </item>
                    </prop>
                    <prop type="string" name="healthState">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failure&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Success&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="installedDate"/>
                    <prop type="string" name="packagePath"/>
                    <prop type="float" name="packageSizeInMb"/>
                    <prop type="string" name="packageType"/>
                    <prop type="array<object>" name="prerequisites" identifiers="packageName">
                      <item type="object">
                        <prop type="string" name="packageName"/>
                        <prop type="string" name="updateType"/>
                        <prop type="string" name="version"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="rebootRequired">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="releaseLink"/>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;DownloadFailed&quot;"/>
                        <item value="&quot;Downloading&quot;"/>
                        <item value="&quot;HasPrerequisite&quot;"/>
                        <item value="&quot;HealthCheckFailed&quot;"/>
                        <item value="&quot;HealthChecking&quot;"/>
                        <item value="&quot;InstallationFailed&quot;"/>
                        <item value="&quot;Installed&quot;"/>
                        <item value="&quot;Installing&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
                        <item value="&quot;Obsolete&quot;"/>
                        <item value="&quot;PreparationFailed&quot;"/>
                        <item value="&quot;Preparing&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;ReadyToInstall&quot;"/>
                        <item value="&quot;Recalled&quot;"/>
                        <item value="&quot;ScanFailed&quot;"/>
                        <item value="&quot;ScanInProgress&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="updateStateProperties" clientFlatten="True">
                      <prop type="string" name="notifyMessage"/>
                      <prop type="float" name="progressPercentage"/>
                    </prop>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/updates/{}" version="2023-08-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L3VwZGF0ZXMve3VwZGF0ZU5hbWV9/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.updateName" options="update-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Update"/>
        </arg>
      </argGroup>
      <operation operationId="Updates_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}">
          <request method="delete">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="updateName" arg="$Path.updateName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/updates/{}" version="2023-08-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L3VwZGF0ZXMve3VwZGF0ZU5hbWV9/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.updateName" options="update-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Update"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$updateProperties.properties.additionalProperties" options="additional-properties" group="Properties">
          <help short="Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type."/>
        </arg>
        <arg type="string" var="$updateProperties.properties.availabilityType" options="availability-type" group="Properties">
          <help short="Indicates the way the update content can be downloaded."/>
          <enum>
            <item name="Local" value="&quot;Local&quot;"/>
            <item name="Notify" value="&quot;Notify&quot;"/>
            <item name="Online" value="&quot;Online&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$updateProperties.properties.componentVersions" options="component-versions" group="Properties">
          <help short="An array of component versions for a Solution Bundle update, and an empty array otherwise.  "/>
          <item type="object">
            <arg type="dateTime" var="$updateProperties.properties.componentVersions[].lastUpdated" options="last-updated">
              <help short="Last time this component was updated."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.componentVersions[].packageType" options="package-type">
              <help short="Package type"/>
            </arg>
            <arg type="string" var="$updateProperties.properties.componentVersions[].version" options="version">
              <help short="Package version"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$updateProperties.properties.description" options="description" group="Properties">
          <help short="Description of the update."/>
        </arg>
        <arg type="string" var="$updateProperties.properties.displayName" options="display-name" group="Properties">
          <help short="Display name of the Update"/>
        </arg>
        <arg type="dateTime" var="$updateProperties.properties.healthCheckDate" options="health-check-date" group="Properties">
          <help short="Last time the package-specific checks were run."/>
        </arg>
        <arg type="array<object>" var="$updateProperties.properties.healthCheckResult" options="health-check-result" group="Properties">
          <help short="An array of PrecheckResult objects."/>
          <item type="object">
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].additionalData" options="additional-data">
              <help short="Property bag of key value pairs for additional information."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].description" options="description">
              <help short="Detailed overview of the issue and what impact the issue has on the stamp."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].healthCheckSource" options="health-check-source">
              <help short="The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster)."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].name" options="name">
              <help short="Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].remediation" options="remediation">
              <help short="Set of steps that can be taken to resolve the issue found."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].severity" options="severity">
              <help short="Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical is the only update-blocking severity."/>
              <enum>
                <item name="Critical" value="&quot;Critical&quot;"/>
                <item name="Hidden" value="&quot;Hidden&quot;"/>
                <item name="Informational" value="&quot;Informational&quot;"/>
                <item name="Warning" value="&quot;Warning&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].status" options="status">
              <help short="The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed or failed."/>
              <enum>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="InProgress" value="&quot;InProgress&quot;"/>
                <item name="Succeeded" value="&quot;Succeeded&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$updateProperties.properties.healthCheckResult[].tags" options="tags">
              <help short="Key-value pairs that allow grouping/filtering individual tests."/>
              <arg type="string" var="$updateProperties.properties.healthCheckResult[].tags.key" options="key">
                <help short="Key that allow grouping/filtering individual tests."/>
              </arg>
              <arg type="string" var="$updateProperties.properties.healthCheckResult[].tags.value" options="value">
                <help short="Value of the key that allow grouping/filtering individual tests."/>
              </arg>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].targetResourceID" options="target-resource-id">
              <help short="The unique identifier for the affected resource (such as a node or drive)."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].targetResourceName" options="target-resource-name">
              <help short="The name of the affected resource."/>
            </arg>
            <arg type="dateTime" var="$updateProperties.properties.healthCheckResult[].timestamp" options="timestamp">
              <help short="The Time in which the HealthCheck was called."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.healthCheckResult[].title" options="title">
              <help short="User-facing name; one or more sentences indicating the direct issue."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$updateProperties.properties.healthState" options="health-state" group="Properties">
          <help short="Overall health state for update-specific health checks."/>
          <enum>
            <item name="Error" value="&quot;Error&quot;"/>
            <item name="Failure" value="&quot;Failure&quot;"/>
            <item name="InProgress" value="&quot;InProgress&quot;"/>
            <item name="Success" value="&quot;Success&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
            <item name="Warning" value="&quot;Warning&quot;"/>
          </enum>
        </arg>
        <arg type="dateTime" var="$updateProperties.properties.installedDate" options="installed-date" group="Properties">
          <help short="Date that the update was installed."/>
        </arg>
        <arg type="string" var="$updateProperties.properties.packagePath" options="package-path" group="Properties">
          <help short="Path where the update package is available."/>
        </arg>
        <arg type="float" var="$updateProperties.properties.packageSizeInMb" options="package-size-in-mb" group="Properties">
          <help short="Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content."/>
        </arg>
        <arg type="string" var="$updateProperties.properties.packageType" options="package-type" group="Properties">
          <help short="Customer-visible type of the update."/>
        </arg>
        <arg type="array<object>" var="$updateProperties.properties.prerequisites" options="prerequisites" group="Properties">
          <help short="If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty."/>
          <item type="object">
            <arg type="string" var="$updateProperties.properties.prerequisites[].packageName" options="package-name">
              <help short="Friendly name of the prerequisite."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.prerequisites[].updateType" options="update-type">
              <help short="Updatable component type."/>
            </arg>
            <arg type="string" var="$updateProperties.properties.prerequisites[].version" options="version">
              <help short="Version of the prerequisite."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$updateProperties.properties.publisher" options="publisher" group="Properties">
          <help short="Publisher of the update package."/>
        </arg>
        <arg type="string" var="$updateProperties.properties.rebootRequired" options="reboot-required" group="Properties">
          <help short="Reboot required"/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$updateProperties.properties.releaseLink" options="release-link" group="Properties">
          <help short="Link to release notes for the update."/>
        </arg>
        <arg type="string" var="$updateProperties.properties.state" options="state" group="Properties">
          <help short="State of the update as it relates to this stamp."/>
          <enum>
            <item name="DownloadFailed" value="&quot;DownloadFailed&quot;"/>
            <item name="Downloading" value="&quot;Downloading&quot;"/>
            <item name="HasPrerequisite" value="&quot;HasPrerequisite&quot;"/>
            <item name="HealthCheckFailed" value="&quot;HealthCheckFailed&quot;"/>
            <item name="HealthChecking" value="&quot;HealthChecking&quot;"/>
            <item name="InstallationFailed" value="&quot;InstallationFailed&quot;"/>
            <item name="Installed" value="&quot;Installed&quot;"/>
            <item name="Installing" value="&quot;Installing&quot;"/>
            <item name="Invalid" value="&quot;Invalid&quot;"/>
            <item name="NotApplicableBecauseAnotherUpdateIsInProgress" value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
            <item name="Obsolete" value="&quot;Obsolete&quot;"/>
            <item name="PreparationFailed" value="&quot;PreparationFailed&quot;"/>
            <item name="Preparing" value="&quot;Preparing&quot;"/>
            <item name="Ready" value="&quot;Ready&quot;"/>
            <item name="ReadyToInstall" value="&quot;ReadyToInstall&quot;"/>
            <item name="Recalled" value="&quot;Recalled&quot;"/>
            <item name="ScanFailed" value="&quot;ScanFailed&quot;"/>
            <item name="ScanInProgress" value="&quot;ScanInProgress&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$updateProperties.properties.version" options="version" group="Properties">
          <help short="Version of the update."/>
        </arg>
      </argGroup>
      <argGroup name="UpdateProperties">
        <arg type="ResourceLocation" var="$updateProperties.location" options="location l" group="UpdateProperties">
          <help short="The geo-location where the resource lives"/>
        </arg>
      </argGroup>
      <argGroup name="UpdateStateProperties">
        <arg type="string" var="$updateProperties.properties.updateStateProperties.notifyMessage" options="notify-message" group="UpdateStateProperties">
          <help short="Brief message with instructions for updates of AvailabilityType Notify."/>
        </arg>
        <arg type="float" var="$updateProperties.properties.updateStateProperties.progressPercentage" options="progress-percentage" group="UpdateStateProperties">
          <help short="Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded."/>
        </arg>
      </argGroup>
      <operation operationId="Updates_Put">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="updateName" arg="$Path.updateName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="updateProperties" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$updateProperties.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="additionalProperties" arg="$updateProperties.properties.additionalProperties"/>
                    <prop type="string" name="availabilityType" arg="$updateProperties.properties.availabilityType">
                      <enum>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Notify&quot;"/>
                        <item value="&quot;Online&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="componentVersions" arg="$updateProperties.properties.componentVersions" identifiers="version">
                      <item type="object">
                        <prop type="dateTime" name="lastUpdated" arg="$updateProperties.properties.componentVersions[].lastUpdated"/>
                        <prop type="string" name="packageType" arg="$updateProperties.properties.componentVersions[].packageType"/>
                        <prop type="string" name="version" arg="$updateProperties.properties.componentVersions[].version"/>
                      </item>
                    </prop>
                    <prop type="string" name="description" arg="$updateProperties.properties.description"/>
                    <prop type="string" name="displayName" arg="$updateProperties.properties.displayName"/>
                    <prop type="dateTime" name="healthCheckDate" arg="$updateProperties.properties.healthCheckDate"/>
                    <prop type="array<object>" name="healthCheckResult" arg="$updateProperties.properties.healthCheckResult">
                      <item type="object">
                        <prop type="string" name="additionalData" arg="$updateProperties.properties.healthCheckResult[].additionalData"/>
                        <prop type="string" name="description" arg="$updateProperties.properties.healthCheckResult[].description"/>
                        <prop type="string" name="healthCheckSource" arg="$updateProperties.properties.healthCheckResult[].healthCheckSource"/>
                        <prop type="string" name="name" arg="$updateProperties.properties.healthCheckResult[].name"/>
                        <prop type="string" name="remediation" arg="$updateProperties.properties.healthCheckResult[].remediation"/>
                        <prop type="string" name="severity" arg="$updateProperties.properties.healthCheckResult[].severity">
                          <enum>
                            <item value="&quot;Critical&quot;"/>
                            <item value="&quot;Hidden&quot;"/>
                            <item value="&quot;Informational&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="status" arg="$updateProperties.properties.healthCheckResult[].status">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags" arg="$updateProperties.properties.healthCheckResult[].tags">
                          <prop type="string" name="key" arg="$updateProperties.properties.healthCheckResult[].tags.key"/>
                          <prop type="string" name="value" arg="$updateProperties.properties.healthCheckResult[].tags.value"/>
                        </prop>
                        <prop type="string" name="targetResourceID" arg="$updateProperties.properties.healthCheckResult[].targetResourceID"/>
                        <prop type="string" name="targetResourceName" arg="$updateProperties.properties.healthCheckResult[].targetResourceName"/>
                        <prop type="dateTime" name="timestamp" arg="$updateProperties.properties.healthCheckResult[].timestamp"/>
                        <prop type="string" name="title" arg="$updateProperties.properties.healthCheckResult[].title"/>
                      </item>
                    </prop>
                    <prop type="string" name="healthState" arg="$updateProperties.properties.healthState">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failure&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Success&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="installedDate" arg="$updateProperties.properties.installedDate"/>
                    <prop type="string" name="packagePath" arg="$updateProperties.properties.packagePath"/>
                    <prop type="float" name="packageSizeInMb" arg="$updateProperties.properties.packageSizeInMb"/>
                    <prop type="string" name="packageType" arg="$updateProperties.properties.packageType"/>
                    <prop type="array<object>" name="prerequisites" arg="$updateProperties.properties.prerequisites" identifiers="packageName">
                      <item type="object">
                        <prop type="string" name="packageName" arg="$updateProperties.properties.prerequisites[].packageName"/>
                        <prop type="string" name="updateType" arg="$updateProperties.properties.prerequisites[].updateType"/>
                        <prop type="string" name="version" arg="$updateProperties.properties.prerequisites[].version"/>
                      </item>
                    </prop>
                    <prop type="string" name="publisher" arg="$updateProperties.properties.publisher"/>
                    <prop type="string" name="rebootRequired" arg="$updateProperties.properties.rebootRequired">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="releaseLink" arg="$updateProperties.properties.releaseLink"/>
                    <prop type="string" name="state" arg="$updateProperties.properties.state">
                      <enum>
                        <item value="&quot;DownloadFailed&quot;"/>
                        <item value="&quot;Downloading&quot;"/>
                        <item value="&quot;HasPrerequisite&quot;"/>
                        <item value="&quot;HealthCheckFailed&quot;"/>
                        <item value="&quot;HealthChecking&quot;"/>
                        <item value="&quot;InstallationFailed&quot;"/>
                        <item value="&quot;Installed&quot;"/>
                        <item value="&quot;Installing&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
                        <item value="&quot;Obsolete&quot;"/>
                        <item value="&quot;PreparationFailed&quot;"/>
                        <item value="&quot;Preparing&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;ReadyToInstall&quot;"/>
                        <item value="&quot;Recalled&quot;"/>
                        <item value="&quot;ScanFailed&quot;"/>
                        <item value="&quot;ScanInProgress&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="updateStateProperties" clientFlatten="True">
                      <prop type="string" name="notifyMessage" arg="$updateProperties.properties.updateStateProperties.notifyMessage"/>
                      <prop type="float" name="progressPercentage" arg="$updateProperties.properties.updateStateProperties.progressPercentage"/>
                    </prop>
                    <prop type="string" name="version" arg="$updateProperties.properties.version"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}/updates/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="additionalProperties"/>
                    <prop type="string" name="availabilityType">
                      <enum>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Notify&quot;"/>
                        <item value="&quot;Online&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="componentVersions" identifiers="version">
                      <item type="object">
                        <prop type="dateTime" name="lastUpdated"/>
                        <prop type="string" name="packageType"/>
                        <prop type="string" name="version"/>
                      </item>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="dateTime" name="healthCheckDate"/>
                    <prop type="array<object>" name="healthCheckResult">
                      <item type="object">
                        <prop type="string" name="additionalData"/>
                        <prop type="string" name="description"/>
                        <prop type="string" name="healthCheckSource"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="remediation"/>
                        <prop type="string" name="severity">
                          <enum>
                            <item value="&quot;Critical&quot;"/>
                            <item value="&quot;Hidden&quot;"/>
                            <item value="&quot;Informational&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <prop type="string" name="key"/>
                          <prop type="string" name="value"/>
                        </prop>
                        <prop type="string" name="targetResourceID"/>
                        <prop type="string" name="targetResourceName"/>
                        <prop type="dateTime" name="timestamp"/>
                        <prop type="string" name="title"/>
                      </item>
                    </prop>
                    <prop type="string" name="healthState">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failure&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Success&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="installedDate"/>
                    <prop type="string" name="packagePath"/>
                    <prop type="float" name="packageSizeInMb"/>
                    <prop type="string" name="packageType"/>
                    <prop type="array<object>" name="prerequisites" identifiers="packageName">
                      <item type="object">
                        <prop type="string" name="packageName"/>
                        <prop type="string" name="updateType"/>
                        <prop type="string" name="version"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="rebootRequired">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="releaseLink"/>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;DownloadFailed&quot;"/>
                        <item value="&quot;Downloading&quot;"/>
                        <item value="&quot;HasPrerequisite&quot;"/>
                        <item value="&quot;HealthCheckFailed&quot;"/>
                        <item value="&quot;HealthChecking&quot;"/>
                        <item value="&quot;InstallationFailed&quot;"/>
                        <item value="&quot;Installed&quot;"/>
                        <item value="&quot;Installing&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
                        <item value="&quot;Obsolete&quot;"/>
                        <item value="&quot;PreparationFailed&quot;"/>
                        <item value="&quot;Preparing&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;ReadyToInstall&quot;"/>
                        <item value="&quot;Recalled&quot;"/>
                        <item value="&quot;ScanFailed&quot;"/>
                        <item value="&quot;ScanInProgress&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="updateStateProperties" clientFlatten="True">
                      <prop type="string" name="notifyMessage"/>
                      <prop type="float" name="progressPercentage"/>
                    </prop>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/updates/{}" version="2023-08-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L3VwZGF0ZXMve3VwZGF0ZU5hbWV9/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.updateName" options="update-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Update"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$updateProperties.properties.additionalProperties" options="additional-properties" group="Properties">
          <help short="Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type."/>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.availabilityType" options="availability-type" group="Properties">
          <help short="Indicates the way the update content can be downloaded."/>
          <enum>
            <item name="Local" value="&quot;Local&quot;"/>
            <item name="Notify" value="&quot;Notify&quot;"/>
            <item name="Online" value="&quot;Online&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$updateProperties.properties.componentVersions" options="component-versions" group="Properties">
          <help short="An array of component versions for a Solution Bundle update, and an empty array otherwise.  "/>
          <item nullable="True" type="object">
            <arg nullable="True" type="dateTime" var="$updateProperties.properties.componentVersions[].lastUpdated" options="last-updated">
              <help short="Last time this component was updated."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.componentVersions[].packageType" options="package-type">
              <help short="Package type"/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.componentVersions[].version" options="version">
              <help short="Package version"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.description" options="description" group="Properties">
          <help short="Description of the update."/>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.displayName" options="display-name" group="Properties">
          <help short="Display name of the Update"/>
        </arg>
        <arg nullable="True" type="dateTime" var="$updateProperties.properties.healthCheckDate" options="health-check-date" group="Properties">
          <help short="Last time the package-specific checks were run."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$updateProperties.properties.healthCheckResult" options="health-check-result" group="Properties">
          <help short="An array of PrecheckResult objects."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].additionalData" options="additional-data">
              <help short="Property bag of key value pairs for additional information."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].description" options="description">
              <help short="Detailed overview of the issue and what impact the issue has on the stamp."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].healthCheckSource" options="health-check-source">
              <help short="The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster)."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].name" options="name">
              <help short="Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].remediation" options="remediation">
              <help short="Set of steps that can be taken to resolve the issue found."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].severity" options="severity">
              <help short="Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical is the only update-blocking severity."/>
              <enum>
                <item name="Critical" value="&quot;Critical&quot;"/>
                <item name="Hidden" value="&quot;Hidden&quot;"/>
                <item name="Informational" value="&quot;Informational&quot;"/>
                <item name="Warning" value="&quot;Warning&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].status" options="status">
              <help short="The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed or failed."/>
              <enum>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="InProgress" value="&quot;InProgress&quot;"/>
                <item name="Succeeded" value="&quot;Succeeded&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$updateProperties.properties.healthCheckResult[].tags" options="tags">
              <help short="Key-value pairs that allow grouping/filtering individual tests."/>
              <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].tags.key" options="key">
                <help short="Key that allow grouping/filtering individual tests."/>
              </arg>
              <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].tags.value" options="value">
                <help short="Value of the key that allow grouping/filtering individual tests."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].targetResourceID" options="target-resource-id">
              <help short="The unique identifier for the affected resource (such as a node or drive)."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].targetResourceName" options="target-resource-name">
              <help short="The name of the affected resource."/>
            </arg>
            <arg nullable="True" type="dateTime" var="$updateProperties.properties.healthCheckResult[].timestamp" options="timestamp">
              <help short="The Time in which the HealthCheck was called."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.healthCheckResult[].title" options="title">
              <help short="User-facing name; one or more sentences indicating the direct issue."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.healthState" options="health-state" group="Properties">
          <help short="Overall health state for update-specific health checks."/>
          <enum>
            <item name="Error" value="&quot;Error&quot;"/>
            <item name="Failure" value="&quot;Failure&quot;"/>
            <item name="InProgress" value="&quot;InProgress&quot;"/>
            <item name="Success" value="&quot;Success&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
            <item name="Warning" value="&quot;Warning&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="dateTime" var="$updateProperties.properties.installedDate" options="installed-date" group="Properties">
          <help short="Date that the update was installed."/>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.packagePath" options="package-path" group="Properties">
          <help short="Path where the update package is available."/>
        </arg>
        <arg nullable="True" type="float" var="$updateProperties.properties.packageSizeInMb" options="package-size-in-mb" group="Properties">
          <help short="Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content."/>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.packageType" options="package-type" group="Properties">
          <help short="Customer-visible type of the update."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$updateProperties.properties.prerequisites" options="prerequisites" group="Properties">
          <help short="If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$updateProperties.properties.prerequisites[].packageName" options="package-name">
              <help short="Friendly name of the prerequisite."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.prerequisites[].updateType" options="update-type">
              <help short="Updatable component type."/>
            </arg>
            <arg nullable="True" type="string" var="$updateProperties.properties.prerequisites[].version" options="version">
              <help short="Version of the prerequisite."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.publisher" options="publisher" group="Properties">
          <help short="Publisher of the update package."/>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.rebootRequired" options="reboot-required" group="Properties">
          <help short="Reboot required"/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.releaseLink" options="release-link" group="Properties">
          <help short="Link to release notes for the update."/>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.state" options="state" group="Properties">
          <help short="State of the update as it relates to this stamp."/>
          <enum>
            <item name="DownloadFailed" value="&quot;DownloadFailed&quot;"/>
            <item name="Downloading" value="&quot;Downloading&quot;"/>
            <item name="HasPrerequisite" value="&quot;HasPrerequisite&quot;"/>
            <item name="HealthCheckFailed" value="&quot;HealthCheckFailed&quot;"/>
            <item name="HealthChecking" value="&quot;HealthChecking&quot;"/>
            <item name="InstallationFailed" value="&quot;InstallationFailed&quot;"/>
            <item name="Installed" value="&quot;Installed&quot;"/>
            <item name="Installing" value="&quot;Installing&quot;"/>
            <item name="Invalid" value="&quot;Invalid&quot;"/>
            <item name="NotApplicableBecauseAnotherUpdateIsInProgress" value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
            <item name="Obsolete" value="&quot;Obsolete&quot;"/>
            <item name="PreparationFailed" value="&quot;PreparationFailed&quot;"/>
            <item name="Preparing" value="&quot;Preparing&quot;"/>
            <item name="Ready" value="&quot;Ready&quot;"/>
            <item name="ReadyToInstall" value="&quot;ReadyToInstall&quot;"/>
            <item name="Recalled" value="&quot;Recalled&quot;"/>
            <item name="ScanFailed" value="&quot;ScanFailed&quot;"/>
            <item name="ScanInProgress" value="&quot;ScanInProgress&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$updateProperties.properties.version" options="version" group="Properties">
          <help short="Version of the update."/>
        </arg>
      </argGroup>
      <argGroup name="UpdateStateProperties">
        <arg nullable="True" type="string" var="$updateProperties.properties.updateStateProperties.notifyMessage" options="notify-message" group="UpdateStateProperties">
          <help short="Brief message with instructions for updates of AvailabilityType Notify."/>
        </arg>
        <arg nullable="True" type="float" var="$updateProperties.properties.updateStateProperties.progressPercentage" options="progress-percentage" group="UpdateStateProperties">
          <help short="Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded."/>
        </arg>
      </argGroup>
      <operation operationId="Updates_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="updateName" arg="$Path.updateName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Update_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}/updates/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="additionalProperties"/>
                    <prop type="string" name="availabilityType">
                      <enum>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Notify&quot;"/>
                        <item value="&quot;Online&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="componentVersions" identifiers="version">
                      <item type="object">
                        <prop type="dateTime" name="lastUpdated"/>
                        <prop type="string" name="packageType"/>
                        <prop type="string" name="version"/>
                      </item>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="dateTime" name="healthCheckDate"/>
                    <prop type="array<object>" name="healthCheckResult">
                      <item type="object">
                        <prop type="string" name="additionalData"/>
                        <prop type="string" name="description"/>
                        <prop type="string" name="healthCheckSource"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="remediation"/>
                        <prop type="string" name="severity">
                          <enum>
                            <item value="&quot;Critical&quot;"/>
                            <item value="&quot;Hidden&quot;"/>
                            <item value="&quot;Informational&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <prop type="string" name="key"/>
                          <prop type="string" name="value"/>
                        </prop>
                        <prop type="string" name="targetResourceID"/>
                        <prop type="string" name="targetResourceName"/>
                        <prop type="dateTime" name="timestamp"/>
                        <prop type="string" name="title"/>
                      </item>
                    </prop>
                    <prop type="string" name="healthState">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failure&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Success&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="installedDate"/>
                    <prop type="string" name="packagePath"/>
                    <prop type="float" name="packageSizeInMb"/>
                    <prop type="string" name="packageType"/>
                    <prop type="array<object>" name="prerequisites" identifiers="packageName">
                      <item type="object">
                        <prop type="string" name="packageName"/>
                        <prop type="string" name="updateType"/>
                        <prop type="string" name="version"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="rebootRequired">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="releaseLink"/>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;DownloadFailed&quot;"/>
                        <item value="&quot;Downloading&quot;"/>
                        <item value="&quot;HasPrerequisite&quot;"/>
                        <item value="&quot;HealthCheckFailed&quot;"/>
                        <item value="&quot;HealthChecking&quot;"/>
                        <item value="&quot;InstallationFailed&quot;"/>
                        <item value="&quot;Installed&quot;"/>
                        <item value="&quot;Installing&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
                        <item value="&quot;Obsolete&quot;"/>
                        <item value="&quot;PreparationFailed&quot;"/>
                        <item value="&quot;Preparing&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;ReadyToInstall&quot;"/>
                        <item value="&quot;Recalled&quot;"/>
                        <item value="&quot;ScanFailed&quot;"/>
                        <item value="&quot;ScanInProgress&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="updateStateProperties" clientFlatten="True">
                      <prop type="string" name="notifyMessage"/>
                      <prop type="float" name="progressPercentage"/>
                    </prop>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="updateProperties" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="additionalProperties" arg="$updateProperties.properties.additionalProperties"/>
                <prop type="string" name="availabilityType" arg="$updateProperties.properties.availabilityType">
                  <enum>
                    <item value="&quot;Local&quot;"/>
                    <item value="&quot;Notify&quot;"/>
                    <item value="&quot;Online&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="componentVersions" arg="$updateProperties.properties.componentVersions" identifiers="version">
                  <item type="object">
                    <prop type="dateTime" name="lastUpdated" arg="$updateProperties.properties.componentVersions[].lastUpdated"/>
                    <prop type="string" name="packageType" arg="$updateProperties.properties.componentVersions[].packageType"/>
                    <prop type="string" name="version" arg="$updateProperties.properties.componentVersions[].version"/>
                  </item>
                </prop>
                <prop type="string" name="description" arg="$updateProperties.properties.description"/>
                <prop type="string" name="displayName" arg="$updateProperties.properties.displayName"/>
                <prop type="dateTime" name="healthCheckDate" arg="$updateProperties.properties.healthCheckDate"/>
                <prop type="array<object>" name="healthCheckResult" arg="$updateProperties.properties.healthCheckResult">
                  <item type="object">
                    <prop type="string" name="additionalData" arg="$updateProperties.properties.healthCheckResult[].additionalData"/>
                    <prop type="string" name="description" arg="$updateProperties.properties.healthCheckResult[].description"/>
                    <prop type="string" name="healthCheckSource" arg="$updateProperties.properties.healthCheckResult[].healthCheckSource"/>
                    <prop type="string" name="name" arg="$updateProperties.properties.healthCheckResult[].name"/>
                    <prop type="string" name="remediation" arg="$updateProperties.properties.healthCheckResult[].remediation"/>
                    <prop type="string" name="severity" arg="$updateProperties.properties.healthCheckResult[].severity">
                      <enum>
                        <item value="&quot;Critical&quot;"/>
                        <item value="&quot;Hidden&quot;"/>
                        <item value="&quot;Informational&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status" arg="$updateProperties.properties.healthCheckResult[].status">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="tags" arg="$updateProperties.properties.healthCheckResult[].tags">
                      <prop type="string" name="key" arg="$updateProperties.properties.healthCheckResult[].tags.key"/>
                      <prop type="string" name="value" arg="$updateProperties.properties.healthCheckResult[].tags.value"/>
                    </prop>
                    <prop type="string" name="targetResourceID" arg="$updateProperties.properties.healthCheckResult[].targetResourceID"/>
                    <prop type="string" name="targetResourceName" arg="$updateProperties.properties.healthCheckResult[].targetResourceName"/>
                    <prop type="dateTime" name="timestamp" arg="$updateProperties.properties.healthCheckResult[].timestamp"/>
                    <prop type="string" name="title" arg="$updateProperties.properties.healthCheckResult[].title"/>
                  </item>
                </prop>
                <prop type="string" name="healthState" arg="$updateProperties.properties.healthState">
                  <enum>
                    <item value="&quot;Error&quot;"/>
                    <item value="&quot;Failure&quot;"/>
                    <item value="&quot;InProgress&quot;"/>
                    <item value="&quot;Success&quot;"/>
                    <item value="&quot;Unknown&quot;"/>
                    <item value="&quot;Warning&quot;"/>
                  </enum>
                </prop>
                <prop type="dateTime" name="installedDate" arg="$updateProperties.properties.installedDate"/>
                <prop type="string" name="packagePath" arg="$updateProperties.properties.packagePath"/>
                <prop type="float" name="packageSizeInMb" arg="$updateProperties.properties.packageSizeInMb"/>
                <prop type="string" name="packageType" arg="$updateProperties.properties.packageType"/>
                <prop type="array<object>" name="prerequisites" arg="$updateProperties.properties.prerequisites" identifiers="packageName">
                  <item type="object">
                    <prop type="string" name="packageName" arg="$updateProperties.properties.prerequisites[].packageName"/>
                    <prop type="string" name="updateType" arg="$updateProperties.properties.prerequisites[].updateType"/>
                    <prop type="string" name="version" arg="$updateProperties.properties.prerequisites[].version"/>
                  </item>
                </prop>
                <prop type="string" name="publisher" arg="$updateProperties.properties.publisher"/>
                <prop type="string" name="rebootRequired" arg="$updateProperties.properties.rebootRequired">
                  <enum>
                    <item value="&quot;False&quot;"/>
                    <item value="&quot;True&quot;"/>
                    <item value="&quot;Unknown&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="releaseLink" arg="$updateProperties.properties.releaseLink"/>
                <prop type="string" name="state" arg="$updateProperties.properties.state">
                  <enum>
                    <item value="&quot;DownloadFailed&quot;"/>
                    <item value="&quot;Downloading&quot;"/>
                    <item value="&quot;HasPrerequisite&quot;"/>
                    <item value="&quot;HealthCheckFailed&quot;"/>
                    <item value="&quot;HealthChecking&quot;"/>
                    <item value="&quot;InstallationFailed&quot;"/>
                    <item value="&quot;Installed&quot;"/>
                    <item value="&quot;Installing&quot;"/>
                    <item value="&quot;Invalid&quot;"/>
                    <item value="&quot;NotApplicableBecauseAnotherUpdateIsInProgress&quot;"/>
                    <item value="&quot;Obsolete&quot;"/>
                    <item value="&quot;PreparationFailed&quot;"/>
                    <item value="&quot;Preparing&quot;"/>
                    <item value="&quot;Ready&quot;"/>
                    <item value="&quot;ReadyToInstall&quot;"/>
                    <item value="&quot;Recalled&quot;"/>
                    <item value="&quot;ScanFailed&quot;"/>
                    <item value="&quot;ScanInProgress&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="updateStateProperties" clientFlatten="True">
                  <prop type="string" name="notifyMessage" arg="$updateProperties.properties.updateStateProperties.notifyMessage"/>
                  <prop type="float" name="progressPercentage" arg="$updateProperties.properties.updateStateProperties.progressPercentage"/>
                </prop>
                <prop type="string" name="version" arg="$updateProperties.properties.version"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Updates_Put">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="updateName" arg="$Path.updateName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@Update_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
