<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
  <commandGroup name="elastic monitor">
    <command name="show" version="2024-06-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Monitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="elasticProperties">
                      <prop type="object" name="elasticCloudDeployment">
                        <prop readOnly="True" type="string" name="azureSubscriptionId"/>
                        <prop readOnly="True" type="string" name="deploymentId"/>
                        <prop readOnly="True" type="string" name="elasticsearchRegion"/>
                        <prop readOnly="True" type="string" name="elasticsearchServiceUrl"/>
                        <prop readOnly="True" type="string" name="kibanaServiceUrl"/>
                        <prop readOnly="True" type="string" name="kibanaSsoUrl"/>
                        <prop readOnly="True" type="string" name="name"/>
                      </prop>
                      <prop type="object" name="elasticCloudUser">
                        <prop readOnly="True" type="string" name="elasticCloudSsoDefaultUrl"/>
                        <prop readOnly="True" type="string" name="emailAddress"/>
                        <prop readOnly="True" type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="generateApiKey"/>
                    <prop readOnly="True" type="string" name="liftrResourceCategory">
                      <enum>
                        <item value="&quot;MonitorLogs&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                    <prop type="string" name="monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planDetails">
                      <prop type="string" name="offerID"/>
                      <prop type="string" name="planID"/>
                      <prop type="string" name="planName"/>
                      <prop type="string" name="publisherID"/>
                      <prop type="string" name="termID"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="saaSAzureSubscriptionStatus"/>
                    <prop type="string" name="sourceCampaignId"/>
                    <prop type="string" name="sourceCampaignName"/>
                    <prop type="string" name="subscriptionState"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-06-15-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Monitors_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}">
          <request method="delete">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-06-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.identity" options="identity" hide="True" group="Body">
          <help short="Identity properties of the monitor resource."/>
          <arg type="string" var="$body.identity.type" options="type">
            <help short="Managed identity type."/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$body.location" options="location l" group="Body">
          <help short="The location of the monitor resource"/>
        </arg>
        <arg type="object" var="$body.sku" options="sku" group="Body">
          <help short="SKU of the monitor resource." lines="https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice &quot;planXYZ_Yearly&quot;. Elasticsearch documentation PlanID_Term. combination available &quot;planXYZ&quot; &quot;Yearly&quot;, eligible depends account details online issues Plans plans your plan term will find your more case with SKU. The SKU the for and Ex: the and the SKU You may the for any the on is of If ID is is be at or in at or in of a"/>
          <arg type="string" var="$body.sku.name" options="name" required="True">
            <help short="Name of the SKU."/>
          </arg>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="The tags of the monitor resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$body.properties.generateApiKey" options="generate-api-key" group="Properties">
          <help short="Flag to determine if User API Key has to be generated and shared."/>
        </arg>
        <arg type="string" var="$body.properties.monitoringStatus" options="monitoring-status" group="Properties">
          <help short="Flag specifying if the resource monitoring is enabled or disabled."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.planDetails" options="plan-details" group="Properties">
          <help short="Plan details of the monitor resource."/>
          <arg type="string" var="$body.properties.planDetails.offerID" options="offer-id">
            <help short="Offer ID of the plan"/>
          </arg>
          <arg type="string" var="$body.properties.planDetails.planID" options="plan-id">
            <help short="Plan ID"/>
          </arg>
          <arg type="string" var="$body.properties.planDetails.planName" options="plan-name">
            <help short="Plan Name"/>
          </arg>
          <arg type="string" var="$body.properties.planDetails.publisherID" options="publisher-id">
            <help short="Publisher ID of the plan"/>
          </arg>
          <arg type="string" var="$body.properties.planDetails.termID" options="term-id">
            <help short="Term ID of the plan"/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.saaSAzureSubscriptionStatus" options="saa-s-azure-subscription-status" group="Properties">
          <help short="Status of Azure Subscription where Marketplace SaaS is located."/>
        </arg>
        <arg type="string" var="$body.properties.sourceCampaignId" options="source-campaign-id" group="Properties">
          <help short="A unique identifier associated with the campaign."/>
        </arg>
        <arg type="string" var="$body.properties.sourceCampaignName" options="source-campaign-name" group="Properties">
          <help short="Name of the marketing campaign."/>
        </arg>
        <arg type="string" var="$body.properties.subscriptionState" options="subscription-state" group="Properties">
          <help short="State of the Azure Subscription containing the monitor resource"/>
        </arg>
        <arg type="object" var="$body.properties.userInfo" options="user-info" group="Properties">
          <help short="User information."/>
          <arg type="object" var="$body.properties.userInfo.companyInfo" options="company-info">
            <help short="Company information of the user to be passed to partners."/>
            <arg type="string" var="$body.properties.userInfo.companyInfo.business" options="business">
              <help short="Business of the company"/>
              <format maxLength="64"/>
            </arg>
            <arg type="string" var="$body.properties.userInfo.companyInfo.country" options="country">
              <help short="Country of the company location."/>
              <format maxLength="64"/>
            </arg>
            <arg type="string" var="$body.properties.userInfo.companyInfo.domain" options="domain">
              <help short="Domain of the company"/>
              <format maxLength="250"/>
            </arg>
            <arg type="string" var="$body.properties.userInfo.companyInfo.employeesNumber" options="employees-number">
              <help short="Number of employees in the company"/>
              <format maxLength="20"/>
            </arg>
            <arg type="string" var="$body.properties.userInfo.companyInfo.state" options="state">
              <help short="State of the company location."/>
              <format maxLength="64"/>
            </arg>
          </arg>
          <arg type="string" var="$body.properties.userInfo.companyName" options="company-name">
            <help short="Company name of the user"/>
            <format maxLength="64"/>
          </arg>
          <arg type="string" var="$body.properties.userInfo.emailAddress" options="email-address">
            <help short="Email of the user used by Elastic for contacting them if needed"/>
            <format pattern="^([^<>()\[\]\.,;:\s@&quot;]+(\.[^<>()\[\]\.,;:\s@&quot;]+)*)@(([a-zA-Z-_0-9]+\.)+[a-zA-Z]{2,})$"/>
          </arg>
          <arg type="string" var="$body.properties.userInfo.firstName" options="first-name">
            <help short="First name of the user"/>
            <format maxLength="50"/>
          </arg>
          <arg type="string" var="$body.properties.userInfo.lastName" options="last-name">
            <help short="Last name of the user"/>
            <format maxLength="50"/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.version" options="version" group="Properties">
          <help short="Version of elastic of the monitor resource"/>
        </arg>
      </argGroup>
      <operation operationId="Monitors_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="identity" arg="$body.identity">
                    <prop type="string" name="type" arg="$body.identity.type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="boolean" name="generateApiKey" arg="$body.properties.generateApiKey"/>
                    <prop type="string" name="monitoringStatus" arg="$body.properties.monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planDetails" arg="$body.properties.planDetails">
                      <prop type="string" name="offerID" arg="$body.properties.planDetails.offerID"/>
                      <prop type="string" name="planID" arg="$body.properties.planDetails.planID"/>
                      <prop type="string" name="planName" arg="$body.properties.planDetails.planName"/>
                      <prop type="string" name="publisherID" arg="$body.properties.planDetails.publisherID"/>
                      <prop type="string" name="termID" arg="$body.properties.planDetails.termID"/>
                    </prop>
                    <prop type="string" name="saaSAzureSubscriptionStatus" arg="$body.properties.saaSAzureSubscriptionStatus"/>
                    <prop type="string" name="sourceCampaignId" arg="$body.properties.sourceCampaignId"/>
                    <prop type="string" name="sourceCampaignName" arg="$body.properties.sourceCampaignName"/>
                    <prop type="string" name="subscriptionState" arg="$body.properties.subscriptionState"/>
                    <prop type="object" name="userInfo" arg="$body.properties.userInfo">
                      <prop type="object" name="companyInfo" arg="$body.properties.userInfo.companyInfo">
                        <prop type="string" name="business" arg="$body.properties.userInfo.companyInfo.business">
                          <format maxLength="64"/>
                        </prop>
                        <prop type="string" name="country" arg="$body.properties.userInfo.companyInfo.country">
                          <format maxLength="64"/>
                        </prop>
                        <prop type="string" name="domain" arg="$body.properties.userInfo.companyInfo.domain">
                          <format maxLength="250"/>
                        </prop>
                        <prop type="string" name="employeesNumber" arg="$body.properties.userInfo.companyInfo.employeesNumber">
                          <format maxLength="20"/>
                        </prop>
                        <prop type="string" name="state" arg="$body.properties.userInfo.companyInfo.state">
                          <format maxLength="64"/>
                        </prop>
                      </prop>
                      <prop type="string" name="companyName" arg="$body.properties.userInfo.companyName">
                        <format maxLength="64"/>
                      </prop>
                      <prop type="string" name="emailAddress" arg="$body.properties.userInfo.emailAddress">
                        <format pattern="^([^<>()\[\]\.,;:\s@&quot;]+(\.[^<>()\[\]\.,;:\s@&quot;]+)*)@(([a-zA-Z-_0-9]+\.)+[a-zA-Z]{2,})$"/>
                      </prop>
                      <prop type="string" name="firstName" arg="$body.properties.userInfo.firstName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="lastName" arg="$body.properties.userInfo.lastName">
                        <format maxLength="50"/>
                      </prop>
                    </prop>
                    <prop type="string" name="version" arg="$body.properties.version"/>
                  </prop>
                  <prop type="object" name="sku" arg="$body.sku">
                    <prop type="string" name="name" arg="$body.sku.name" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="elasticProperties">
                      <prop type="object" name="elasticCloudDeployment">
                        <prop readOnly="True" type="string" name="azureSubscriptionId"/>
                        <prop readOnly="True" type="string" name="deploymentId"/>
                        <prop readOnly="True" type="string" name="elasticsearchRegion"/>
                        <prop readOnly="True" type="string" name="elasticsearchServiceUrl"/>
                        <prop readOnly="True" type="string" name="kibanaServiceUrl"/>
                        <prop readOnly="True" type="string" name="kibanaSsoUrl"/>
                        <prop readOnly="True" type="string" name="name"/>
                      </prop>
                      <prop type="object" name="elasticCloudUser">
                        <prop readOnly="True" type="string" name="elasticCloudSsoDefaultUrl"/>
                        <prop readOnly="True" type="string" name="emailAddress"/>
                        <prop readOnly="True" type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="generateApiKey"/>
                    <prop readOnly="True" type="string" name="liftrResourceCategory">
                      <enum>
                        <item value="&quot;MonitorLogs&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                    <prop type="string" name="monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planDetails">
                      <prop type="string" name="offerID"/>
                      <prop type="string" name="planID"/>
                      <prop type="string" name="planName"/>
                      <prop type="string" name="publisherID"/>
                      <prop type="string" name="termID"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="saaSAzureSubscriptionStatus"/>
                    <prop type="string" name="sourceCampaignId"/>
                    <prop type="string" name="sourceCampaignName"/>
                    <prop type="string" name="subscriptionState"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.identity" options="identity" group="Body">
          <help short="Identity properties of the monitor resource."/>
          <arg nullable="True" type="string" var="$body.identity.type" options="type">
            <help short="Managed identity type."/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.sku" options="sku" group="Body">
          <help short="SKU of the monitor resource."/>
          <arg type="string" var="$body.sku.name" options="name">
            <help short="Name of the SKU."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="The tags of the monitor resource."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$body.properties.generateApiKey" options="generate-api-key" group="Properties">
          <help short="Flag to determine if User API Key has to be generated and shared."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.monitoringStatus" options="monitoring-status" group="Properties">
          <help short="Flag specifying if the resource monitoring is enabled or disabled."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.planDetails" options="plan-details" group="Properties">
          <help short="Plan details of the monitor resource."/>
          <arg nullable="True" type="string" var="$body.properties.planDetails.offerID" options="offer-id">
            <help short="Offer ID of the plan"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.planDetails.planID" options="plan-id">
            <help short="Plan ID"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.planDetails.planName" options="plan-name">
            <help short="Plan Name"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.planDetails.publisherID" options="publisher-id">
            <help short="Publisher ID of the plan"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.planDetails.termID" options="term-id">
            <help short="Term ID of the plan"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.saaSAzureSubscriptionStatus" options="saa-s-azure-subscription-status" group="Properties">
          <help short="Status of Azure Subscription where Marketplace SaaS is located."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.sourceCampaignId" options="source-campaign-id" group="Properties">
          <help short="A unique identifier associated with the campaign."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.sourceCampaignName" options="source-campaign-name" group="Properties">
          <help short="Name of the marketing campaign."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.subscriptionState" options="subscription-state" group="Properties">
          <help short="State of the Azure Subscription containing the monitor resource"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.version" options="version" group="Properties">
          <help short="Version of elastic of the monitor resource"/>
        </arg>
      </argGroup>
      <operation operationId="Monitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ElasticMonitorResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="elasticProperties">
                      <prop type="object" name="elasticCloudDeployment">
                        <prop readOnly="True" type="string" name="azureSubscriptionId"/>
                        <prop readOnly="True" type="string" name="deploymentId"/>
                        <prop readOnly="True" type="string" name="elasticsearchRegion"/>
                        <prop readOnly="True" type="string" name="elasticsearchServiceUrl"/>
                        <prop readOnly="True" type="string" name="kibanaServiceUrl"/>
                        <prop readOnly="True" type="string" name="kibanaSsoUrl"/>
                        <prop readOnly="True" type="string" name="name"/>
                      </prop>
                      <prop type="object" name="elasticCloudUser">
                        <prop readOnly="True" type="string" name="elasticCloudSsoDefaultUrl"/>
                        <prop readOnly="True" type="string" name="emailAddress"/>
                        <prop readOnly="True" type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="generateApiKey"/>
                    <prop readOnly="True" type="string" name="liftrResourceCategory">
                      <enum>
                        <item value="&quot;MonitorLogs&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                    <prop type="string" name="monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planDetails">
                      <prop type="string" name="offerID"/>
                      <prop type="string" name="planID"/>
                      <prop type="string" name="planName"/>
                      <prop type="string" name="publisherID"/>
                      <prop type="string" name="termID"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="saaSAzureSubscriptionStatus"/>
                    <prop type="string" name="sourceCampaignId"/>
                    <prop type="string" name="sourceCampaignName"/>
                    <prop type="string" name="subscriptionState"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="identity" arg="$body.identity">
                <prop type="string" name="type" arg="$body.identity.type">
                  <enum>
                    <item value="&quot;SystemAssigned&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="properties">
                <prop type="boolean" name="generateApiKey" arg="$body.properties.generateApiKey"/>
                <prop type="string" name="monitoringStatus" arg="$body.properties.monitoringStatus">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="planDetails" arg="$body.properties.planDetails">
                  <prop type="string" name="offerID" arg="$body.properties.planDetails.offerID"/>
                  <prop type="string" name="planID" arg="$body.properties.planDetails.planID"/>
                  <prop type="string" name="planName" arg="$body.properties.planDetails.planName"/>
                  <prop type="string" name="publisherID" arg="$body.properties.planDetails.publisherID"/>
                  <prop type="string" name="termID" arg="$body.properties.planDetails.termID"/>
                </prop>
                <prop type="string" name="saaSAzureSubscriptionStatus" arg="$body.properties.saaSAzureSubscriptionStatus"/>
                <prop type="string" name="sourceCampaignId" arg="$body.properties.sourceCampaignId"/>
                <prop type="string" name="sourceCampaignName" arg="$body.properties.sourceCampaignName"/>
                <prop type="string" name="subscriptionState" arg="$body.properties.subscriptionState"/>
                <prop type="string" name="version" arg="$body.properties.version"/>
              </prop>
              <prop type="object" name="sku" arg="$body.sku">
                <prop type="string" name="name" arg="$body.sku.name" required="True"/>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Monitors_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ElasticMonitorResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
