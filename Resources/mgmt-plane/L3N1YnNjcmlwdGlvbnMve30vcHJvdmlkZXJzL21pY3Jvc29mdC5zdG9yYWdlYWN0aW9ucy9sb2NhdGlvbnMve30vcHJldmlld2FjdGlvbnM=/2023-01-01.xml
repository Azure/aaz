<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.storageactions/locations/{}/previewactions" version="2023-01-01" swagger="mgmt-plane/storageactions/ResourceProviders/Microsoft.StorageActions/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlN0b3JhZ2VBY3Rpb25zL2xvY2F0aW9ucy97bG9jYXRpb259L3ByZXZpZXdBY3Rpb25z/V/MjAyMy0wMS0wMQ=="/>
  <commandGroup name="storage-actions task">
    <command name="preview-action" version="2023-01-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.storageactions/locations/{}/previewactions" version="2023-01-01" swagger="mgmt-plane/storageactions/ResourceProviders/Microsoft.StorageActions/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlN0b3JhZ2VBY3Rpb25zL2xvY2F0aW9ucy97bG9jYXRpb259L3ByZXZpZXdBY3Rpb25z/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceLocation" var="$Path.location" options="location l" required="True" idPart="name"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.action" options="action" required="True" group="Properties">
          <help short="Preview action container properties to be tested for a match with the provided condition."/>
          <arg type="boolean" var="$parameters.properties.action.elseBlockExists" options="else-block-exists" required="True">
            <help short="Specify whether the else block is present in the condition."/>
          </arg>
          <arg type="object" var="$parameters.properties.action.if" options="if" required="True">
            <help short="The condition to be tested for a match with container and blob properties."/>
            <arg type="string" var="$parameters.properties.action.if.condition" options="condition">
              <help short="Storage task condition to be tested for a match."/>
            </arg>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.blobs" options="blobs" required="True" group="Properties">
          <help short="Preview action container properties to be tested for a match with the provided condition."/>
          <item type="object">
            <arg type="array<@StorageTaskPreviewKeyValueProperties_create>" var="$parameters.properties.blobs[].metadata" options="metadata">
              <help short="metadata key value pairs to be tested for a match against the provided condition."/>
              <item type="@StorageTaskPreviewKeyValueProperties_create"/>
            </arg>
            <arg type="string" var="$parameters.properties.blobs[].name" options="name">
              <help short="property for the container name."/>
            </arg>
            <arg type="array<@StorageTaskPreviewKeyValueProperties_create>" var="$parameters.properties.blobs[].properties" options="properties">
              <help short="properties key value pairs to be tested for a match against the provided condition."/>
              <item type="@StorageTaskPreviewKeyValueProperties_create"/>
            </arg>
            <arg type="array<@StorageTaskPreviewKeyValueProperties_create>" var="$parameters.properties.blobs[].tags" options="tags">
              <help short="tags key value pairs to be tested for a match against the provided condition."/>
              <item type="@StorageTaskPreviewKeyValueProperties_create"/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.container" options="container" required="True" group="Properties">
          <help short="Preview action container properties to be tested for a match with the provided condition."/>
          <arg type="array<object>" var="$parameters.properties.container.metadata" options="metadata">
            <help short="metadata key value pairs to be tested for a match against the provided condition."/>
            <item type="object" cls="StorageTaskPreviewKeyValueProperties_create">
              <arg type="string" var="@StorageTaskPreviewKeyValueProperties_create.key" options="key">
                <help short="Represents the key property of the pair."/>
              </arg>
              <arg type="string" var="@StorageTaskPreviewKeyValueProperties_create.value" options="value">
                <help short="Represents the value property of the pair."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$parameters.properties.container.name" options="name">
            <help short="property for the container name."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="StorageTasks_PreviewActions">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/locations/{location}/previewActions">
          <request method="post">
            <path>
              <param type="string" name="location" arg="$Path.location" required="True"/>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="action" arg="$parameters.properties.action" required="True">
                      <prop type="boolean" name="elseBlockExists" arg="$parameters.properties.action.elseBlockExists" required="True"/>
                      <prop type="object" name="if" arg="$parameters.properties.action.if" required="True">
                        <prop type="string" name="condition" arg="$parameters.properties.action.if.condition"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="blobs" arg="$parameters.properties.blobs" required="True">
                      <item type="object">
                        <prop type="array<@StorageTaskPreviewKeyValueProperties_create>" name="metadata" arg="$parameters.properties.blobs[].metadata">
                          <item type="@StorageTaskPreviewKeyValueProperties_create"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.blobs[].name"/>
                        <prop type="array<@StorageTaskPreviewKeyValueProperties_create>" name="properties" arg="$parameters.properties.blobs[].properties">
                          <item type="@StorageTaskPreviewKeyValueProperties_create"/>
                        </prop>
                        <prop type="array<@StorageTaskPreviewKeyValueProperties_create>" name="tags" arg="$parameters.properties.blobs[].tags">
                          <item type="@StorageTaskPreviewKeyValueProperties_create"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="container" arg="$parameters.properties.container" required="True">
                      <prop type="array<object>" name="metadata" arg="$parameters.properties.container.metadata">
                        <item type="object" cls="StorageTaskPreviewKeyValueProperties_create">
                          <prop type="string" name="key" arg="@StorageTaskPreviewKeyValueProperties_create.key"/>
                          <prop type="string" name="value" arg="@StorageTaskPreviewKeyValueProperties_create.value"/>
                        </item>
                      </prop>
                      <prop type="string" name="name" arg="$parameters.properties.container.name"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="action" required="True">
                      <prop type="boolean" name="elseBlockExists" required="True"/>
                      <prop type="object" name="if" required="True">
                        <prop type="string" name="condition"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="blobs" required="True">
                      <item type="object">
                        <prop readOnly="True" type="string" name="matchedBlock">
                          <enum>
                            <item value="&quot;Else&quot;"/>
                            <item value="&quot;If&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<@StorageTaskPreviewKeyValueProperties_read>" name="metadata">
                          <item type="@StorageTaskPreviewKeyValueProperties_read"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="array<@StorageTaskPreviewKeyValueProperties_read>" name="properties">
                          <item type="@StorageTaskPreviewKeyValueProperties_read"/>
                        </prop>
                        <prop type="array<@StorageTaskPreviewKeyValueProperties_read>" name="tags">
                          <item type="@StorageTaskPreviewKeyValueProperties_read"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="container" required="True">
                      <prop type="array<object>" name="metadata">
                        <item type="object" cls="StorageTaskPreviewKeyValueProperties_read">
                          <prop type="string" name="key"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="string" name="name"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
