<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfQ==/V/MjAyNC0wMS0wMQ=="/>
  <commandGroup name="storage account task-assignment">
    <command name="show" version="2024-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfQ==/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageTaskAssignmentName" options="storage-task-assignment-name name n" required="True" idPart="child_name_1">
          <help short="The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="StorageTaskAssignments_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageTaskAssignmentName" arg="$Path.storageTaskAssignmentName" required="True">
                <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/storageTaskAssignments/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop type="string" name="description" required="True"/>
                    <prop type="boolean" name="enabled" required="True"/>
                    <prop type="object" name="executionContext" required="True">
                      <prop type="object" name="target">
                        <prop type="array<string>" name="excludePrefix">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="prefix">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="trigger" required="True">
                        <prop type="object" name="parameters" required="True">
                          <prop type="dateTime" name="endBy"/>
                          <prop type="integer32" name="interval">
                            <format minimum="1"/>
                          </prop>
                          <prop type="string" name="intervalUnit">
                            <enum>
                              <item value="&quot;Days&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="startFrom"/>
                          <prop type="dateTime" name="startOn"/>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;OnSchedule&quot;"/>
                            <item value="&quot;RunOnce&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;ValidateSubscriptionQuotaBegin&quot;"/>
                        <item value="&quot;ValidateSubscriptionQuotaEnd&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="report" required="True">
                      <prop type="string" name="prefix" required="True"/>
                    </prop>
                    <prop type="object" name="runStatus">
                      <prop readOnly="True" type="string" name="finishTime"/>
                      <prop readOnly="True" type="string" name="objectFailedCount"/>
                      <prop readOnly="True" type="string" name="objectsOperatedOnCount"/>
                      <prop readOnly="True" type="string" name="objectsSucceededCount"/>
                      <prop readOnly="True" type="string" name="objectsTargetedCount"/>
                      <prop readOnly="True" type="string" name="runResult">
                        <enum>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="runStatusEnum">
                        <enum>
                          <item value="&quot;Finished&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="runStatusError"/>
                      <prop readOnly="True" type="string" name="startTime"/>
                      <prop readOnly="True" type="ResourceId" name="storageAccountId"/>
                      <prop readOnly="True" type="string" name="summaryReportPath"/>
                      <prop readOnly="True" type="ResourceId" name="taskAssignmentId"/>
                      <prop readOnly="True" type="ResourceId" name="taskId"/>
                      <prop readOnly="True" type="string" name="taskVersion"/>
                    </prop>
                    <prop type="ResourceId" name="taskId" required="True"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-01-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfQ==/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageTaskAssignmentName" options="storage-task-assignment-name name n" required="True" idPart="child_name_1">
          <help short="The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="StorageTaskAssignments_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}">
          <request method="delete">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageTaskAssignmentName" arg="$Path.storageTaskAssignmentName" required="True">
                <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfQ==/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageTaskAssignmentName" options="storage-task-assignment-name name n" required="True" idPart="child_name_1">
          <help short="The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.description" options="description" required="True" group="Properties">
          <help short="Text that describes the purpose of the storage task assignment"/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" required="True" group="Properties">
          <help short="Whether the storage task assignment is enabled or not"/>
        </arg>
        <arg type="object" var="$parameters.properties.executionContext" options="execution-context" required="True" group="Properties">
          <help short="The storage task assignment execution context"/>
          <arg type="object" var="$parameters.properties.executionContext.target" options="target">
            <help short="Execution target of the storage task assignment"/>
            <arg type="array<string>" var="$parameters.properties.executionContext.target.excludePrefix" options="exclude-prefix">
              <help short="List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes, the exclude prefix will be the determining factor"/>
              <item type="string"/>
            </arg>
            <arg type="array<string>" var="$parameters.properties.executionContext.target.prefix" options="prefix">
              <help short="Required list of object prefixes to be included for task execution"/>
              <item type="string"/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.executionContext.trigger" options="trigger" required="True">
            <help short="Execution trigger of the storage task assignment"/>
            <arg type="object" var="$parameters.properties.executionContext.trigger.parameters" options="parameters" required="True">
              <help short="The trigger parameters of the storage task assignment execution"/>
              <arg type="dateTime" var="$parameters.properties.executionContext.trigger.parameters.endBy" options="end-by">
                <help short="When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
              </arg>
              <arg type="integer32" var="$parameters.properties.executionContext.trigger.parameters.interval" options="interval">
                <help short="Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
                <format minimum="1"/>
              </arg>
              <arg type="string" var="$parameters.properties.executionContext.trigger.parameters.intervalUnit" options="interval-unit">
                <help short="Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
                <enum>
                  <item name="Days" value="&quot;Days&quot;"/>
                </enum>
              </arg>
              <arg type="dateTime" var="$parameters.properties.executionContext.trigger.parameters.startFrom" options="start-from">
                <help short="When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
              </arg>
              <arg type="dateTime" var="$parameters.properties.executionContext.trigger.parameters.startOn" options="start-on">
                <help short="When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.executionContext.trigger.type" options="type" required="True">
              <help short="The trigger type of the storage task assignment execution"/>
              <enum>
                <item name="OnSchedule" value="&quot;OnSchedule&quot;"/>
                <item name="RunOnce" value="&quot;RunOnce&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.report" options="report" required="True" group="Properties">
          <help short="The storage task assignment report"/>
          <arg type="string" var="$parameters.properties.report.prefix" options="prefix" required="True">
            <help short="The container prefix for the location of storage task assignment report"/>
          </arg>
        </arg>
        <arg type="ResourceId" var="$parameters.properties.taskId" options="task-id" required="True" group="Properties">
          <help short="Id of the corresponding storage task"/>
        </arg>
      </argGroup>
      <operation operationId="StorageTaskAssignments_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageTaskAssignmentName" arg="$Path.storageTaskAssignmentName" required="True">
                <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True">
                    <prop type="string" name="description" arg="$parameters.properties.description" required="True"/>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.enabled" required="True"/>
                    <prop type="object" name="executionContext" arg="$parameters.properties.executionContext" required="True">
                      <prop type="object" name="target" arg="$parameters.properties.executionContext.target">
                        <prop type="array<string>" name="excludePrefix" arg="$parameters.properties.executionContext.target.excludePrefix">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="prefix" arg="$parameters.properties.executionContext.target.prefix">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="trigger" arg="$parameters.properties.executionContext.trigger" required="True">
                        <prop type="object" name="parameters" arg="$parameters.properties.executionContext.trigger.parameters" required="True">
                          <prop type="dateTime" name="endBy" arg="$parameters.properties.executionContext.trigger.parameters.endBy"/>
                          <prop type="integer32" name="interval" arg="$parameters.properties.executionContext.trigger.parameters.interval">
                            <format minimum="1"/>
                          </prop>
                          <prop type="string" name="intervalUnit" arg="$parameters.properties.executionContext.trigger.parameters.intervalUnit">
                            <enum>
                              <item value="&quot;Days&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="startFrom" arg="$parameters.properties.executionContext.trigger.parameters.startFrom"/>
                          <prop type="dateTime" name="startOn" arg="$parameters.properties.executionContext.trigger.parameters.startOn"/>
                        </prop>
                        <prop type="string" name="type" arg="$parameters.properties.executionContext.trigger.type" required="True">
                          <enum>
                            <item value="&quot;OnSchedule&quot;"/>
                            <item value="&quot;RunOnce&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="report" arg="$parameters.properties.report" required="True">
                      <prop type="string" name="prefix" arg="$parameters.properties.report.prefix" required="True"/>
                    </prop>
                    <prop type="ResourceId" name="taskId" arg="$parameters.properties.taskId" required="True"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/storageTaskAssignments/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop type="string" name="description" required="True"/>
                    <prop type="boolean" name="enabled" required="True"/>
                    <prop type="object" name="executionContext" required="True">
                      <prop type="object" name="target">
                        <prop type="array<string>" name="excludePrefix">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="prefix">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="trigger" required="True">
                        <prop type="object" name="parameters" required="True">
                          <prop type="dateTime" name="endBy"/>
                          <prop type="integer32" name="interval">
                            <format minimum="1"/>
                          </prop>
                          <prop type="string" name="intervalUnit">
                            <enum>
                              <item value="&quot;Days&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="startFrom"/>
                          <prop type="dateTime" name="startOn"/>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;OnSchedule&quot;"/>
                            <item value="&quot;RunOnce&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;ValidateSubscriptionQuotaBegin&quot;"/>
                        <item value="&quot;ValidateSubscriptionQuotaEnd&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="report" required="True">
                      <prop type="string" name="prefix" required="True"/>
                    </prop>
                    <prop type="object" name="runStatus">
                      <prop readOnly="True" type="string" name="finishTime"/>
                      <prop readOnly="True" type="string" name="objectFailedCount"/>
                      <prop readOnly="True" type="string" name="objectsOperatedOnCount"/>
                      <prop readOnly="True" type="string" name="objectsSucceededCount"/>
                      <prop readOnly="True" type="string" name="objectsTargetedCount"/>
                      <prop readOnly="True" type="string" name="runResult">
                        <enum>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="runStatusEnum">
                        <enum>
                          <item value="&quot;Finished&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="runStatusError"/>
                      <prop readOnly="True" type="string" name="startTime"/>
                      <prop readOnly="True" type="ResourceId" name="storageAccountId"/>
                      <prop readOnly="True" type="string" name="summaryReportPath"/>
                      <prop readOnly="True" type="ResourceId" name="taskAssignmentId"/>
                      <prop readOnly="True" type="ResourceId" name="taskId"/>
                      <prop readOnly="True" type="string" name="taskVersion"/>
                    </prop>
                    <prop type="ResourceId" name="taskId" required="True"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfQ==/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageTaskAssignmentName" options="storage-task-assignment-name name n" required="True" idPart="child_name_1">
          <help short="The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Text that describes the purpose of the storage task assignment"/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" group="Properties">
          <help short="Whether the storage task assignment is enabled or not"/>
        </arg>
        <arg type="object" var="$parameters.properties.executionContext" options="execution-context" group="Properties">
          <help short="The storage task assignment execution context"/>
          <arg nullable="True" type="object" var="$parameters.properties.executionContext.target" options="target">
            <help short="Execution target of the storage task assignment"/>
            <arg nullable="True" type="array<string>" var="$parameters.properties.executionContext.target.excludePrefix" options="exclude-prefix">
              <help short="List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes, the exclude prefix will be the determining factor"/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="array<string>" var="$parameters.properties.executionContext.target.prefix" options="prefix">
              <help short="Required list of object prefixes to be included for task execution"/>
              <item nullable="True" type="string"/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.executionContext.trigger" options="trigger">
            <help short="Execution trigger of the storage task assignment"/>
            <arg type="object" var="$parameters.properties.executionContext.trigger.parameters" options="parameters">
              <help short="The trigger parameters of the storage task assignment execution"/>
              <arg nullable="True" type="dateTime" var="$parameters.properties.executionContext.trigger.parameters.endBy" options="end-by">
                <help short="When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.executionContext.trigger.parameters.interval" options="interval">
                <help short="Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
                <format minimum="1"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.executionContext.trigger.parameters.intervalUnit" options="interval-unit">
                <help short="Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
                <enum>
                  <item name="Days" value="&quot;Days&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="dateTime" var="$parameters.properties.executionContext.trigger.parameters.startFrom" options="start-from">
                <help short="When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'"/>
              </arg>
              <arg nullable="True" type="dateTime" var="$parameters.properties.executionContext.trigger.parameters.startOn" options="start-on">
                <help short="When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.executionContext.trigger.type" options="type">
              <help short="The trigger type of the storage task assignment execution"/>
              <enum>
                <item name="OnSchedule" value="&quot;OnSchedule&quot;"/>
                <item name="RunOnce" value="&quot;RunOnce&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.report" options="report" group="Properties">
          <help short="The storage task assignment report"/>
          <arg type="string" var="$parameters.properties.report.prefix" options="prefix">
            <help short="The container prefix for the location of storage task assignment report"/>
          </arg>
        </arg>
        <arg type="ResourceId" var="$parameters.properties.taskId" options="task-id" group="Properties">
          <help short="Id of the corresponding storage task"/>
        </arg>
      </argGroup>
      <operation operationId="StorageTaskAssignments_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageTaskAssignmentName" arg="$Path.storageTaskAssignmentName" required="True">
                <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="StorageTaskAssignment_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/storageTaskAssignments/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop type="string" name="description" required="True"/>
                    <prop type="boolean" name="enabled" required="True"/>
                    <prop type="object" name="executionContext" required="True">
                      <prop type="object" name="target">
                        <prop type="array<string>" name="excludePrefix">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="prefix">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="trigger" required="True">
                        <prop type="object" name="parameters" required="True">
                          <prop type="dateTime" name="endBy"/>
                          <prop type="integer32" name="interval">
                            <format minimum="1"/>
                          </prop>
                          <prop type="string" name="intervalUnit">
                            <enum>
                              <item value="&quot;Days&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="startFrom"/>
                          <prop type="dateTime" name="startOn"/>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;OnSchedule&quot;"/>
                            <item value="&quot;RunOnce&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;ValidateSubscriptionQuotaBegin&quot;"/>
                        <item value="&quot;ValidateSubscriptionQuotaEnd&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="report" required="True">
                      <prop type="string" name="prefix" required="True"/>
                    </prop>
                    <prop type="object" name="runStatus">
                      <prop readOnly="True" type="string" name="finishTime"/>
                      <prop readOnly="True" type="string" name="objectFailedCount"/>
                      <prop readOnly="True" type="string" name="objectsOperatedOnCount"/>
                      <prop readOnly="True" type="string" name="objectsSucceededCount"/>
                      <prop readOnly="True" type="string" name="objectsTargetedCount"/>
                      <prop readOnly="True" type="string" name="runResult">
                        <enum>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="runStatusEnum">
                        <enum>
                          <item value="&quot;Finished&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="runStatusError"/>
                      <prop readOnly="True" type="string" name="startTime"/>
                      <prop readOnly="True" type="ResourceId" name="storageAccountId"/>
                      <prop readOnly="True" type="string" name="summaryReportPath"/>
                      <prop readOnly="True" type="ResourceId" name="taskAssignmentId"/>
                      <prop readOnly="True" type="ResourceId" name="taskId"/>
                      <prop readOnly="True" type="string" name="taskVersion"/>
                    </prop>
                    <prop type="ResourceId" name="taskId" required="True"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True">
                <prop type="string" name="description" arg="$parameters.properties.description" required="True"/>
                <prop type="boolean" name="enabled" arg="$parameters.properties.enabled" required="True"/>
                <prop type="object" name="executionContext" arg="$parameters.properties.executionContext" required="True">
                  <prop type="object" name="target" arg="$parameters.properties.executionContext.target">
                    <prop type="array<string>" name="excludePrefix" arg="$parameters.properties.executionContext.target.excludePrefix">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="prefix" arg="$parameters.properties.executionContext.target.prefix">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="trigger" arg="$parameters.properties.executionContext.trigger" required="True">
                    <prop type="object" name="parameters" arg="$parameters.properties.executionContext.trigger.parameters" required="True">
                      <prop type="dateTime" name="endBy" arg="$parameters.properties.executionContext.trigger.parameters.endBy"/>
                      <prop type="integer32" name="interval" arg="$parameters.properties.executionContext.trigger.parameters.interval">
                        <format minimum="1"/>
                      </prop>
                      <prop type="string" name="intervalUnit" arg="$parameters.properties.executionContext.trigger.parameters.intervalUnit">
                        <enum>
                          <item value="&quot;Days&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="startFrom" arg="$parameters.properties.executionContext.trigger.parameters.startFrom"/>
                      <prop type="dateTime" name="startOn" arg="$parameters.properties.executionContext.trigger.parameters.startOn"/>
                    </prop>
                    <prop type="string" name="type" arg="$parameters.properties.executionContext.trigger.type" required="True">
                      <enum>
                        <item value="&quot;OnSchedule&quot;"/>
                        <item value="&quot;RunOnce&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
                <prop type="object" name="report" arg="$parameters.properties.report" required="True">
                  <prop type="string" name="prefix" arg="$parameters.properties.report.prefix" required="True"/>
                </prop>
                <prop type="ResourceId" name="taskId" arg="$parameters.properties.taskId" required="True"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="StorageTaskAssignments_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageTaskAssignmentName" arg="$Path.storageTaskAssignmentName" required="True">
                <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@StorageTaskAssignment_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
