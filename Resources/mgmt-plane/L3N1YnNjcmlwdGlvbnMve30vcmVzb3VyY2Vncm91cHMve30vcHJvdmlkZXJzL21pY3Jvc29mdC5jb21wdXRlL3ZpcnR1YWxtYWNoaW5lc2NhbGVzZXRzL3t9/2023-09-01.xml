<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="vmss">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmScaleSetName" options="vm-scale-set-name name n" required="True" idPart="name">
          <help short="The name of the VM scale set."/>
        </arg>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="The expand expression to apply on the operation. 'UserData' retrieves the UserData property of the VM scale set that was provided by the user during the VM scale set Create/Update operation"/>
          <enum>
            <item name="userData" value="&quot;userData&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineScaleSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmScaleSetName" arg="$Path.vmScaleSetName" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand">
                <enum>
                  <item value="&quot;userData&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name"/>
                    <prop type="string" name="product"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="automaticRepairsPolicy">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="gracePeriod"/>
                      <prop type="string" name="repairAction">
                        <enum>
                          <item value="&quot;Reimage&quot;"/>
                          <item value="&quot;Replace&quot;"/>
                          <item value="&quot;Restart&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="constrainedMaximumCapacity"/>
                    <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs"/>
                    <prop type="@SubResource_read" name="hostGroup"/>
                    <prop type="string" name="orchestrationMode">
                      <enum>
                        <item value="&quot;Flexible&quot;"/>
                        <item value="&quot;Uniform&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="overprovision"/>
                    <prop type="integer32" name="platformFaultDomainCount"/>
                    <prop type="object" name="priorityMixPolicy">
                      <prop type="integer32" name="baseRegularPriorityCount">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="regularPriorityPercentageAboveBase">
                        <format maximum="100" minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                    <prop type="object" name="resiliencyPolicy">
                      <prop type="object" name="resilientVMCreationPolicy">
                        <prop type="boolean" name="enabled"/>
                      </prop>
                      <prop type="object" name="resilientVMDeletionPolicy">
                        <prop type="boolean" name="enabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scaleInPolicy">
                      <prop type="boolean" name="forceDeletion"/>
                      <prop type="array<string>" name="rules">
                        <item type="string">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;NewestVM&quot;"/>
                            <item value="&quot;OldestVM&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="boolean" name="singlePlacementGroup"/>
                    <prop type="object" name="spotRestorePolicy">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="restoreTimeout"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                    <prop type="object" name="upgradePolicy">
                      <prop type="object" name="automaticOSUpgradePolicy">
                        <prop type="boolean" name="disableAutomaticRollback"/>
                        <prop type="boolean" name="enableAutomaticOSUpgrade"/>
                        <prop type="boolean" name="osRollingUpgradeDeferral"/>
                        <prop type="boolean" name="useRollingUpgradePolicy"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Automatic&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="rollingUpgradePolicy">
                        <prop type="boolean" name="enableCrossZoneUpgrade"/>
                        <prop type="integer32" name="maxBatchInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="boolean" name="maxSurge"/>
                        <prop type="integer32" name="maxUnhealthyInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent">
                          <format maximum="100" minimum="0"/>
                        </prop>
                        <prop type="string" name="pauseTimeBetweenBatches"/>
                        <prop type="boolean" name="prioritizeUnhealthyInstances"/>
                        <prop type="boolean" name="rollbackFailedInstancesOnPolicyBreach"/>
                      </prop>
                    </prop>
                    <prop type="object" name="virtualMachineProfile">
                      <prop type="object" name="applicationProfile">
                        <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order"/>
                            <prop type="string" name="packageReferenceId" required="True"/>
                            <prop type="string" name="tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="billingProfile">
                        <prop type="float64" name="maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation">
                        <prop type="@SubResource_read" name="capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="extensionProfile">
                        <prop type="array<object>" name="extensions">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag"/>
                              <prop type="object" name="protectedSettings"/>
                              <prop type="object" name="protectedSettingsFromKeyVault" cls="KeyVaultSecretReference_read">
                                <prop type="string" name="secretUrl" required="True"/>
                                <prop type="@SubResource_read" name="sourceVault" required="True"/>
                              </prop>
                              <prop type="array<string>" name="provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState"/>
                              <prop type="string" name="publisher"/>
                              <prop type="object" name="settings"/>
                              <prop type="boolean" name="suppressFailures"/>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="string" name="extensionsTimeBudget"/>
                      </prop>
                      <prop type="object" name="hardwareProfile">
                        <prop type="object" name="vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType"/>
                      <prop type="object" name="networkProfile">
                        <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="string" name="networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings">
                                <prop type="array<string>" name="dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="boolean" name="enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="boolean" name="primary"/>
                                    <prop type="string" name="privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration">
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType"/>
                                            <prop type="string" name="tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_read" name="publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku">
                                        <prop type="string" name="name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@ApiEntityReference_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="networkSecurityGroup"/>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile">
                        <prop type="string" name="adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations"/>
                        <prop type="string" name="computerNamePrefix"/>
                        <prop type="string" name="customData"/>
                        <prop type="object" name="linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                                <prop type="string" name="path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets">
                          <item type="object">
                            <prop type="object" name="sourceVault" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore"/>
                                <prop type="string" name="certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching"/>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="string" name="timeZone"/>
                          <prop type="object" name="winRM">
                            <prop type="array<object>" name="listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityPostureReference">
                        <prop type="array<object>" name="excludeExtensions">
                          <item type="object">
                            <prop readOnly="True" type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location"/>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag"/>
                              <prop type="object" name="instanceView">
                                <prop type="string" name="name"/>
                                <prop type="array<@InstanceViewStatus_read>" name="statuses">
                                  <item type="@InstanceViewStatus_read"/>
                                </prop>
                                <prop type="array<object>" name="substatuses">
                                  <item type="object" cls="InstanceViewStatus_read">
                                    <prop type="string" name="code"/>
                                    <prop type="string" name="displayStatus"/>
                                    <prop type="string" name="level">
                                      <enum>
                                        <item value="&quot;Error&quot;"/>
                                        <item value="&quot;Info&quot;"/>
                                        <item value="&quot;Warning&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="message"/>
                                    <prop type="dateTime" name="time"/>
                                  </item>
                                </prop>
                                <prop type="string" name="type"/>
                                <prop type="string" name="typeHandlerVersion"/>
                              </prop>
                              <prop type="object" name="protectedSettings"/>
                              <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                              <prop type="array<string>" name="provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState"/>
                              <prop type="string" name="publisher"/>
                              <prop type="object" name="settings"/>
                              <prop type="boolean" name="suppressFailures"/>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="securityProfile">
                        <prop type="boolean" name="encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings">
                          <prop type="boolean" name="enabled"/>
                          <prop type="integer32" name="keyIncarnationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings">
                          <prop type="boolean" name="secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="serviceArtifactReference">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="storageProfile">
                        <prop type="array<object>" name="dataDisks" identifiers="name lun">
                          <item type="object">
                            <prop type="string" name="caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer64" name="diskIOPSReadWrite"/>
                            <prop type="integer64" name="diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop type="integer32" name="lun" required="True"/>
                            <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                            <prop type="string" name="name"/>
                            <prop type="boolean" name="writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType"/>
                        <prop type="object" name="imageReference">
                          <prop type="string" name="communityGalleryImageId"/>
                          <prop readOnly="True" type="string" name="exactVersion"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="offer"/>
                          <prop type="string" name="publisher"/>
                          <prop type="string" name="sharedGalleryImageId"/>
                          <prop type="string" name="sku"/>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="object" name="osDisk">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings">
                            <prop type="string" name="option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="object" name="image">
                            <prop type="string" name="uri"/>
                          </prop>
                          <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                            <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="object" name="securityProfile">
                              <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="vhdContainers">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      <prop type="string" name="userData"/>
                    </prop>
                    <prop type="boolean" name="zoneBalance"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer64" name="capacity"/>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmScaleSetName" options="vm-scale-set-name name n" required="True" idPart="name">
          <help short="The name of the VM scale set."/>
        </arg>
        <arg type="boolean" var="$Query.forceDeletion" options="force-deletion">
          <help short="Optional parameter to force delete a VM scale set. (Feature in Preview)"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineScaleSets_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmScaleSetName" arg="$Path.vmScaleSetName" required="True"/>
            </path>
            <query>
              <param type="boolean" name="forceDeletion" arg="$Query.forceDeletion"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match">
          <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmScaleSetName" options="vm-scale-set-name name n" required="True" idPart="name">
          <help short="The name of the VM scale set to create or update."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.extendedLocation" options="extended-location" group="Parameters">
          <help short="The extended location of the Virtual Machine Scale Set."/>
          <arg type="string" var="$parameters.extendedLocation.name" options="name">
            <help short="The name of the extended location."/>
          </arg>
          <arg type="string" var="$parameters.extendedLocation.type" options="type">
            <help short="The type of the extended location."/>
            <enum>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$parameters.identity" options="identity" group="Parameters">
          <help short="The identity of the virtual machine scale set, if configured."/>
          <arg type="string" var="$parameters.identity.type" options="type">
            <help short="The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$parameters.plan" options="plan" group="Parameters">
          <help short="Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**."/>
          <arg type="string" var="$parameters.plan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg type="string" var="$parameters.plan.product" options="product">
            <help short="Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."/>
          </arg>
          <arg type="string" var="$parameters.plan.promotionCode" options="promotion-code">
            <help short="The promotion code."/>
          </arg>
          <arg type="string" var="$parameters.plan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" group="Parameters">
          <help short="The virtual machine scale set sku."/>
          <arg type="integer64" var="$parameters.sku.capacity" options="capacity">
            <help short="Specifies the number of virtual machines in the scale set."/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name">
            <help short="The sku name."/>
          </arg>
          <arg type="string" var="$parameters.sku.tier" options="tier">
            <help short="Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$parameters.zones" options="zones" group="Parameters">
          <help short="The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set"/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.additionalCapabilities" options="additional-capabilities" group="Properties">
          <help short="Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type."/>
          <arg type="boolean" var="$parameters.properties.additionalCapabilities.hibernationEnabled" options="hibernation-enabled">
            <help short="The flag that enables or disables hibernation capability on the VM."/>
          </arg>
          <arg type="boolean" var="$parameters.properties.additionalCapabilities.ultraSSDEnabled" options="ultra-ssd-enabled">
            <help short="The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.automaticRepairsPolicy" options="automatic-repairs-policy" group="Properties">
          <help short="Policy for automatic repairs."/>
          <arg type="boolean" var="$parameters.properties.automaticRepairsPolicy.enabled" options="enabled">
            <help short="Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false."/>
          </arg>
          <arg type="string" var="$parameters.properties.automaticRepairsPolicy.gracePeriod" options="grace-period">
            <help short="The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 10 minutes (PT10M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M)."/>
          </arg>
          <arg type="string" var="$parameters.properties.automaticRepairsPolicy.repairAction" options="repair-action">
            <help short="Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace."/>
            <enum>
              <item name="Reimage" value="&quot;Reimage&quot;"/>
              <item name="Replace" value="&quot;Replace&quot;"/>
              <item name="Restart" value="&quot;Restart&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="boolean" var="$parameters.properties.constrainedMaximumCapacity" options="constrained-maximum-capacity" group="Properties">
          <help short="Optional property which must either be set to True or omitted."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.doNotRunExtensionsOnOverprovisionedVMs" options="do-not-run-extensions-on-overprovisioned-v-ms" group="Properties">
          <help short="When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs."/>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.hostGroup" options="host-group" group="Properties">
          <help short="Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01."/>
        </arg>
        <arg type="string" var="$parameters.properties.orchestrationMode" options="orchestration-mode" group="Properties">
          <help short="Specifies the orchestration mode for the virtual machine scale set."/>
          <enum>
            <item name="Flexible" value="&quot;Flexible&quot;"/>
            <item name="Uniform" value="&quot;Uniform&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$parameters.properties.overprovision" options="overprovision" group="Properties">
          <help short="Specifies whether the Virtual Machine Scale Set should be overprovisioned."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.platformFaultDomainCount" options="platform-fault-domain-count" group="Properties">
          <help short="Fault Domain count for each placement group."/>
        </arg>
        <arg type="object" var="$parameters.properties.priorityMixPolicy" options="priority-mix-policy" group="Properties">
          <help short="Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance."/>
          <arg type="integer32" var="$parameters.properties.priorityMixPolicy.baseRegularPriorityCount" options="base-regular-priority-count">
            <help short="The base number of regular priority VMs that will be created in this scale set as it scales out."/>
            <format minimum="0"/>
          </arg>
          <arg type="integer32" var="$parameters.properties.priorityMixPolicy.regularPriorityPercentageAboveBase" options="regular-priority-percentage-above-base">
            <help short="The percentage of VM instances, after the base regular priority count has been reached, that are expected to use regular priority."/>
            <format maximum="100" minimum="0"/>
          </arg>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.proximityPlacementGroup" options="proximity-placement-group" group="Properties">
          <help short="Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01."/>
        </arg>
        <arg type="object" var="$parameters.properties.resiliencyPolicy" options="resiliency-policy" group="Properties">
          <help short="Policy for Resiliency"/>
          <arg type="object" var="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy" options="resilient-vm-creation-policy">
            <help short="The configuration parameters used while performing resilient VM creation."/>
            <arg type="boolean" var="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy.enabled" options="enabled">
              <help short="Specifies whether resilient VM creation should be enabled on the virtual machine scale set. The default value is false."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy" options="resilient-vm-deletion-policy">
            <help short="The configuration parameters used while performing resilient VM deletion."/>
            <arg type="boolean" var="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy.enabled" options="enabled">
              <help short="Specifies whether resilient VM deletion should be enabled on the virtual machine scale set. The default value is false."/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.scaleInPolicy" options="scale-in-policy" group="Properties">
          <help short="Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set."/>
          <arg type="boolean" var="$parameters.properties.scaleInPolicy.forceDeletion" options="force-deletion">
            <help short="This property allows you to specify if virtual machines chosen for removal have to be force deleted when a virtual machine scale set is being scaled-in.(Feature in Preview)"/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.scaleInPolicy.rules" options="rules">
            <help short="The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>"/>
            <item type="string">
              <enum>
                <item name="Default" value="&quot;Default&quot;"/>
                <item name="NewestVM" value="&quot;NewestVM&quot;"/>
                <item name="OldestVM" value="&quot;OldestVM&quot;"/>
              </enum>
            </item>
          </arg>
        </arg>
        <arg type="boolean" var="$parameters.properties.singlePlacementGroup" options="single-placement-group" group="Properties">
          <help short="When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true."/>
        </arg>
        <arg type="object" var="$parameters.properties.spotRestorePolicy" options="spot-restore-policy" group="Properties">
          <help short="Specifies the Spot Restore properties for the virtual machine scale set."/>
          <arg type="boolean" var="$parameters.properties.spotRestorePolicy.enabled" options="enabled">
            <help short="Enables the Spot-Try-Restore feature where evicted VMSS SPOT instances will be tried to be restored opportunistically based on capacity availability and pricing constraints"/>
          </arg>
          <arg type="string" var="$parameters.properties.spotRestorePolicy.restoreTimeout" options="restore-timeout">
            <help short="Timeout value expressed as an ISO 8601 time duration after which the platform will not try to restore the VMSS SPOT instances"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.upgradePolicy" options="upgrade-policy" group="Properties">
          <help short="The upgrade policy."/>
          <arg type="object" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy" options="automatic-os-upgrade-policy">
            <help short="Configuration parameters used for performing automatic OS Upgrade."/>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback" options="disable-automatic-rollback">
              <help short="Whether OS image rollback feature should be disabled. Default value is false."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade" options="enable-automatic-os-upgrade">
              <help short="Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.osRollingUpgradeDeferral" options="os-rolling-upgrade-deferral">
              <help short="Indicates whether Auto OS Upgrade should undergo deferral. Deferred OS upgrades will send advanced notifications on a per-VM basis that an OS upgrade from rolling upgrades is incoming, via the IMDS tag 'Platform.PendingOSUpgrade'. The upgrade then defers until the upgrade is approved via an ApproveRollingUpgrade call."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.useRollingUpgradePolicy" options="use-rolling-upgrade-policy">
              <help short="Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Default value is false. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS."/>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.upgradePolicy.mode" options="mode">
            <help short="Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time."/>
            <enum>
              <item name="Automatic" value="&quot;Automatic&quot;"/>
              <item name="Manual" value="&quot;Manual&quot;"/>
              <item name="Rolling" value="&quot;Rolling&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy" options="rolling-upgrade-policy">
            <help short="The configuration parameters used while performing a rolling upgrade."/>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.enableCrossZoneUpgrade" options="enable-cross-zone-upgrade">
              <help short="Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent" options="max-batch-instance-percent">
              <help short="The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%."/>
              <format maximum="100" minimum="5"/>
            </arg>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxSurge" options="max-surge">
              <help short="Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent" options="max-unhealthy-instance-percent">
              <help short="The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%."/>
              <format maximum="100" minimum="5"/>
            </arg>
            <arg type="integer32" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent" options="max-unhealthy-upgraded-instance-percent">
              <help short="The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%."/>
              <format maximum="100" minimum="0"/>
            </arg>
            <arg type="string" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches" options="pause-time-between-batches">
              <help short="The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S)."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.prioritizeUnhealthyInstances" options="prioritize-unhealthy-instances">
              <help short="Upgrade all unhealthy instances in a scale set before any healthy instances."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.rollbackFailedInstancesOnPolicyBreach" options="rollback-failed-instances-on-policy-breach">
              <help short="Rollback failed instances to previous model if the Rolling Upgrade policy is violated."/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.virtualMachineProfile" options="virtual-machine-profile" group="Properties">
          <help short="The virtual machine profile."/>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.applicationProfile" options="application-profile">
            <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
            <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications" options="gallery-applications">
              <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
              <item type="object">
                <arg type="string" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].configurationReference" options="configuration-reference">
                  <help short="Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].enableAutomaticUpgrade" options="enable-automatic-upgrade">
                  <help short="If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"/>
                </arg>
                <arg type="integer32" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].order" options="order">
                  <help short="Optional, Specifies the order in which the packages have to be installed"/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].packageReferenceId" options="package-reference-id" required="True">
                  <help short="Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].tags" options="tags">
                  <help short="Optional, Specifies a passthrough value for more generic context."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure" options="treat-failure-as-deployment-failure">
                  <help short="Optional, If true, any failure for any operation in the VmApplication will fail the deployment"/>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.billingProfile" options="billing-profile">
            <help short="Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01."/>
            <arg type="float64" var="$parameters.properties.virtualMachineProfile.billingProfile.maxPrice" options="max-price">
              <help short="Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 - indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.capacityReservation" options="capacity-reservation">
            <help short="Specifies the capacity reservation related details of a scale set. Minimum api-version: 2021-04-01."/>
            <arg type="@SubResource_create" var="$parameters.properties.virtualMachineProfile.capacityReservation.capacityReservationGroup" options="capacity-reservation-group">
              <help short="Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile" options="diagnostics-profile">
            <help short="Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15."/>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics" options="boot-diagnostics">
              <help short="Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."/>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled" options="enabled">
                <help short="Whether boot diagnostics should be enabled on the Virtual Machine."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri" options="storage-uri">
                <help short="Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."/>
              </arg>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.virtualMachineProfile.evictionPolicy" options="eviction-policy">
            <help short="Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview."/>
            <enum>
              <item name="Deallocate" value="&quot;Deallocate&quot;"/>
              <item name="Delete" value="&quot;Delete&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile" options="extension-profile">
            <help short="Specifies a collection of settings for extensions installed on virtual machines in the scale set."/>
            <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions" options="extensions">
              <help short="The virtual machine scale set child extension resources."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].name" options="name">
                  <help short="The name of the extension."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
                  <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="Properties">
                  <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.forceUpdateTag" options="force-update-tag" group="Properties">
                  <help short="If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettings" options="protected-settings" group="Properties">
                  <blank value="{}"/>
                  <help short="The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault" options="protected-settings-from-key-vault" group="Properties" cls="KeyVaultSecretReference_create">
                  <help short="The extensions protected settings that are passed by reference, and consumed from key vault"/>
                  <arg type="string" var="@KeyVaultSecretReference_create.secretUrl" options="secret-url" required="True">
                    <help short="The URL referencing a secret in a Key Vault."/>
                  </arg>
                  <arg type="@SubResource_create" var="@KeyVaultSecretReference_create.sourceVault" options="source-vault" required="True">
                    <help short="The relative URL of the Key Vault containing the secret."/>
                  </arg>
                </arg>
                <arg type="array<string>" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.provisionAfterExtensions" options="provision-after-extensions" group="Properties">
                  <help short="Collection of extension names after which this extension needs to be provisioned."/>
                  <item type="string"/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.publisher" options="publisher" group="Properties">
                  <help short="The name of the extension handler publisher."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.settings" options="settings" group="Properties">
                  <blank value="{}"/>
                  <help short="Json formatted public settings for the extension."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.suppressFailures" options="suppress-failures" group="Properties">
                  <help short="Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.type" options="type" group="Properties">
                  <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.typeHandlerVersion" options="type-handler-version" group="Properties">
                  <help short="Specifies the version of the script handler."/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensionsTimeBudget" options="extensions-time-budget">
              <help short="Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.hardwareProfile" options="hardware-profile">
            <help short="Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01."/>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties" options="vm-size-properties">
              <help short="Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."/>
              <arg type="integer32" var="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsAvailable" options="v-cp-us-available">
                <help short="Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list)."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsPerCore" options="v-cp-us-per-core">
                <help short="Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"/>
              </arg>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.virtualMachineProfile.licenseType" options="license-type">
            <help short="Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15"/>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.networkProfile" options="network-profile">
            <help short="Specifies properties of the network interfaces of the virtual machines in the scale set."/>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.healthProbe" options="health-probe" cls="ApiEntityReference_create">
              <help short="A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'."/>
              <arg type="string" var="@ApiEntityReference_create.id" options="id">
                <help short="The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkApiVersion" options="network-api-version">
              <help short="specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'"/>
              <enum>
                <item name="2020-11-01" value="&quot;2020-11-01&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
              <help short="The list of network configurations."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].name" options="name" required="True">
                  <help short="The network configuration name."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode" options="auxiliary-mode" group="Properties">
                  <help short="Specifies whether the Auxiliary mode is enabled for the Network Interface resource."/>
                  <enum>
                    <item name="AcceleratedConnections" value="&quot;AcceleratedConnections&quot;"/>
                    <item name="Floating" value="&quot;Floating&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku" options="auxiliary-sku" group="Properties">
                  <help short="Specifies whether the Auxiliary sku is enabled for the Network Interface resource."/>
                  <enum>
                    <item name="A1" value="&quot;A1&quot;"/>
                    <item name="A2" value="&quot;A2&quot;"/>
                    <item name="A4" value="&quot;A4&quot;"/>
                    <item name="A8" value="&quot;A8&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.deleteOption" options="delete-option" group="Properties">
                  <help short="Specify what happens to the network interface when the VM is deleted"/>
                  <enum>
                    <item name="Delete" value="&quot;Delete&quot;"/>
                    <item name="Detach" value="&quot;Detach&quot;"/>
                  </enum>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking" options="disable-tcp-state-tracking" group="Properties">
                  <help short="Specifies whether the network interface is disabled for tcp state tracking."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings" options="dns-settings" group="Properties">
                  <help short="The dns settings to be applied on the network interfaces."/>
                  <arg type="array<string>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers" options="dns-servers">
                    <help short="List of DNS servers IP addresses"/>
                    <item type="string"/>
                  </arg>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking" options="enable-accelerated-networking" group="Properties">
                  <help short="Specifies whether the network interface is accelerated networking-enabled."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableFpga" options="enable-fpga" group="Properties">
                  <help short="Specifies whether the network interface is FPGA networking-enabled."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                  <help short="Whether IP forwarding enabled on this NIC."/>
                </arg>
                <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                  <help short="Specifies the IP configurations of the network interface."/>
                  <item type="object">
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name" required="True">
                      <help short="The IP configuration name."/>
                    </arg>
                    <arg type="array<@SubResource_create>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                      <help short="Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway."/>
                      <item type="@SubResource_create"/>
                    </arg>
                    <arg type="array<@SubResource_create>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                      <help short="Specifies an array of references to application security group."/>
                      <item type="@SubResource_create"/>
                    </arg>
                    <arg type="array<@SubResource_create>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                      <help short="Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                      <item type="@SubResource_create"/>
                    </arg>
                    <arg type="array<@SubResource_create>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools" options="load-balancer-inbound-nat-pools" group="Properties">
                      <help short="Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                      <item type="@SubResource_create"/>
                    </arg>
                    <arg type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                      <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                      <help short="Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."/>
                      <enum>
                        <item name="IPv4" value="&quot;IPv4&quot;"/>
                        <item name="IPv6" value="&quot;IPv6&quot;"/>
                      </enum>
                    </arg>
                    <arg type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration" options="public-ip-address-configuration" group="Properties">
                      <help short="The publicIPAddressConfiguration."/>
                      <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" options="name" required="True">
                        <help short="The publicIP address configuration name."/>
                      </arg>
                      <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption" options="delete-option" group="Properties">
                        <help short="Specify what happens to the public IP when the VM is deleted"/>
                        <enum>
                          <item name="Delete" value="&quot;Delete&quot;"/>
                          <item name="Detach" value="&quot;Detach&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings" options="dns-settings" group="Properties">
                        <help short="The dns settings to be applied on the publicIP addresses ."/>
                        <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" options="domain-name-label" required="True">
                          <help short="The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                        </arg>
                        <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                          <help short="The Domain name label scope.The concatenation of the hashed domain name label that generated according to the policy from domain name label scope and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                          <enum>
                            <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                            <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                            <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                            <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg type="integer32" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                        <help short="The idle timeout of the public IP address."/>
                      </arg>
                      <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags" options="ip-tags" group="Properties">
                        <help short="The list of IP tags associated with the public IP address."/>
                        <item type="object">
                          <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType" options="ip-tag-type">
                            <help short="IP tag type. Example: FirstPartyUsage."/>
                          </arg>
                          <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag" options="tag">
                            <help short="IP tag associated with the public IP. Example: SQL, Storage etc."/>
                          </arg>
                        </item>
                      </arg>
                      <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
                        <help short="Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."/>
                        <enum>
                          <item name="IPv4" value="&quot;IPv4&quot;"/>
                          <item name="IPv6" value="&quot;IPv6&quot;"/>
                        </enum>
                      </arg>
                      <arg type="@SubResource_create" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties">
                        <help short="The PublicIPPrefix from which to allocate publicIP addresses."/>
                      </arg>
                      <arg type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku" options="sku">
                        <help short="Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."/>
                        <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name" options="name">
                          <help short="Specify public IP sku name"/>
                          <enum>
                            <item name="Basic" value="&quot;Basic&quot;"/>
                            <item name="Standard" value="&quot;Standard&quot;"/>
                          </enum>
                        </arg>
                        <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier" options="tier">
                          <help short="Specify public IP sku tier"/>
                          <enum>
                            <item name="Global" value="&quot;Global&quot;"/>
                            <item name="Regional" value="&quot;Regional&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                    </arg>
                    <arg type="@ApiEntityReference_create" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                      <help short="Specifies the identifier of the subnet."/>
                    </arg>
                  </item>
                </arg>
                <arg type="@SubResource_create" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup" options="network-security-group" group="Properties">
                  <help short="The network security group."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.primary" options="primary" group="Properties">
                  <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile" options="os-profile">
            <help short="Specifies the operating system settings for the virtual machines in the scale set."/>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.adminPassword" options="admin-password">
              <help short="Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;, &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;, &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;, &quot;Password22&quot;, &quot;iloveyou!&quot; <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"/>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.adminUsername" options="admin-username">
              <help short="Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in &quot;.&quot; <br><br> **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;, &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;, &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;, &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;, &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;, &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;, &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;, &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;, &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;, &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;, &quot;user4&quot;, &quot;user5&quot;. <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters"/>
            </arg>
            <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.allowExtensionOperations" options="allow-extension-operations">
              <help short="Specifies whether extension operations should be allowed on the virtual machine scale set. This may only be set to False when no extensions are present on the virtual machine scale set."/>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.computerNamePrefix" options="computer-name-prefix">
              <help short="Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long."/>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.customData" options="custom-data">
              <help short="Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)"/>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration" options="linux-configuration">
              <help short="Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."/>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication" options="disable-password-authentication">
                <help short="Specifies whether password authentication should be disabled."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                <help short="Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."/>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings" options="patch-settings">
                <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Linux."/>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                  <help short="Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                  <enum>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                  </enum>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                  <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."/>
                  <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                    <help short="Enables customer to schedule patching without accidental upgrades"/>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                    <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                    <enum>
                      <item name="Always" value="&quot;Always&quot;"/>
                      <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                      <item name="Never" value="&quot;Never&quot;"/>
                      <item name="Unknown" value="&quot;Unknown&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode" options="patch-mode">
                  <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"/>
                  <enum>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent" options="provision-vm-agent">
                <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh" options="ssh">
                <help short="Specifies the ssh key configuration for a Linux OS."/>
                <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys" options="public-keys">
                  <help short="The list of SSH public keys used to authenticate with linux based VMs."/>
                  <item type="object">
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].keyData" options="key-data">
                      <help short="SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].path" options="path">
                      <help short="Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"/>
                    </arg>
                  </item>
                </arg>
              </arg>
            </arg>
            <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.requireGuestProvisionSignal" options="require-guest-provision-signal">
              <help short="Optional property which must either be set to True or omitted."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.secrets" options="secrets">
              <help short="Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
              <item type="object">
                <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].sourceVault" options="source-vault" cls="SubResource_create">
                  <help short="The relative URL of the Key Vault containing all of the certificates in VaultCertificates."/>
                  <arg type="string" var="@SubResource_create.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
                <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates" options="vault-certificates">
                  <help short="The list of key vault references in SourceVault which contain certificates."/>
                  <item type="object">
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateStore" options="certificate-store">
                      <help short="For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateUrl" options="certificate-url">
                      <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                    </arg>
                  </item>
                </arg>
              </item>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration" options="windows-configuration">
              <help short="Specifies Windows operating system settings on the virtual machine."/>
              <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent" options="additional-unattend-content">
                <help short="Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."/>
                <item type="object">
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].componentName" options="component-name">
                    <help short="The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."/>
                    <enum>
                      <item name="Microsoft-Windows-Shell-Setup" value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].content" options="content">
                    <help short="Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].passName" options="pass-name">
                    <help short="The pass name. Currently, the only allowable value is OobeSystem."/>
                    <enum>
                      <item name="OobeSystem" value="&quot;OobeSystem&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].settingName" options="setting-name">
                    <help short="Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."/>
                    <enum>
                      <item name="AutoLogon" value="&quot;AutoLogon&quot;"/>
                      <item name="FirstLogonCommands" value="&quot;FirstLogonCommands&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates" options="enable-automatic-updates">
                <help short="Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                <help short="Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false."/>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings" options="patch-settings">
                <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Windows."/>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                  <help short="Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. "/>
                  <enum>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                  </enum>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                  <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."/>
                  <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                    <help short="Enables customer to schedule patching without accidental upgrades"/>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                    <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                    <enum>
                      <item name="Always" value="&quot;Always&quot;"/>
                      <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                      <item name="Never" value="&quot;Never&quot;"/>
                      <item name="Unknown" value="&quot;Unknown&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.enableHotpatching" options="enable-hotpatching">
                  <help short="Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.patchMode" options="patch-mode">
                  <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true "/>
                  <enum>
                    <item name="AutomaticByOS" value="&quot;AutomaticByOS&quot;"/>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="Manual" value="&quot;Manual&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent" options="provision-vm-agent">
                <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.timeZone" options="time-zone">
                <help short="Specifies the time zone of the virtual machine. e.g. &quot;Pacific Standard Time&quot;. Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."/>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM" options="win-rm">
                <help short="Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."/>
                <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners" options="listeners">
                  <help short="The list of Windows Remote Management listeners"/>
                  <item type="object">
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl" options="certificate-url">
                      <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].protocol" options="protocol">
                      <help short="Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"/>
                      <enum>
                        <item name="Http" value="&quot;Http&quot;"/>
                        <item name="Https" value="&quot;Https&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
              </arg>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.virtualMachineProfile.priority" options="priority">
            <help short="Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview."/>
            <enum>
              <item name="Low" value="&quot;Low&quot;"/>
              <item name="Regular" value="&quot;Regular&quot;"/>
              <item name="Spot" value="&quot;Spot&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile" options="scheduled-events-profile">
            <help short="Specifies Scheduled Event related configurations."/>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile" options="os-image-notification-profile">
              <help short="Specifies OS Image Scheduled Event related configurations."/>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.enable" options="enable">
                <help short="Specifies whether the OS Image Scheduled event is enabled or disabled."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                <help short="Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)"/>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile" options="terminate-notification-profile">
              <help short="Specifies Terminate Scheduled Event related configurations."/>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.enable" options="enable">
                <help short="Specifies whether the Terminate Scheduled event is enabled or disabled."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                <help short="Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"/>
              </arg>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference" options="security-posture-reference">
            <help short="Specifies the security posture to be used for all virtual machines in the scale set. Minimum api-version: 2023-03-01"/>
            <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions" options="exclude-extensions">
              <help short="List of virtual machine extensions to exclude when applying the Security Posture."/>
              <item type="object">
                <arg type="ResourceLocation" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].location" options="location l">
                  <help short="Resource location"/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
                  <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="Properties">
                  <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.forceUpdateTag" options="force-update-tag" group="Properties">
                  <help short="How the extension handler should be forced to update even if the extension configuration has not changed."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView" options="instance-view" group="Properties">
                  <help short="The virtual machine extension instance view."/>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.name" options="name">
                    <help short="The virtual machine extension name."/>
                  </arg>
                  <arg type="array<@InstanceViewStatus_create>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.statuses" options="statuses">
                    <help short="The resource status information."/>
                    <item type="@InstanceViewStatus_create"/>
                  </arg>
                  <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.substatuses" options="substatuses">
                    <help short="The resource status information."/>
                    <item type="object" cls="InstanceViewStatus_create">
                      <arg type="string" var="@InstanceViewStatus_create.code" options="code">
                        <help short="The status code."/>
                      </arg>
                      <arg type="string" var="@InstanceViewStatus_create.displayStatus" options="display-status">
                        <help short="The short localizable label for the status."/>
                      </arg>
                      <arg type="string" var="@InstanceViewStatus_create.level" options="level">
                        <help short="The level code."/>
                        <enum>
                          <item name="Error" value="&quot;Error&quot;"/>
                          <item name="Info" value="&quot;Info&quot;"/>
                          <item name="Warning" value="&quot;Warning&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@InstanceViewStatus_create.message" options="message">
                        <help short="The detailed status message, including for alerts and error messages."/>
                      </arg>
                      <arg type="dateTime" var="@InstanceViewStatus_create.time" options="time">
                        <help short="The time of the status."/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.type" options="type">
                    <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.typeHandlerVersion" options="type-handler-version">
                    <help short="Specifies the version of the script handler."/>
                  </arg>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettings" options="protected-settings" group="Properties">
                  <blank value="{}"/>
                  <help short="The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."/>
                </arg>
                <arg type="@KeyVaultSecretReference_create" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettingsFromKeyVault" options="protected-settings-from-key-vault" group="Properties">
                  <help short="The extensions protected settings that are passed by reference, and consumed from key vault"/>
                </arg>
                <arg type="array<string>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.provisionAfterExtensions" options="provision-after-extensions" group="Properties">
                  <help short="Collection of extension names after which this extension needs to be provisioned."/>
                  <item type="string"/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.publisher" options="publisher" group="Properties">
                  <help short="The name of the extension handler publisher."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.settings" options="settings" group="Properties">
                  <blank value="{}"/>
                  <help short="Json formatted public settings for the extension."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.suppressFailures" options="suppress-failures" group="Properties">
                  <help short="Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.type" options="type" group="Properties">
                  <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.typeHandlerVersion" options="type-handler-version" group="Properties">
                  <help short="Specifies the version of the script handler."/>
                </arg>
                <arg type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].tags" options="tags">
                  <help short="Resource tags"/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.id" options="id">
              <help short="The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest"/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.securityProfile" options="security-profile">
            <help short="Specifies the Security related profile settings for the virtual machines in the scale set."/>
            <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.encryptionAtHost" options="encryption-at-host">
              <help short="This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."/>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity" options="encryption-identity">
              <help short="Specifies the Managed Identity used by ADE to get access token for keyvault operations."/>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
                <help short="Specifies ARM Resource ID of one of the user identities associated with the VM."/>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings" options="proxy-agent-settings">
              <help short="Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."/>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.enabled" options="enabled">
                <help short="Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.keyIncarnationId" options="key-incarnation-id">
                <help short="Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.mode" options="mode">
                <help short="Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."/>
                <enum>
                  <item name="Audit" value="&quot;Audit&quot;"/>
                  <item name="Enforce" value="&quot;Enforce&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.securityProfile.securityType" options="security-type">
              <help short="Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."/>
              <enum>
                <item name="ConfidentialVM" value="&quot;ConfidentialVM&quot;"/>
                <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings" options="uefi-settings">
              <help short="Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."/>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled" options="secure-boot-enabled">
                <help short="Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled" options="v-tpm-enabled">
                <help short="Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
              </arg>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.serviceArtifactReference" options="service-artifact-reference">
            <help short="Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. Minimum api-version: 2022-11-01"/>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.serviceArtifactReference.id" options="id">
              <help short="The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.virtualMachineProfile.storageProfile" options="storage-profile">
            <help short="Specifies the storage settings for the virtual machine disks."/>
            <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks" options="data-disks">
              <help short="Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].caching" options="caching">
                  <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                  <enum>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                    <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].createOption" options="create-option" required="True">
                  <help short="The create option."/>
                  <enum>
                    <item name="Attach" value="&quot;Attach&quot;"/>
                    <item name="Empty" value="&quot;Empty&quot;"/>
                    <item name="FromImage" value="&quot;FromImage&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].deleteOption" options="delete-option">
                  <help short="Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**."/>
                  <enum>
                    <item name="Delete" value="&quot;Delete&quot;"/>
                    <item name="Detach" value="&quot;Detach&quot;"/>
                  </enum>
                </arg>
                <arg type="integer64" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskIOPSReadWrite" options="disk-iops-read-write">
                  <help short="Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                </arg>
                <arg type="integer64" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskMBpsReadWrite" options="disk-m-bps-read-write">
                  <help short="Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                </arg>
                <arg type="integer32" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskSizeGB" options="disk-size-gb">
                  <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
                </arg>
                <arg type="integer32" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].lun" options="lun" required="True">
                  <help short="Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."/>
                </arg>
                <arg type="@VirtualMachineScaleSetManagedDiskParameters_create" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].managedDisk" options="managed-disk">
                  <help short="The managed disk parameters."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].name" options="name">
                  <help short="The disk name."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].writeAcceleratorEnabled" options="write-accelerator-enabled">
                  <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.diskControllerType" options="disk-controller-type"/>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference" options="image-reference">
              <help short="Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."/>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.communityGalleryImageId" options="community-gallery-image-id">
                <help short="Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.id" options="id">
                <help short="Resource Id"/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.offer" options="offer">
                <help short="Specifies the offer of the platform image or marketplace image used to create the virtual machine."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.publisher" options="publisher">
                <help short="The image publisher."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sharedGalleryImageId" options="shared-gallery-image-id">
                <help short="Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sku" options="sku">
                <help short="The image SKU."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.version" options="version">
                <help short="Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."/>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk" options="os-disk">
              <help short="Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.caching" options="caching">
                <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                <enum>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                  <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.createOption" options="create-option" required="True">
                <help short="Specifies how the virtual machines in the scale set should be created. The only allowed value is: **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described."/>
                <enum>
                  <item name="Attach" value="&quot;Attach&quot;"/>
                  <item name="Empty" value="&quot;Empty&quot;"/>
                  <item name="FromImage" value="&quot;FromImage&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.deleteOption" options="delete-option">
                <help short="Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk."/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings" options="diff-disk-settings">
                <help short="Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set."/>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option" options="option">
                  <help short="Specifies the ephemeral disk settings for operating system disk."/>
                  <enum>
                    <item name="Local" value="&quot;Local&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.placement" options="placement">
                  <help short="Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk."/>
                  <enum>
                    <item name="CacheDisk" value="&quot;CacheDisk&quot;"/>
                    <item name="ResourceDisk" value="&quot;ResourceDisk&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="integer32" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diskSizeGB" options="disk-size-gb">
                <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image" options="image">
                <help short="Specifies information about the unmanaged user image to base the scale set on."/>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image.uri" options="uri">
                  <help short="Specifies the virtual hard disk's uri."/>
                </arg>
              </arg>
              <arg type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.managedDisk" options="managed-disk" cls="VirtualMachineScaleSetManagedDiskParameters_create">
                <help short="The managed disk parameters."/>
                <arg type="object" var="@VirtualMachineScaleSetManagedDiskParameters_create.diskEncryptionSet" options="disk-encryption-set" cls="DiskEncryptionSetParameters_create">
                  <help short="Specifies the customer managed disk encryption set resource id for the managed disk."/>
                  <arg type="string" var="@DiskEncryptionSetParameters_create.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
                <arg type="object" var="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile" options="security-profile">
                  <help short="Specifies the security profile for the managed disk."/>
                  <arg type="@DiskEncryptionSetParameters_create" var="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.diskEncryptionSet" options="disk-encryption-set">
                    <help short="Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."/>
                  </arg>
                  <arg type="string" var="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.securityEncryptionType" options="security-encryption-type">
                    <help short="Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. **Note:** It can be set for only Confidential VMs."/>
                    <enum>
                      <item name="DiskWithVMGuestState" value="&quot;DiskWithVMGuestState&quot;"/>
                      <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                      <item name="VMGuestStateOnly" value="&quot;VMGuestStateOnly&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="string" var="@VirtualMachineScaleSetManagedDiskParameters_create.storageAccountType" options="storage-account-type">
                  <help short="Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."/>
                  <enum>
                    <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                    <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                    <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
                    <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                    <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
                    <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                    <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.name" options="name">
                <help short="The disk name."/>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.osType" options="os-type">
                <help short="This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"/>
                <enum>
                  <item name="Linux" value="&quot;Linux&quot;"/>
                  <item name="Windows" value="&quot;Windows&quot;"/>
                </enum>
              </arg>
              <arg type="array<string>" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.vhdContainers" options="vhd-containers">
                <help short="Specifies the container urls that are used to store operating system disks for the scale set."/>
                <item type="string"/>
              </arg>
              <arg type="boolean" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled" options="write-accelerator-enabled">
                <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
              </arg>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.virtualMachineProfile.userData" options="user-data">
            <help short="UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."/>
          </arg>
        </arg>
        <arg type="boolean" var="$parameters.properties.zoneBalance" options="zone-balance" group="Properties">
          <help short="Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineScaleSets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmScaleSetName" arg="$Path.vmScaleSetName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$parameters.extendedLocation">
                    <prop type="string" name="name" arg="$parameters.extendedLocation.name"/>
                    <prop type="string" name="type" arg="$parameters.extendedLocation.type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="IdentityObject" name="identity" arg="$parameters.identity">
                    <prop type="string" name="type" arg="$parameters.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="plan" arg="$parameters.plan">
                    <prop type="string" name="name" arg="$parameters.plan.name"/>
                    <prop type="string" name="product" arg="$parameters.plan.product"/>
                    <prop type="string" name="promotionCode" arg="$parameters.plan.promotionCode"/>
                    <prop type="string" name="publisher" arg="$parameters.plan.publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities" arg="$parameters.properties.additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled" arg="$parameters.properties.additionalCapabilities.hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled" arg="$parameters.properties.additionalCapabilities.ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="automaticRepairsPolicy" arg="$parameters.properties.automaticRepairsPolicy">
                      <prop type="boolean" name="enabled" arg="$parameters.properties.automaticRepairsPolicy.enabled"/>
                      <prop type="string" name="gracePeriod" arg="$parameters.properties.automaticRepairsPolicy.gracePeriod"/>
                      <prop type="string" name="repairAction" arg="$parameters.properties.automaticRepairsPolicy.repairAction">
                        <enum>
                          <item value="&quot;Reimage&quot;"/>
                          <item value="&quot;Replace&quot;"/>
                          <item value="&quot;Restart&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="constrainedMaximumCapacity" arg="$parameters.properties.constrainedMaximumCapacity"/>
                    <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs" arg="$parameters.properties.doNotRunExtensionsOnOverprovisionedVMs"/>
                    <prop type="@SubResource_create" name="hostGroup" arg="$parameters.properties.hostGroup"/>
                    <prop type="string" name="orchestrationMode" arg="$parameters.properties.orchestrationMode">
                      <enum>
                        <item value="&quot;Flexible&quot;"/>
                        <item value="&quot;Uniform&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="overprovision" arg="$parameters.properties.overprovision"/>
                    <prop type="integer32" name="platformFaultDomainCount" arg="$parameters.properties.platformFaultDomainCount"/>
                    <prop type="object" name="priorityMixPolicy" arg="$parameters.properties.priorityMixPolicy">
                      <prop type="integer32" name="baseRegularPriorityCount" arg="$parameters.properties.priorityMixPolicy.baseRegularPriorityCount">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="regularPriorityPercentageAboveBase" arg="$parameters.properties.priorityMixPolicy.regularPriorityPercentageAboveBase">
                        <format maximum="100" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="@SubResource_create" name="proximityPlacementGroup" arg="$parameters.properties.proximityPlacementGroup"/>
                    <prop type="object" name="resiliencyPolicy" arg="$parameters.properties.resiliencyPolicy">
                      <prop type="object" name="resilientVMCreationPolicy" arg="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy">
                        <prop type="boolean" name="enabled" arg="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy.enabled"/>
                      </prop>
                      <prop type="object" name="resilientVMDeletionPolicy" arg="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy">
                        <prop type="boolean" name="enabled" arg="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy.enabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scaleInPolicy" arg="$parameters.properties.scaleInPolicy">
                      <prop type="boolean" name="forceDeletion" arg="$parameters.properties.scaleInPolicy.forceDeletion"/>
                      <prop type="array<string>" name="rules" arg="$parameters.properties.scaleInPolicy.rules">
                        <item type="string">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;NewestVM&quot;"/>
                            <item value="&quot;OldestVM&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="boolean" name="singlePlacementGroup" arg="$parameters.properties.singlePlacementGroup"/>
                    <prop type="object" name="spotRestorePolicy" arg="$parameters.properties.spotRestorePolicy">
                      <prop type="boolean" name="enabled" arg="$parameters.properties.spotRestorePolicy.enabled"/>
                      <prop type="string" name="restoreTimeout" arg="$parameters.properties.spotRestorePolicy.restoreTimeout"/>
                    </prop>
                    <prop type="object" name="upgradePolicy" arg="$parameters.properties.upgradePolicy">
                      <prop type="object" name="automaticOSUpgradePolicy" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy">
                        <prop type="boolean" name="disableAutomaticRollback" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback"/>
                        <prop type="boolean" name="enableAutomaticOSUpgrade" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade"/>
                        <prop type="boolean" name="osRollingUpgradeDeferral" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.osRollingUpgradeDeferral"/>
                        <prop type="boolean" name="useRollingUpgradePolicy" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.useRollingUpgradePolicy"/>
                      </prop>
                      <prop type="string" name="mode" arg="$parameters.properties.upgradePolicy.mode">
                        <enum>
                          <item value="&quot;Automatic&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="rollingUpgradePolicy" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy">
                        <prop type="boolean" name="enableCrossZoneUpgrade" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.enableCrossZoneUpgrade"/>
                        <prop type="integer32" name="maxBatchInstancePercent" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="boolean" name="maxSurge" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxSurge"/>
                        <prop type="integer32" name="maxUnhealthyInstancePercent" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent">
                          <format maximum="100" minimum="0"/>
                        </prop>
                        <prop type="string" name="pauseTimeBetweenBatches" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches"/>
                        <prop type="boolean" name="prioritizeUnhealthyInstances" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.prioritizeUnhealthyInstances"/>
                        <prop type="boolean" name="rollbackFailedInstancesOnPolicyBreach" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.rollbackFailedInstancesOnPolicyBreach"/>
                      </prop>
                    </prop>
                    <prop type="object" name="virtualMachineProfile" arg="$parameters.properties.virtualMachineProfile">
                      <prop type="object" name="applicationProfile" arg="$parameters.properties.virtualMachineProfile.applicationProfile">
                        <prop type="array<object>" name="galleryApplications" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].order"/>
                            <prop type="string" name="packageReferenceId" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].packageReferenceId" required="True"/>
                            <prop type="string" name="tags" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="billingProfile" arg="$parameters.properties.virtualMachineProfile.billingProfile">
                        <prop type="float64" name="maxPrice" arg="$parameters.properties.virtualMachineProfile.billingProfile.maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation" arg="$parameters.properties.virtualMachineProfile.capacityReservation">
                        <prop type="@SubResource_create" name="capacityReservationGroup" arg="$parameters.properties.virtualMachineProfile.capacityReservation.capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics">
                          <prop type="boolean" name="enabled" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled"/>
                          <prop type="string" name="storageUri" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy" arg="$parameters.properties.virtualMachineProfile.evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="extensionProfile" arg="$parameters.properties.virtualMachineProfile.extensionProfile">
                        <prop type="array<object>" name="extensions" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions">
                          <item type="object">
                            <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.forceUpdateTag"/>
                              <prop type="object" name="protectedSettings" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettings"/>
                              <prop type="object" name="protectedSettingsFromKeyVault" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault" cls="KeyVaultSecretReference_create">
                                <prop type="string" name="secretUrl" arg="@KeyVaultSecretReference_create.secretUrl" required="True"/>
                                <prop type="@SubResource_create" name="sourceVault" arg="@KeyVaultSecretReference_create.sourceVault" required="True"/>
                              </prop>
                              <prop type="array<string>" name="provisionAfterExtensions" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="publisher" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.publisher"/>
                              <prop type="object" name="settings" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.settings"/>
                              <prop type="boolean" name="suppressFailures" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.suppressFailures"/>
                              <prop type="string" name="type" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.type"/>
                              <prop type="string" name="typeHandlerVersion" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.typeHandlerVersion"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="extensionsTimeBudget" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensionsTimeBudget"/>
                      </prop>
                      <prop type="object" name="hardwareProfile" arg="$parameters.properties.virtualMachineProfile.hardwareProfile">
                        <prop type="object" name="vmSizeProperties" arg="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable" arg="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore" arg="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType" arg="$parameters.properties.virtualMachineProfile.licenseType"/>
                      <prop type="object" name="networkProfile" arg="$parameters.properties.virtualMachineProfile.networkProfile">
                        <prop type="object" name="healthProbe" arg="$parameters.properties.virtualMachineProfile.networkProfile.healthProbe" cls="ApiEntityReference_create">
                          <prop type="string" name="id" arg="@ApiEntityReference_create.id"/>
                        </prop>
                        <prop type="string" name="networkApiVersion" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations">
                          <item type="object">
                            <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings">
                                <prop type="array<string>" name="dnsServers" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="boolean" name="enableAcceleratedNetworking" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_create>" name="applicationGatewayBackendAddressPools" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_create"/>
                                    </prop>
                                    <prop type="array<@SubResource_create>" name="applicationSecurityGroups" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups">
                                      <item type="@SubResource_create"/>
                                    </prop>
                                    <prop type="array<@SubResource_create>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools">
                                      <item type="@SubResource_create"/>
                                    </prop>
                                    <prop type="array<@SubResource_create>" name="loadBalancerInboundNatPools" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools">
                                      <item type="@SubResource_create"/>
                                    </prop>
                                    <prop type="boolean" name="primary" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                                    <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration">
                                      <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings">
                                          <prop type="string" name="domainNameLabel" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"/>
                                            <prop type="string" name="tag" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_create" name="publicIPPrefix" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku">
                                        <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@ApiEntityReference_create" name="subnet" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_create" name="networkSecurityGroup" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"/>
                              <prop type="boolean" name="primary" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile" arg="$parameters.properties.virtualMachineProfile.osProfile">
                        <prop type="string" name="adminPassword" arg="$parameters.properties.virtualMachineProfile.osProfile.adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername" arg="$parameters.properties.virtualMachineProfile.osProfile.adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations" arg="$parameters.properties.virtualMachineProfile.osProfile.allowExtensionOperations"/>
                        <prop type="string" name="computerNamePrefix" arg="$parameters.properties.virtualMachineProfile.osProfile.computerNamePrefix"/>
                        <prop type="string" name="customData" arg="$parameters.properties.virtualMachineProfile.osProfile.customData"/>
                        <prop type="object" name="linuxConfiguration" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings">
                            <prop type="string" name="assessmentMode" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent"/>
                          <prop type="object" name="ssh" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh">
                            <prop type="array<object>" name="publicKeys" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"/>
                                <prop type="string" name="path" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal" arg="$parameters.properties.virtualMachineProfile.osProfile.requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets">
                          <item type="object">
                            <prop type="object" name="sourceVault" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].sourceVault" cls="SubResource_create">
                              <prop type="string" name="id" arg="@SubResource_create.id"/>
                            </prop>
                            <prop type="array<object>" name="vaultCertificates" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateStore"/>
                                <prop type="string" name="certificateUrl" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].content"/>
                              <prop type="string" name="passName" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings">
                            <prop type="string" name="assessmentMode" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.enableHotpatching"/>
                            <prop type="string" name="patchMode" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent"/>
                          <prop type="string" name="timeZone" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.timeZone"/>
                          <prop type="object" name="winRM" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM">
                            <prop type="array<object>" name="listeners" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"/>
                                <prop type="string" name="protocol" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="priority" arg="$parameters.properties.virtualMachineProfile.priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile">
                          <prop type="boolean" name="enable" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.enable"/>
                          <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile">
                          <prop type="boolean" name="enable" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.enable"/>
                          <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityPostureReference" arg="$parameters.properties.virtualMachineProfile.securityPostureReference">
                        <prop type="array<object>" name="excludeExtensions" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions">
                          <item type="object">
                            <prop type="ResourceLocation" name="location" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].location"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.forceUpdateTag"/>
                              <prop type="object" name="instanceView" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView">
                                <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.name"/>
                                <prop type="array<@InstanceViewStatus_create>" name="statuses" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.statuses">
                                  <item type="@InstanceViewStatus_create"/>
                                </prop>
                                <prop type="array<object>" name="substatuses" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.substatuses">
                                  <item type="object" cls="InstanceViewStatus_create">
                                    <prop type="string" name="code" arg="@InstanceViewStatus_create.code"/>
                                    <prop type="string" name="displayStatus" arg="@InstanceViewStatus_create.displayStatus"/>
                                    <prop type="string" name="level" arg="@InstanceViewStatus_create.level">
                                      <enum>
                                        <item value="&quot;Error&quot;"/>
                                        <item value="&quot;Info&quot;"/>
                                        <item value="&quot;Warning&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="message" arg="@InstanceViewStatus_create.message"/>
                                    <prop type="dateTime" name="time" arg="@InstanceViewStatus_create.time"/>
                                  </item>
                                </prop>
                                <prop type="string" name="type" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.type"/>
                                <prop type="string" name="typeHandlerVersion" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.typeHandlerVersion"/>
                              </prop>
                              <prop type="object" name="protectedSettings" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettings"/>
                              <prop type="@KeyVaultSecretReference_create" name="protectedSettingsFromKeyVault" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettingsFromKeyVault"/>
                              <prop type="array<string>" name="provisionAfterExtensions" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="publisher" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.publisher"/>
                              <prop type="object" name="settings" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.settings"/>
                              <prop type="boolean" name="suppressFailures" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.suppressFailures"/>
                              <prop type="string" name="type" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.type"/>
                              <prop type="string" name="typeHandlerVersion" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.typeHandlerVersion"/>
                            </prop>
                            <prop type="object" name="tags" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="id" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.id"/>
                      </prop>
                      <prop type="object" name="securityProfile" arg="$parameters.properties.virtualMachineProfile.securityProfile">
                        <prop type="boolean" name="encryptionAtHost" arg="$parameters.properties.virtualMachineProfile.securityProfile.encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity" arg="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId" arg="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings">
                          <prop type="boolean" name="enabled" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.enabled"/>
                          <prop type="integer32" name="keyIncarnationId" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.keyIncarnationId"/>
                          <prop type="string" name="mode" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType" arg="$parameters.properties.virtualMachineProfile.securityProfile.securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings" arg="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings">
                          <prop type="boolean" name="secureBootEnabled" arg="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled" arg="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="serviceArtifactReference" arg="$parameters.properties.virtualMachineProfile.serviceArtifactReference">
                        <prop type="string" name="id" arg="$parameters.properties.virtualMachineProfile.serviceArtifactReference.id"/>
                      </prop>
                      <prop type="object" name="storageProfile" arg="$parameters.properties.virtualMachineProfile.storageProfile">
                        <prop type="array<object>" name="dataDisks" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks" identifiers="name lun">
                          <item type="object">
                            <prop type="string" name="caching" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer64" name="diskIOPSReadWrite" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskIOPSReadWrite"/>
                            <prop type="integer64" name="diskMBpsReadWrite" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskSizeGB"/>
                            <prop type="integer32" name="lun" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].lun" required="True"/>
                            <prop type="@VirtualMachineScaleSetManagedDiskParameters_create" name="managedDisk" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].managedDisk"/>
                            <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].name"/>
                            <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType" arg="$parameters.properties.virtualMachineProfile.storageProfile.diskControllerType"/>
                        <prop type="object" name="imageReference" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference">
                          <prop type="string" name="communityGalleryImageId" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.communityGalleryImageId"/>
                          <prop type="string" name="id" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.id"/>
                          <prop type="string" name="offer" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.offer"/>
                          <prop type="string" name="publisher" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.publisher"/>
                          <prop type="string" name="sharedGalleryImageId" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sharedGalleryImageId"/>
                          <prop type="string" name="sku" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sku"/>
                          <prop type="string" name="version" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.version"/>
                        </prop>
                        <prop type="object" name="osDisk" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk">
                          <prop type="string" name="caching" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings">
                            <prop type="string" name="option" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diskSizeGB"/>
                          <prop type="object" name="image" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image">
                            <prop type="string" name="uri" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image.uri"/>
                          </prop>
                          <prop type="object" name="managedDisk" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_create">
                            <prop type="object" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_create.diskEncryptionSet" cls="DiskEncryptionSetParameters_create">
                              <prop type="string" name="id" arg="@DiskEncryptionSetParameters_create.id"/>
                            </prop>
                            <prop type="object" name="securityProfile" arg="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile">
                              <prop type="@DiskEncryptionSetParameters_create" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType" arg="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType" arg="@VirtualMachineScaleSetManagedDiskParameters_create.storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.name"/>
                          <prop type="string" name="osType" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="vhdContainers" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.vhdContainers">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop type="string" name="userData" arg="$parameters.properties.virtualMachineProfile.userData"/>
                    </prop>
                    <prop type="boolean" name="zoneBalance" arg="$parameters.properties.zoneBalance"/>
                  </prop>
                  <prop type="object" name="sku" arg="$parameters.sku">
                    <prop type="integer64" name="capacity" arg="$parameters.sku.capacity"/>
                    <prop type="string" name="name" arg="$parameters.sku.name"/>
                    <prop type="string" name="tier" arg="$parameters.sku.tier"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$parameters.zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name"/>
                    <prop type="string" name="product"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="automaticRepairsPolicy">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="gracePeriod"/>
                      <prop type="string" name="repairAction">
                        <enum>
                          <item value="&quot;Reimage&quot;"/>
                          <item value="&quot;Replace&quot;"/>
                          <item value="&quot;Restart&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="constrainedMaximumCapacity"/>
                    <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs"/>
                    <prop type="@SubResource_read" name="hostGroup"/>
                    <prop type="string" name="orchestrationMode">
                      <enum>
                        <item value="&quot;Flexible&quot;"/>
                        <item value="&quot;Uniform&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="overprovision"/>
                    <prop type="integer32" name="platformFaultDomainCount"/>
                    <prop type="object" name="priorityMixPolicy">
                      <prop type="integer32" name="baseRegularPriorityCount">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="regularPriorityPercentageAboveBase">
                        <format maximum="100" minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                    <prop type="object" name="resiliencyPolicy">
                      <prop type="object" name="resilientVMCreationPolicy">
                        <prop type="boolean" name="enabled"/>
                      </prop>
                      <prop type="object" name="resilientVMDeletionPolicy">
                        <prop type="boolean" name="enabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scaleInPolicy">
                      <prop type="boolean" name="forceDeletion"/>
                      <prop type="array<string>" name="rules">
                        <item type="string">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;NewestVM&quot;"/>
                            <item value="&quot;OldestVM&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="boolean" name="singlePlacementGroup"/>
                    <prop type="object" name="spotRestorePolicy">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="restoreTimeout"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                    <prop type="object" name="upgradePolicy">
                      <prop type="object" name="automaticOSUpgradePolicy">
                        <prop type="boolean" name="disableAutomaticRollback"/>
                        <prop type="boolean" name="enableAutomaticOSUpgrade"/>
                        <prop type="boolean" name="osRollingUpgradeDeferral"/>
                        <prop type="boolean" name="useRollingUpgradePolicy"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Automatic&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="rollingUpgradePolicy">
                        <prop type="boolean" name="enableCrossZoneUpgrade"/>
                        <prop type="integer32" name="maxBatchInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="boolean" name="maxSurge"/>
                        <prop type="integer32" name="maxUnhealthyInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent">
                          <format maximum="100" minimum="0"/>
                        </prop>
                        <prop type="string" name="pauseTimeBetweenBatches"/>
                        <prop type="boolean" name="prioritizeUnhealthyInstances"/>
                        <prop type="boolean" name="rollbackFailedInstancesOnPolicyBreach"/>
                      </prop>
                    </prop>
                    <prop type="object" name="virtualMachineProfile">
                      <prop type="object" name="applicationProfile">
                        <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order"/>
                            <prop type="string" name="packageReferenceId" required="True"/>
                            <prop type="string" name="tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="billingProfile">
                        <prop type="float64" name="maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation">
                        <prop type="@SubResource_read" name="capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="extensionProfile">
                        <prop type="array<object>" name="extensions">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag"/>
                              <prop type="object" name="protectedSettings"/>
                              <prop type="object" name="protectedSettingsFromKeyVault" cls="KeyVaultSecretReference_read">
                                <prop type="string" name="secretUrl" required="True"/>
                                <prop type="@SubResource_read" name="sourceVault" required="True"/>
                              </prop>
                              <prop type="array<string>" name="provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState"/>
                              <prop type="string" name="publisher"/>
                              <prop type="object" name="settings"/>
                              <prop type="boolean" name="suppressFailures"/>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="string" name="extensionsTimeBudget"/>
                      </prop>
                      <prop type="object" name="hardwareProfile">
                        <prop type="object" name="vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType"/>
                      <prop type="object" name="networkProfile">
                        <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="string" name="networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings">
                                <prop type="array<string>" name="dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="boolean" name="enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="boolean" name="primary"/>
                                    <prop type="string" name="privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration">
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType"/>
                                            <prop type="string" name="tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_read" name="publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku">
                                        <prop type="string" name="name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@ApiEntityReference_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="networkSecurityGroup"/>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile">
                        <prop type="string" name="adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations"/>
                        <prop type="string" name="computerNamePrefix"/>
                        <prop type="string" name="customData"/>
                        <prop type="object" name="linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                                <prop type="string" name="path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets">
                          <item type="object">
                            <prop type="object" name="sourceVault" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore"/>
                                <prop type="string" name="certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching"/>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="string" name="timeZone"/>
                          <prop type="object" name="winRM">
                            <prop type="array<object>" name="listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityPostureReference">
                        <prop type="array<object>" name="excludeExtensions">
                          <item type="object">
                            <prop readOnly="True" type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location"/>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag"/>
                              <prop type="object" name="instanceView">
                                <prop type="string" name="name"/>
                                <prop type="array<@InstanceViewStatus_read>" name="statuses">
                                  <item type="@InstanceViewStatus_read"/>
                                </prop>
                                <prop type="array<object>" name="substatuses">
                                  <item type="object" cls="InstanceViewStatus_read">
                                    <prop type="string" name="code"/>
                                    <prop type="string" name="displayStatus"/>
                                    <prop type="string" name="level">
                                      <enum>
                                        <item value="&quot;Error&quot;"/>
                                        <item value="&quot;Info&quot;"/>
                                        <item value="&quot;Warning&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="message"/>
                                    <prop type="dateTime" name="time"/>
                                  </item>
                                </prop>
                                <prop type="string" name="type"/>
                                <prop type="string" name="typeHandlerVersion"/>
                              </prop>
                              <prop type="object" name="protectedSettings"/>
                              <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                              <prop type="array<string>" name="provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState"/>
                              <prop type="string" name="publisher"/>
                              <prop type="object" name="settings"/>
                              <prop type="boolean" name="suppressFailures"/>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="securityProfile">
                        <prop type="boolean" name="encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings">
                          <prop type="boolean" name="enabled"/>
                          <prop type="integer32" name="keyIncarnationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings">
                          <prop type="boolean" name="secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="serviceArtifactReference">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="storageProfile">
                        <prop type="array<object>" name="dataDisks" identifiers="name lun">
                          <item type="object">
                            <prop type="string" name="caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer64" name="diskIOPSReadWrite"/>
                            <prop type="integer64" name="diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop type="integer32" name="lun" required="True"/>
                            <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                            <prop type="string" name="name"/>
                            <prop type="boolean" name="writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType"/>
                        <prop type="object" name="imageReference">
                          <prop type="string" name="communityGalleryImageId"/>
                          <prop readOnly="True" type="string" name="exactVersion"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="offer"/>
                          <prop type="string" name="publisher"/>
                          <prop type="string" name="sharedGalleryImageId"/>
                          <prop type="string" name="sku"/>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="object" name="osDisk">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings">
                            <prop type="string" name="option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="object" name="image">
                            <prop type="string" name="uri"/>
                          </prop>
                          <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                            <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="object" name="securityProfile">
                              <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="vhdContainers">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      <prop type="string" name="userData"/>
                    </prop>
                    <prop type="boolean" name="zoneBalance"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer64" name="capacity"/>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match">
          <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmScaleSetName" options="vm-scale-set-name name n" required="True" idPart="name">
          <help short="The name of the VM scale set."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.extendedLocation" options="extended-location" group="Parameters">
          <help short="The extended location of the Virtual Machine Scale Set."/>
          <arg nullable="True" type="string" var="$parameters.extendedLocation.name" options="name">
            <help short="The name of the extended location."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.extendedLocation.type" options="type">
            <help short="The type of the extended location."/>
            <enum>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.identity" options="identity" group="Parameters">
          <help short="The identity of the virtual machine scale set, if configured."/>
          <arg nullable="True" type="string" var="$parameters.identity.type" options="type">
            <help short="The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.plan" options="plan" group="Parameters">
          <help short="Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**."/>
          <arg nullable="True" type="string" var="$parameters.plan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.plan.product" options="product">
            <help short="Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.plan.promotionCode" options="promotion-code">
            <help short="The promotion code."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.plan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.sku" options="sku" group="Parameters">
          <help short="The virtual machine scale set sku."/>
          <arg nullable="True" type="integer64" var="$parameters.sku.capacity" options="capacity">
            <help short="Specifies the number of virtual machines in the scale set."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.name" options="name">
            <help short="The sku name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.tier" options="tier">
            <help short="Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.zones" options="zones" group="Parameters">
          <help short="The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set"/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$parameters.properties.additionalCapabilities" options="additional-capabilities" group="Properties">
          <help short="Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.additionalCapabilities.hibernationEnabled" options="hibernation-enabled">
            <help short="The flag that enables or disables hibernation capability on the VM."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.additionalCapabilities.ultraSSDEnabled" options="ultra-ssd-enabled">
            <help short="The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.automaticRepairsPolicy" options="automatic-repairs-policy" group="Properties">
          <help short="Policy for automatic repairs."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.automaticRepairsPolicy.enabled" options="enabled">
            <help short="Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.automaticRepairsPolicy.gracePeriod" options="grace-period">
            <help short="The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 10 minutes (PT10M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M)."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.automaticRepairsPolicy.repairAction" options="repair-action">
            <help short="Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace."/>
            <enum>
              <item name="Reimage" value="&quot;Reimage&quot;"/>
              <item name="Replace" value="&quot;Replace&quot;"/>
              <item name="Restart" value="&quot;Restart&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.constrainedMaximumCapacity" options="constrained-maximum-capacity" group="Properties">
          <help short="Optional property which must either be set to True or omitted."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.doNotRunExtensionsOnOverprovisionedVMs" options="do-not-run-extensions-on-overprovisioned-v-ms" group="Properties">
          <help short="When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs."/>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.hostGroup" options="host-group" group="Properties">
          <help short="Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.orchestrationMode" options="orchestration-mode" group="Properties">
          <help short="Specifies the orchestration mode for the virtual machine scale set."/>
          <enum>
            <item name="Flexible" value="&quot;Flexible&quot;"/>
            <item name="Uniform" value="&quot;Uniform&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.overprovision" options="overprovision" group="Properties">
          <help short="Specifies whether the Virtual Machine Scale Set should be overprovisioned."/>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.platformFaultDomainCount" options="platform-fault-domain-count" group="Properties">
          <help short="Fault Domain count for each placement group."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.priorityMixPolicy" options="priority-mix-policy" group="Properties">
          <help short="Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance."/>
          <arg nullable="True" type="integer32" var="$parameters.properties.priorityMixPolicy.baseRegularPriorityCount" options="base-regular-priority-count">
            <help short="The base number of regular priority VMs that will be created in this scale set as it scales out."/>
            <format minimum="0"/>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.priorityMixPolicy.regularPriorityPercentageAboveBase" options="regular-priority-percentage-above-base">
            <help short="The percentage of VM instances, after the base regular priority count has been reached, that are expected to use regular priority."/>
            <format maximum="100" minimum="0"/>
          </arg>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.proximityPlacementGroup" options="proximity-placement-group" group="Properties">
          <help short="Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.resiliencyPolicy" options="resiliency-policy" group="Properties">
          <help short="Policy for Resiliency"/>
          <arg nullable="True" type="object" var="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy" options="resilient-vm-creation-policy">
            <help short="The configuration parameters used while performing resilient VM creation."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy.enabled" options="enabled">
              <help short="Specifies whether resilient VM creation should be enabled on the virtual machine scale set. The default value is false."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy" options="resilient-vm-deletion-policy">
            <help short="The configuration parameters used while performing resilient VM deletion."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy.enabled" options="enabled">
              <help short="Specifies whether resilient VM deletion should be enabled on the virtual machine scale set. The default value is false."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.scaleInPolicy" options="scale-in-policy" group="Properties">
          <help short="Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.scaleInPolicy.forceDeletion" options="force-deletion">
            <help short="This property allows you to specify if virtual machines chosen for removal have to be force deleted when a virtual machine scale set is being scaled-in.(Feature in Preview)"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.scaleInPolicy.rules" options="rules">
            <help short="The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>"/>
            <item nullable="True" type="string">
              <enum>
                <item name="Default" value="&quot;Default&quot;"/>
                <item name="NewestVM" value="&quot;NewestVM&quot;"/>
                <item name="OldestVM" value="&quot;OldestVM&quot;"/>
              </enum>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.singlePlacementGroup" options="single-placement-group" group="Properties">
          <help short="When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.spotRestorePolicy" options="spot-restore-policy" group="Properties">
          <help short="Specifies the Spot Restore properties for the virtual machine scale set."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.spotRestorePolicy.enabled" options="enabled">
            <help short="Enables the Spot-Try-Restore feature where evicted VMSS SPOT instances will be tried to be restored opportunistically based on capacity availability and pricing constraints"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.spotRestorePolicy.restoreTimeout" options="restore-timeout">
            <help short="Timeout value expressed as an ISO 8601 time duration after which the platform will not try to restore the VMSS SPOT instances"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.upgradePolicy" options="upgrade-policy" group="Properties">
          <help short="The upgrade policy."/>
          <arg nullable="True" type="object" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy" options="automatic-os-upgrade-policy">
            <help short="Configuration parameters used for performing automatic OS Upgrade."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback" options="disable-automatic-rollback">
              <help short="Whether OS image rollback feature should be disabled. Default value is false."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade" options="enable-automatic-os-upgrade">
              <help short="Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.osRollingUpgradeDeferral" options="os-rolling-upgrade-deferral">
              <help short="Indicates whether Auto OS Upgrade should undergo deferral. Deferred OS upgrades will send advanced notifications on a per-VM basis that an OS upgrade from rolling upgrades is incoming, via the IMDS tag 'Platform.PendingOSUpgrade'. The upgrade then defers until the upgrade is approved via an ApproveRollingUpgrade call."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.useRollingUpgradePolicy" options="use-rolling-upgrade-policy">
              <help short="Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Default value is false. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS."/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.upgradePolicy.mode" options="mode">
            <help short="Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time."/>
            <enum>
              <item name="Automatic" value="&quot;Automatic&quot;"/>
              <item name="Manual" value="&quot;Manual&quot;"/>
              <item name="Rolling" value="&quot;Rolling&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy" options="rolling-upgrade-policy">
            <help short="The configuration parameters used while performing a rolling upgrade."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.enableCrossZoneUpgrade" options="enable-cross-zone-upgrade">
              <help short="Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent" options="max-batch-instance-percent">
              <help short="The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%."/>
              <format maximum="100" minimum="5"/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxSurge" options="max-surge">
              <help short="Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent" options="max-unhealthy-instance-percent">
              <help short="The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%."/>
              <format maximum="100" minimum="5"/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent" options="max-unhealthy-upgraded-instance-percent">
              <help short="The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%."/>
              <format maximum="100" minimum="0"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches" options="pause-time-between-batches">
              <help short="The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S)."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.prioritizeUnhealthyInstances" options="prioritize-unhealthy-instances">
              <help short="Upgrade all unhealthy instances in a scale set before any healthy instances."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.upgradePolicy.rollingUpgradePolicy.rollbackFailedInstancesOnPolicyBreach" options="rollback-failed-instances-on-policy-breach">
              <help short="Rollback failed instances to previous model if the Rolling Upgrade policy is violated."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile" options="virtual-machine-profile" group="Properties">
          <help short="The virtual machine profile."/>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.applicationProfile" options="application-profile">
            <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
            <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications" options="gallery-applications">
              <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].configurationReference" options="configuration-reference">
                  <help short="Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].enableAutomaticUpgrade" options="enable-automatic-upgrade">
                  <help short="If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"/>
                </arg>
                <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].order" options="order">
                  <help short="Optional, Specifies the order in which the packages have to be installed"/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].packageReferenceId" options="package-reference-id">
                  <help short="Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].tags" options="tags">
                  <help short="Optional, Specifies a passthrough value for more generic context."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure" options="treat-failure-as-deployment-failure">
                  <help short="Optional, If true, any failure for any operation in the VmApplication will fail the deployment"/>
                </arg>
              </item>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.billingProfile" options="billing-profile">
            <help short="Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01."/>
            <arg nullable="True" type="float64" var="$parameters.properties.virtualMachineProfile.billingProfile.maxPrice" options="max-price">
              <help short="Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 - indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.capacityReservation" options="capacity-reservation">
            <help short="Specifies the capacity reservation related details of a scale set. Minimum api-version: 2021-04-01."/>
            <arg nullable="True" type="@SubResource_update" var="$parameters.properties.virtualMachineProfile.capacityReservation.capacityReservationGroup" options="capacity-reservation-group">
              <help short="Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile" options="diagnostics-profile">
            <help short="Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15."/>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics" options="boot-diagnostics">
              <help short="Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled" options="enabled">
                <help short="Whether boot diagnostics should be enabled on the Virtual Machine."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri" options="storage-uri">
                <help short="Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.evictionPolicy" options="eviction-policy">
            <help short="Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview."/>
            <enum>
              <item name="Deallocate" value="&quot;Deallocate&quot;"/>
              <item name="Delete" value="&quot;Delete&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile" options="extension-profile">
            <help short="Specifies a collection of settings for extensions installed on virtual machines in the scale set."/>
            <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions" options="extensions">
              <help short="The virtual machine scale set child extension resources."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].name" options="name">
                  <help short="The name of the extension."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
                  <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="Properties">
                  <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.forceUpdateTag" options="force-update-tag" group="Properties">
                  <help short="If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettings" options="protected-settings" group="Properties">
                  <blank value="{}"/>
                  <help short="The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault" options="protected-settings-from-key-vault" group="Properties" cls="KeyVaultSecretReference_update">
                  <help short="The extensions protected settings that are passed by reference, and consumed from key vault"/>
                  <arg type="string" var="@KeyVaultSecretReference_update.secretUrl" options="secret-url">
                    <help short="The URL referencing a secret in a Key Vault."/>
                  </arg>
                  <arg type="@SubResource_update" var="@KeyVaultSecretReference_update.sourceVault" options="source-vault">
                    <help short="The relative URL of the Key Vault containing the secret."/>
                  </arg>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.provisionAfterExtensions" options="provision-after-extensions" group="Properties">
                  <help short="Collection of extension names after which this extension needs to be provisioned."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.publisher" options="publisher" group="Properties">
                  <help short="The name of the extension handler publisher."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.settings" options="settings" group="Properties">
                  <blank value="{}"/>
                  <help short="Json formatted public settings for the extension."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.suppressFailures" options="suppress-failures" group="Properties">
                  <help short="Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.type" options="type" group="Properties">
                  <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.typeHandlerVersion" options="type-handler-version" group="Properties">
                  <help short="Specifies the version of the script handler."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.extensionProfile.extensionsTimeBudget" options="extensions-time-budget">
              <help short="Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.hardwareProfile" options="hardware-profile">
            <help short="Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01."/>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties" options="vm-size-properties">
              <help short="Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."/>
              <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsAvailable" options="v-cp-us-available">
                <help short="Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list)."/>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsPerCore" options="v-cp-us-per-core">
                <help short="Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.licenseType" options="license-type">
            <help short="Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15"/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.networkProfile" options="network-profile">
            <help short="Specifies properties of the network interfaces of the virtual machines in the scale set."/>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.healthProbe" options="health-probe" cls="ApiEntityReference_update">
              <help short="A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'."/>
              <arg nullable="True" type="string" var="@ApiEntityReference_update.id" options="id">
                <help short="The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkApiVersion" options="network-api-version">
              <help short="specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'"/>
              <enum>
                <item name="2020-11-01" value="&quot;2020-11-01&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
              <help short="The list of network configurations."/>
              <item nullable="True" type="object">
                <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].name" options="name">
                  <help short="The network configuration name."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode" options="auxiliary-mode" group="Properties">
                  <help short="Specifies whether the Auxiliary mode is enabled for the Network Interface resource."/>
                  <enum>
                    <item name="AcceleratedConnections" value="&quot;AcceleratedConnections&quot;"/>
                    <item name="Floating" value="&quot;Floating&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku" options="auxiliary-sku" group="Properties">
                  <help short="Specifies whether the Auxiliary sku is enabled for the Network Interface resource."/>
                  <enum>
                    <item name="A1" value="&quot;A1&quot;"/>
                    <item name="A2" value="&quot;A2&quot;"/>
                    <item name="A4" value="&quot;A4&quot;"/>
                    <item name="A8" value="&quot;A8&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.deleteOption" options="delete-option" group="Properties">
                  <help short="Specify what happens to the network interface when the VM is deleted"/>
                  <enum>
                    <item name="Delete" value="&quot;Delete&quot;"/>
                    <item name="Detach" value="&quot;Detach&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking" options="disable-tcp-state-tracking" group="Properties">
                  <help short="Specifies whether the network interface is disabled for tcp state tracking."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings" options="dns-settings" group="Properties">
                  <help short="The dns settings to be applied on the network interfaces."/>
                  <arg nullable="True" type="array<string>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers" options="dns-servers">
                    <help short="List of DNS servers IP addresses"/>
                    <item nullable="True" type="string"/>
                  </arg>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking" options="enable-accelerated-networking" group="Properties">
                  <help short="Specifies whether the network interface is accelerated networking-enabled."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableFpga" options="enable-fpga" group="Properties">
                  <help short="Specifies whether the network interface is FPGA networking-enabled."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                  <help short="Whether IP forwarding enabled on this NIC."/>
                </arg>
                <arg type="array<object>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                  <help short="Specifies the IP configurations of the network interface."/>
                  <item nullable="True" type="object">
                    <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name">
                      <help short="The IP configuration name."/>
                    </arg>
                    <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                      <help short="Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway."/>
                      <item nullable="True" type="@SubResource_update"/>
                    </arg>
                    <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                      <help short="Specifies an array of references to application security group."/>
                      <item nullable="True" type="@SubResource_update"/>
                    </arg>
                    <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                      <help short="Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                      <item nullable="True" type="@SubResource_update"/>
                    </arg>
                    <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools" options="load-balancer-inbound-nat-pools" group="Properties">
                      <help short="Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                      <item nullable="True" type="@SubResource_update"/>
                    </arg>
                    <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                      <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                      <help short="Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."/>
                      <enum>
                        <item name="IPv4" value="&quot;IPv4&quot;"/>
                        <item name="IPv6" value="&quot;IPv6&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration" options="public-ip-address-configuration" group="Properties">
                      <help short="The publicIPAddressConfiguration."/>
                      <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" options="name">
                        <help short="The publicIP address configuration name."/>
                      </arg>
                      <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption" options="delete-option" group="Properties">
                        <help short="Specify what happens to the public IP when the VM is deleted"/>
                        <enum>
                          <item name="Delete" value="&quot;Delete&quot;"/>
                          <item name="Detach" value="&quot;Detach&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings" options="dns-settings" group="Properties">
                        <help short="The dns settings to be applied on the publicIP addresses ."/>
                        <arg type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                          <help short="The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                        </arg>
                        <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                          <help short="The Domain name label scope.The concatenation of the hashed domain name label that generated according to the policy from domain name label scope and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                          <enum>
                            <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                            <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                            <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                            <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                        <help short="The idle timeout of the public IP address."/>
                      </arg>
                      <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags" options="ip-tags" group="Properties">
                        <help short="The list of IP tags associated with the public IP address."/>
                        <item nullable="True" type="object">
                          <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType" options="ip-tag-type">
                            <help short="IP tag type. Example: FirstPartyUsage."/>
                          </arg>
                          <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag" options="tag">
                            <help short="IP tag associated with the public IP. Example: SQL, Storage etc."/>
                          </arg>
                        </item>
                      </arg>
                      <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
                        <help short="Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."/>
                        <enum>
                          <item name="IPv4" value="&quot;IPv4&quot;"/>
                          <item name="IPv6" value="&quot;IPv6&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="@SubResource_update" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties">
                        <help short="The PublicIPPrefix from which to allocate publicIP addresses."/>
                      </arg>
                      <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku" options="sku">
                        <help short="Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."/>
                        <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name" options="name">
                          <help short="Specify public IP sku name"/>
                          <enum>
                            <item name="Basic" value="&quot;Basic&quot;"/>
                            <item name="Standard" value="&quot;Standard&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier" options="tier">
                          <help short="Specify public IP sku tier"/>
                          <enum>
                            <item name="Global" value="&quot;Global&quot;"/>
                            <item name="Regional" value="&quot;Regional&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                    </arg>
                    <arg nullable="True" type="@ApiEntityReference_update" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                      <help short="Specifies the identifier of the subnet."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup" options="network-security-group" group="Properties">
                  <help short="The network security group."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.primary" options="primary" group="Properties">
                  <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                </arg>
              </item>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile" options="os-profile">
            <help short="Specifies the operating system settings for the virtual machines in the scale set."/>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.adminPassword" options="admin-password">
              <help short="Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;, &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;, &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;, &quot;Password22&quot;, &quot;iloveyou!&quot; <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.adminUsername" options="admin-username">
              <help short="Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in &quot;.&quot; <br><br> **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;, &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;, &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;, &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;, &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;, &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;, &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;, &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;, &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;, &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;, &quot;user4&quot;, &quot;user5&quot;. <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters"/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.allowExtensionOperations" options="allow-extension-operations">
              <help short="Specifies whether extension operations should be allowed on the virtual machine scale set. This may only be set to False when no extensions are present on the virtual machine scale set."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.computerNamePrefix" options="computer-name-prefix">
              <help short="Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.customData" options="custom-data">
              <help short="Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)"/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration" options="linux-configuration">
              <help short="Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication" options="disable-password-authentication">
                <help short="Specifies whether password authentication should be disabled."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                <help short="Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings" options="patch-settings">
                <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Linux."/>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                  <help short="Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                  <enum>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                  <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."/>
                  <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                    <help short="Enables customer to schedule patching without accidental upgrades"/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                    <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                    <enum>
                      <item name="Always" value="&quot;Always&quot;"/>
                      <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                      <item name="Never" value="&quot;Never&quot;"/>
                      <item name="Unknown" value="&quot;Unknown&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode" options="patch-mode">
                  <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"/>
                  <enum>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent" options="provision-vm-agent">
                <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh" options="ssh">
                <help short="Specifies the ssh key configuration for a Linux OS."/>
                <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys" options="public-keys">
                  <help short="The list of SSH public keys used to authenticate with linux based VMs."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].keyData" options="key-data">
                      <help short="SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].path" options="path">
                      <help short="Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"/>
                    </arg>
                  </item>
                </arg>
              </arg>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.requireGuestProvisionSignal" options="require-guest-provision-signal">
              <help short="Optional property which must either be set to True or omitted."/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.secrets" options="secrets">
              <help short="Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].sourceVault" options="source-vault" cls="SubResource_update">
                  <help short="The relative URL of the Key Vault containing all of the certificates in VaultCertificates."/>
                  <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
                <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates" options="vault-certificates">
                  <help short="The list of key vault references in SourceVault which contain certificates."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateStore" options="certificate-store">
                      <help short="For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateUrl" options="certificate-url">
                      <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                    </arg>
                  </item>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration" options="windows-configuration">
              <help short="Specifies Windows operating system settings on the virtual machine."/>
              <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent" options="additional-unattend-content">
                <help short="Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].componentName" options="component-name">
                    <help short="The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."/>
                    <enum>
                      <item name="Microsoft-Windows-Shell-Setup" value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].content" options="content">
                    <help short="Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].passName" options="pass-name">
                    <help short="The pass name. Currently, the only allowable value is OobeSystem."/>
                    <enum>
                      <item name="OobeSystem" value="&quot;OobeSystem&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].settingName" options="setting-name">
                    <help short="Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."/>
                    <enum>
                      <item name="AutoLogon" value="&quot;AutoLogon&quot;"/>
                      <item name="FirstLogonCommands" value="&quot;FirstLogonCommands&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates" options="enable-automatic-updates">
                <help short="Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                <help short="Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings" options="patch-settings">
                <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Windows."/>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                  <help short="Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. "/>
                  <enum>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                  <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."/>
                  <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                    <help short="Enables customer to schedule patching without accidental upgrades"/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                    <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                    <enum>
                      <item name="Always" value="&quot;Always&quot;"/>
                      <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                      <item name="Never" value="&quot;Never&quot;"/>
                      <item name="Unknown" value="&quot;Unknown&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.enableHotpatching" options="enable-hotpatching">
                  <help short="Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.patchMode" options="patch-mode">
                  <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true "/>
                  <enum>
                    <item name="AutomaticByOS" value="&quot;AutomaticByOS&quot;"/>
                    <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                    <item name="Manual" value="&quot;Manual&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent" options="provision-vm-agent">
                <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.timeZone" options="time-zone">
                <help short="Specifies the time zone of the virtual machine. e.g. &quot;Pacific Standard Time&quot;. Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM" options="win-rm">
                <help short="Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."/>
                <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners" options="listeners">
                  <help short="The list of Windows Remote Management listeners"/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl" options="certificate-url">
                      <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].protocol" options="protocol">
                      <help short="Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"/>
                      <enum>
                        <item name="Http" value="&quot;Http&quot;"/>
                        <item name="Https" value="&quot;Https&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.priority" options="priority">
            <help short="Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview."/>
            <enum>
              <item name="Low" value="&quot;Low&quot;"/>
              <item name="Regular" value="&quot;Regular&quot;"/>
              <item name="Spot" value="&quot;Spot&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile" options="scheduled-events-profile">
            <help short="Specifies Scheduled Event related configurations."/>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile" options="os-image-notification-profile">
              <help short="Specifies OS Image Scheduled Event related configurations."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.enable" options="enable">
                <help short="Specifies whether the OS Image Scheduled event is enabled or disabled."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                <help short="Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)"/>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile" options="terminate-notification-profile">
              <help short="Specifies Terminate Scheduled Event related configurations."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.enable" options="enable">
                <help short="Specifies whether the Terminate Scheduled event is enabled or disabled."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                <help short="Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference" options="security-posture-reference">
            <help short="Specifies the security posture to be used for all virtual machines in the scale set. Minimum api-version: 2023-03-01"/>
            <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions" options="exclude-extensions">
              <help short="List of virtual machine extensions to exclude when applying the Security Posture."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="ResourceLocation" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].location" options="location l">
                  <help short="Resource location"/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
                  <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="Properties">
                  <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.forceUpdateTag" options="force-update-tag" group="Properties">
                  <help short="How the extension handler should be forced to update even if the extension configuration has not changed."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView" options="instance-view" group="Properties">
                  <help short="The virtual machine extension instance view."/>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.name" options="name">
                    <help short="The virtual machine extension name."/>
                  </arg>
                  <arg nullable="True" type="array<@InstanceViewStatus_update>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.statuses" options="statuses">
                    <help short="The resource status information."/>
                    <item nullable="True" type="@InstanceViewStatus_update"/>
                  </arg>
                  <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.substatuses" options="substatuses">
                    <help short="The resource status information."/>
                    <item nullable="True" type="object" cls="InstanceViewStatus_update">
                      <arg nullable="True" type="string" var="@InstanceViewStatus_update.code" options="code">
                        <help short="The status code."/>
                      </arg>
                      <arg nullable="True" type="string" var="@InstanceViewStatus_update.displayStatus" options="display-status">
                        <help short="The short localizable label for the status."/>
                      </arg>
                      <arg nullable="True" type="string" var="@InstanceViewStatus_update.level" options="level">
                        <help short="The level code."/>
                        <enum>
                          <item name="Error" value="&quot;Error&quot;"/>
                          <item name="Info" value="&quot;Info&quot;"/>
                          <item name="Warning" value="&quot;Warning&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@InstanceViewStatus_update.message" options="message">
                        <help short="The detailed status message, including for alerts and error messages."/>
                      </arg>
                      <arg nullable="True" type="dateTime" var="@InstanceViewStatus_update.time" options="time">
                        <help short="The time of the status."/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.type" options="type">
                    <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.typeHandlerVersion" options="type-handler-version">
                    <help short="Specifies the version of the script handler."/>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettings" options="protected-settings" group="Properties">
                  <blank value="{}"/>
                  <help short="The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."/>
                </arg>
                <arg nullable="True" type="@KeyVaultSecretReference_update" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettingsFromKeyVault" options="protected-settings-from-key-vault" group="Properties">
                  <help short="The extensions protected settings that are passed by reference, and consumed from key vault"/>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.provisionAfterExtensions" options="provision-after-extensions" group="Properties">
                  <help short="Collection of extension names after which this extension needs to be provisioned."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.publisher" options="publisher" group="Properties">
                  <help short="The name of the extension handler publisher."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.settings" options="settings" group="Properties">
                  <blank value="{}"/>
                  <help short="Json formatted public settings for the extension."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.suppressFailures" options="suppress-failures" group="Properties">
                  <help short="Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.type" options="type" group="Properties">
                  <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.typeHandlerVersion" options="type-handler-version" group="Properties">
                  <help short="Specifies the version of the script handler."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].tags" options="tags">
                  <help short="Resource tags"/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityPostureReference.id" options="id">
              <help short="The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest"/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityProfile" options="security-profile">
            <help short="Specifies the Security related profile settings for the virtual machines in the scale set."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.encryptionAtHost" options="encryption-at-host">
              <help short="This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity" options="encryption-identity">
              <help short="Specifies the Managed Identity used by ADE to get access token for keyvault operations."/>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
                <help short="Specifies ARM Resource ID of one of the user identities associated with the VM."/>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings" options="proxy-agent-settings">
              <help short="Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.enabled" options="enabled">
                <help short="Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."/>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.keyIncarnationId" options="key-incarnation-id">
                <help short="Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.mode" options="mode">
                <help short="Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."/>
                <enum>
                  <item name="Audit" value="&quot;Audit&quot;"/>
                  <item name="Enforce" value="&quot;Enforce&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.securityProfile.securityType" options="security-type">
              <help short="Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."/>
              <enum>
                <item name="ConfidentialVM" value="&quot;ConfidentialVM&quot;"/>
                <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings" options="uefi-settings">
              <help short="Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled" options="secure-boot-enabled">
                <help short="Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled" options="v-tpm-enabled">
                <help short="Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.serviceArtifactReference" options="service-artifact-reference">
            <help short="Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. Minimum api-version: 2022-11-01"/>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.serviceArtifactReference.id" options="id">
              <help short="The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.storageProfile" options="storage-profile">
            <help short="Specifies the storage settings for the virtual machine disks."/>
            <arg nullable="True" type="array<object>" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks" options="data-disks">
              <help short="Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].caching" options="caching">
                  <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                  <enum>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                    <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].createOption" options="create-option">
                  <help short="The create option."/>
                  <enum>
                    <item name="Attach" value="&quot;Attach&quot;"/>
                    <item name="Empty" value="&quot;Empty&quot;"/>
                    <item name="FromImage" value="&quot;FromImage&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].deleteOption" options="delete-option">
                  <help short="Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**."/>
                  <enum>
                    <item name="Delete" value="&quot;Delete&quot;"/>
                    <item name="Detach" value="&quot;Detach&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="integer64" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskIOPSReadWrite" options="disk-iops-read-write">
                  <help short="Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                </arg>
                <arg nullable="True" type="integer64" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskMBpsReadWrite" options="disk-m-bps-read-write">
                  <help short="Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                </arg>
                <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskSizeGB" options="disk-size-gb">
                  <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
                </arg>
                <arg type="integer32" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].lun" options="lun">
                  <help short="Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."/>
                </arg>
                <arg nullable="True" type="@VirtualMachineScaleSetManagedDiskParameters_update" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].managedDisk" options="managed-disk">
                  <help short="The managed disk parameters."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].name" options="name">
                  <help short="The disk name."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].writeAcceleratorEnabled" options="write-accelerator-enabled">
                  <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.diskControllerType" options="disk-controller-type"/>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference" options="image-reference">
              <help short="Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."/>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.communityGalleryImageId" options="community-gallery-image-id">
                <help short="Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.id" options="id">
                <help short="Resource Id"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.offer" options="offer">
                <help short="Specifies the offer of the platform image or marketplace image used to create the virtual machine."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.publisher" options="publisher">
                <help short="The image publisher."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sharedGalleryImageId" options="shared-gallery-image-id">
                <help short="Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sku" options="sku">
                <help short="The image SKU."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.version" options="version">
                <help short="Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."/>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk" options="os-disk">
              <help short="Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.caching" options="caching">
                <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                <enum>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                  <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.createOption" options="create-option">
                <help short="Specifies how the virtual machines in the scale set should be created. The only allowed value is: **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described."/>
                <enum>
                  <item name="Attach" value="&quot;Attach&quot;"/>
                  <item name="Empty" value="&quot;Empty&quot;"/>
                  <item name="FromImage" value="&quot;FromImage&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.deleteOption" options="delete-option">
                <help short="Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk."/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings" options="diff-disk-settings">
                <help short="Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set."/>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option" options="option">
                  <help short="Specifies the ephemeral disk settings for operating system disk."/>
                  <enum>
                    <item name="Local" value="&quot;Local&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.placement" options="placement">
                  <help short="Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk."/>
                  <enum>
                    <item name="CacheDisk" value="&quot;CacheDisk&quot;"/>
                    <item name="ResourceDisk" value="&quot;ResourceDisk&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diskSizeGB" options="disk-size-gb">
                <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image" options="image">
                <help short="Specifies information about the unmanaged user image to base the scale set on."/>
                <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image.uri" options="uri">
                  <help short="Specifies the virtual hard disk's uri."/>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.managedDisk" options="managed-disk" cls="VirtualMachineScaleSetManagedDiskParameters_update">
                <help short="The managed disk parameters."/>
                <arg nullable="True" type="object" var="@VirtualMachineScaleSetManagedDiskParameters_update.diskEncryptionSet" options="disk-encryption-set" cls="DiskEncryptionSetParameters_update">
                  <help short="Specifies the customer managed disk encryption set resource id for the managed disk."/>
                  <arg nullable="True" type="string" var="@DiskEncryptionSetParameters_update.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile" options="security-profile">
                  <help short="Specifies the security profile for the managed disk."/>
                  <arg nullable="True" type="@DiskEncryptionSetParameters_update" var="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.diskEncryptionSet" options="disk-encryption-set">
                    <help short="Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."/>
                  </arg>
                  <arg nullable="True" type="string" var="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.securityEncryptionType" options="security-encryption-type">
                    <help short="Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. **Note:** It can be set for only Confidential VMs."/>
                    <enum>
                      <item name="DiskWithVMGuestState" value="&quot;DiskWithVMGuestState&quot;"/>
                      <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                      <item name="VMGuestStateOnly" value="&quot;VMGuestStateOnly&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg nullable="True" type="string" var="@VirtualMachineScaleSetManagedDiskParameters_update.storageAccountType" options="storage-account-type">
                  <help short="Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."/>
                  <enum>
                    <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                    <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                    <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
                    <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                    <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
                    <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                    <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.name" options="name">
                <help short="The disk name."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.osType" options="os-type">
                <help short="This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"/>
                <enum>
                  <item name="Linux" value="&quot;Linux&quot;"/>
                  <item name="Windows" value="&quot;Windows&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="array<string>" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.vhdContainers" options="vhd-containers">
                <help short="Specifies the container urls that are used to store operating system disks for the scale set."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled" options="write-accelerator-enabled">
                <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.virtualMachineProfile.userData" options="user-data">
            <help short="UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."/>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.zoneBalance" options="zone-balance" group="Properties">
          <help short="Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineScaleSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmScaleSetName" arg="$Path.vmScaleSetName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualMachineScaleSet_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name"/>
                    <prop type="string" name="product"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="automaticRepairsPolicy">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="gracePeriod"/>
                      <prop type="string" name="repairAction">
                        <enum>
                          <item value="&quot;Reimage&quot;"/>
                          <item value="&quot;Replace&quot;"/>
                          <item value="&quot;Restart&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="constrainedMaximumCapacity"/>
                    <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs"/>
                    <prop type="@SubResource_read" name="hostGroup"/>
                    <prop type="string" name="orchestrationMode">
                      <enum>
                        <item value="&quot;Flexible&quot;"/>
                        <item value="&quot;Uniform&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="overprovision"/>
                    <prop type="integer32" name="platformFaultDomainCount"/>
                    <prop type="object" name="priorityMixPolicy">
                      <prop type="integer32" name="baseRegularPriorityCount">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="regularPriorityPercentageAboveBase">
                        <format maximum="100" minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                    <prop type="object" name="resiliencyPolicy">
                      <prop type="object" name="resilientVMCreationPolicy">
                        <prop type="boolean" name="enabled"/>
                      </prop>
                      <prop type="object" name="resilientVMDeletionPolicy">
                        <prop type="boolean" name="enabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scaleInPolicy">
                      <prop type="boolean" name="forceDeletion"/>
                      <prop type="array<string>" name="rules">
                        <item type="string">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;NewestVM&quot;"/>
                            <item value="&quot;OldestVM&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="boolean" name="singlePlacementGroup"/>
                    <prop type="object" name="spotRestorePolicy">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="restoreTimeout"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                    <prop type="object" name="upgradePolicy">
                      <prop type="object" name="automaticOSUpgradePolicy">
                        <prop type="boolean" name="disableAutomaticRollback"/>
                        <prop type="boolean" name="enableAutomaticOSUpgrade"/>
                        <prop type="boolean" name="osRollingUpgradeDeferral"/>
                        <prop type="boolean" name="useRollingUpgradePolicy"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Automatic&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="rollingUpgradePolicy">
                        <prop type="boolean" name="enableCrossZoneUpgrade"/>
                        <prop type="integer32" name="maxBatchInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="boolean" name="maxSurge"/>
                        <prop type="integer32" name="maxUnhealthyInstancePercent">
                          <format maximum="100" minimum="5"/>
                        </prop>
                        <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent">
                          <format maximum="100" minimum="0"/>
                        </prop>
                        <prop type="string" name="pauseTimeBetweenBatches"/>
                        <prop type="boolean" name="prioritizeUnhealthyInstances"/>
                        <prop type="boolean" name="rollbackFailedInstancesOnPolicyBreach"/>
                      </prop>
                    </prop>
                    <prop type="object" name="virtualMachineProfile">
                      <prop type="object" name="applicationProfile">
                        <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order"/>
                            <prop type="string" name="packageReferenceId" required="True"/>
                            <prop type="string" name="tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="billingProfile">
                        <prop type="float64" name="maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation">
                        <prop type="@SubResource_read" name="capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="extensionProfile">
                        <prop type="array<object>" name="extensions">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag"/>
                              <prop type="object" name="protectedSettings"/>
                              <prop type="object" name="protectedSettingsFromKeyVault" cls="KeyVaultSecretReference_read">
                                <prop type="string" name="secretUrl" required="True"/>
                                <prop type="@SubResource_read" name="sourceVault" required="True"/>
                              </prop>
                              <prop type="array<string>" name="provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState"/>
                              <prop type="string" name="publisher"/>
                              <prop type="object" name="settings"/>
                              <prop type="boolean" name="suppressFailures"/>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="string" name="extensionsTimeBudget"/>
                      </prop>
                      <prop type="object" name="hardwareProfile">
                        <prop type="object" name="vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType"/>
                      <prop type="object" name="networkProfile">
                        <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="string" name="networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings">
                                <prop type="array<string>" name="dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="boolean" name="enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="boolean" name="primary"/>
                                    <prop type="string" name="privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration">
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType"/>
                                            <prop type="string" name="tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_read" name="publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku">
                                        <prop type="string" name="name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@ApiEntityReference_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="networkSecurityGroup"/>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile">
                        <prop type="string" name="adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations"/>
                        <prop type="string" name="computerNamePrefix"/>
                        <prop type="string" name="customData"/>
                        <prop type="object" name="linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                                <prop type="string" name="path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets">
                          <item type="object">
                            <prop type="object" name="sourceVault" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore"/>
                                <prop type="string" name="certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching"/>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="string" name="timeZone"/>
                          <prop type="object" name="winRM">
                            <prop type="array<object>" name="listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityPostureReference">
                        <prop type="array<object>" name="excludeExtensions">
                          <item type="object">
                            <prop readOnly="True" type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location"/>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="boolean" name="autoUpgradeMinorVersion"/>
                              <prop type="boolean" name="enableAutomaticUpgrade"/>
                              <prop type="string" name="forceUpdateTag"/>
                              <prop type="object" name="instanceView">
                                <prop type="string" name="name"/>
                                <prop type="array<@InstanceViewStatus_read>" name="statuses">
                                  <item type="@InstanceViewStatus_read"/>
                                </prop>
                                <prop type="array<object>" name="substatuses">
                                  <item type="object" cls="InstanceViewStatus_read">
                                    <prop type="string" name="code"/>
                                    <prop type="string" name="displayStatus"/>
                                    <prop type="string" name="level">
                                      <enum>
                                        <item value="&quot;Error&quot;"/>
                                        <item value="&quot;Info&quot;"/>
                                        <item value="&quot;Warning&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="message"/>
                                    <prop type="dateTime" name="time"/>
                                  </item>
                                </prop>
                                <prop type="string" name="type"/>
                                <prop type="string" name="typeHandlerVersion"/>
                              </prop>
                              <prop type="object" name="protectedSettings"/>
                              <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                              <prop type="array<string>" name="provisionAfterExtensions">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState"/>
                              <prop type="string" name="publisher"/>
                              <prop type="object" name="settings"/>
                              <prop type="boolean" name="suppressFailures"/>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="securityProfile">
                        <prop type="boolean" name="encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings">
                          <prop type="boolean" name="enabled"/>
                          <prop type="integer32" name="keyIncarnationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings">
                          <prop type="boolean" name="secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="serviceArtifactReference">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="storageProfile">
                        <prop type="array<object>" name="dataDisks" identifiers="name lun">
                          <item type="object">
                            <prop type="string" name="caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer64" name="diskIOPSReadWrite"/>
                            <prop type="integer64" name="diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop type="integer32" name="lun" required="True"/>
                            <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                            <prop type="string" name="name"/>
                            <prop type="boolean" name="writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType"/>
                        <prop type="object" name="imageReference">
                          <prop type="string" name="communityGalleryImageId"/>
                          <prop readOnly="True" type="string" name="exactVersion"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="offer"/>
                          <prop type="string" name="publisher"/>
                          <prop type="string" name="sharedGalleryImageId"/>
                          <prop type="string" name="sku"/>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="object" name="osDisk">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings">
                            <prop type="string" name="option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="object" name="image">
                            <prop type="string" name="uri"/>
                          </prop>
                          <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                            <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="object" name="securityProfile">
                              <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="vhdContainers">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      <prop type="string" name="userData"/>
                    </prop>
                    <prop type="boolean" name="zoneBalance"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer64" name="capacity"/>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="extendedLocation" arg="$parameters.extendedLocation">
                <prop type="string" name="name" arg="$parameters.extendedLocation.name"/>
                <prop type="string" name="type" arg="$parameters.extendedLocation.type">
                  <enum>
                    <item value="&quot;EdgeZone&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="IdentityObject" name="identity" arg="$parameters.identity">
                <prop type="string" name="type" arg="$parameters.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="plan" arg="$parameters.plan">
                <prop type="string" name="name" arg="$parameters.plan.name"/>
                <prop type="string" name="product" arg="$parameters.plan.product"/>
                <prop type="string" name="promotionCode" arg="$parameters.plan.promotionCode"/>
                <prop type="string" name="publisher" arg="$parameters.plan.publisher"/>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="additionalCapabilities" arg="$parameters.properties.additionalCapabilities">
                  <prop type="boolean" name="hibernationEnabled" arg="$parameters.properties.additionalCapabilities.hibernationEnabled"/>
                  <prop type="boolean" name="ultraSSDEnabled" arg="$parameters.properties.additionalCapabilities.ultraSSDEnabled"/>
                </prop>
                <prop type="object" name="automaticRepairsPolicy" arg="$parameters.properties.automaticRepairsPolicy">
                  <prop type="boolean" name="enabled" arg="$parameters.properties.automaticRepairsPolicy.enabled"/>
                  <prop type="string" name="gracePeriod" arg="$parameters.properties.automaticRepairsPolicy.gracePeriod"/>
                  <prop type="string" name="repairAction" arg="$parameters.properties.automaticRepairsPolicy.repairAction">
                    <enum>
                      <item value="&quot;Reimage&quot;"/>
                      <item value="&quot;Replace&quot;"/>
                      <item value="&quot;Restart&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="boolean" name="constrainedMaximumCapacity" arg="$parameters.properties.constrainedMaximumCapacity"/>
                <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs" arg="$parameters.properties.doNotRunExtensionsOnOverprovisionedVMs"/>
                <prop type="@SubResource_update" name="hostGroup" arg="$parameters.properties.hostGroup"/>
                <prop type="string" name="orchestrationMode" arg="$parameters.properties.orchestrationMode">
                  <enum>
                    <item value="&quot;Flexible&quot;"/>
                    <item value="&quot;Uniform&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="overprovision" arg="$parameters.properties.overprovision"/>
                <prop type="integer32" name="platformFaultDomainCount" arg="$parameters.properties.platformFaultDomainCount"/>
                <prop type="object" name="priorityMixPolicy" arg="$parameters.properties.priorityMixPolicy">
                  <prop type="integer32" name="baseRegularPriorityCount" arg="$parameters.properties.priorityMixPolicy.baseRegularPriorityCount">
                    <format minimum="0"/>
                  </prop>
                  <prop type="integer32" name="regularPriorityPercentageAboveBase" arg="$parameters.properties.priorityMixPolicy.regularPriorityPercentageAboveBase">
                    <format maximum="100" minimum="0"/>
                  </prop>
                </prop>
                <prop type="@SubResource_update" name="proximityPlacementGroup" arg="$parameters.properties.proximityPlacementGroup"/>
                <prop type="object" name="resiliencyPolicy" arg="$parameters.properties.resiliencyPolicy">
                  <prop type="object" name="resilientVMCreationPolicy" arg="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.resiliencyPolicy.resilientVMCreationPolicy.enabled"/>
                  </prop>
                  <prop type="object" name="resilientVMDeletionPolicy" arg="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.resiliencyPolicy.resilientVMDeletionPolicy.enabled"/>
                  </prop>
                </prop>
                <prop type="object" name="scaleInPolicy" arg="$parameters.properties.scaleInPolicy">
                  <prop type="boolean" name="forceDeletion" arg="$parameters.properties.scaleInPolicy.forceDeletion"/>
                  <prop type="array<string>" name="rules" arg="$parameters.properties.scaleInPolicy.rules">
                    <item type="string">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;NewestVM&quot;"/>
                        <item value="&quot;OldestVM&quot;"/>
                      </enum>
                    </item>
                  </prop>
                </prop>
                <prop type="boolean" name="singlePlacementGroup" arg="$parameters.properties.singlePlacementGroup"/>
                <prop type="object" name="spotRestorePolicy" arg="$parameters.properties.spotRestorePolicy">
                  <prop type="boolean" name="enabled" arg="$parameters.properties.spotRestorePolicy.enabled"/>
                  <prop type="string" name="restoreTimeout" arg="$parameters.properties.spotRestorePolicy.restoreTimeout"/>
                </prop>
                <prop type="object" name="upgradePolicy" arg="$parameters.properties.upgradePolicy">
                  <prop type="object" name="automaticOSUpgradePolicy" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy">
                    <prop type="boolean" name="disableAutomaticRollback" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback"/>
                    <prop type="boolean" name="enableAutomaticOSUpgrade" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade"/>
                    <prop type="boolean" name="osRollingUpgradeDeferral" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.osRollingUpgradeDeferral"/>
                    <prop type="boolean" name="useRollingUpgradePolicy" arg="$parameters.properties.upgradePolicy.automaticOSUpgradePolicy.useRollingUpgradePolicy"/>
                  </prop>
                  <prop type="string" name="mode" arg="$parameters.properties.upgradePolicy.mode">
                    <enum>
                      <item value="&quot;Automatic&quot;"/>
                      <item value="&quot;Manual&quot;"/>
                      <item value="&quot;Rolling&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="rollingUpgradePolicy" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy">
                    <prop type="boolean" name="enableCrossZoneUpgrade" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.enableCrossZoneUpgrade"/>
                    <prop type="integer32" name="maxBatchInstancePercent" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent">
                      <format maximum="100" minimum="5"/>
                    </prop>
                    <prop type="boolean" name="maxSurge" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxSurge"/>
                    <prop type="integer32" name="maxUnhealthyInstancePercent" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent">
                      <format maximum="100" minimum="5"/>
                    </prop>
                    <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent">
                      <format maximum="100" minimum="0"/>
                    </prop>
                    <prop type="string" name="pauseTimeBetweenBatches" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches"/>
                    <prop type="boolean" name="prioritizeUnhealthyInstances" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.prioritizeUnhealthyInstances"/>
                    <prop type="boolean" name="rollbackFailedInstancesOnPolicyBreach" arg="$parameters.properties.upgradePolicy.rollingUpgradePolicy.rollbackFailedInstancesOnPolicyBreach"/>
                  </prop>
                </prop>
                <prop type="object" name="virtualMachineProfile" arg="$parameters.properties.virtualMachineProfile">
                  <prop type="object" name="applicationProfile" arg="$parameters.properties.virtualMachineProfile.applicationProfile">
                    <prop type="array<object>" name="galleryApplications" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications" identifiers="packageReferenceId">
                      <item type="object">
                        <prop type="string" name="configurationReference" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].configurationReference"/>
                        <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].enableAutomaticUpgrade"/>
                        <prop type="integer32" name="order" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].order"/>
                        <prop type="string" name="packageReferenceId" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].packageReferenceId" required="True"/>
                        <prop type="string" name="tags" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].tags"/>
                        <prop type="boolean" name="treatFailureAsDeploymentFailure" arg="$parameters.properties.virtualMachineProfile.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="billingProfile" arg="$parameters.properties.virtualMachineProfile.billingProfile">
                    <prop type="float64" name="maxPrice" arg="$parameters.properties.virtualMachineProfile.billingProfile.maxPrice"/>
                  </prop>
                  <prop type="object" name="capacityReservation" arg="$parameters.properties.virtualMachineProfile.capacityReservation">
                    <prop type="@SubResource_update" name="capacityReservationGroup" arg="$parameters.properties.virtualMachineProfile.capacityReservation.capacityReservationGroup"/>
                  </prop>
                  <prop type="object" name="diagnosticsProfile" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile">
                    <prop type="object" name="bootDiagnostics" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics">
                      <prop type="boolean" name="enabled" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled"/>
                      <prop type="string" name="storageUri" arg="$parameters.properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri"/>
                    </prop>
                  </prop>
                  <prop type="string" name="evictionPolicy" arg="$parameters.properties.virtualMachineProfile.evictionPolicy">
                    <enum>
                      <item value="&quot;Deallocate&quot;"/>
                      <item value="&quot;Delete&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="extensionProfile" arg="$parameters.properties.virtualMachineProfile.extensionProfile">
                    <prop type="array<object>" name="extensions" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions">
                      <item type="object">
                        <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="autoUpgradeMinorVersion" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.autoUpgradeMinorVersion"/>
                          <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.enableAutomaticUpgrade"/>
                          <prop type="string" name="forceUpdateTag" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.forceUpdateTag"/>
                          <prop type="object" name="protectedSettings" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettings"/>
                          <prop type="object" name="protectedSettingsFromKeyVault" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault" cls="KeyVaultSecretReference_update">
                            <prop type="string" name="secretUrl" arg="@KeyVaultSecretReference_update.secretUrl" required="True"/>
                            <prop type="@SubResource_update" name="sourceVault" arg="@KeyVaultSecretReference_update.sourceVault" required="True"/>
                          </prop>
                          <prop type="array<string>" name="provisionAfterExtensions" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.provisionAfterExtensions">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="publisher" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.publisher"/>
                          <prop type="object" name="settings" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.settings"/>
                          <prop type="boolean" name="suppressFailures" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.suppressFailures"/>
                          <prop type="string" name="type" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.type"/>
                          <prop type="string" name="typeHandlerVersion" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensions[].properties.typeHandlerVersion"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="extensionsTimeBudget" arg="$parameters.properties.virtualMachineProfile.extensionProfile.extensionsTimeBudget"/>
                  </prop>
                  <prop type="object" name="hardwareProfile" arg="$parameters.properties.virtualMachineProfile.hardwareProfile">
                    <prop type="object" name="vmSizeProperties" arg="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties">
                      <prop type="integer32" name="vCPUsAvailable" arg="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsAvailable"/>
                      <prop type="integer32" name="vCPUsPerCore" arg="$parameters.properties.virtualMachineProfile.hardwareProfile.vmSizeProperties.vCPUsPerCore"/>
                    </prop>
                  </prop>
                  <prop type="string" name="licenseType" arg="$parameters.properties.virtualMachineProfile.licenseType"/>
                  <prop type="object" name="networkProfile" arg="$parameters.properties.virtualMachineProfile.networkProfile">
                    <prop type="object" name="healthProbe" arg="$parameters.properties.virtualMachineProfile.networkProfile.healthProbe" cls="ApiEntityReference_update">
                      <prop type="string" name="id" arg="@ApiEntityReference_update.id"/>
                    </prop>
                    <prop type="string" name="networkApiVersion" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkApiVersion">
                      <enum>
                        <item value="&quot;2020-11-01&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="networkInterfaceConfigurations" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations">
                      <item type="object">
                        <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].name" required="True"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="auxiliaryMode" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode">
                            <enum>
                              <item value="&quot;AcceleratedConnections&quot;"/>
                              <item value="&quot;Floating&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="auxiliarySku" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku">
                            <enum>
                              <item value="&quot;A1&quot;"/>
                              <item value="&quot;A2&quot;"/>
                              <item value="&quot;A4&quot;"/>
                              <item value="&quot;A8&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="disableTcpStateTracking" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"/>
                          <prop type="object" name="dnsSettings" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings">
                            <prop type="array<string>" name="dnsServers" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers">
                              <item type="string"/>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enableAcceleratedNetworking" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"/>
                          <prop type="boolean" name="enableFpga" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"/>
                          <prop type="boolean" name="enableIPForwarding" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"/>
                          <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" required="True" identifiers="name">
                            <item type="object">
                              <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" required="True"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="array<@SubResource_update>" name="applicationGatewayBackendAddressPools" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools">
                                  <item type="@SubResource_update"/>
                                </prop>
                                <prop type="array<@SubResource_update>" name="applicationSecurityGroups" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups">
                                  <item type="@SubResource_update"/>
                                </prop>
                                <prop type="array<@SubResource_update>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools">
                                  <item type="@SubResource_update"/>
                                </prop>
                                <prop type="array<@SubResource_update>" name="loadBalancerInboundNatPools" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools">
                                  <item type="@SubResource_update"/>
                                </prop>
                                <prop type="boolean" name="primary" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                                <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion">
                                  <enum>
                                    <item value="&quot;IPv4&quot;"/>
                                    <item value="&quot;IPv6&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="object" name="publicIPAddressConfiguration" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration">
                                  <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption">
                                      <enum>
                                        <item value="&quot;Delete&quot;"/>
                                        <item value="&quot;Detach&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="dnsSettings" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings">
                                      <prop type="string" name="domainNameLabel" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" required="True"/>
                                      <prop type="string" name="domainNameLabelScope" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope">
                                        <enum>
                                          <item value="&quot;NoReuse&quot;"/>
                                          <item value="&quot;ResourceGroupReuse&quot;"/>
                                          <item value="&quot;SubscriptionReuse&quot;"/>
                                          <item value="&quot;TenantReuse&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"/>
                                    <prop type="array<object>" name="ipTags" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags">
                                      <item type="object">
                                        <prop type="string" name="ipTagType" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"/>
                                        <prop type="string" name="tag" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"/>
                                      </item>
                                    </prop>
                                    <prop type="string" name="publicIPAddressVersion" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="@SubResource_update" name="publicIPPrefix" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"/>
                                  </prop>
                                  <prop type="object" name="sku" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku">
                                    <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name">
                                      <enum>
                                        <item value="&quot;Basic&quot;"/>
                                        <item value="&quot;Standard&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="tier" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier">
                                      <enum>
                                        <item value="&quot;Global&quot;"/>
                                        <item value="&quot;Regional&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                </prop>
                                <prop type="@ApiEntityReference_update" name="subnet" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="@SubResource_update" name="networkSecurityGroup" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"/>
                          <prop type="boolean" name="primary" arg="$parameters.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations[].properties.primary"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="osProfile" arg="$parameters.properties.virtualMachineProfile.osProfile">
                    <prop type="string" name="adminPassword" arg="$parameters.properties.virtualMachineProfile.osProfile.adminPassword" secret="True"/>
                    <prop type="string" name="adminUsername" arg="$parameters.properties.virtualMachineProfile.osProfile.adminUsername"/>
                    <prop type="boolean" name="allowExtensionOperations" arg="$parameters.properties.virtualMachineProfile.osProfile.allowExtensionOperations"/>
                    <prop type="string" name="computerNamePrefix" arg="$parameters.properties.virtualMachineProfile.osProfile.computerNamePrefix"/>
                    <prop type="string" name="customData" arg="$parameters.properties.virtualMachineProfile.osProfile.customData"/>
                    <prop type="object" name="linuxConfiguration" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration">
                      <prop type="boolean" name="disablePasswordAuthentication" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication"/>
                      <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"/>
                      <prop type="object" name="patchSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings">
                        <prop type="string" name="assessmentMode" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.assessmentMode">
                          <enum>
                            <item value="&quot;AutomaticByPlatform&quot;"/>
                            <item value="&quot;ImageDefault&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings">
                          <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                          <prop type="string" name="rebootSetting" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                            <enum>
                              <item value="&quot;Always&quot;"/>
                              <item value="&quot;IfRequired&quot;"/>
                              <item value="&quot;Never&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="patchMode" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode">
                          <enum>
                            <item value="&quot;AutomaticByPlatform&quot;"/>
                            <item value="&quot;ImageDefault&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent"/>
                      <prop type="object" name="ssh" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh">
                        <prop type="array<object>" name="publicKeys" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys" identifiers="path">
                          <item type="object">
                            <prop type="string" name="keyData" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"/>
                            <prop type="string" name="path" arg="$parameters.properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys[].path"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="boolean" name="requireGuestProvisionSignal" arg="$parameters.properties.virtualMachineProfile.osProfile.requireGuestProvisionSignal"/>
                    <prop type="array<object>" name="secrets" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets">
                      <item type="object">
                        <prop type="object" name="sourceVault" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].sourceVault" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </prop>
                        <prop type="array<object>" name="vaultCertificates" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates" identifiers="certificateUrl">
                          <item type="object">
                            <prop type="string" name="certificateStore" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateStore"/>
                            <prop type="string" name="certificateUrl" arg="$parameters.properties.virtualMachineProfile.osProfile.secrets[].vaultCertificates[].certificateUrl"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="windowsConfiguration" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration">
                      <prop type="array<object>" name="additionalUnattendContent" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent">
                        <item type="object">
                          <prop type="string" name="componentName" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].componentName">
                            <enum>
                              <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="content" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].content"/>
                          <prop type="string" name="passName" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].passName">
                            <enum>
                              <item value="&quot;OobeSystem&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="settingName" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent[].settingName">
                            <enum>
                              <item value="&quot;AutoLogon&quot;"/>
                              <item value="&quot;FirstLogonCommands&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="boolean" name="enableAutomaticUpdates" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates"/>
                      <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates"/>
                      <prop type="object" name="patchSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings">
                        <prop type="string" name="assessmentMode" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.assessmentMode">
                          <enum>
                            <item value="&quot;AutomaticByPlatform&quot;"/>
                            <item value="&quot;ImageDefault&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings">
                          <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                          <prop type="string" name="rebootSetting" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                            <enum>
                              <item value="&quot;Always&quot;"/>
                              <item value="&quot;IfRequired&quot;"/>
                              <item value="&quot;Never&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="enableHotpatching" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.enableHotpatching"/>
                        <prop type="string" name="patchMode" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.patchMode">
                          <enum>
                            <item value="&quot;AutomaticByOS&quot;"/>
                            <item value="&quot;AutomaticByPlatform&quot;"/>
                            <item value="&quot;Manual&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent"/>
                      <prop type="string" name="timeZone" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.timeZone"/>
                      <prop type="object" name="winRM" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM">
                        <prop type="array<object>" name="listeners" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners">
                          <item type="object">
                            <prop type="string" name="certificateUrl" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"/>
                            <prop type="string" name="protocol" arg="$parameters.properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners[].protocol">
                              <enum>
                                <item value="&quot;Http&quot;"/>
                                <item value="&quot;Https&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="string" name="priority" arg="$parameters.properties.virtualMachineProfile.priority">
                    <enum>
                      <item value="&quot;Low&quot;"/>
                      <item value="&quot;Regular&quot;"/>
                      <item value="&quot;Spot&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="scheduledEventsProfile" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile">
                    <prop type="object" name="osImageNotificationProfile" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile">
                      <prop type="boolean" name="enable" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.enable"/>
                      <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"/>
                    </prop>
                    <prop type="object" name="terminateNotificationProfile" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile">
                      <prop type="boolean" name="enable" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.enable"/>
                      <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"/>
                    </prop>
                  </prop>
                  <prop type="object" name="securityPostureReference" arg="$parameters.properties.virtualMachineProfile.securityPostureReference">
                    <prop type="array<object>" name="excludeExtensions" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions">
                      <item type="object">
                        <prop type="ResourceLocation" name="location" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="autoUpgradeMinorVersion" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.autoUpgradeMinorVersion"/>
                          <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.enableAutomaticUpgrade"/>
                          <prop type="string" name="forceUpdateTag" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.forceUpdateTag"/>
                          <prop type="object" name="instanceView" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView">
                            <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.name"/>
                            <prop type="array<@InstanceViewStatus_update>" name="statuses" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.statuses">
                              <item type="@InstanceViewStatus_update"/>
                            </prop>
                            <prop type="array<object>" name="substatuses" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.substatuses">
                              <item type="object" cls="InstanceViewStatus_update">
                                <prop type="string" name="code" arg="@InstanceViewStatus_update.code"/>
                                <prop type="string" name="displayStatus" arg="@InstanceViewStatus_update.displayStatus"/>
                                <prop type="string" name="level" arg="@InstanceViewStatus_update.level">
                                  <enum>
                                    <item value="&quot;Error&quot;"/>
                                    <item value="&quot;Info&quot;"/>
                                    <item value="&quot;Warning&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="message" arg="@InstanceViewStatus_update.message"/>
                                <prop type="dateTime" name="time" arg="@InstanceViewStatus_update.time"/>
                              </item>
                            </prop>
                            <prop type="string" name="type" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.type"/>
                            <prop type="string" name="typeHandlerVersion" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.instanceView.typeHandlerVersion"/>
                          </prop>
                          <prop type="object" name="protectedSettings" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettings"/>
                          <prop type="@KeyVaultSecretReference_update" name="protectedSettingsFromKeyVault" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.protectedSettingsFromKeyVault"/>
                          <prop type="array<string>" name="provisionAfterExtensions" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.provisionAfterExtensions">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="publisher" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.publisher"/>
                          <prop type="object" name="settings" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.settings"/>
                          <prop type="boolean" name="suppressFailures" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.suppressFailures"/>
                          <prop type="string" name="type" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.type"/>
                          <prop type="string" name="typeHandlerVersion" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].properties.typeHandlerVersion"/>
                        </prop>
                        <prop type="object" name="tags" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.excludeExtensions[].tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="id" arg="$parameters.properties.virtualMachineProfile.securityPostureReference.id"/>
                  </prop>
                  <prop type="object" name="securityProfile" arg="$parameters.properties.virtualMachineProfile.securityProfile">
                    <prop type="boolean" name="encryptionAtHost" arg="$parameters.properties.virtualMachineProfile.securityProfile.encryptionAtHost"/>
                    <prop type="object" name="encryptionIdentity" arg="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity">
                      <prop type="string" name="userAssignedIdentityResourceId" arg="$parameters.properties.virtualMachineProfile.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"/>
                    </prop>
                    <prop type="object" name="proxyAgentSettings" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings">
                      <prop type="boolean" name="enabled" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.enabled"/>
                      <prop type="integer32" name="keyIncarnationId" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.keyIncarnationId"/>
                      <prop type="string" name="mode" arg="$parameters.properties.virtualMachineProfile.securityProfile.proxyAgentSettings.mode">
                        <enum>
                          <item value="&quot;Audit&quot;"/>
                          <item value="&quot;Enforce&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="securityType" arg="$parameters.properties.virtualMachineProfile.securityProfile.securityType">
                      <enum>
                        <item value="&quot;ConfidentialVM&quot;"/>
                        <item value="&quot;TrustedLaunch&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="uefiSettings" arg="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings">
                      <prop type="boolean" name="secureBootEnabled" arg="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled"/>
                      <prop type="boolean" name="vTpmEnabled" arg="$parameters.properties.virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled"/>
                    </prop>
                  </prop>
                  <prop type="object" name="serviceArtifactReference" arg="$parameters.properties.virtualMachineProfile.serviceArtifactReference">
                    <prop type="string" name="id" arg="$parameters.properties.virtualMachineProfile.serviceArtifactReference.id"/>
                  </prop>
                  <prop type="object" name="storageProfile" arg="$parameters.properties.virtualMachineProfile.storageProfile">
                    <prop type="array<object>" name="dataDisks" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks" identifiers="name lun">
                      <item type="object">
                        <prop type="string" name="caching" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].caching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="createOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].createOption" required="True">
                          <enum>
                            <item value="&quot;Attach&quot;"/>
                            <item value="&quot;Empty&quot;"/>
                            <item value="&quot;FromImage&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer64" name="diskIOPSReadWrite" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskIOPSReadWrite"/>
                        <prop type="integer64" name="diskMBpsReadWrite" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskMBpsReadWrite"/>
                        <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].diskSizeGB"/>
                        <prop type="integer32" name="lun" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].lun" required="True"/>
                        <prop type="@VirtualMachineScaleSetManagedDiskParameters_update" name="managedDisk" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].managedDisk"/>
                        <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].name"/>
                        <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.virtualMachineProfile.storageProfile.dataDisks[].writeAcceleratorEnabled"/>
                      </item>
                    </prop>
                    <prop type="string" name="diskControllerType" arg="$parameters.properties.virtualMachineProfile.storageProfile.diskControllerType"/>
                    <prop type="object" name="imageReference" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference">
                      <prop type="string" name="communityGalleryImageId" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.communityGalleryImageId"/>
                      <prop type="string" name="id" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.id"/>
                      <prop type="string" name="offer" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.offer"/>
                      <prop type="string" name="publisher" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.publisher"/>
                      <prop type="string" name="sharedGalleryImageId" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sharedGalleryImageId"/>
                      <prop type="string" name="sku" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.sku"/>
                      <prop type="string" name="version" arg="$parameters.properties.virtualMachineProfile.storageProfile.imageReference.version"/>
                    </prop>
                    <prop type="object" name="osDisk" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk">
                      <prop type="string" name="caching" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.caching">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;ReadOnly&quot;"/>
                          <item value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="createOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="deleteOption" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.deleteOption">
                        <enum>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;Detach&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="diffDiskSettings" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings">
                        <prop type="string" name="option" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option">
                          <enum>
                            <item value="&quot;Local&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="placement" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.placement">
                          <enum>
                            <item value="&quot;CacheDisk&quot;"/>
                            <item value="&quot;ResourceDisk&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.diskSizeGB"/>
                      <prop type="object" name="image" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image">
                        <prop type="string" name="uri" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.image.uri"/>
                      </prop>
                      <prop type="object" name="managedDisk" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_update">
                        <prop type="object" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_update.diskEncryptionSet" cls="DiskEncryptionSetParameters_update">
                          <prop type="string" name="id" arg="@DiskEncryptionSetParameters_update.id"/>
                        </prop>
                        <prop type="object" name="securityProfile" arg="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile">
                          <prop type="@DiskEncryptionSetParameters_update" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.diskEncryptionSet"/>
                          <prop type="string" name="securityEncryptionType" arg="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.securityEncryptionType">
                            <enum>
                              <item value="&quot;DiskWithVMGuestState&quot;"/>
                              <item value="&quot;NonPersistedTPM&quot;"/>
                              <item value="&quot;VMGuestStateOnly&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="storageAccountType" arg="@VirtualMachineScaleSetManagedDiskParameters_update.storageAccountType">
                          <enum>
                            <item value="&quot;PremiumV2_LRS&quot;"/>
                            <item value="&quot;Premium_LRS&quot;"/>
                            <item value="&quot;Premium_ZRS&quot;"/>
                            <item value="&quot;StandardSSD_LRS&quot;"/>
                            <item value="&quot;StandardSSD_ZRS&quot;"/>
                            <item value="&quot;Standard_LRS&quot;"/>
                            <item value="&quot;UltraSSD_LRS&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="name" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.name"/>
                      <prop type="string" name="osType" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.osType">
                        <enum>
                          <item value="&quot;Linux&quot;"/>
                          <item value="&quot;Windows&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="vhdContainers" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.vhdContainers">
                        <item type="string"/>
                      </prop>
                      <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled"/>
                    </prop>
                  </prop>
                  <prop type="string" name="userData" arg="$parameters.properties.virtualMachineProfile.userData"/>
                </prop>
                <prop type="boolean" name="zoneBalance" arg="$parameters.properties.zoneBalance"/>
              </prop>
              <prop type="object" name="sku" arg="$parameters.sku">
                <prop type="integer64" name="capacity" arg="$parameters.sku.capacity"/>
                <prop type="string" name="name" arg="$parameters.sku.name"/>
                <prop type="string" name="tier" arg="$parameters.sku.tier"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
              <prop type="array<string>" name="zones" arg="$parameters.zones">
                <item type="string"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualMachineScaleSets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmScaleSetName" arg="$Path.vmScaleSetName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualMachineScaleSet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
