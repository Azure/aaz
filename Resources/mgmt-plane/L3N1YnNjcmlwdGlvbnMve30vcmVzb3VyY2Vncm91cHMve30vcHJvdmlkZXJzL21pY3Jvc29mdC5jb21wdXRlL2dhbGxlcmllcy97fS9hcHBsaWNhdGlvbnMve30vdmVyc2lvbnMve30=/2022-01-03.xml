<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions/{}" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5QXBwbGljYXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMi0wMS0wMw=="/>
  <commandGroup name="sig gallery-application version">
    <command name="show" version="2022-01-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions/{}" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5QXBwbGljYXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMi0wMS0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryApplicationName" options="gallery-application-name application-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery application."/>
        </arg>
        <arg type="string" var="$Path.galleryApplicationVersionName" options="gallery-application-version-name version-name name n" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery application version."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="Gallery name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
        <arg type="string" var="$Query.expand" options="expand" group="">
          <help short="The expand expression to apply on the operation. &quot;ReplicationStatus&quot; Default value is None."/>
          <enum>
            <item name="ReplicationStatus" value="&quot;ReplicationStatus&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="GalleryApplicationVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}">
          <request method="get">
            <path>
              <param type="string" name="galleryApplicationName" arg="$Path.galleryApplicationName" required="True"/>
              <param type="string" name="galleryApplicationVersionName" arg="$Path.galleryApplicationVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand">
                <enum>
                  <item value="&quot;ReplicationStatus&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/applications/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publishingProfile" required="True">
                      <prop type="object" name="advancedSettings">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="boolean" name="enableHealthCheck"/>
                      <prop type="dateTime" name="endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest"/>
                      <prop type="object" name="manageActions">
                        <prop type="string" name="install" required="True"/>
                        <prop type="string" name="remove" required="True"/>
                        <prop type="string" name="update"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop type="integer32" name="replicaCount"/>
                      <prop type="string" name="replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="settings">
                        <prop type="string" name="configFileName"/>
                        <prop type="string" name="packageFileName"/>
                      </prop>
                      <prop type="object" name="source" required="True">
                        <prop type="string" name="defaultConfigurationLink"/>
                        <prop type="string" name="mediaLink" required="True"/>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations">
                        <item type="object">
                          <prop type="@EncryptionImages_read" name="encryption"/>
                          <prop type="object" name="extendedLocation">
                            <prop type="string" name="name"/>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions">
                        <item type="object">
                          <prop type="object" name="encryption" cls="EncryptionImages_read">
                            <prop type="array<object>" name="dataDiskImages">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="string" name="name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-03" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions/{}" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5QXBwbGljYXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMi0wMS0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryApplicationName" options="gallery-application-name application-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery application."/>
        </arg>
        <arg type="string" var="$Path.galleryApplicationVersionName" options="gallery-application-version-name version-name name n" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery application version."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="Gallery name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <operation operationId="GalleryApplicationVersions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}">
          <request method="delete">
            <path>
              <param type="string" name="galleryApplicationName" arg="$Path.galleryApplicationName" required="True"/>
              <param type="string" name="galleryApplicationVersionName" arg="$Path.galleryApplicationVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions/{}" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5QXBwbGljYXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMi0wMS0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryApplicationName" options="gallery-application-name application-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery application."/>
        </arg>
        <arg type="string" var="$Path.galleryApplicationVersionName" options="gallery-application-version-name version-name name n" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery application version."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="Gallery name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <argGroup name="GalleryApplicationVersion">
        <arg type="ResourceLocation" var="$galleryApplicationVersion.location" options="location l" required="True" group="GalleryApplicationVersion">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$galleryApplicationVersion.tags" options="tags" group="GalleryApplicationVersion">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile" options="publishing-profile" group="Properties">
          <help short="The publishing profile of a gallery image version."/>
          <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.advancedSettings" options="advanced-settings">
            <help short="Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only."/>
            <additionalProp>
              <item type="string"/>
            </additionalProp>
          </arg>
          <arg type="boolean" var="$galleryApplicationVersion.properties.publishingProfile.enableHealthCheck" options="enable-health-check">
            <help short="Optional. Whether or not this application reports health."/>
          </arg>
          <arg type="dateTime" var="$galleryApplicationVersion.properties.publishingProfile.endOfLifeDate" options="end-of-life-date">
            <help short="The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable."/>
          </arg>
          <arg type="boolean" var="$galleryApplicationVersion.properties.publishingProfile.excludeFromLatest" options="exclude-from-latest">
            <help short="If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version."/>
          </arg>
          <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.manageActions" options="manage-actions">
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.manageActions.install" options="install" required="True">
              <help short="Required. The path and arguments to install the gallery application. This is limited to 4096 characters."/>
            </arg>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.manageActions.remove" options="remove" required="True">
              <help short="Required. The path and arguments to remove the gallery application. This is limited to 4096 characters."/>
            </arg>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.manageActions.update" options="update">
              <help short="Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters."/>
            </arg>
          </arg>
          <arg type="integer32" var="$galleryApplicationVersion.properties.publishingProfile.replicaCount" options="replica-count">
            <help short="The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable."/>
          </arg>
          <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.replicationMode" options="replication-mode">
            <help short="Optional parameter which specifies the mode to be used for replication. This property is not updatable."/>
            <enum>
              <item name="Full" value="&quot;Full&quot;"/>
              <item name="Shallow" value="&quot;Shallow&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.settings" options="settings">
            <help short="Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set."/>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.settings.configFileName" options="config-file-name">
              <help short="Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with &quot;_config&quot;."/>
            </arg>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.settings.packageFileName" options="package-file-name">
              <help short="Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name."/>
            </arg>
          </arg>
          <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.source" options="source" required="True">
            <help short="The source image from which the Image Version is going to be created."/>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.source.defaultConfigurationLink" options="default-configuration-link">
              <help short="Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob."/>
            </arg>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.source.mediaLink" options="media-link" required="True">
              <help short="Required. The mediaLink of the artifact, must be a readable storage page blob."/>
            </arg>
          </arg>
          <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.storageAccountType" options="storage-account-type">
            <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
            <enum>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
              <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations" options="target-extended-locations">
            <help short="The target extended locations where the Image Version is going to be replicated to. This property is updatable."/>
            <item type="object">
              <arg type="@EncryptionImages_create" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].encryption" options="encryption"/>
              <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation" options="extended-location">
                <help short="The name of the extended location."/>
                <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name" options="name"/>
                <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type" options="type">
                  <help short="It is type of the extended location."/>
                  <enum>
                    <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="integer32" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount" options="extended-location-replica-count">
                <help short="The number of replicas of the Image Version to be created per extended location. This property is updatable."/>
              </arg>
              <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].name" options="name">
                <help short="The name of the region."/>
              </arg>
              <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions" options="target-regions">
            <help short="The target regions where the Image Version is going to be replicated to. This property is updatable."/>
            <item type="object">
              <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].encryption" options="encryption" cls="EncryptionImages_create">
                <help short="Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact."/>
                <arg type="array<object>" var="@EncryptionImages_create.dataDiskImages" options="data-disk-images">
                  <help short="A list of encryption specifications for data disk images."/>
                  <item type="object">
                    <arg type="string" var="@EncryptionImages_create.dataDiskImages[].diskEncryptionSetId" options="disk-encryption-set-id">
                      <help short="A relative URI containing the resource ID of the disk encryption set."/>
                    </arg>
                    <arg type="integer32" var="@EncryptionImages_create.dataDiskImages[].lun" options="lun" required="True">
                      <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
                    </arg>
                  </item>
                </arg>
                <arg type="object" var="@EncryptionImages_create.osDiskImage" options="os-disk-image">
                  <help short="Contains encryption settings for an OS disk image."/>
                  <arg type="string" var="@EncryptionImages_create.osDiskImage.diskEncryptionSetId" options="disk-encryption-set-id">
                    <help short="A relative URI containing the resource ID of the disk encryption set."/>
                  </arg>
                  <arg type="object" var="@EncryptionImages_create.osDiskImage.securityProfile" options="security-profile">
                    <help short="This property specifies the security profile of an OS disk image."/>
                    <arg type="string" var="@EncryptionImages_create.osDiskImage.securityProfile.confidentialVMEncryptionType" options="confidential-vm-encryption-type">
                      <help short="confidential VM encryption types"/>
                      <enum>
                        <item name="EncryptedVMGuestStateOnlyWithPmk" value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                        <item name="EncryptedWithCmk" value="&quot;EncryptedWithCmk&quot;"/>
                        <item name="EncryptedWithPmk" value="&quot;EncryptedWithPmk&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@EncryptionImages_create.osDiskImage.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
                      <help short="secure VM disk encryption set id"/>
                    </arg>
                  </arg>
                </arg>
              </arg>
              <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].name" options="name" required="True">
                <help short="The name of the region."/>
              </arg>
              <arg type="integer32" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount" options="regional-replica-count">
                <help short="The number of replicas of the Image Version to be created per region. This property is updatable."/>
              </arg>
              <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="GalleryApplicationVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}">
          <request method="put">
            <path>
              <param type="string" name="galleryApplicationName" arg="$Path.galleryApplicationName" required="True"/>
              <param type="string" name="galleryApplicationVersionName" arg="$Path.galleryApplicationVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-03&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="galleryApplicationVersion" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$galleryApplicationVersion.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="publishingProfile" arg="$galleryApplicationVersion.properties.publishingProfile" required="True">
                      <prop type="object" name="advancedSettings" arg="$galleryApplicationVersion.properties.publishingProfile.advancedSettings">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="boolean" name="enableHealthCheck" arg="$galleryApplicationVersion.properties.publishingProfile.enableHealthCheck"/>
                      <prop type="dateTime" name="endOfLifeDate" arg="$galleryApplicationVersion.properties.publishingProfile.endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest" arg="$galleryApplicationVersion.properties.publishingProfile.excludeFromLatest"/>
                      <prop type="object" name="manageActions" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions">
                        <prop type="string" name="install" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions.install" required="True"/>
                        <prop type="string" name="remove" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions.remove" required="True"/>
                        <prop type="string" name="update" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions.update"/>
                      </prop>
                      <prop type="integer32" name="replicaCount" arg="$galleryApplicationVersion.properties.publishingProfile.replicaCount"/>
                      <prop type="string" name="replicationMode" arg="$galleryApplicationVersion.properties.publishingProfile.replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="settings" arg="$galleryApplicationVersion.properties.publishingProfile.settings">
                        <prop type="string" name="configFileName" arg="$galleryApplicationVersion.properties.publishingProfile.settings.configFileName"/>
                        <prop type="string" name="packageFileName" arg="$galleryApplicationVersion.properties.publishingProfile.settings.packageFileName"/>
                      </prop>
                      <prop type="object" name="source" arg="$galleryApplicationVersion.properties.publishingProfile.source" required="True">
                        <prop type="string" name="defaultConfigurationLink" arg="$galleryApplicationVersion.properties.publishingProfile.source.defaultConfigurationLink"/>
                        <prop type="string" name="mediaLink" arg="$galleryApplicationVersion.properties.publishingProfile.source.mediaLink" required="True"/>
                      </prop>
                      <prop type="string" name="storageAccountType" arg="$galleryApplicationVersion.properties.publishingProfile.storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations">
                        <item type="object">
                          <prop type="@EncryptionImages_create" name="encryption" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].encryption"/>
                          <prop type="object" name="extendedLocation" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation">
                            <prop type="string" name="name" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name"/>
                            <prop type="string" name="type" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount"/>
                          <prop type="string" name="name" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].name"/>
                          <prop type="string" name="storageAccountType" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions">
                        <item type="object">
                          <prop type="object" name="encryption" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].encryption" cls="EncryptionImages_create">
                            <prop type="array<object>" name="dataDiskImages" arg="@EncryptionImages_create.dataDiskImages">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_create.dataDiskImages[].diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" arg="@EncryptionImages_create.dataDiskImages[].lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage" arg="@EncryptionImages_create.osDiskImage">
                              <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_create.osDiskImage.diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile" arg="@EncryptionImages_create.osDiskImage.securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType" arg="@EncryptionImages_create.osDiskImage.securityProfile.confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId" arg="@EncryptionImages_create.osDiskImage.securityProfile.secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="string" name="name" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$galleryApplicationVersion.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryApplicationVersion_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/applications/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publishingProfile" required="True">
                      <prop type="object" name="advancedSettings">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="boolean" name="enableHealthCheck"/>
                      <prop type="dateTime" name="endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest"/>
                      <prop type="object" name="manageActions">
                        <prop type="string" name="install" required="True"/>
                        <prop type="string" name="remove" required="True"/>
                        <prop type="string" name="update"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop type="integer32" name="replicaCount"/>
                      <prop type="string" name="replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="settings">
                        <prop type="string" name="configFileName"/>
                        <prop type="string" name="packageFileName"/>
                      </prop>
                      <prop type="object" name="source" required="True">
                        <prop type="string" name="defaultConfigurationLink"/>
                        <prop type="string" name="mediaLink" required="True"/>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations">
                        <item type="object">
                          <prop type="@EncryptionImages_read" name="encryption"/>
                          <prop type="object" name="extendedLocation">
                            <prop type="string" name="name"/>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions">
                        <item type="object">
                          <prop type="object" name="encryption" cls="EncryptionImages_read">
                            <prop type="array<object>" name="dataDiskImages">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="string" name="name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@GalleryApplicationVersion_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions/{}" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5QXBwbGljYXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMi0wMS0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryApplicationName" options="gallery-application-name application-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery application."/>
        </arg>
        <arg type="string" var="$Path.galleryApplicationVersionName" options="gallery-application-version-name version-name name n" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery application version."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="Gallery name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <argGroup name="GalleryApplicationVersion">
        <arg type="ResourceLocation" var="$galleryApplicationVersion.location" options="location l" group="GalleryApplicationVersion">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$galleryApplicationVersion.tags" options="tags" group="GalleryApplicationVersion">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile" options="publishing-profile" group="Properties">
          <help short="The publishing profile of a gallery image version."/>
          <arg nullable="True" type="object" var="$galleryApplicationVersion.properties.publishingProfile.advancedSettings" options="advanced-settings">
            <help short="Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only."/>
            <additionalProp>
              <item nullable="True" type="string"/>
            </additionalProp>
          </arg>
          <arg nullable="True" type="boolean" var="$galleryApplicationVersion.properties.publishingProfile.enableHealthCheck" options="enable-health-check">
            <help short="Optional. Whether or not this application reports health."/>
          </arg>
          <arg nullable="True" type="dateTime" var="$galleryApplicationVersion.properties.publishingProfile.endOfLifeDate" options="end-of-life-date">
            <help short="The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable."/>
          </arg>
          <arg nullable="True" type="boolean" var="$galleryApplicationVersion.properties.publishingProfile.excludeFromLatest" options="exclude-from-latest">
            <help short="If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version."/>
          </arg>
          <arg nullable="True" type="object" var="$galleryApplicationVersion.properties.publishingProfile.manageActions" options="manage-actions">
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.manageActions.install" options="install">
              <help short="Required. The path and arguments to install the gallery application. This is limited to 4096 characters."/>
            </arg>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.manageActions.remove" options="remove">
              <help short="Required. The path and arguments to remove the gallery application. This is limited to 4096 characters."/>
            </arg>
            <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.manageActions.update" options="update">
              <help short="Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters."/>
            </arg>
          </arg>
          <arg nullable="True" type="integer32" var="$galleryApplicationVersion.properties.publishingProfile.replicaCount" options="replica-count">
            <help short="The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable."/>
          </arg>
          <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.replicationMode" options="replication-mode">
            <help short="Optional parameter which specifies the mode to be used for replication. This property is not updatable."/>
            <enum>
              <item name="Full" value="&quot;Full&quot;"/>
              <item name="Shallow" value="&quot;Shallow&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$galleryApplicationVersion.properties.publishingProfile.settings" options="settings">
            <help short="Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set."/>
            <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.settings.configFileName" options="config-file-name">
              <help short="Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with &quot;_config&quot;."/>
            </arg>
            <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.settings.packageFileName" options="package-file-name">
              <help short="Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name."/>
            </arg>
          </arg>
          <arg type="object" var="$galleryApplicationVersion.properties.publishingProfile.source" options="source">
            <help short="The source image from which the Image Version is going to be created."/>
            <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.source.defaultConfigurationLink" options="default-configuration-link">
              <help short="Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob."/>
            </arg>
            <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.source.mediaLink" options="media-link">
              <help short="Required. The mediaLink of the artifact, must be a readable storage page blob."/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.storageAccountType" options="storage-account-type">
            <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
            <enum>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
              <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations" options="target-extended-locations">
            <help short="The target extended locations where the Image Version is going to be replicated to. This property is updatable."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="@EncryptionImages_update" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].encryption" options="encryption"/>
              <arg nullable="True" type="object" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation" options="extended-location">
                <help short="The name of the extended location."/>
                <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name" options="name"/>
                <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type" options="type">
                  <help short="It is type of the extended location."/>
                  <enum>
                    <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="integer32" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount" options="extended-location-replica-count">
                <help short="The number of replicas of the Image Version to be created per extended location. This property is updatable."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].name" options="name">
                <help short="The name of the region."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions" options="target-regions">
            <help short="The target regions where the Image Version is going to be replicated to. This property is updatable."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="object" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].encryption" options="encryption" cls="EncryptionImages_update">
                <help short="Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact."/>
                <arg nullable="True" type="array<object>" var="@EncryptionImages_update.dataDiskImages" options="data-disk-images">
                  <help short="A list of encryption specifications for data disk images."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="@EncryptionImages_update.dataDiskImages[].diskEncryptionSetId" options="disk-encryption-set-id">
                      <help short="A relative URI containing the resource ID of the disk encryption set."/>
                    </arg>
                    <arg type="integer32" var="@EncryptionImages_update.dataDiskImages[].lun" options="lun">
                      <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="object" var="@EncryptionImages_update.osDiskImage" options="os-disk-image">
                  <help short="Contains encryption settings for an OS disk image."/>
                  <arg nullable="True" type="string" var="@EncryptionImages_update.osDiskImage.diskEncryptionSetId" options="disk-encryption-set-id">
                    <help short="A relative URI containing the resource ID of the disk encryption set."/>
                  </arg>
                  <arg nullable="True" type="object" var="@EncryptionImages_update.osDiskImage.securityProfile" options="security-profile">
                    <help short="This property specifies the security profile of an OS disk image."/>
                    <arg nullable="True" type="string" var="@EncryptionImages_update.osDiskImage.securityProfile.confidentialVMEncryptionType" options="confidential-vm-encryption-type">
                      <help short="confidential VM encryption types"/>
                      <enum>
                        <item name="EncryptedVMGuestStateOnlyWithPmk" value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                        <item name="EncryptedWithCmk" value="&quot;EncryptedWithCmk&quot;"/>
                        <item name="EncryptedWithPmk" value="&quot;EncryptedWithPmk&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@EncryptionImages_update.osDiskImage.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
                      <help short="secure VM disk encryption set id"/>
                    </arg>
                  </arg>
                </arg>
              </arg>
              <arg type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].name" options="name">
                <help short="The name of the region."/>
              </arg>
              <arg nullable="True" type="integer32" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount" options="regional-replica-count">
                <help short="The number of replicas of the Image Version to be created per region. This property is updatable."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="GalleryApplicationVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}">
          <request method="get">
            <path>
              <param type="string" name="galleryApplicationName" arg="$Path.galleryApplicationName" required="True"/>
              <param type="string" name="galleryApplicationVersionName" arg="$Path.galleryApplicationVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryApplicationVersion_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/applications/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publishingProfile" required="True">
                      <prop type="object" name="advancedSettings">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="boolean" name="enableHealthCheck"/>
                      <prop type="dateTime" name="endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest"/>
                      <prop type="object" name="manageActions">
                        <prop type="string" name="install" required="True"/>
                        <prop type="string" name="remove" required="True"/>
                        <prop type="string" name="update"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop type="integer32" name="replicaCount"/>
                      <prop type="string" name="replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="settings">
                        <prop type="string" name="configFileName"/>
                        <prop type="string" name="packageFileName"/>
                      </prop>
                      <prop type="object" name="source" required="True">
                        <prop type="string" name="defaultConfigurationLink"/>
                        <prop type="string" name="mediaLink" required="True"/>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations">
                        <item type="object">
                          <prop type="@EncryptionImages_read" name="encryption"/>
                          <prop type="object" name="extendedLocation">
                            <prop type="string" name="name"/>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions">
                        <item type="object">
                          <prop type="object" name="encryption" cls="EncryptionImages_read">
                            <prop type="array<object>" name="dataDiskImages">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="string" name="name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="galleryApplicationVersion" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$galleryApplicationVersion.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="publishingProfile" arg="$galleryApplicationVersion.properties.publishingProfile" required="True">
                  <prop type="object" name="advancedSettings" arg="$galleryApplicationVersion.properties.publishingProfile.advancedSettings">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="boolean" name="enableHealthCheck" arg="$galleryApplicationVersion.properties.publishingProfile.enableHealthCheck"/>
                  <prop type="dateTime" name="endOfLifeDate" arg="$galleryApplicationVersion.properties.publishingProfile.endOfLifeDate"/>
                  <prop type="boolean" name="excludeFromLatest" arg="$galleryApplicationVersion.properties.publishingProfile.excludeFromLatest"/>
                  <prop type="object" name="manageActions" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions">
                    <prop type="string" name="install" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions.install" required="True"/>
                    <prop type="string" name="remove" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions.remove" required="True"/>
                    <prop type="string" name="update" arg="$galleryApplicationVersion.properties.publishingProfile.manageActions.update"/>
                  </prop>
                  <prop type="integer32" name="replicaCount" arg="$galleryApplicationVersion.properties.publishingProfile.replicaCount"/>
                  <prop type="string" name="replicationMode" arg="$galleryApplicationVersion.properties.publishingProfile.replicationMode">
                    <enum>
                      <item value="&quot;Full&quot;"/>
                      <item value="&quot;Shallow&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="settings" arg="$galleryApplicationVersion.properties.publishingProfile.settings">
                    <prop type="string" name="configFileName" arg="$galleryApplicationVersion.properties.publishingProfile.settings.configFileName"/>
                    <prop type="string" name="packageFileName" arg="$galleryApplicationVersion.properties.publishingProfile.settings.packageFileName"/>
                  </prop>
                  <prop type="object" name="source" arg="$galleryApplicationVersion.properties.publishingProfile.source" required="True">
                    <prop type="string" name="defaultConfigurationLink" arg="$galleryApplicationVersion.properties.publishingProfile.source.defaultConfigurationLink"/>
                    <prop type="string" name="mediaLink" arg="$galleryApplicationVersion.properties.publishingProfile.source.mediaLink" required="True"/>
                  </prop>
                  <prop type="string" name="storageAccountType" arg="$galleryApplicationVersion.properties.publishingProfile.storageAccountType">
                    <enum>
                      <item value="&quot;Premium_LRS&quot;"/>
                      <item value="&quot;Standard_LRS&quot;"/>
                      <item value="&quot;Standard_ZRS&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="targetExtendedLocations" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations">
                    <item type="object">
                      <prop type="@EncryptionImages_update" name="encryption" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].encryption"/>
                      <prop type="object" name="extendedLocation" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation">
                        <prop type="string" name="name" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name"/>
                        <prop type="string" name="type" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type">
                          <enum>
                            <item value="&quot;EdgeZone&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="extendedLocationReplicaCount" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount"/>
                      <prop type="string" name="name" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].name"/>
                      <prop type="string" name="storageAccountType" arg="$galleryApplicationVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="targetRegions" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions">
                    <item type="object">
                      <prop type="object" name="encryption" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].encryption" cls="EncryptionImages_update">
                        <prop type="array<object>" name="dataDiskImages" arg="@EncryptionImages_update.dataDiskImages">
                          <item type="object">
                            <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_update.dataDiskImages[].diskEncryptionSetId"/>
                            <prop type="integer32" name="lun" arg="@EncryptionImages_update.dataDiskImages[].lun" required="True"/>
                          </item>
                        </prop>
                        <prop type="object" name="osDiskImage" arg="@EncryptionImages_update.osDiskImage">
                          <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_update.osDiskImage.diskEncryptionSetId"/>
                          <prop type="object" name="securityProfile" arg="@EncryptionImages_update.osDiskImage.securityProfile">
                            <prop type="string" name="confidentialVMEncryptionType" arg="@EncryptionImages_update.osDiskImage.securityProfile.confidentialVMEncryptionType">
                              <enum>
                                <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                <item value="&quot;EncryptedWithCmk&quot;"/>
                                <item value="&quot;EncryptedWithPmk&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="secureVMDiskEncryptionSetId" arg="@EncryptionImages_update.osDiskImage.securityProfile.secureVMDiskEncryptionSetId"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="name" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].name" required="True"/>
                      <prop type="integer32" name="regionalReplicaCount" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount"/>
                      <prop type="string" name="storageAccountType" arg="$galleryApplicationVersion.properties.publishingProfile.targetRegions[].storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$galleryApplicationVersion.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="GalleryApplicationVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}">
          <request method="put">
            <path>
              <param type="string" name="galleryApplicationName" arg="$Path.galleryApplicationName" required="True"/>
              <param type="string" name="galleryApplicationVersionName" arg="$Path.galleryApplicationVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-03&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@GalleryApplicationVersion_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@GalleryApplicationVersion_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
