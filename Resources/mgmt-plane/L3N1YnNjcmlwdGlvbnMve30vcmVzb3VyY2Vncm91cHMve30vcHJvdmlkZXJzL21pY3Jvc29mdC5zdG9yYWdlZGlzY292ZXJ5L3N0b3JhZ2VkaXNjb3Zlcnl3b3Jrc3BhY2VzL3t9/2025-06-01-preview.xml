<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagediscovery/storagediscoveryworkspaces/{}" version="2025-06-01-preview" swagger="mgmt-plane/storagediscovery/ResourceProviders/Microsoft.StorageDiscovery/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZURpc2NvdmVyeS9zdG9yYWdlRGlzY292ZXJ5V29ya3NwYWNlcy97c3RvcmFnZURpc2NvdmVyeVdvcmtzcGFjZU5hbWV9/V/MjAyNS0wNi0wMS1wcmV2aWV3"/>
  <commandGroup name="storage-discovery workspace">
    <command name="show" version="2025-06-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagediscovery/storagediscoveryworkspaces/{}" version="2025-06-01-preview" swagger="mgmt-plane/storagediscovery/ResourceProviders/Microsoft.StorageDiscovery/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZURpc2NvdmVyeS9zdG9yYWdlRGlzY292ZXJ5V29ya3NwYWNlcy97c3RvcmFnZURpc2NvdmVyeVdvcmtzcGFjZU5hbWV9/V/MjAyNS0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageDiscoveryWorkspaceName" options="storage-discovery-workspace-name name n" required="True" idPart="name">
          <help short="The name of the StorageDiscoveryWorkspace"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="StorageDiscoveryWorkspaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageDiscoveryWorkspaceName" arg="$Path.storageDiscoveryWorkspaceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="scopes" required="True" identifiers="displayName">
                      <item type="object">
                        <prop type="string" name="displayName" required="True">
                          <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
                        </prop>
                        <prop type="array<string>" name="resourceTypes" required="True">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<string>" name="tagKeysOnly">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="sku">
                      <default value="&quot;Standard&quot;"/>
                      <enum>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<ResourceId>" name="workspaceRoots" required="True">
                      <item type="ResourceId"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-06-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagediscovery/storagediscoveryworkspaces/{}" version="2025-06-01-preview" swagger="mgmt-plane/storagediscovery/ResourceProviders/Microsoft.StorageDiscovery/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZURpc2NvdmVyeS9zdG9yYWdlRGlzY292ZXJ5V29ya3NwYWNlcy97c3RvcmFnZURpc2NvdmVyeVdvcmtzcGFjZU5hbWV9/V/MjAyNS0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageDiscoveryWorkspaceName" options="storage-discovery-workspace-name name n" required="True" idPart="name">
          <help short="The name of the StorageDiscoveryWorkspace"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="StorageDiscoveryWorkspaces_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageDiscoveryWorkspaceName" arg="$Path.storageDiscoveryWorkspaceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-06-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagediscovery/storagediscoveryworkspaces/{}" version="2025-06-01-preview" swagger="mgmt-plane/storagediscovery/ResourceProviders/Microsoft.StorageDiscovery/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZURpc2NvdmVyeS9zdG9yYWdlRGlzY292ZXJ5V29ya3NwYWNlcy97c3RvcmFnZURpc2NvdmVyeVdvcmtzcGFjZU5hbWV9/V/MjAyNS0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageDiscoveryWorkspaceName" options="storage-discovery-workspace-name name n" required="True" idPart="name">
          <help short="The name of the StorageDiscoveryWorkspace"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.description" options="description" group="Properties">
          <help short="The description of the storage discovery workspace"/>
        </arg>
        <arg type="array<object>" var="$resource.properties.scopes" options="scopes" group="Properties">
          <help short="The scopes of the storage discovery workspace."/>
          <item type="object">
            <arg type="string" var="$resource.properties.scopes[].displayName" options="display-name" required="True">
              <help short="Display name of the collection"/>
              <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
            </arg>
            <arg type="array<string>" var="$resource.properties.scopes[].resourceTypes" options="resource-types" required="True">
              <help short="Resource types for the collection"/>
              <item type="string">
                <enum>
                  <item name="Microsoft.Storage/storageAccounts" value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                </enum>
              </item>
            </arg>
            <arg type="array<string>" var="$resource.properties.scopes[].tagKeysOnly" options="tag-keys-only">
              <help short="The storage account tags keys to filter"/>
              <item type="string"/>
            </arg>
            <arg type="object" var="$resource.properties.scopes[].tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.sku" options="sku" group="Properties">
          <help short="The storage discovery sku"/>
          <default value="&quot;Standard&quot;"/>
          <enum>
            <item name="Free" value="&quot;Free&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg type="array<ResourceId>" var="$resource.properties.workspaceRoots" options="workspace-roots" group="Properties">
          <help short="The view level storage discovery data estate"/>
          <item type="ResourceId"/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="StorageDiscoveryWorkspaces_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageDiscoveryWorkspaceName" arg="$Path.storageDiscoveryWorkspaceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="description" arg="$resource.properties.description"/>
                    <prop type="array<object>" name="scopes" arg="$resource.properties.scopes" required="True" identifiers="displayName">
                      <item type="object">
                        <prop type="string" name="displayName" arg="$resource.properties.scopes[].displayName" required="True">
                          <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
                        </prop>
                        <prop type="array<string>" name="resourceTypes" arg="$resource.properties.scopes[].resourceTypes" required="True">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<string>" name="tagKeysOnly" arg="$resource.properties.scopes[].tagKeysOnly">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="tags" arg="$resource.properties.scopes[].tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="sku" arg="$resource.properties.sku">
                      <default value="&quot;Standard&quot;"/>
                      <enum>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<ResourceId>" name="workspaceRoots" arg="$resource.properties.workspaceRoots" required="True">
                      <item type="ResourceId"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="scopes" required="True" identifiers="displayName">
                      <item type="object">
                        <prop type="string" name="displayName" required="True">
                          <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
                        </prop>
                        <prop type="array<string>" name="resourceTypes" required="True">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<string>" name="tagKeysOnly">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="sku">
                      <default value="&quot;Standard&quot;"/>
                      <enum>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<ResourceId>" name="workspaceRoots" required="True">
                      <item type="ResourceId"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-06-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagediscovery/storagediscoveryworkspaces/{}" version="2025-06-01-preview" swagger="mgmt-plane/storagediscovery/ResourceProviders/Microsoft.StorageDiscovery/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZURpc2NvdmVyeS9zdG9yYWdlRGlzY292ZXJ5V29ya3NwYWNlcy97c3RvcmFnZURpc2NvdmVyeVdvcmtzcGFjZU5hbWV9/V/MjAyNS0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageDiscoveryWorkspaceName" options="storage-discovery-workspace-name name n" required="True" idPart="name">
          <help short="The name of the StorageDiscoveryWorkspace"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$resource.properties.description" options="description" group="Properties">
          <help short="The description of the storage discovery workspace"/>
        </arg>
        <arg type="array<object>" var="$resource.properties.scopes" options="scopes" group="Properties">
          <help short="The scopes of the storage discovery workspace."/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.scopes[].displayName" options="display-name">
              <help short="Display name of the collection"/>
              <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
            </arg>
            <arg type="array<string>" var="$resource.properties.scopes[].resourceTypes" options="resource-types">
              <help short="Resource types for the collection"/>
              <item nullable="True" type="string">
                <enum>
                  <item name="Microsoft.Storage/storageAccounts" value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                </enum>
              </item>
            </arg>
            <arg nullable="True" type="array<string>" var="$resource.properties.scopes[].tagKeysOnly" options="tag-keys-only">
              <help short="The storage account tags keys to filter"/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.scopes[].tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.sku" options="sku" group="Properties">
          <help short="The storage discovery sku"/>
          <enum>
            <item name="Free" value="&quot;Free&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg type="array<ResourceId>" var="$resource.properties.workspaceRoots" options="workspace-roots" group="Properties">
          <help short="The view level storage discovery data estate"/>
          <item nullable="True" type="ResourceId"/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="StorageDiscoveryWorkspaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageDiscoveryWorkspaceName" arg="$Path.storageDiscoveryWorkspaceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="StorageDiscoveryWorkspace_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="scopes" required="True" identifiers="displayName">
                      <item type="object">
                        <prop type="string" name="displayName" required="True">
                          <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
                        </prop>
                        <prop type="array<string>" name="resourceTypes" required="True">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<string>" name="tagKeysOnly">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="sku">
                      <default value="&quot;Standard&quot;"/>
                      <enum>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<ResourceId>" name="workspaceRoots" required="True">
                      <item type="ResourceId"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="string" name="description" arg="$resource.properties.description"/>
                <prop type="array<object>" name="scopes" arg="$resource.properties.scopes" required="True" identifiers="displayName">
                  <item type="object">
                    <prop type="string" name="displayName" arg="$resource.properties.scopes[].displayName" required="True">
                      <format pattern="^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
                    </prop>
                    <prop type="array<string>" name="resourceTypes" arg="$resource.properties.scopes[].resourceTypes" required="True">
                      <item type="string">
                        <enum>
                          <item value="&quot;Microsoft.Storage/storageAccounts&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="array<string>" name="tagKeysOnly" arg="$resource.properties.scopes[].tagKeysOnly">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="tags" arg="$resource.properties.scopes[].tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="sku" arg="$resource.properties.sku">
                  <default value="&quot;Standard&quot;"/>
                  <enum>
                    <item value="&quot;Free&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                  </enum>
                </prop>
                <prop type="array<ResourceId>" name="workspaceRoots" arg="$resource.properties.workspaceRoots" required="True">
                  <item type="ResourceId"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="StorageDiscoveryWorkspaces_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageDiscoveryWorkspaceName" arg="$Path.storageDiscoveryWorkspaceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*$" maxLength="64" minLength="4"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@StorageDiscoveryWorkspace_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
