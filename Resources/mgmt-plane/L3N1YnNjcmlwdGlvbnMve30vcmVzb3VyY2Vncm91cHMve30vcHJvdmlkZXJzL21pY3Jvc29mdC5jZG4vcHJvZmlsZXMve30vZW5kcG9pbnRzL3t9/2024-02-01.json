{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}", "version": "2024-02-01", "swagger": "mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9/V/MjAyNC0wMi0wMQ=="}], "commandGroups": [{"name": "cdn endpoint", "commands": [{"name": "show", "version": "2024-02-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}", "version": "2024-02-01", "swagger": "mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9/V/MjAyNC0wMi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.endpointName", "options": ["n", "name", "endpoint-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the endpoint under the profile which is unique globally."}}, {"type": "string", "var": "$Path.profileName", "options": ["profile-name"], "required": true, "idPart": "name", "help": {"short": "Name of the CDN profile which is unique within the resource group."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Endpoints_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "endpointName", "arg": "$Path.endpointName", "required": true}, {"type": "string", "name": "profileName", "arg": "$Path.profileName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/endpoints/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "contentTypesToCompress", "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "customDomains", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "hostName", "required": true}, {"type": "string", "name": "validationData"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "object", "name": "defaultOriginGroup", "props": [{"type": "string", "name": "id"}], "cls": "ResourceReference_read"}, {"type": "object", "name": "deliveryPolicy", "props": [{"type": "string", "name": "description"}, {"type": "array<object>", "name": "rules", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "actions", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "CacheExpiration"}, {"value": "CacheKeyQueryString"}, {"value": "ModifyRequestHeader"}, {"value": "ModifyResponseHeader"}, {"value": "OriginGroupOverride"}, {"value": "RouteConfigurationOverride"}, {"value": "UrlRedirect"}, {"value": "UrlRewrite"}, {"value": "UrlSigning"}]}}], "discriminators": [{"property": "name", "value": "CacheExpiration", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "cacheBehavior", "required": true, "enum": {"items": [{"value": "BypassCache"}, {"value": "Override"}, {"value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "name": "cacheDuration"}, {"type": "string", "name": "cacheType", "required": true, "enum": {"items": [{"value": "All"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"property": "name", "value": "CacheKeyQueryString", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"nullable": true, "type": "string", "name": "queryParameters"}, {"type": "string", "name": "queryStringBehavior", "required": true, "enum": {"items": [{"value": "Exclude"}, {"value": "ExcludeAll"}, {"value": "Include"}, {"value": "IncludeAll"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"property": "name", "value": "ModifyRequestHeader", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "headerAction", "required": true, "enum": {"items": [{"value": "Append"}, {"value": "Delete"}, {"value": "Overwrite"}]}}, {"type": "string", "name": "headerName", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHeaderActionParameters"}]}}, {"type": "string", "name": "value"}], "cls": "HeaderActionParameters_read"}]}, {"property": "name", "value": "ModifyResponseHeader", "props": [{"type": "@HeaderActionParameters_read", "name": "parameters", "required": true}]}, {"property": "name", "value": "OriginGroupOverride", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "@ResourceReference_read", "name": "originGroup", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "RouteConfigurationOverride", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "cacheConfiguration", "props": [{"type": "string", "name": "cacheBehavior", "enum": {"items": [{"value": "HonorOrigin"}, {"value": "OverrideAlways"}, {"value": "OverrideIfOriginMissing"}]}}, {"type": "string", "name": "cacheDuration"}, {"type": "string", "name": "isCompressionEnabled", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "queryParameters"}, {"type": "string", "name": "queryStringCachingBehavior", "enum": {"items": [{"value": "IgnoreQueryString"}, {"value": "IgnoreSpecifiedQueryStrings"}, {"value": "IncludeSpecifiedQueryStrings"}, {"value": "UseQueryString"}]}}]}, {"type": "object", "name": "originGroupOverride", "props": [{"type": "string", "name": "forwardingProtocol", "enum": {"items": [{"value": "HttpOnly"}, {"value": "HttpsOnly"}, {"value": "MatchRequest"}]}}, {"type": "@ResourceReference_read", "name": "originGroup"}]}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRedirect", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "customFragment"}, {"type": "string", "name": "customHostname"}, {"type": "string", "name": "customPath"}, {"type": "string", "name": "customQueryString"}, {"type": "string", "name": "destinationProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "MatchRequest"}]}}, {"type": "string", "name": "redirectType", "required": true, "enum": {"items": [{"value": "Found"}, {"value": "Moved"}, {"value": "PermanentRedirect"}, {"value": "TemporaryRedirect"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRewrite", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "destination", "required": true}, {"type": "boolean", "name": "preserveUnmatchedPath"}, {"type": "string", "name": "sourcePattern", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"property": "name", "value": "UrlSigning", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "algorithm", "enum": {"items": [{"value": "SHA256"}]}}, {"type": "array<object>", "name": "parameterNameOverride", "item": {"type": "object", "props": [{"type": "string", "name": "paramIndicator", "required": true, "enum": {"items": [{"value": "Expires"}, {"value": "KeyId"}, {"value": "Signature"}]}}, {"type": "string", "name": "paramName", "required": true}]}, "identifiers": ["paramName"]}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "conditions", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "ClientPort"}, {"value": "Cookies"}, {"value": "HostName"}, {"value": "HttpVersion"}, {"value": "IsDevice"}, {"value": "PostArgs"}, {"value": "QueryString"}, {"value": "RemoteAddress"}, {"value": "RequestBody"}, {"value": "RequestHeader"}, {"value": "RequestMethod"}, {"value": "RequestScheme"}, {"value": "RequestUri"}, {"value": "ServerPort"}, {"value": "SocketAddr"}, {"value": "SslProtocol"}, {"value": "UrlFileExtension"}, {"value": "UrlFileName"}, {"value": "UrlPath"}]}}], "discriminators": [{"property": "name", "value": "ClientPort", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"property": "name", "value": "Cookies", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"property": "name", "value": "HostName", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"property": "name", "value": "HttpVersion", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"property": "name", "value": "IsDevice", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "Desktop"}, {"value": "Mobile"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"property": "name", "value": "PostArgs", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"property": "name", "value": "QueryString", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"property": "name", "value": "RemoteAddress", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "GeoMatch"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestBody", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestHeader", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestMethod", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "DELETE"}, {"value": "GET"}, {"value": "HEAD"}, {"value": "OPTIONS"}, {"value": "POST"}, {"value": "PUT"}, {"value": "TRACE"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestScheme", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "HTTP"}, {"value": "HTTPS"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestUri", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"property": "name", "value": "ServerPort", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"property": "name", "value": "SocketAddr", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"property": "name", "value": "SslProtocol", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1"}, {"value": "TLSv1.1"}, {"value": "TLSv1.2"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileExtension", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileName", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlPath", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}, {"value": "Wildcard"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "string", "name": "name"}, {"type": "integer32", "name": "order", "required": true}]}, "identifiers": ["name"]}]}, {"type": "array<object>", "name": "geoFilters", "item": {"type": "object", "props": [{"type": "string", "name": "action", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Block"}]}}, {"type": "array<string>", "name": "countryCodes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "relativePath", "required": true}]}}, {"readOnly": true, "type": "string", "name": "hostName"}, {"type": "boolean", "name": "isCompressionEnabled"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpAllowed"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpsAllowed"}, {"type": "string", "name": "optimizationType", "enum": {"items": [{"value": "DynamicSiteAcceleration"}, {"value": "GeneralMediaStreaming"}, {"value": "GeneralWebDelivery"}, {"value": "LargeFileDownload"}, {"value": "VideoOnDemandMediaStreaming"}]}}, {"type": "array<object>", "name": "originGroups", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "healthProbeSettings", "props": [{"type": "integer32", "name": "probeIntervalInSeconds", "format": {"maximum": 255, "minimum": 1}}, {"type": "string", "name": "probePath"}, {"type": "string", "name": "probeProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "NotSet"}]}}, {"type": "string", "name": "probeRequestType", "enum": {"items": [{"value": "GET"}, {"value": "HEAD"}, {"value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_read>", "name": "origins", "required": true, "item": {"type": "@ResourceReference_read"}}, {"type": "object", "name": "responseBasedOriginErrorDetectionSettings", "props": [{"type": "array<object>", "name": "httpErrorRanges", "item": {"type": "object", "props": [{"type": "integer32", "name": "begin", "format": {"maximum": 999, "minimum": 100}}, {"type": "integer32", "name": "end", "format": {"maximum": 999, "minimum": 100}}]}}, {"type": "string", "name": "responseBasedDetectedErrorTypes", "enum": {"items": [{"value": "None"}, {"value": "TcpAndHttpErrors"}, {"value": "TcpErrorsOnly"}]}}, {"type": "integer32", "name": "responseBasedFailoverThresholdPercentage", "format": {"maximum": 100, "minimum": 0}}]}, {"type": "integer32", "name": "trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "format": {"maximum": 50, "minimum": 0}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "originHostHeader"}, {"type": "string", "name": "originPath"}, {"type": "array<object>", "name": "origins", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "hostName", "required": true}, {"type": "integer32", "name": "httpPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "integer32", "name": "httpsPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "string", "name": "originHostHeader"}, {"type": "integer32", "name": "priority", "format": {"maximum": 5, "minimum": 1}}, {"type": "string", "name": "privateEndpointStatus", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}, {"value": "Timeout"}]}}, {"type": "string", "name": "privateLinkAlias"}, {"type": "string", "name": "privateLinkApprovalMessage"}, {"type": "string", "name": "privateLinkLocation"}, {"type": "string", "name": "privateLinkResourceId"}, {"type": "integer32", "name": "weight", "format": {"maximum": 1000, "minimum": 1}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "probePath"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "NotSet"}, "type": "string", "name": "queryStringCachingBehavior", "enum": {"items": [{"value": "BypassCaching"}, {"value": "IgnoreQueryString"}, {"value": "NotSet"}, {"value": "UseQueryString"}]}}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Running"}, {"value": "Starting"}, {"value": "Stopped"}, {"value": "Stopping"}]}}, {"type": "array<object>", "name": "urlSigningKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyId", "required": true}, {"type": "object", "name": "keySourceParameters", "required": true, "props": [{"type": "string", "name": "resourceGroupName", "required": true}, {"type": "string", "name": "secretName", "required": true}, {"type": "string", "name": "secretVersion", "required": true}, {"type": "string", "name": "subscriptionId", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "name": "vaultName", "required": true}]}]}, "identifiers": ["keyId"]}, {"type": "object", "name": "webApplicationFirewallPolicyLink", "props": [{"type": "string", "name": "id"}]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "application"}, {"value": "key"}, {"value": "managedIdentity"}, {"value": "user"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "application"}, {"value": "key"}, {"value": "managedIdentity"}, {"value": "user"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-02-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}", "version": "2024-02-01", "swagger": "mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9/V/MjAyNC0wMi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.endpointName", "options": ["n", "name", "endpoint-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the endpoint under the profile which is unique globally."}}, {"type": "string", "var": "$Path.profileName", "options": ["profile-name"], "required": true, "idPart": "name", "help": {"short": "Name of the CDN profile which is unique within the resource group."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Endpoints_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "endpointName", "arg": "$Path.endpointName", "required": true}, {"type": "string", "name": "profileName", "arg": "$Path.profileName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2024-02-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}", "version": "2024-02-01", "swagger": "mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9/V/MjAyNC0wMi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.endpointName", "options": ["n", "name", "endpoint-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the endpoint under the profile which is unique globally."}}, {"type": "string", "var": "$Path.profileName", "options": ["profile-name"], "required": true, "idPart": "name", "help": {"short": "Name of the CDN profile which is unique within the resource group."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "DefaultOriginGroup", "args": [{"type": "string", "var": "$endpoint.properties.defaultOriginGroup.id", "options": ["default-origin-group"], "group": "DefaultOriginGroup", "help": {"short": "The origin group to use for origins not explicitly included in an origin group. Can be specified as a resource ID or the name of an origin group of this endpoint."}}]}, {"name": "Endpoint", "args": [{"type": "ResourceLocation", "var": "$endpoint.location", "options": ["l", "location"], "required": true, "group": "Endpoint", "help": {"short": "Resource location."}}, {"type": "object", "var": "$endpoint.tags", "options": ["tags"], "group": "Endpoint", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "array<string>", "var": "$endpoint.properties.contentTypesToCompress", "options": ["content-types-to-compress"], "group": "Properties", "help": {"short": "List of content types on which compression applies. The value should be a valid MIME type."}, "item": {"type": "string"}}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy", "options": ["delivery-policy"], "group": "Properties", "help": {"short": "A policy that specifies the delivery rules to be used for an endpoint."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.description", "options": ["description"], "help": {"short": "User-friendly description of the policy."}}, {"type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules", "options": ["rules"], "required": true, "help": {"short": "A list of the delivery rules."}, "item": {"type": "object", "args": [{"type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules[].actions", "options": ["actions"], "required": true, "help": {"short": "A list of actions that are executed when all the conditions of a rule are satisfied."}, "item": {"type": "object", "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration", "options": ["cache-expiration"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheBehavior", "options": ["cache-behavior"], "required": true, "help": {"short": "Caching behavior for the requests"}, "enum": {"items": [{"name": "BypassCache", "value": "BypassCache"}, {"name": "Override", "value": "Override"}, {"name": "SetIfMissing", "value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheDuration", "options": ["cache-duration"], "help": {"short": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheType", "options": ["cache-type"], "required": true, "help": {"short": "The level at which the content needs to be cached."}, "enum": {"items": [{"name": "All", "value": "All"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleCacheExpirationActionParameters", "value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString", "options": ["cache-key-query-string"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryParameters", "options": ["query-parameters"], "help": {"short": "query parameters to include or exclude (comma separated)."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryStringBehavior", "options": ["query-string-behavior"], "required": true, "help": {"short": "Caching behavior for the requests"}, "enum": {"items": [{"name": "Exclude", "value": "Exclude"}, {"name": "ExcludeAll", "value": "ExcludeAll"}, {"name": "Include", "value": "Include"}, {"name": "IncludeAll", "value": "IncludeAll"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters", "value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader", "options": ["modify-request-header"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "@HeaderActionParameters_create.headerAction", "options": ["header-action"], "required": true, "help": {"short": "Action to perform"}, "enum": {"items": [{"name": "Append", "value": "Append"}, {"name": "Delete", "value": "Delete"}, {"name": "Overwrite", "value": "Overwrite"}]}}, {"type": "string", "var": "@HeaderActionParameters_create.headerName", "options": ["header-name"], "required": true, "help": {"short": "Name of the header to modify"}}, {"type": "string", "var": "@HeaderActionParameters_create.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleHeaderActionParameters", "value": "DeliveryRuleHeaderActionParameters"}]}}, {"type": "string", "var": "@HeaderActionParameters_create.value", "options": ["value"], "help": {"short": "Value for the specified action"}}], "cls": "HeaderActionParameters_create"}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader", "options": ["modify-response-header"], "args": [{"type": "@HeaderActionParameters_create", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride", "options": ["origin-group-override"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.originGroup", "options": ["origin-group"], "required": true, "help": {"short": "defines the OriginGroup that would override the DefaultOriginGroup."}, "args": [{"type": "string", "var": "@ResourceReference_create.id", "options": ["id"], "help": {"short": "Resource ID."}}], "cls": "ResourceReference_create"}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleOriginGroupOverrideActionParameters", "value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride", "options": ["route-configuration-override"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration", "options": ["cache-configuration"], "help": {"short": "The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheBehavior", "options": ["cache-behavior"], "help": {"short": "Caching behavior for the requests"}, "enum": {"items": [{"name": "HonorOrigin", "value": "HonorOrigin"}, {"name": "OverrideAlways", "value": "OverrideAlways"}, {"name": "OverrideIfOriginMissing", "value": "OverrideIfOriginMissing"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheDuration", "options": ["cache-duration"], "help": {"short": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.isCompressionEnabled", "options": ["is-compression-enabled"], "help": {"short": "Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryParameters", "options": ["query-parameters"], "help": {"short": "query parameters to include or exclude (comma separated)."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryStringCachingBehavior", "options": ["query-string-caching-behavior"], "help": {"short": "Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings."}, "enum": {"items": [{"name": "IgnoreQueryString", "value": "IgnoreQueryString"}, {"name": "IgnoreSpecifiedQueryStrings", "value": "IgnoreSpecifiedQueryStrings"}, {"name": "IncludeSpecifiedQueryStrings", "value": "IncludeSpecifiedQueryStrings"}, {"name": "UseQueryString", "value": "UseQueryString"}]}}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride", "options": ["origin-group-override"], "help": {"short": "A reference to the origin group override configuration. Leave empty to use the default origin group on route."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.forwardingProtocol", "options": ["forwarding-protocol"], "help": {"short": "Protocol this rule will use when forwarding traffic to backends."}, "enum": {"items": [{"name": "HttpOnly", "value": "HttpOnly"}, {"name": "HttpsOnly", "value": "HttpsOnly"}, {"name": "MatchRequest", "value": "MatchRequest"}]}}, {"type": "@ResourceReference_create", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.originGroup", "options": ["origin-group"], "help": {"short": "defines the OriginGroup that would override the DefaultOriginGroup on route."}}]}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRouteConfigurationOverrideActionParameters", "value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect", "options": ["url-redirect"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customFragment", "options": ["custom-fragment"], "help": {"short": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customHostname", "options": ["custom-hostname"], "help": {"short": "Host to redirect. Leave empty to use the incoming host as the destination host."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customPath", "options": ["custom-path"], "help": {"short": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customQueryString", "options": ["custom-query-string"], "help": {"short": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.destinationProtocol", "options": ["destination-protocol"], "help": {"short": "Protocol to use for the redirect. The default value is MatchRequest"}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}, {"name": "MatchRequest", "value": "MatchRequest"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.redirectType", "options": ["redirect-type"], "required": true, "help": {"short": "The redirect type the rule will use when redirecting traffic."}, "enum": {"items": [{"name": "Found", "value": "Found"}, {"name": "Moved", "value": "Moved"}, {"name": "PermanentRedirect", "value": "PermanentRedirect"}, {"name": "TemporaryRedirect", "value": "TemporaryRedirect"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleUrlRedirectActionParameters", "value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite", "options": ["url-rewrite"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.destination", "options": ["destination"], "required": true, "help": {"short": "Define the relative URL to which the above requests will be rewritten by."}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.preserveUnmatchedPath", "options": ["preserve-unmatched-path"], "help": {"short": "Whether to preserve unmatched path. Default value is true."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.sourcePattern", "options": ["source-pattern"], "required": true, "help": {"short": "define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleUrlRewriteActionParameters", "value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning", "options": ["url-signing"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.algorithm", "options": ["algorithm"], "help": {"short": "Algorithm to use for URL signing"}, "enum": {"items": [{"name": "SHA256", "value": "SHA256"}]}}, {"type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride", "options": ["parameter-name-override"], "help": {"short": "Defines which query string parameters in the url to be considered for expires, key id etc. "}, "item": {"type": "object", "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramIndicator", "options": ["param-indicator"], "required": true, "help": {"short": "Indicates the purpose of the parameter"}, "enum": {"items": [{"name": "Expires", "value": "Expires"}, {"name": "KeyId", "value": "KeyId"}, {"name": "Signature", "value": "Signature"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramName", "options": ["param-name"], "required": true, "help": {"short": "Parameter name"}}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleUrlSigningActionParameters", "value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}}, {"type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions", "options": ["conditions"], "help": {"short": "A list of conditions that must be matched for the actions to be executed"}, "item": {"type": "object", "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort", "options": ["client-port"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleClientPortConditionParameters", "value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies", "options": ["cookies"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.selector", "options": ["selector"], "help": {"short": "Name of Cookies to be matched"}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleCookiesConditionParameters", "value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName", "options": ["host-name"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleHostNameConditionParameters", "value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion", "options": ["http-version"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleHttpVersionConditionParameters", "value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice", "options": ["is-device"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string", "enum": {"items": [{"name": "Desktop", "value": "Desktop"}, {"name": "Mobile", "value": "Mobile"}]}}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleIsDeviceConditionParameters", "value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs", "options": ["post-args"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.selector", "options": ["selector"], "help": {"short": "Name of PostArg to be matched"}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRulePostArgsConditionParameters", "value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString", "options": ["query-string"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleQueryStringConditionParameters", "value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress", "options": ["remote-address"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.matchValues", "options": ["match-values"], "help": {"short": "Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match."}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "GeoMatch", "value": "GeoMatch"}, {"name": "IPMatch", "value": "IPMatch"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRemoteAddressConditionParameters", "value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody", "options": ["request-body"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRequestBodyConditionParameters", "value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader", "options": ["request-header"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.selector", "options": ["selector"], "help": {"short": "Name of Header to be matched"}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRequestHeaderConditionParameters", "value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod", "options": ["request-method"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string", "enum": {"items": [{"name": "DELETE", "value": "DELETE"}, {"name": "GET", "value": "GET"}, {"name": "HEAD", "value": "HEAD"}, {"name": "OPTIONS", "value": "OPTIONS"}, {"name": "POST", "value": "POST"}, {"name": "PUT", "value": "PUT"}, {"name": "TRACE", "value": "TRACE"}]}}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRequestMethodConditionParameters", "value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme", "options": ["request-scheme"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string", "enum": {"items": [{"name": "HTTP", "value": "HTTP"}, {"name": "HTTPS", "value": "HTTPS"}]}}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRequestSchemeConditionParameters", "value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri", "options": ["request-uri"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleRequestUriConditionParameters", "value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort", "options": ["server-port"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleServerPortConditionParameters", "value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr", "options": ["socket-addr"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "IPMatch", "value": "IPMatch"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleSocketAddrConditionParameters", "value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol", "options": ["ssl-protocol"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string", "enum": {"items": [{"name": "TLSv1", "value": "TLSv1"}, {"name": "TLSv1.1", "value": "TLSv1.1"}, {"name": "TLSv1.2", "value": "TLSv1.2"}]}}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleSslProtocolConditionParameters", "value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension", "options": ["url-file-extension"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleUrlFileExtensionMatchConditionParameters", "value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName", "options": ["url-file-name"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleUrlFilenameConditionParameters", "value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath", "options": ["url-path"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters", "options": ["parameters"], "required": true, "help": {"short": "Defines the parameters for the condition."}, "args": [{"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"type": "string"}}, {"type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}, "default": {"value": false}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.operator", "options": ["operator"], "required": true, "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}, {"name": "Wildcard", "value": "Wildcard"}]}}, {"type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "DeliveryRuleUrlPathMatchConditionParameters", "value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].name", "options": ["name"], "help": {"short": "Name of the rule"}}, {"type": "integer32", "var": "$endpoint.properties.deliveryPolicy.rules[].order", "options": ["order"], "required": true, "help": {"short": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied."}}]}}]}, {"type": "array<object>", "var": "$endpoint.properties.geoFilters", "options": ["geo-filters"], "group": "Properties", "help": {"short": "List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/"}, "item": {"type": "object", "args": [{"type": "string", "var": "$endpoint.properties.geoFilters[].action", "options": ["action"], "required": true, "help": {"short": "Action of the geo filter, i.e. allow or block access."}, "enum": {"items": [{"name": "Allow", "value": "Allow"}, {"name": "Block", "value": "Block"}]}}, {"type": "array<string>", "var": "$endpoint.properties.geoFilters[].countryCodes", "options": ["country-codes"], "required": true, "help": {"short": "Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US."}, "item": {"type": "string"}}, {"type": "string", "var": "$endpoint.properties.geoFilters[].relativePath", "options": ["relative-path"], "required": true, "help": {"short": "Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)"}}]}}, {"type": "boolean", "var": "$endpoint.properties.isCompressionEnabled", "options": ["is-compression-enabled"], "group": "Properties", "help": {"short": "Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB."}}, {"type": "boolean", "var": "$endpoint.properties.isHttpAllowed", "options": ["is-http-allowed"], "group": "Properties", "help": {"short": "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed."}, "default": {"value": true}}, {"type": "boolean", "var": "$endpoint.properties.isHttpsAllowed", "options": ["is-https-allowed"], "group": "Properties", "help": {"short": "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed."}, "default": {"value": true}}, {"type": "string", "var": "$endpoint.properties.optimizationType", "options": ["optimization-type"], "group": "Properties", "help": {"short": "Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization."}, "enum": {"items": [{"name": "DynamicSiteAcceleration", "value": "DynamicSiteAcceleration"}, {"name": "GeneralMediaStreaming", "value": "GeneralMediaStreaming"}, {"name": "GeneralWebDelivery", "value": "GeneralWebDelivery"}, {"name": "LargeFileDownload", "value": "LargeFileDownload"}, {"name": "VideoOnDemandMediaStreaming", "value": "VideoOnDemandMediaStreaming"}]}}, {"type": "array<object>", "var": "$endpoint.properties.originGroups", "options": ["origin-groups"], "group": "Properties", "help": {"short": "The origin groups comprising of origins that are used for load balancing the traffic based on availability."}, "item": {"type": "object", "args": [{"type": "string", "var": "$endpoint.properties.originGroups[].name", "options": ["name"], "required": true, "help": {"short": "Origin group name which must be unique within the endpoint."}}, {"type": "object", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings", "options": ["health-probe-settings"], "group": "Properties", "help": {"short": "Health probe settings to the origin that is used to determine the health of the origin."}, "args": [{"type": "integer32", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeIntervalInSeconds", "options": ["probe-interval-in-seconds"], "help": {"short": "The number of seconds between health probes.Default is 240sec."}, "format": {"maximum": 255, "minimum": 1}}, {"type": "string", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probePath", "options": ["probe-path"], "help": {"short": "The path relative to the origin that is used to determine the health of the origin."}}, {"type": "string", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeProtocol", "options": ["probe-protocol"], "help": {"short": "Protocol to use for health probe."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}, {"name": "NotSet", "value": "NotSet"}]}}, {"type": "string", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeRequestType", "options": ["probe-request-type"], "help": {"short": "The type of health probe request that is made."}, "enum": {"items": [{"name": "GET", "value": "GET"}, {"name": "HEAD", "value": "HEAD"}, {"name": "NotSet", "value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_create>", "var": "$endpoint.properties.originGroups[].properties.origins", "options": ["origins"], "group": "Properties", "help": {"short": "The source of the content being delivered via CDN within given origin group."}, "item": {"type": "@ResourceReference_create"}}, {"type": "object", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings", "options": ["response-based-origin-error-detection-settings"], "group": "Properties", "help": {"short": "The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported."}, "args": [{"type": "array<object>", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges", "options": ["http-error-ranges"], "help": {"short": "The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy."}, "item": {"type": "object", "args": [{"type": "integer32", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].begin", "options": ["begin"], "help": {"short": "The inclusive start of the http status code range."}, "format": {"maximum": 999, "minimum": 100}}, {"type": "integer32", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].end", "options": ["end"], "help": {"short": "The inclusive end of the http status code range."}, "format": {"maximum": 999, "minimum": 100}}]}}, {"type": "string", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedDetectedErrorTypes", "options": ["response-based-detected-error-types"], "help": {"short": "Type of response errors for real user requests for which origin will be deemed unhealthy"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "TcpAndHttpErrors", "value": "TcpAndHttpErrors"}, {"name": "TcpErrorsOnly", "value": "TcpErrorsOnly"}]}}, {"type": "integer32", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedFailoverThresholdPercentage", "options": ["response-based-failover-threshold-percentage"], "help": {"short": "The percentage of failed requests in the sample where failover should trigger."}, "format": {"maximum": 100, "minimum": 0}}]}, {"type": "integer32", "var": "$endpoint.properties.originGroups[].properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "options": ["traffic-restoration-time-to-healed-or-new-endpoints-in-minutes"], "group": "Properties", "help": {"short": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported."}, "format": {"maximum": 50, "minimum": 0}}]}}, {"type": "string", "var": "$endpoint.properties.originHostHeader", "options": ["origin-host-header"], "group": "Properties", "help": {"short": "The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default."}}, {"type": "string", "var": "$endpoint.properties.originPath", "options": ["origin-path"], "group": "Properties", "help": {"short": "A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."}}, {"type": "array<object>", "var": "$endpoint.properties.origins", "options": ["origins"], "group": "Properties", "help": {"short": "The source of the content being delivered via CDN."}, "item": {"type": "object", "args": [{"type": "string", "var": "$endpoint.properties.origins[].name", "options": ["name"], "required": true, "help": {"short": "Origin name which must be unique within the endpoint. "}}, {"type": "boolean", "var": "$endpoint.properties.origins[].properties.enabled", "options": ["enabled"], "group": "Properties", "help": {"short": "Origin is enabled for load balancing or not. By default, origin is always enabled."}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.hostName", "options": ["host-name"], "group": "Properties", "help": {"short": "The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint."}}, {"type": "integer32", "var": "$endpoint.properties.origins[].properties.httpPort", "options": ["http-port"], "group": "Properties", "help": {"short": "The value of the HTTP port. Must be between 1 and 65535."}, "format": {"maximum": 65535, "minimum": 1}}, {"type": "integer32", "var": "$endpoint.properties.origins[].properties.httpsPort", "options": ["https-port"], "group": "Properties", "help": {"short": "The value of the HTTPS port. Must be between 1 and 65535."}, "format": {"maximum": 65535, "minimum": 1}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.originHostHeader", "options": ["origin-host-header"], "group": "Properties", "help": {"short": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default."}}, {"type": "integer32", "var": "$endpoint.properties.origins[].properties.priority", "options": ["priority"], "group": "Properties", "help": {"short": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5."}, "format": {"maximum": 5, "minimum": 1}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkAlias", "options": ["private-link-alias"], "group": "Properties", "help": {"short": "The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'"}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkApprovalMessage", "options": ["private-link-approval-message"], "group": "Properties", "help": {"short": "A custom message to be included in the approval request to connect to the Private Link."}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkLocation", "options": ["private-link-location"], "group": "Properties", "help": {"short": "The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated"}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkResourceId", "options": ["private-link-resource-id"], "group": "Properties", "help": {"short": "The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'"}}, {"type": "integer32", "var": "$endpoint.properties.origins[].properties.weight", "options": ["weight"], "group": "Properties", "help": {"short": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000"}, "format": {"maximum": 1000, "minimum": 1}}]}}, {"type": "string", "var": "$endpoint.properties.probePath", "options": ["probe-path"], "group": "Properties", "help": {"short": "Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin."}}, {"type": "string", "var": "$endpoint.properties.queryStringCachingBehavior", "options": ["query-string-caching-behavior"], "group": "Properties", "help": {"short": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL."}, "default": {"value": "NotSet"}, "enum": {"items": [{"name": "BypassCaching", "value": "BypassCaching"}, {"name": "IgnoreQueryString", "value": "IgnoreQueryString"}, {"name": "NotSet", "value": "NotSet"}, {"name": "UseQueryString", "value": "UseQueryString"}]}}, {"type": "array<object>", "var": "$endpoint.properties.urlSigningKeys", "options": ["url-signing-keys"], "group": "Properties", "help": {"short": "List of keys used to validate the signed URL hashes."}, "item": {"type": "object", "args": [{"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keyId", "options": ["key-id"], "required": true, "help": {"short": "Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash."}}, {"type": "object", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters", "options": ["key-source-parameters"], "required": true, "help": {"short": "Defines the parameters for using customer key vault for Url Signing Key."}, "args": [{"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.resourceGroupName", "options": ["resource-group-name"], "required": true, "help": {"short": "Resource group of the user's Key Vault containing the secret"}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretName", "options": ["secret-name"], "required": true, "help": {"short": "The name of secret in Key Vault."}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretVersion", "options": ["secret-version"], "required": true, "help": {"short": "The version(GUID) of secret in Key Vault."}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.subscriptionId", "options": ["subscription-id"], "required": true, "help": {"short": "Subscription Id of the user's Key Vault containing the secret"}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.typeName", "options": ["type-name"], "required": true, "enum": {"items": [{"name": "KeyVaultSigningKeyParameters", "value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.vaultName", "options": ["vault-name"], "required": true, "help": {"short": "The name of the user's Key Vault containing the secret"}}]}]}}, {"type": "object", "var": "$endpoint.properties.webApplicationFirewallPolicyLink", "options": ["web-application-firewall-policy-link"], "group": "Properties", "help": {"short": "Defines the Web Application Firewall policy for the endpoint (if applicable)"}, "args": [{"type": "string", "var": "$endpoint.properties.webApplicationFirewallPolicyLink.id", "options": ["id"], "help": {"short": "Resource ID."}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Endpoints_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "endpointName", "arg": "$Path.endpointName", "required": true}, {"type": "string", "name": "profileName", "arg": "$Path.profileName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "endpoint", "required": true, "props": [{"type": "ResourceLocation", "name": "location", "arg": "$endpoint.location", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "contentTypesToCompress", "arg": "$endpoint.properties.contentTypesToCompress", "item": {"type": "string"}}, {"type": "object", "name": "defaultOriginGroup", "props": [{"type": "string", "name": "id", "arg": "$endpoint.properties.defaultOriginGroup.id"}]}, {"type": "object", "name": "deliveryPolicy", "arg": "$endpoint.properties.deliveryPolicy", "props": [{"type": "string", "name": "description", "arg": "$endpoint.properties.deliveryPolicy.description"}, {"type": "array<object>", "name": "rules", "arg": "$endpoint.properties.deliveryPolicy.rules", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "actions", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration", "value": "CacheExpiration"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString", "value": "CacheKeyQueryString"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader", "value": "ModifyRequestHeader"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader", "value": "ModifyResponseHeader"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride", "value": "OriginGroupOverride"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride", "value": "RouteConfigurationOverride"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect", "value": "UrlRedirect"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite", "value": "UrlRewrite"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning", "value": "UrlSigning"}]}}], "discriminators": [{"property": "name", "value": "CacheExpiration", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters", "required": true, "props": [{"type": "string", "name": "cacheBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheBehavior", "required": true, "enum": {"items": [{"value": "BypassCache"}, {"value": "Override"}, {"value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "name": "cacheDuration", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheDuration"}, {"type": "string", "name": "cacheType", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheType", "required": true, "enum": {"items": [{"value": "All"}]}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"property": "name", "value": "CacheKeyQueryString", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters", "required": true, "props": [{"nullable": true, "type": "string", "name": "queryParameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryParameters"}, {"type": "string", "name": "queryStringBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryStringBehavior", "required": true, "enum": {"items": [{"value": "Exclude"}, {"value": "ExcludeAll"}, {"value": "Include"}, {"value": "IncludeAll"}]}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"property": "name", "value": "ModifyRequestHeader", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader.parameters", "required": true, "props": [{"type": "string", "name": "headerAction", "arg": "@HeaderActionParameters_create.headerAction", "required": true, "enum": {"items": [{"value": "Append"}, {"value": "Delete"}, {"value": "Overwrite"}]}}, {"type": "string", "name": "headerName", "arg": "@HeaderActionParameters_create.headerName", "required": true}, {"type": "string", "name": "typeName", "arg": "@HeaderActionParameters_create.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHeaderActionParameters"}]}}, {"type": "string", "name": "value", "arg": "@HeaderActionParameters_create.value"}], "cls": "HeaderActionParameters_create"}]}, {"property": "name", "value": "ModifyResponseHeader", "props": [{"type": "@HeaderActionParameters_create", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader.parameters", "required": true}]}, {"property": "name", "value": "OriginGroupOverride", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters", "required": true, "props": [{"type": "object", "name": "originGroup", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.originGroup", "required": true, "props": [{"type": "string", "name": "id", "arg": "@ResourceReference_create.id"}], "cls": "ResourceReference_create"}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "RouteConfigurationOverride", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters", "required": true, "props": [{"type": "object", "name": "cacheConfiguration", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration", "props": [{"type": "string", "name": "cacheBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheBehavior", "enum": {"items": [{"value": "HonorOrigin"}, {"value": "OverrideAlways"}, {"value": "OverrideIfOriginMissing"}]}}, {"type": "string", "name": "cacheDuration", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheDuration"}, {"type": "string", "name": "isCompressionEnabled", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.isCompressionEnabled", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "queryParameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryParameters"}, {"type": "string", "name": "queryStringCachingBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryStringCachingBehavior", "enum": {"items": [{"value": "IgnoreQueryString"}, {"value": "IgnoreSpecifiedQueryStrings"}, {"value": "IncludeSpecifiedQueryStrings"}, {"value": "UseQueryString"}]}}]}, {"type": "object", "name": "originGroupOverride", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride", "props": [{"type": "string", "name": "forwardingProtocol", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.forwardingProtocol", "enum": {"items": [{"value": "HttpOnly"}, {"value": "HttpsOnly"}, {"value": "MatchRequest"}]}}, {"type": "@ResourceReference_create", "name": "originGroup", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.originGroup"}]}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRedirect", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters", "required": true, "props": [{"type": "string", "name": "customFragment", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customFragment"}, {"type": "string", "name": "customHostname", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customHostname"}, {"type": "string", "name": "customPath", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customPath"}, {"type": "string", "name": "customQueryString", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customQueryString"}, {"type": "string", "name": "destinationProtocol", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.destinationProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "MatchRequest"}]}}, {"type": "string", "name": "redirectType", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.redirectType", "required": true, "enum": {"items": [{"value": "Found"}, {"value": "Moved"}, {"value": "PermanentRedirect"}, {"value": "TemporaryRedirect"}]}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRewrite", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters", "required": true, "props": [{"type": "string", "name": "destination", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.destination", "required": true}, {"type": "boolean", "name": "preserveUnmatchedPath", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.preserveUnmatchedPath"}, {"type": "string", "name": "sourcePattern", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.sourcePattern", "required": true}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"property": "name", "value": "UrlSigning", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters", "required": true, "props": [{"type": "string", "name": "algorithm", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.algorithm", "enum": {"items": [{"value": "SHA256"}]}}, {"type": "array<object>", "name": "parameterNameOverride", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride", "item": {"type": "object", "props": [{"type": "string", "name": "paramIndicator", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramIndicator", "required": true, "enum": {"items": [{"value": "Expires"}, {"value": "KeyId"}, {"value": "Signature"}]}}, {"type": "string", "name": "paramName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramName", "required": true}]}, "identifiers": ["paramName"]}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "conditions", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort", "value": "ClientPort"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies", "value": "Cookies"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName", "value": "HostName"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion", "value": "HttpVersion"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice", "value": "IsDevice"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs", "value": "PostArgs"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString", "value": "QueryString"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress", "value": "RemoteAddress"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody", "value": "RequestBody"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader", "value": "RequestHeader"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod", "value": "RequestMethod"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme", "value": "RequestScheme"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri", "value": "RequestUri"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort", "value": "ServerPort"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr", "value": "SocketAddr"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol", "value": "SslProtocol"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension", "value": "UrlFileExtension"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName", "value": "UrlFileName"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath", "value": "UrlPath"}]}}], "discriminators": [{"property": "name", "value": "ClientPort", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"property": "name", "value": "Cookies", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.selector"}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"property": "name", "value": "HostName", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"property": "name", "value": "HttpVersion", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"property": "name", "value": "IsDevice", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "Desktop"}, {"value": "Mobile"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"property": "name", "value": "PostArgs", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.selector"}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"property": "name", "value": "QueryString", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"property": "name", "value": "RemoteAddress", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "GeoMatch"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestBody", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestHeader", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.selector"}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestMethod", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "DELETE"}, {"value": "GET"}, {"value": "HEAD"}, {"value": "OPTIONS"}, {"value": "POST"}, {"value": "PUT"}, {"value": "TRACE"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestScheme", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "HTTP"}, {"value": "HTTPS"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestUri", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"property": "name", "value": "ServerPort", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"property": "name", "value": "SocketAddr", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"property": "name", "value": "SslProtocol", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1"}, {"value": "TLSv1.1"}, {"value": "TLSv1.2"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileExtension", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileName", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlPath", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}, {"value": "Wildcard"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "string", "name": "name", "arg": "$endpoint.properties.deliveryPolicy.rules[].name"}, {"type": "integer32", "name": "order", "arg": "$endpoint.properties.deliveryPolicy.rules[].order", "required": true}]}, "identifiers": ["name"]}]}, {"type": "array<object>", "name": "geoFilters", "arg": "$endpoint.properties.geoFilters", "item": {"type": "object", "props": [{"type": "string", "name": "action", "arg": "$endpoint.properties.geoFilters[].action", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Block"}]}}, {"type": "array<string>", "name": "countryCodes", "arg": "$endpoint.properties.geoFilters[].countryCodes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "relativePath", "arg": "$endpoint.properties.geoFilters[].relativePath", "required": true}]}}, {"type": "boolean", "name": "isCompressionEnabled", "arg": "$endpoint.properties.isCompressionEnabled"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpAllowed", "arg": "$endpoint.properties.isHttpAllowed"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpsAllowed", "arg": "$endpoint.properties.isHttpsAllowed"}, {"type": "string", "name": "optimizationType", "arg": "$endpoint.properties.optimizationType", "enum": {"items": [{"value": "DynamicSiteAcceleration"}, {"value": "GeneralMediaStreaming"}, {"value": "GeneralWebDelivery"}, {"value": "LargeFileDownload"}, {"value": "VideoOnDemandMediaStreaming"}]}}, {"type": "array<object>", "name": "originGroups", "arg": "$endpoint.properties.originGroups", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$endpoint.properties.originGroups[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "healthProbeSettings", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings", "props": [{"type": "integer32", "name": "probeIntervalInSeconds", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeIntervalInSeconds", "format": {"maximum": 255, "minimum": 1}}, {"type": "string", "name": "probePath", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probePath"}, {"type": "string", "name": "probeProtocol", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "NotSet"}]}}, {"type": "string", "name": "probeRequestType", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeRequestType", "enum": {"items": [{"value": "GET"}, {"value": "HEAD"}, {"value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_create>", "name": "origins", "arg": "$endpoint.properties.originGroups[].properties.origins", "required": true, "item": {"type": "@ResourceReference_create"}}, {"type": "object", "name": "responseBasedOriginErrorDetectionSettings", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings", "props": [{"type": "array<object>", "name": "httpErrorRanges", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges", "item": {"type": "object", "props": [{"type": "integer32", "name": "begin", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].begin", "format": {"maximum": 999, "minimum": 100}}, {"type": "integer32", "name": "end", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].end", "format": {"maximum": 999, "minimum": 100}}]}}, {"type": "string", "name": "responseBasedDetectedErrorTypes", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedDetectedErrorTypes", "enum": {"items": [{"value": "None"}, {"value": "TcpAndHttpErrors"}, {"value": "TcpErrorsOnly"}]}}, {"type": "integer32", "name": "responseBasedFailoverThresholdPercentage", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedFailoverThresholdPercentage", "format": {"maximum": 100, "minimum": 0}}]}, {"type": "integer32", "name": "trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "arg": "$endpoint.properties.originGroups[].properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "format": {"maximum": 50, "minimum": 0}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "originHostHeader", "arg": "$endpoint.properties.originHostHeader"}, {"type": "string", "name": "originPath", "arg": "$endpoint.properties.originPath"}, {"type": "array<object>", "name": "origins", "arg": "$endpoint.properties.origins", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$endpoint.properties.origins[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "enabled", "arg": "$endpoint.properties.origins[].properties.enabled"}, {"type": "string", "name": "hostName", "arg": "$endpoint.properties.origins[].properties.hostName", "required": true}, {"type": "integer32", "name": "httpPort", "arg": "$endpoint.properties.origins[].properties.httpPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "integer32", "name": "httpsPort", "arg": "$endpoint.properties.origins[].properties.httpsPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "string", "name": "originHostHeader", "arg": "$endpoint.properties.origins[].properties.originHostHeader"}, {"type": "integer32", "name": "priority", "arg": "$endpoint.properties.origins[].properties.priority", "format": {"maximum": 5, "minimum": 1}}, {"type": "string", "name": "privateLinkAlias", "arg": "$endpoint.properties.origins[].properties.privateLinkAlias"}, {"type": "string", "name": "privateLinkApprovalMessage", "arg": "$endpoint.properties.origins[].properties.privateLinkApprovalMessage"}, {"type": "string", "name": "privateLinkLocation", "arg": "$endpoint.properties.origins[].properties.privateLinkLocation"}, {"type": "string", "name": "privateLinkResourceId", "arg": "$endpoint.properties.origins[].properties.privateLinkResourceId"}, {"type": "integer32", "name": "weight", "arg": "$endpoint.properties.origins[].properties.weight", "format": {"maximum": 1000, "minimum": 1}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "probePath", "arg": "$endpoint.properties.probePath"}, {"default": {"value": "NotSet"}, "type": "string", "name": "queryStringCachingBehavior", "arg": "$endpoint.properties.queryStringCachingBehavior", "enum": {"items": [{"value": "BypassCaching"}, {"value": "IgnoreQueryString"}, {"value": "NotSet"}, {"value": "UseQueryString"}]}}, {"type": "array<object>", "name": "urlSigningKeys", "arg": "$endpoint.properties.urlSigningKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyId", "arg": "$endpoint.properties.urlSigningKeys[].keyId", "required": true}, {"type": "object", "name": "keySourceParameters", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters", "required": true, "props": [{"type": "string", "name": "resourceGroupName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.resourceGroupName", "required": true}, {"type": "string", "name": "secretName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretName", "required": true}, {"type": "string", "name": "secretVersion", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretVersion", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.subscriptionId", "required": true}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.typeName", "required": true, "enum": {"items": [{"value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "name": "vaultName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.vaultName", "required": true}]}]}, "identifiers": ["keyId"]}, {"type": "object", "name": "webApplicationFirewallPolicyLink", "arg": "$endpoint.properties.webApplicationFirewallPolicyLink", "props": [{"type": "string", "name": "id", "arg": "$endpoint.properties.webApplicationFirewallPolicyLink.id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$endpoint.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/endpoints/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "contentTypesToCompress", "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "customDomains", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "hostName", "required": true}, {"type": "string", "name": "validationData"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "object", "name": "defaultOriginGroup", "props": [{"type": "string", "name": "id"}], "cls": "ResourceReference_read"}, {"type": "object", "name": "deliveryPolicy", "props": [{"type": "string", "name": "description"}, {"type": "array<object>", "name": "rules", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "actions", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "CacheExpiration"}, {"value": "CacheKeyQueryString"}, {"value": "ModifyRequestHeader"}, {"value": "ModifyResponseHeader"}, {"value": "OriginGroupOverride"}, {"value": "RouteConfigurationOverride"}, {"value": "UrlRedirect"}, {"value": "UrlRewrite"}, {"value": "UrlSigning"}]}}], "discriminators": [{"property": "name", "value": "CacheExpiration", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "cacheBehavior", "required": true, "enum": {"items": [{"value": "BypassCache"}, {"value": "Override"}, {"value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "name": "cacheDuration"}, {"type": "string", "name": "cacheType", "required": true, "enum": {"items": [{"value": "All"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"property": "name", "value": "CacheKeyQueryString", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"nullable": true, "type": "string", "name": "queryParameters"}, {"type": "string", "name": "queryStringBehavior", "required": true, "enum": {"items": [{"value": "Exclude"}, {"value": "ExcludeAll"}, {"value": "Include"}, {"value": "IncludeAll"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"property": "name", "value": "ModifyRequestHeader", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "headerAction", "required": true, "enum": {"items": [{"value": "Append"}, {"value": "Delete"}, {"value": "Overwrite"}]}}, {"type": "string", "name": "headerName", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHeaderActionParameters"}]}}, {"type": "string", "name": "value"}], "cls": "HeaderActionParameters_read"}]}, {"property": "name", "value": "ModifyResponseHeader", "props": [{"type": "@HeaderActionParameters_read", "name": "parameters", "required": true}]}, {"property": "name", "value": "OriginGroupOverride", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "@ResourceReference_read", "name": "originGroup", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "RouteConfigurationOverride", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "cacheConfiguration", "props": [{"type": "string", "name": "cacheBehavior", "enum": {"items": [{"value": "HonorOrigin"}, {"value": "OverrideAlways"}, {"value": "OverrideIfOriginMissing"}]}}, {"type": "string", "name": "cacheDuration"}, {"type": "string", "name": "isCompressionEnabled", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "queryParameters"}, {"type": "string", "name": "queryStringCachingBehavior", "enum": {"items": [{"value": "IgnoreQueryString"}, {"value": "IgnoreSpecifiedQueryStrings"}, {"value": "IncludeSpecifiedQueryStrings"}, {"value": "UseQueryString"}]}}]}, {"type": "object", "name": "originGroupOverride", "props": [{"type": "string", "name": "forwardingProtocol", "enum": {"items": [{"value": "HttpOnly"}, {"value": "HttpsOnly"}, {"value": "MatchRequest"}]}}, {"type": "@ResourceReference_read", "name": "originGroup"}]}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRedirect", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "customFragment"}, {"type": "string", "name": "customHostname"}, {"type": "string", "name": "customPath"}, {"type": "string", "name": "customQueryString"}, {"type": "string", "name": "destinationProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "MatchRequest"}]}}, {"type": "string", "name": "redirectType", "required": true, "enum": {"items": [{"value": "Found"}, {"value": "Moved"}, {"value": "PermanentRedirect"}, {"value": "TemporaryRedirect"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRewrite", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "destination", "required": true}, {"type": "boolean", "name": "preserveUnmatchedPath"}, {"type": "string", "name": "sourcePattern", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"property": "name", "value": "UrlSigning", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "algorithm", "enum": {"items": [{"value": "SHA256"}]}}, {"type": "array<object>", "name": "parameterNameOverride", "item": {"type": "object", "props": [{"type": "string", "name": "paramIndicator", "required": true, "enum": {"items": [{"value": "Expires"}, {"value": "KeyId"}, {"value": "Signature"}]}}, {"type": "string", "name": "paramName", "required": true}]}, "identifiers": ["paramName"]}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "conditions", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "ClientPort"}, {"value": "Cookies"}, {"value": "HostName"}, {"value": "HttpVersion"}, {"value": "IsDevice"}, {"value": "PostArgs"}, {"value": "QueryString"}, {"value": "RemoteAddress"}, {"value": "RequestBody"}, {"value": "RequestHeader"}, {"value": "RequestMethod"}, {"value": "RequestScheme"}, {"value": "RequestUri"}, {"value": "ServerPort"}, {"value": "SocketAddr"}, {"value": "SslProtocol"}, {"value": "UrlFileExtension"}, {"value": "UrlFileName"}, {"value": "UrlPath"}]}}], "discriminators": [{"property": "name", "value": "ClientPort", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"property": "name", "value": "Cookies", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"property": "name", "value": "HostName", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"property": "name", "value": "HttpVersion", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"property": "name", "value": "IsDevice", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "Desktop"}, {"value": "Mobile"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"property": "name", "value": "PostArgs", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"property": "name", "value": "QueryString", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"property": "name", "value": "RemoteAddress", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "GeoMatch"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestBody", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestHeader", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestMethod", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "DELETE"}, {"value": "GET"}, {"value": "HEAD"}, {"value": "OPTIONS"}, {"value": "POST"}, {"value": "PUT"}, {"value": "TRACE"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestScheme", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "HTTP"}, {"value": "HTTPS"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestUri", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"property": "name", "value": "ServerPort", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"property": "name", "value": "SocketAddr", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"property": "name", "value": "SslProtocol", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1"}, {"value": "TLSv1.1"}, {"value": "TLSv1.2"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileExtension", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileName", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlPath", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}, {"value": "Wildcard"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "string", "name": "name"}, {"type": "integer32", "name": "order", "required": true}]}, "identifiers": ["name"]}]}, {"type": "array<object>", "name": "geoFilters", "item": {"type": "object", "props": [{"type": "string", "name": "action", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Block"}]}}, {"type": "array<string>", "name": "countryCodes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "relativePath", "required": true}]}}, {"readOnly": true, "type": "string", "name": "hostName"}, {"type": "boolean", "name": "isCompressionEnabled"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpAllowed"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpsAllowed"}, {"type": "string", "name": "optimizationType", "enum": {"items": [{"value": "DynamicSiteAcceleration"}, {"value": "GeneralMediaStreaming"}, {"value": "GeneralWebDelivery"}, {"value": "LargeFileDownload"}, {"value": "VideoOnDemandMediaStreaming"}]}}, {"type": "array<object>", "name": "originGroups", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "healthProbeSettings", "props": [{"type": "integer32", "name": "probeIntervalInSeconds", "format": {"maximum": 255, "minimum": 1}}, {"type": "string", "name": "probePath"}, {"type": "string", "name": "probeProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "NotSet"}]}}, {"type": "string", "name": "probeRequestType", "enum": {"items": [{"value": "GET"}, {"value": "HEAD"}, {"value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_read>", "name": "origins", "required": true, "item": {"type": "@ResourceReference_read"}}, {"type": "object", "name": "responseBasedOriginErrorDetectionSettings", "props": [{"type": "array<object>", "name": "httpErrorRanges", "item": {"type": "object", "props": [{"type": "integer32", "name": "begin", "format": {"maximum": 999, "minimum": 100}}, {"type": "integer32", "name": "end", "format": {"maximum": 999, "minimum": 100}}]}}, {"type": "string", "name": "responseBasedDetectedErrorTypes", "enum": {"items": [{"value": "None"}, {"value": "TcpAndHttpErrors"}, {"value": "TcpErrorsOnly"}]}}, {"type": "integer32", "name": "responseBasedFailoverThresholdPercentage", "format": {"maximum": 100, "minimum": 0}}]}, {"type": "integer32", "name": "trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "format": {"maximum": 50, "minimum": 0}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "originHostHeader"}, {"type": "string", "name": "originPath"}, {"type": "array<object>", "name": "origins", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "hostName", "required": true}, {"type": "integer32", "name": "httpPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "integer32", "name": "httpsPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "string", "name": "originHostHeader"}, {"type": "integer32", "name": "priority", "format": {"maximum": 5, "minimum": 1}}, {"type": "string", "name": "privateEndpointStatus", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}, {"value": "Timeout"}]}}, {"type": "string", "name": "privateLinkAlias"}, {"type": "string", "name": "privateLinkApprovalMessage"}, {"type": "string", "name": "privateLinkLocation"}, {"type": "string", "name": "privateLinkResourceId"}, {"type": "integer32", "name": "weight", "format": {"maximum": 1000, "minimum": 1}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "probePath"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "NotSet"}, "type": "string", "name": "queryStringCachingBehavior", "enum": {"items": [{"value": "BypassCaching"}, {"value": "IgnoreQueryString"}, {"value": "NotSet"}, {"value": "UseQueryString"}]}}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Running"}, {"value": "Starting"}, {"value": "Stopped"}, {"value": "Stopping"}]}}, {"type": "array<object>", "name": "urlSigningKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyId", "required": true}, {"type": "object", "name": "keySourceParameters", "required": true, "props": [{"type": "string", "name": "resourceGroupName", "required": true}, {"type": "string", "name": "secretName", "required": true}, {"type": "string", "name": "secretVersion", "required": true}, {"type": "string", "name": "subscriptionId", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "name": "vaultName", "required": true}]}]}, "identifiers": ["keyId"]}, {"type": "object", "name": "webApplicationFirewallPolicyLink", "props": [{"type": "string", "name": "id"}]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "application"}, {"value": "key"}, {"value": "managedIdentity"}, {"value": "user"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "application"}, {"value": "key"}, {"value": "managedIdentity"}, {"value": "user"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Endpoint_read"}}}}, {"statusCode": [202], "header": {"items": [{"name": "location"}]}, "body": {"json": {"var": "$Instance", "schema": {"type": "@Endpoint_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-02-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}", "version": "2024-02-01", "swagger": "mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9/V/MjAyNC0wMi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.endpointName", "options": ["n", "name", "endpoint-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the endpoint under the profile which is unique globally."}}, {"type": "string", "var": "$Path.profileName", "options": ["profile-name"], "required": true, "idPart": "name", "help": {"short": "Name of the CDN profile which is unique within the resource group."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "DefaultOriginGroup", "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.defaultOriginGroup.id", "options": ["default-origin-group"], "group": "DefaultOriginGroup", "help": {"short": "The origin group to use for origins not explicitly included in an origin group. Can be specified as a resource ID or the name of an origin group of this endpoint."}}]}, {"name": "Endpoint", "args": [{"type": "ResourceLocation", "var": "$endpoint.location", "options": ["l", "location"], "group": "Endpoint", "help": {"short": "Resource location."}}, {"nullable": true, "type": "object", "var": "$endpoint.tags", "options": ["tags"], "group": "Endpoint", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.contentTypesToCompress", "options": ["content-types-to-compress"], "group": "Properties", "help": {"short": "List of content types on which compression applies. The value should be a valid MIME type."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "object", "var": "$endpoint.properties.deliveryPolicy", "options": ["delivery-policy"], "group": "Properties", "help": {"short": "A policy that specifies the delivery rules to be used for an endpoint."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.description", "options": ["description"], "help": {"short": "User-friendly description of the policy."}}, {"type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules", "options": ["rules"], "help": {"short": "A list of the delivery rules."}, "item": {"nullable": true, "type": "object", "args": [{"type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules[].actions", "options": ["actions"], "help": {"short": "A list of actions that are executed when all the conditions of a rule are satisfied."}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration", "options": ["cache-expiration"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheBehavior", "options": ["cache-behavior"], "help": {"short": "Caching behavior for the requests"}, "enum": {"items": [{"name": "BypassCache", "value": "BypassCache"}, {"name": "Override", "value": "Override"}, {"name": "SetIfMissing", "value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheDuration", "options": ["cache-duration"], "help": {"short": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheType", "options": ["cache-type"], "help": {"short": "The level at which the content needs to be cached."}, "enum": {"items": [{"name": "All", "value": "All"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleCacheExpirationActionParameters", "value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString", "options": ["cache-key-query-string"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryParameters", "options": ["query-parameters"], "help": {"short": "query parameters to include or exclude (comma separated)."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryStringBehavior", "options": ["query-string-behavior"], "help": {"short": "Caching behavior for the requests"}, "enum": {"items": [{"name": "Exclude", "value": "Exclude"}, {"name": "ExcludeAll", "value": "ExcludeAll"}, {"name": "Include", "value": "Include"}, {"name": "IncludeAll", "value": "IncludeAll"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters", "value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader", "options": ["modify-request-header"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "@HeaderActionParameters_update.headerAction", "options": ["header-action"], "help": {"short": "Action to perform"}, "enum": {"items": [{"name": "Append", "value": "Append"}, {"name": "Delete", "value": "Delete"}, {"name": "Overwrite", "value": "Overwrite"}]}}, {"type": "string", "var": "@HeaderActionParameters_update.headerName", "options": ["header-name"], "help": {"short": "Name of the header to modify"}}, {"type": "string", "var": "@HeaderActionParameters_update.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleHeaderActionParameters", "value": "DeliveryRuleHeaderActionParameters"}]}}, {"nullable": true, "type": "string", "var": "@HeaderActionParameters_update.value", "options": ["value"], "help": {"short": "Value for the specified action"}}], "cls": "HeaderActionParameters_update"}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader", "options": ["modify-response-header"], "args": [{"type": "@HeaderActionParameters_update", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride", "options": ["origin-group-override"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.originGroup", "options": ["origin-group"], "help": {"short": "defines the OriginGroup that would override the DefaultOriginGroup."}, "args": [{"nullable": true, "type": "string", "var": "@ResourceReference_update.id", "options": ["id"], "help": {"short": "Resource ID."}}], "cls": "ResourceReference_update"}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleOriginGroupOverrideActionParameters", "value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride", "options": ["route-configuration-override"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"nullable": true, "type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration", "options": ["cache-configuration"], "help": {"short": "The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheBehavior", "options": ["cache-behavior"], "help": {"short": "Caching behavior for the requests"}, "enum": {"items": [{"name": "HonorOrigin", "value": "HonorOrigin"}, {"name": "OverrideAlways", "value": "OverrideAlways"}, {"name": "OverrideIfOriginMissing", "value": "OverrideIfOriginMissing"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheDuration", "options": ["cache-duration"], "help": {"short": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss"}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.isCompressionEnabled", "options": ["is-compression-enabled"], "help": {"short": "Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryParameters", "options": ["query-parameters"], "help": {"short": "query parameters to include or exclude (comma separated)."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryStringCachingBehavior", "options": ["query-string-caching-behavior"], "help": {"short": "Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings."}, "enum": {"items": [{"name": "IgnoreQueryString", "value": "IgnoreQueryString"}, {"name": "IgnoreSpecifiedQueryStrings", "value": "IgnoreSpecifiedQueryStrings"}, {"name": "IncludeSpecifiedQueryStrings", "value": "IncludeSpecifiedQueryStrings"}, {"name": "UseQueryString", "value": "UseQueryString"}]}}]}, {"nullable": true, "type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride", "options": ["origin-group-override"], "help": {"short": "A reference to the origin group override configuration. Leave empty to use the default origin group on route."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.forwardingProtocol", "options": ["forwarding-protocol"], "help": {"short": "Protocol this rule will use when forwarding traffic to backends."}, "enum": {"items": [{"name": "HttpOnly", "value": "HttpOnly"}, {"name": "HttpsOnly", "value": "HttpsOnly"}, {"name": "MatchRequest", "value": "MatchRequest"}]}}, {"nullable": true, "type": "@ResourceReference_update", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.originGroup", "options": ["origin-group"], "help": {"short": "defines the OriginGroup that would override the DefaultOriginGroup on route."}}]}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRouteConfigurationOverrideActionParameters", "value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect", "options": ["url-redirect"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customFragment", "options": ["custom-fragment"], "help": {"short": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customHostname", "options": ["custom-hostname"], "help": {"short": "Host to redirect. Leave empty to use the incoming host as the destination host."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customPath", "options": ["custom-path"], "help": {"short": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customQueryString", "options": ["custom-query-string"], "help": {"short": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.destinationProtocol", "options": ["destination-protocol"], "help": {"short": "Protocol to use for the redirect. The default value is MatchRequest"}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}, {"name": "MatchRequest", "value": "MatchRequest"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.redirectType", "options": ["redirect-type"], "help": {"short": "The redirect type the rule will use when redirecting traffic."}, "enum": {"items": [{"name": "Found", "value": "Found"}, {"name": "Moved", "value": "Moved"}, {"name": "PermanentRedirect", "value": "PermanentRedirect"}, {"name": "TemporaryRedirect", "value": "TemporaryRedirect"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleUrlRedirectActionParameters", "value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite", "options": ["url-rewrite"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.destination", "options": ["destination"], "help": {"short": "Define the relative URL to which the above requests will be rewritten by."}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.preserveUnmatchedPath", "options": ["preserve-unmatched-path"], "help": {"short": "Whether to preserve unmatched path. Default value is true."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.sourcePattern", "options": ["source-pattern"], "help": {"short": "define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched."}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleUrlRewriteActionParameters", "value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning", "options": ["url-signing"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the action."}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.algorithm", "options": ["algorithm"], "help": {"short": "Algorithm to use for URL signing"}, "enum": {"items": [{"name": "SHA256", "value": "SHA256"}]}}, {"nullable": true, "type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride", "options": ["parameter-name-override"], "help": {"short": "Defines which query string parameters in the url to be considered for expires, key id etc. "}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramIndicator", "options": ["param-indicator"], "help": {"short": "Indicates the purpose of the parameter"}, "enum": {"items": [{"name": "Expires", "value": "Expires"}, {"name": "KeyId", "value": "KeyId"}, {"name": "Signature", "value": "Signature"}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramName", "options": ["param-name"], "help": {"short": "Parameter name"}}]}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleUrlSigningActionParameters", "value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}}, {"nullable": true, "type": "array<object>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions", "options": ["conditions"], "help": {"short": "A list of conditions that must be matched for the actions to be executed"}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort", "options": ["client-port"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleClientPortConditionParameters", "value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies", "options": ["cookies"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.selector", "options": ["selector"], "help": {"short": "Name of Cookies to be matched"}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleCookiesConditionParameters", "value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName", "options": ["host-name"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleHostNameConditionParameters", "value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion", "options": ["http-version"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleHttpVersionConditionParameters", "value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice", "options": ["is-device"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Desktop", "value": "Desktop"}, {"name": "Mobile", "value": "Mobile"}]}}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleIsDeviceConditionParameters", "value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs", "options": ["post-args"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.selector", "options": ["selector"], "help": {"short": "Name of PostArg to be matched"}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRulePostArgsConditionParameters", "value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString", "options": ["query-string"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleQueryStringConditionParameters", "value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress", "options": ["remote-address"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.matchValues", "options": ["match-values"], "help": {"short": "Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "GeoMatch", "value": "GeoMatch"}, {"name": "IPMatch", "value": "IPMatch"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRemoteAddressConditionParameters", "value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody", "options": ["request-body"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRequestBodyConditionParameters", "value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader", "options": ["request-header"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.selector", "options": ["selector"], "help": {"short": "Name of Header to be matched"}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRequestHeaderConditionParameters", "value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod", "options": ["request-method"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "DELETE", "value": "DELETE"}, {"name": "GET", "value": "GET"}, {"name": "HEAD", "value": "HEAD"}, {"name": "OPTIONS", "value": "OPTIONS"}, {"name": "POST", "value": "POST"}, {"name": "PUT", "value": "PUT"}, {"name": "TRACE", "value": "TRACE"}]}}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRequestMethodConditionParameters", "value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme", "options": ["request-scheme"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "HTTP", "value": "HTTP"}, {"name": "HTTPS", "value": "HTTPS"}]}}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRequestSchemeConditionParameters", "value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri", "options": ["request-uri"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleRequestUriConditionParameters", "value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort", "options": ["server-port"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleServerPortConditionParameters", "value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr", "options": ["socket-addr"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "IPMatch", "value": "IPMatch"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleSocketAddrConditionParameters", "value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol", "options": ["ssl-protocol"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "TLSv1", "value": "TLSv1"}, {"name": "TLSv1.1", "value": "TLSv1.1"}, {"name": "TLSv1.2", "value": "TLSv1.2"}]}}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Equal", "value": "Equal"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleSslProtocolConditionParameters", "value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension", "options": ["url-file-extension"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleUrlFileExtensionMatchConditionParameters", "value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName", "options": ["url-file-name"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleUrlFilenameConditionParameters", "value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath", "options": ["url-path"], "args": [{"type": "object", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters", "options": ["parameters"], "help": {"short": "Defines the parameters for the condition."}, "args": [{"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.matchValues", "options": ["match-values"], "help": {"short": "The match value for the condition of the delivery rule"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.negateCondition", "options": ["negate-condition"], "help": {"short": "Describes if this is negate condition or not"}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.operator", "options": ["operator"], "help": {"short": "Describes operator to be matched"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "BeginsWith", "value": "BeginsWith"}, {"name": "Contains", "value": "Contains"}, {"name": "EndsWith", "value": "EndsWith"}, {"name": "Equal", "value": "Equal"}, {"name": "GreaterThan", "value": "GreaterThan"}, {"name": "GreaterThanOrEqual", "value": "GreaterThanOrEqual"}, {"name": "LessThan", "value": "LessThan"}, {"name": "LessThanOrEqual", "value": "LessThanOrEqual"}, {"name": "RegEx", "value": "RegEx"}, {"name": "Wildcard", "value": "Wildcard"}]}}, {"nullable": true, "type": "array<string>", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.transforms", "options": ["transforms"], "help": {"short": "List of transforms"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Lowercase", "value": "Lowercase"}, {"name": "RemoveNulls", "value": "RemoveNulls"}, {"name": "Trim", "value": "Trim"}, {"name": "Uppercase", "value": "Uppercase"}, {"name": "UrlDecode", "value": "UrlDecode"}, {"name": "UrlEncode", "value": "UrlEncode"}]}}}, {"type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "DeliveryRuleUrlPathMatchConditionParameters", "value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.deliveryPolicy.rules[].name", "options": ["name"], "help": {"short": "Name of the rule"}}, {"type": "integer32", "var": "$endpoint.properties.deliveryPolicy.rules[].order", "options": ["order"], "help": {"short": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied."}}]}}]}, {"nullable": true, "type": "array<object>", "var": "$endpoint.properties.geoFilters", "options": ["geo-filters"], "group": "Properties", "help": {"short": "List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/"}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$endpoint.properties.geoFilters[].action", "options": ["action"], "help": {"short": "Action of the geo filter, i.e. allow or block access."}, "enum": {"items": [{"name": "Allow", "value": "Allow"}, {"name": "Block", "value": "Block"}]}}, {"type": "array<string>", "var": "$endpoint.properties.geoFilters[].countryCodes", "options": ["country-codes"], "help": {"short": "Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US."}, "item": {"nullable": true, "type": "string"}}, {"type": "string", "var": "$endpoint.properties.geoFilters[].relativePath", "options": ["relative-path"], "help": {"short": "Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)"}}]}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.isCompressionEnabled", "options": ["is-compression-enabled"], "group": "Properties", "help": {"short": "Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB."}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.isHttpAllowed", "options": ["is-http-allowed"], "group": "Properties", "help": {"short": "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed."}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.isHttpsAllowed", "options": ["is-https-allowed"], "group": "Properties", "help": {"short": "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.optimizationType", "options": ["optimization-type"], "group": "Properties", "help": {"short": "Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization."}, "enum": {"items": [{"name": "DynamicSiteAcceleration", "value": "DynamicSiteAcceleration"}, {"name": "GeneralMediaStreaming", "value": "GeneralMediaStreaming"}, {"name": "GeneralWebDelivery", "value": "GeneralWebDelivery"}, {"name": "LargeFileDownload", "value": "LargeFileDownload"}, {"name": "VideoOnDemandMediaStreaming", "value": "VideoOnDemandMediaStreaming"}]}}, {"nullable": true, "type": "array<object>", "var": "$endpoint.properties.originGroups", "options": ["origin-groups"], "group": "Properties", "help": {"short": "The origin groups comprising of origins that are used for load balancing the traffic based on availability."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$endpoint.properties.originGroups[].name", "options": ["name"], "help": {"short": "Origin group name which must be unique within the endpoint."}}, {"nullable": true, "type": "object", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings", "options": ["health-probe-settings"], "group": "Properties", "help": {"short": "Health probe settings to the origin that is used to determine the health of the origin."}, "args": [{"nullable": true, "type": "integer32", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeIntervalInSeconds", "options": ["probe-interval-in-seconds"], "help": {"short": "The number of seconds between health probes.Default is 240sec."}, "format": {"maximum": 255, "minimum": 1}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probePath", "options": ["probe-path"], "help": {"short": "The path relative to the origin that is used to determine the health of the origin."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeProtocol", "options": ["probe-protocol"], "help": {"short": "Protocol to use for health probe."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}, {"name": "NotSet", "value": "NotSet"}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeRequestType", "options": ["probe-request-type"], "help": {"short": "The type of health probe request that is made."}, "enum": {"items": [{"name": "GET", "value": "GET"}, {"name": "HEAD", "value": "HEAD"}, {"name": "NotSet", "value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_update>", "var": "$endpoint.properties.originGroups[].properties.origins", "options": ["origins"], "group": "Properties", "help": {"short": "The source of the content being delivered via CDN within given origin group."}, "item": {"nullable": true, "type": "@ResourceReference_update"}}, {"nullable": true, "type": "object", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings", "options": ["response-based-origin-error-detection-settings"], "group": "Properties", "help": {"short": "The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported."}, "args": [{"nullable": true, "type": "array<object>", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges", "options": ["http-error-ranges"], "help": {"short": "The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "integer32", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].begin", "options": ["begin"], "help": {"short": "The inclusive start of the http status code range."}, "format": {"maximum": 999, "minimum": 100}}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].end", "options": ["end"], "help": {"short": "The inclusive end of the http status code range."}, "format": {"maximum": 999, "minimum": 100}}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedDetectedErrorTypes", "options": ["response-based-detected-error-types"], "help": {"short": "Type of response errors for real user requests for which origin will be deemed unhealthy"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "TcpAndHttpErrors", "value": "TcpAndHttpErrors"}, {"name": "TcpErrorsOnly", "value": "TcpErrorsOnly"}]}}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedFailoverThresholdPercentage", "options": ["response-based-failover-threshold-percentage"], "help": {"short": "The percentage of failed requests in the sample where failover should trigger."}, "format": {"maximum": 100, "minimum": 0}}]}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.originGroups[].properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "options": ["traffic-restoration-time-to-healed-or-new-endpoints-in-minutes"], "group": "Properties", "help": {"short": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported."}, "format": {"maximum": 50, "minimum": 0}}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.originHostHeader", "options": ["origin-host-header"], "group": "Properties", "help": {"short": "The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.originPath", "options": ["origin-path"], "group": "Properties", "help": {"short": "A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."}}, {"type": "array<object>", "var": "$endpoint.properties.origins", "options": ["origins"], "group": "Properties", "help": {"short": "The source of the content being delivered via CDN."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$endpoint.properties.origins[].name", "options": ["name"], "help": {"short": "Origin name which must be unique within the endpoint. "}}, {"nullable": true, "type": "boolean", "var": "$endpoint.properties.origins[].properties.enabled", "options": ["enabled"], "group": "Properties", "help": {"short": "Origin is enabled for load balancing or not. By default, origin is always enabled."}}, {"type": "string", "var": "$endpoint.properties.origins[].properties.hostName", "options": ["host-name"], "group": "Properties", "help": {"short": "The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint."}}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.origins[].properties.httpPort", "options": ["http-port"], "group": "Properties", "help": {"short": "The value of the HTTP port. Must be between 1 and 65535."}, "format": {"maximum": 65535, "minimum": 1}}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.origins[].properties.httpsPort", "options": ["https-port"], "group": "Properties", "help": {"short": "The value of the HTTPS port. Must be between 1 and 65535."}, "format": {"maximum": 65535, "minimum": 1}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.origins[].properties.originHostHeader", "options": ["origin-host-header"], "group": "Properties", "help": {"short": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default."}}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.origins[].properties.priority", "options": ["priority"], "group": "Properties", "help": {"short": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5."}, "format": {"maximum": 5, "minimum": 1}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkAlias", "options": ["private-link-alias"], "group": "Properties", "help": {"short": "The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'"}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkApprovalMessage", "options": ["private-link-approval-message"], "group": "Properties", "help": {"short": "A custom message to be included in the approval request to connect to the Private Link."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkLocation", "options": ["private-link-location"], "group": "Properties", "help": {"short": "The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated"}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.origins[].properties.privateLinkResourceId", "options": ["private-link-resource-id"], "group": "Properties", "help": {"short": "The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'"}}, {"nullable": true, "type": "integer32", "var": "$endpoint.properties.origins[].properties.weight", "options": ["weight"], "group": "Properties", "help": {"short": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000"}, "format": {"maximum": 1000, "minimum": 1}}]}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.probePath", "options": ["probe-path"], "group": "Properties", "help": {"short": "Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin."}}, {"nullable": true, "type": "string", "var": "$endpoint.properties.queryStringCachingBehavior", "options": ["query-string-caching-behavior"], "group": "Properties", "help": {"short": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL."}, "enum": {"items": [{"name": "BypassCaching", "value": "BypassCaching"}, {"name": "IgnoreQueryString", "value": "IgnoreQueryString"}, {"name": "NotSet", "value": "NotSet"}, {"name": "UseQueryString", "value": "UseQueryString"}]}}, {"nullable": true, "type": "array<object>", "var": "$endpoint.properties.urlSigningKeys", "options": ["url-signing-keys"], "group": "Properties", "help": {"short": "List of keys used to validate the signed URL hashes."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keyId", "options": ["key-id"], "help": {"short": "Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash."}}, {"type": "object", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters", "options": ["key-source-parameters"], "help": {"short": "Defines the parameters for using customer key vault for Url Signing Key."}, "args": [{"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.resourceGroupName", "options": ["resource-group-name"], "help": {"short": "Resource group of the user's Key Vault containing the secret"}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretName", "options": ["secret-name"], "help": {"short": "The name of secret in Key Vault."}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretVersion", "options": ["secret-version"], "help": {"short": "The version(GUID) of secret in Key Vault."}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.subscriptionId", "options": ["subscription-id"], "help": {"short": "Subscription Id of the user's Key Vault containing the secret"}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.typeName", "options": ["type-name"], "enum": {"items": [{"name": "KeyVaultSigningKeyParameters", "value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "var": "$endpoint.properties.urlSigningKeys[].keySourceParameters.vaultName", "options": ["vault-name"], "help": {"short": "The name of the user's Key Vault containing the secret"}}]}]}}, {"nullable": true, "type": "object", "var": "$endpoint.properties.webApplicationFirewallPolicyLink", "options": ["web-application-firewall-policy-link"], "group": "Properties", "help": {"short": "Defines the Web Application Firewall policy for the endpoint (if applicable)"}, "args": [{"nullable": true, "type": "string", "var": "$endpoint.properties.webApplicationFirewallPolicyLink.id", "options": ["id"], "help": {"short": "Resource ID."}}]}]}], "operations": [{"operationId": "Endpoints_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "endpointName", "arg": "$Path.endpointName", "required": true}, {"type": "string", "name": "profileName", "arg": "$Path.profileName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/endpoints/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "contentTypesToCompress", "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "customDomains", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "hostName", "required": true}, {"type": "string", "name": "validationData"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "object", "name": "defaultOriginGroup", "props": [{"type": "string", "name": "id"}], "cls": "ResourceReference_read"}, {"type": "object", "name": "deliveryPolicy", "props": [{"type": "string", "name": "description"}, {"type": "array<object>", "name": "rules", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "actions", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "CacheExpiration"}, {"value": "CacheKeyQueryString"}, {"value": "ModifyRequestHeader"}, {"value": "ModifyResponseHeader"}, {"value": "OriginGroupOverride"}, {"value": "RouteConfigurationOverride"}, {"value": "UrlRedirect"}, {"value": "UrlRewrite"}, {"value": "UrlSigning"}]}}], "discriminators": [{"property": "name", "value": "CacheExpiration", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "cacheBehavior", "required": true, "enum": {"items": [{"value": "BypassCache"}, {"value": "Override"}, {"value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "name": "cacheDuration"}, {"type": "string", "name": "cacheType", "required": true, "enum": {"items": [{"value": "All"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"property": "name", "value": "CacheKeyQueryString", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"nullable": true, "type": "string", "name": "queryParameters"}, {"type": "string", "name": "queryStringBehavior", "required": true, "enum": {"items": [{"value": "Exclude"}, {"value": "ExcludeAll"}, {"value": "Include"}, {"value": "IncludeAll"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"property": "name", "value": "ModifyRequestHeader", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "headerAction", "required": true, "enum": {"items": [{"value": "Append"}, {"value": "Delete"}, {"value": "Overwrite"}]}}, {"type": "string", "name": "headerName", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHeaderActionParameters"}]}}, {"type": "string", "name": "value"}], "cls": "HeaderActionParameters_read"}]}, {"property": "name", "value": "ModifyResponseHeader", "props": [{"type": "@HeaderActionParameters_read", "name": "parameters", "required": true}]}, {"property": "name", "value": "OriginGroupOverride", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "@ResourceReference_read", "name": "originGroup", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "RouteConfigurationOverride", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "cacheConfiguration", "props": [{"type": "string", "name": "cacheBehavior", "enum": {"items": [{"value": "HonorOrigin"}, {"value": "OverrideAlways"}, {"value": "OverrideIfOriginMissing"}]}}, {"type": "string", "name": "cacheDuration"}, {"type": "string", "name": "isCompressionEnabled", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "queryParameters"}, {"type": "string", "name": "queryStringCachingBehavior", "enum": {"items": [{"value": "IgnoreQueryString"}, {"value": "IgnoreSpecifiedQueryStrings"}, {"value": "IncludeSpecifiedQueryStrings"}, {"value": "UseQueryString"}]}}]}, {"type": "object", "name": "originGroupOverride", "props": [{"type": "string", "name": "forwardingProtocol", "enum": {"items": [{"value": "HttpOnly"}, {"value": "HttpsOnly"}, {"value": "MatchRequest"}]}}, {"type": "@ResourceReference_read", "name": "originGroup"}]}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRedirect", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "customFragment"}, {"type": "string", "name": "customHostname"}, {"type": "string", "name": "customPath"}, {"type": "string", "name": "customQueryString"}, {"type": "string", "name": "destinationProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "MatchRequest"}]}}, {"type": "string", "name": "redirectType", "required": true, "enum": {"items": [{"value": "Found"}, {"value": "Moved"}, {"value": "PermanentRedirect"}, {"value": "TemporaryRedirect"}]}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRewrite", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "destination", "required": true}, {"type": "boolean", "name": "preserveUnmatchedPath"}, {"type": "string", "name": "sourcePattern", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"property": "name", "value": "UrlSigning", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "algorithm", "enum": {"items": [{"value": "SHA256"}]}}, {"type": "array<object>", "name": "parameterNameOverride", "item": {"type": "object", "props": [{"type": "string", "name": "paramIndicator", "required": true, "enum": {"items": [{"value": "Expires"}, {"value": "KeyId"}, {"value": "Signature"}]}}, {"type": "string", "name": "paramName", "required": true}]}, "identifiers": ["paramName"]}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "conditions", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "ClientPort"}, {"value": "Cookies"}, {"value": "HostName"}, {"value": "HttpVersion"}, {"value": "IsDevice"}, {"value": "PostArgs"}, {"value": "QueryString"}, {"value": "RemoteAddress"}, {"value": "RequestBody"}, {"value": "RequestHeader"}, {"value": "RequestMethod"}, {"value": "RequestScheme"}, {"value": "RequestUri"}, {"value": "ServerPort"}, {"value": "SocketAddr"}, {"value": "SslProtocol"}, {"value": "UrlFileExtension"}, {"value": "UrlFileName"}, {"value": "UrlPath"}]}}], "discriminators": [{"property": "name", "value": "ClientPort", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"property": "name", "value": "Cookies", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"property": "name", "value": "HostName", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"property": "name", "value": "HttpVersion", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"property": "name", "value": "IsDevice", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "Desktop"}, {"value": "Mobile"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"property": "name", "value": "PostArgs", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"property": "name", "value": "QueryString", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"property": "name", "value": "RemoteAddress", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "GeoMatch"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestBody", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestHeader", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector"}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestMethod", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "DELETE"}, {"value": "GET"}, {"value": "HEAD"}, {"value": "OPTIONS"}, {"value": "POST"}, {"value": "PUT"}, {"value": "TRACE"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestScheme", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "HTTP"}, {"value": "HTTPS"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestUri", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"property": "name", "value": "ServerPort", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"property": "name", "value": "SocketAddr", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"property": "name", "value": "SslProtocol", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1"}, {"value": "TLSv1.1"}, {"value": "TLSv1.2"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileExtension", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileName", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlPath", "props": [{"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition"}, {"type": "string", "name": "operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}, {"value": "Wildcard"}]}}, {"type": "array<string>", "name": "transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "string", "name": "name"}, {"type": "integer32", "name": "order", "required": true}]}, "identifiers": ["name"]}]}, {"type": "array<object>", "name": "geoFilters", "item": {"type": "object", "props": [{"type": "string", "name": "action", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Block"}]}}, {"type": "array<string>", "name": "countryCodes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "relativePath", "required": true}]}}, {"readOnly": true, "type": "string", "name": "hostName"}, {"type": "boolean", "name": "isCompressionEnabled"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpAllowed"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpsAllowed"}, {"type": "string", "name": "optimizationType", "enum": {"items": [{"value": "DynamicSiteAcceleration"}, {"value": "GeneralMediaStreaming"}, {"value": "GeneralWebDelivery"}, {"value": "LargeFileDownload"}, {"value": "VideoOnDemandMediaStreaming"}]}}, {"type": "array<object>", "name": "originGroups", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "healthProbeSettings", "props": [{"type": "integer32", "name": "probeIntervalInSeconds", "format": {"maximum": 255, "minimum": 1}}, {"type": "string", "name": "probePath"}, {"type": "string", "name": "probeProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "NotSet"}]}}, {"type": "string", "name": "probeRequestType", "enum": {"items": [{"value": "GET"}, {"value": "HEAD"}, {"value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_read>", "name": "origins", "required": true, "item": {"type": "@ResourceReference_read"}}, {"type": "object", "name": "responseBasedOriginErrorDetectionSettings", "props": [{"type": "array<object>", "name": "httpErrorRanges", "item": {"type": "object", "props": [{"type": "integer32", "name": "begin", "format": {"maximum": 999, "minimum": 100}}, {"type": "integer32", "name": "end", "format": {"maximum": 999, "minimum": 100}}]}}, {"type": "string", "name": "responseBasedDetectedErrorTypes", "enum": {"items": [{"value": "None"}, {"value": "TcpAndHttpErrors"}, {"value": "TcpErrorsOnly"}]}}, {"type": "integer32", "name": "responseBasedFailoverThresholdPercentage", "format": {"maximum": 100, "minimum": 0}}]}, {"type": "integer32", "name": "trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "format": {"maximum": 50, "minimum": 0}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "originHostHeader"}, {"type": "string", "name": "originPath"}, {"type": "array<object>", "name": "origins", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "hostName", "required": true}, {"type": "integer32", "name": "httpPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "integer32", "name": "httpsPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "string", "name": "originHostHeader"}, {"type": "integer32", "name": "priority", "format": {"maximum": 5, "minimum": 1}}, {"type": "string", "name": "privateEndpointStatus", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}, {"value": "Timeout"}]}}, {"type": "string", "name": "privateLinkAlias"}, {"type": "string", "name": "privateLinkApprovalMessage"}, {"type": "string", "name": "privateLinkLocation"}, {"type": "string", "name": "privateLinkResourceId"}, {"type": "integer32", "name": "weight", "format": {"maximum": 1000, "minimum": 1}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "probePath"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "NotSet"}, "type": "string", "name": "queryStringCachingBehavior", "enum": {"items": [{"value": "BypassCaching"}, {"value": "IgnoreQueryString"}, {"value": "NotSet"}, {"value": "UseQueryString"}]}}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Running"}, {"value": "Starting"}, {"value": "Stopped"}, {"value": "Stopping"}]}}, {"type": "array<object>", "name": "urlSigningKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyId", "required": true}, {"type": "object", "name": "keySourceParameters", "required": true, "props": [{"type": "string", "name": "resourceGroupName", "required": true}, {"type": "string", "name": "secretName", "required": true}, {"type": "string", "name": "secretVersion", "required": true}, {"type": "string", "name": "subscriptionId", "required": true}, {"type": "string", "name": "typeName", "required": true, "enum": {"items": [{"value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "name": "vaultName", "required": true}]}]}, "identifiers": ["keyId"]}, {"type": "object", "name": "webApplicationFirewallPolicyLink", "props": [{"type": "string", "name": "id"}]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "application"}, {"value": "key"}, {"value": "managedIdentity"}, {"value": "user"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "application"}, {"value": "key"}, {"value": "managedIdentity"}, {"value": "user"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Endpoint_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "endpoint", "required": true, "props": [{"type": "ResourceLocation", "name": "location", "arg": "$endpoint.location", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "contentTypesToCompress", "arg": "$endpoint.properties.contentTypesToCompress", "item": {"type": "string"}}, {"type": "object", "name": "defaultOriginGroup", "props": [{"type": "string", "name": "id", "arg": "$endpoint.properties.defaultOriginGroup.id"}]}, {"type": "object", "name": "deliveryPolicy", "arg": "$endpoint.properties.deliveryPolicy", "props": [{"type": "string", "name": "description", "arg": "$endpoint.properties.deliveryPolicy.description"}, {"type": "array<object>", "name": "rules", "arg": "$endpoint.properties.deliveryPolicy.rules", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "actions", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration", "value": "CacheExpiration"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString", "value": "CacheKeyQueryString"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader", "value": "ModifyRequestHeader"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader", "value": "ModifyResponseHeader"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride", "value": "OriginGroupOverride"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride", "value": "RouteConfigurationOverride"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect", "value": "UrlRedirect"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite", "value": "UrlRewrite"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning", "value": "UrlSigning"}]}}], "discriminators": [{"property": "name", "value": "CacheExpiration", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters", "required": true, "props": [{"type": "string", "name": "cacheBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheBehavior", "required": true, "enum": {"items": [{"value": "BypassCache"}, {"value": "Override"}, {"value": "SetIfMissing"}]}}, {"nullable": true, "type": "string", "name": "cacheDuration", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheDuration"}, {"type": "string", "name": "cacheType", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.cacheType", "required": true, "enum": {"items": [{"value": "All"}]}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheExpiration.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheExpirationActionParameters"}]}}]}]}, {"property": "name", "value": "CacheKeyQueryString", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters", "required": true, "props": [{"nullable": true, "type": "string", "name": "queryParameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryParameters"}, {"type": "string", "name": "queryStringBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.queryStringBehavior", "required": true, "enum": {"items": [{"value": "Exclude"}, {"value": "ExcludeAll"}, {"value": "Include"}, {"value": "IncludeAll"}]}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].CacheKeyQueryString.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"}]}}]}]}, {"property": "name", "value": "ModifyRequestHeader", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyRequestHeader.parameters", "required": true, "props": [{"type": "string", "name": "headerAction", "arg": "@HeaderActionParameters_update.headerAction", "required": true, "enum": {"items": [{"value": "Append"}, {"value": "Delete"}, {"value": "Overwrite"}]}}, {"type": "string", "name": "headerName", "arg": "@HeaderActionParameters_update.headerName", "required": true}, {"type": "string", "name": "typeName", "arg": "@HeaderActionParameters_update.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHeaderActionParameters"}]}}, {"type": "string", "name": "value", "arg": "@HeaderActionParameters_update.value"}], "cls": "HeaderActionParameters_update"}]}, {"property": "name", "value": "ModifyResponseHeader", "props": [{"type": "@HeaderActionParameters_update", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].ModifyResponseHeader.parameters", "required": true}]}, {"property": "name", "value": "OriginGroupOverride", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters", "required": true, "props": [{"type": "object", "name": "originGroup", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.originGroup", "required": true, "props": [{"type": "string", "name": "id", "arg": "@ResourceReference_update.id"}], "cls": "ResourceReference_update"}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].OriginGroupOverride.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleOriginGroupOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "RouteConfigurationOverride", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters", "required": true, "props": [{"type": "object", "name": "cacheConfiguration", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration", "props": [{"type": "string", "name": "cacheBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheBehavior", "enum": {"items": [{"value": "HonorOrigin"}, {"value": "OverrideAlways"}, {"value": "OverrideIfOriginMissing"}]}}, {"type": "string", "name": "cacheDuration", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.cacheDuration"}, {"type": "string", "name": "isCompressionEnabled", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.isCompressionEnabled", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "queryParameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryParameters"}, {"type": "string", "name": "queryStringCachingBehavior", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.cacheConfiguration.queryStringCachingBehavior", "enum": {"items": [{"value": "IgnoreQueryString"}, {"value": "IgnoreSpecifiedQueryStrings"}, {"value": "IncludeSpecifiedQueryStrings"}, {"value": "UseQueryString"}]}}]}, {"type": "object", "name": "originGroupOverride", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride", "props": [{"type": "string", "name": "forwardingProtocol", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.forwardingProtocol", "enum": {"items": [{"value": "HttpOnly"}, {"value": "HttpsOnly"}, {"value": "MatchRequest"}]}}, {"type": "@ResourceReference_update", "name": "originGroup", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.originGroupOverride.originGroup"}]}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].RouteConfigurationOverride.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRouteConfigurationOverrideActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRedirect", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters", "required": true, "props": [{"type": "string", "name": "customFragment", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customFragment"}, {"type": "string", "name": "customHostname", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customHostname"}, {"type": "string", "name": "customPath", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customPath"}, {"type": "string", "name": "customQueryString", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.customQueryString"}, {"type": "string", "name": "destinationProtocol", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.destinationProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "MatchRequest"}]}}, {"type": "string", "name": "redirectType", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.redirectType", "required": true, "enum": {"items": [{"value": "Found"}, {"value": "Moved"}, {"value": "PermanentRedirect"}, {"value": "TemporaryRedirect"}]}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRedirect.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRedirectActionParameters"}]}}]}]}, {"property": "name", "value": "UrlRewrite", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters", "required": true, "props": [{"type": "string", "name": "destination", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.destination", "required": true}, {"type": "boolean", "name": "preserveUnmatchedPath", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.preserveUnmatchedPath"}, {"type": "string", "name": "sourcePattern", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.sourcePattern", "required": true}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlRewrite.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlRewriteActionParameters"}]}}]}]}, {"property": "name", "value": "UrlSigning", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters", "required": true, "props": [{"type": "string", "name": "algorithm", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.algorithm", "enum": {"items": [{"value": "SHA256"}]}}, {"type": "array<object>", "name": "parameterNameOverride", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride", "item": {"type": "object", "props": [{"type": "string", "name": "paramIndicator", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramIndicator", "required": true, "enum": {"items": [{"value": "Expires"}, {"value": "KeyId"}, {"value": "Signature"}]}}, {"type": "string", "name": "paramName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.parameterNameOverride[].paramName", "required": true}]}, "identifiers": ["paramName"]}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].actions[].UrlSigning.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlSigningActionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "conditions", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort", "value": "ClientPort"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies", "value": "Cookies"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName", "value": "HostName"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion", "value": "HttpVersion"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice", "value": "IsDevice"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs", "value": "PostArgs"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString", "value": "QueryString"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress", "value": "RemoteAddress"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody", "value": "RequestBody"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader", "value": "RequestHeader"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod", "value": "RequestMethod"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme", "value": "RequestScheme"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri", "value": "RequestUri"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort", "value": "ServerPort"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr", "value": "SocketAddr"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol", "value": "SslProtocol"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension", "value": "UrlFileExtension"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName", "value": "UrlFileName"}, {"arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath", "value": "UrlPath"}]}}], "discriminators": [{"property": "name", "value": "ClientPort", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ClientPort.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleClientPortConditionParameters"}]}}]}]}, {"property": "name", "value": "Cookies", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.selector"}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].Cookies.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleCookiesConditionParameters"}]}}]}]}, {"property": "name", "value": "HostName", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HostName.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHostNameConditionParameters"}]}}]}]}, {"property": "name", "value": "HttpVersion", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].HttpVersion.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleHttpVersionConditionParameters"}]}}]}]}, {"property": "name", "value": "IsDevice", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "Desktop"}, {"value": "Mobile"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].IsDevice.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleIsDeviceConditionParameters"}]}}]}]}, {"property": "name", "value": "PostArgs", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.selector"}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].PostArgs.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRulePostArgsConditionParameters"}]}}]}]}, {"property": "name", "value": "QueryString", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].QueryString.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleQueryStringConditionParameters"}]}}]}]}, {"property": "name", "value": "RemoteAddress", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "GeoMatch"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RemoteAddress.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRemoteAddressConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestBody", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestBody.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestBodyConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestHeader", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "string", "name": "selector", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.selector"}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestHeader.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestHeaderConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestMethod", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "DELETE"}, {"value": "GET"}, {"value": "HEAD"}, {"value": "OPTIONS"}, {"value": "POST"}, {"value": "PUT"}, {"value": "TRACE"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestMethod.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestMethodConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestScheme", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "HTTP"}, {"value": "HTTPS"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestScheme.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestSchemeConditionParameters"}]}}]}]}, {"property": "name", "value": "RequestUri", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].RequestUri.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleRequestUriConditionParameters"}]}}]}]}, {"property": "name", "value": "ServerPort", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].ServerPort.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleServerPortConditionParameters"}]}}]}]}, {"property": "name", "value": "SocketAddr", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "IPMatch"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SocketAddr.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSocketAddrConditionParameters"}]}}]}]}, {"property": "name", "value": "SslProtocol", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.matchValues", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1"}, {"value": "TLSv1.1"}, {"value": "TLSv1.2"}]}}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.operator", "required": true, "enum": {"items": [{"value": "Equal"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].SslProtocol.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleSslProtocolConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileExtension", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileExtension.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlFileName", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlFileName.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlFilenameConditionParameters"}]}}]}]}, {"property": "name", "value": "UrlPath", "props": [{"type": "object", "name": "parameters", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters", "required": true, "props": [{"type": "array<string>", "name": "matchValues", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.matchValues", "item": {"type": "string"}}, {"default": {"value": false}, "type": "boolean", "name": "negateCondition", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.negateCondition"}, {"type": "string", "name": "operator", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.operator", "required": true, "enum": {"items": [{"value": "Any"}, {"value": "BeginsWith"}, {"value": "Contains"}, {"value": "EndsWith"}, {"value": "Equal"}, {"value": "GreaterThan"}, {"value": "GreaterThanOrEqual"}, {"value": "LessThan"}, {"value": "LessThanOrEqual"}, {"value": "RegEx"}, {"value": "Wildcard"}]}}, {"type": "array<string>", "name": "transforms", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.transforms", "item": {"type": "string", "enum": {"items": [{"value": "Lowercase"}, {"value": "RemoveNulls"}, {"value": "Trim"}, {"value": "Uppercase"}, {"value": "UrlDecode"}, {"value": "UrlEncode"}]}}}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.deliveryPolicy.rules[].conditions[].UrlPath.parameters.typeName", "required": true, "enum": {"items": [{"value": "DeliveryRuleUrlPathMatchConditionParameters"}]}}]}]}]}, "identifiers": ["name"]}, {"type": "string", "name": "name", "arg": "$endpoint.properties.deliveryPolicy.rules[].name"}, {"type": "integer32", "name": "order", "arg": "$endpoint.properties.deliveryPolicy.rules[].order", "required": true}]}, "identifiers": ["name"]}]}, {"type": "array<object>", "name": "geoFilters", "arg": "$endpoint.properties.geoFilters", "item": {"type": "object", "props": [{"type": "string", "name": "action", "arg": "$endpoint.properties.geoFilters[].action", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Block"}]}}, {"type": "array<string>", "name": "countryCodes", "arg": "$endpoint.properties.geoFilters[].countryCodes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "relativePath", "arg": "$endpoint.properties.geoFilters[].relativePath", "required": true}]}}, {"type": "boolean", "name": "isCompressionEnabled", "arg": "$endpoint.properties.isCompressionEnabled"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpAllowed", "arg": "$endpoint.properties.isHttpAllowed"}, {"default": {"value": true}, "type": "boolean", "name": "isHttpsAllowed", "arg": "$endpoint.properties.isHttpsAllowed"}, {"type": "string", "name": "optimizationType", "arg": "$endpoint.properties.optimizationType", "enum": {"items": [{"value": "DynamicSiteAcceleration"}, {"value": "GeneralMediaStreaming"}, {"value": "GeneralWebDelivery"}, {"value": "LargeFileDownload"}, {"value": "VideoOnDemandMediaStreaming"}]}}, {"type": "array<object>", "name": "originGroups", "arg": "$endpoint.properties.originGroups", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$endpoint.properties.originGroups[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "healthProbeSettings", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings", "props": [{"type": "integer32", "name": "probeIntervalInSeconds", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeIntervalInSeconds", "format": {"maximum": 255, "minimum": 1}}, {"type": "string", "name": "probePath", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probePath"}, {"type": "string", "name": "probeProtocol", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeProtocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}, {"value": "NotSet"}]}}, {"type": "string", "name": "probeRequestType", "arg": "$endpoint.properties.originGroups[].properties.healthProbeSettings.probeRequestType", "enum": {"items": [{"value": "GET"}, {"value": "HEAD"}, {"value": "NotSet"}]}}]}, {"type": "array<@ResourceReference_update>", "name": "origins", "arg": "$endpoint.properties.originGroups[].properties.origins", "required": true, "item": {"type": "@ResourceReference_update"}}, {"type": "object", "name": "responseBasedOriginErrorDetectionSettings", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings", "props": [{"type": "array<object>", "name": "httpErrorRanges", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges", "item": {"type": "object", "props": [{"type": "integer32", "name": "begin", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].begin", "format": {"maximum": 999, "minimum": 100}}, {"type": "integer32", "name": "end", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.httpErrorRanges[].end", "format": {"maximum": 999, "minimum": 100}}]}}, {"type": "string", "name": "responseBasedDetectedErrorTypes", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedDetectedErrorTypes", "enum": {"items": [{"value": "None"}, {"value": "TcpAndHttpErrors"}, {"value": "TcpErrorsOnly"}]}}, {"type": "integer32", "name": "responseBasedFailoverThresholdPercentage", "arg": "$endpoint.properties.originGroups[].properties.responseBasedOriginErrorDetectionSettings.responseBasedFailoverThresholdPercentage", "format": {"maximum": 100, "minimum": 0}}]}, {"type": "integer32", "name": "trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "arg": "$endpoint.properties.originGroups[].properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes", "format": {"maximum": 50, "minimum": 0}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "originHostHeader", "arg": "$endpoint.properties.originHostHeader"}, {"type": "string", "name": "originPath", "arg": "$endpoint.properties.originPath"}, {"type": "array<object>", "name": "origins", "arg": "$endpoint.properties.origins", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$endpoint.properties.origins[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "enabled", "arg": "$endpoint.properties.origins[].properties.enabled"}, {"type": "string", "name": "hostName", "arg": "$endpoint.properties.origins[].properties.hostName", "required": true}, {"type": "integer32", "name": "httpPort", "arg": "$endpoint.properties.origins[].properties.httpPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "integer32", "name": "httpsPort", "arg": "$endpoint.properties.origins[].properties.httpsPort", "format": {"maximum": 65535, "minimum": 1}}, {"type": "string", "name": "originHostHeader", "arg": "$endpoint.properties.origins[].properties.originHostHeader"}, {"type": "integer32", "name": "priority", "arg": "$endpoint.properties.origins[].properties.priority", "format": {"maximum": 5, "minimum": 1}}, {"type": "string", "name": "privateLinkAlias", "arg": "$endpoint.properties.origins[].properties.privateLinkAlias"}, {"type": "string", "name": "privateLinkApprovalMessage", "arg": "$endpoint.properties.origins[].properties.privateLinkApprovalMessage"}, {"type": "string", "name": "privateLinkLocation", "arg": "$endpoint.properties.origins[].properties.privateLinkLocation"}, {"type": "string", "name": "privateLinkResourceId", "arg": "$endpoint.properties.origins[].properties.privateLinkResourceId"}, {"type": "integer32", "name": "weight", "arg": "$endpoint.properties.origins[].properties.weight", "format": {"maximum": 1000, "minimum": 1}}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "probePath", "arg": "$endpoint.properties.probePath"}, {"default": {"value": "NotSet"}, "type": "string", "name": "queryStringCachingBehavior", "arg": "$endpoint.properties.queryStringCachingBehavior", "enum": {"items": [{"value": "BypassCaching"}, {"value": "IgnoreQueryString"}, {"value": "NotSet"}, {"value": "UseQueryString"}]}}, {"type": "array<object>", "name": "urlSigningKeys", "arg": "$endpoint.properties.urlSigningKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyId", "arg": "$endpoint.properties.urlSigningKeys[].keyId", "required": true}, {"type": "object", "name": "keySourceParameters", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters", "required": true, "props": [{"type": "string", "name": "resourceGroupName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.resourceGroupName", "required": true}, {"type": "string", "name": "secretName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretName", "required": true}, {"type": "string", "name": "secretVersion", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.secretVersion", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.subscriptionId", "required": true}, {"type": "string", "name": "typeName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.typeName", "required": true, "enum": {"items": [{"value": "KeyVaultSigningKeyParameters"}]}}, {"type": "string", "name": "vaultName", "arg": "$endpoint.properties.urlSigningKeys[].keySourceParameters.vaultName", "required": true}]}]}, "identifiers": ["keyId"]}, {"type": "object", "name": "webApplicationFirewallPolicyLink", "arg": "$endpoint.properties.webApplicationFirewallPolicyLink", "props": [{"type": "string", "name": "id", "arg": "$endpoint.properties.webApplicationFirewallPolicyLink.id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$endpoint.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Endpoints_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "endpointName", "arg": "$Path.endpointName", "required": true}, {"type": "string", "name": "profileName", "arg": "$Path.profileName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-02-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Endpoint_read"}}}}, {"statusCode": [202], "header": {"items": [{"name": "location"}]}, "body": {"json": {"var": "$Instance", "schema": {"type": "@Endpoint_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}