<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.security/securitycontacts/{}" version="2020-01-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L3NlY3VyaXR5Q29udGFjdHMve3NlY3VyaXR5Q29udGFjdE5hbWV9/V/MjAyMC0wMS0wMS1wcmV2aWV3"/>
  <commandGroup name="security contact">
    <command name="show" version="2020-01-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.security/securitycontacts/{}" version="2020-01-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L3NlY3VyaXR5Q29udGFjdHMve3NlY3VyaXR5Q29udGFjdE5hbWV9/V/MjAyMC0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.securityContactName" options="security-contact-name name n" required="True" idPart="name">
          <help short="Name of the security contact object"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SecurityContacts_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}">
          <request method="get">
            <path>
              <param type="string" name="securityContactName" arg="$Path.securityContactName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format pattern="^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.Security/securityContacts/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="alertNotifications">
                      <prop type="string" name="minimalSeverity">
                        <enum>
                          <item value="&quot;High&quot;"/>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Medium&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="emails"/>
                    <prop type="object" name="notificationsByRole">
                      <prop type="array<string>" name="roles">
                        <item type="string">
                          <enum>
                            <item value="&quot;AccountAdmin&quot;"/>
                            <item value="&quot;Contributor&quot;"/>
                            <item value="&quot;Owner&quot;"/>
                            <item value="&quot;ServiceAdmin&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="phone"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2020-01-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/providers/microsoft.security/securitycontacts/{}" version="2020-01-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L3NlY3VyaXR5Q29udGFjdHMve3NlY3VyaXR5Q29udGFjdE5hbWV9/V/MjAyMC0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.securityContactName" options="security-contact-name name n" required="True" idPart="name">
          <help short="Name of the security contact object"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SecurityContacts_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}">
          <request method="delete">
            <path>
              <param type="string" name="securityContactName" arg="$Path.securityContactName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format pattern="^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2020-01-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.security/securitycontacts/{}" version="2020-01-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L3NlY3VyaXR5Q29udGFjdHMve3NlY3VyaXR5Q29udGFjdE5hbWV9/V/MjAyMC0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.securityContactName" options="security-contact-name name n" required="True" idPart="name">
          <help short="Name of the security contact object"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$securityContact.properties.alertNotifications" options="alert-notifications" group="Properties">
          <help short="Defines whether to send email notifications about new security alerts"/>
          <arg type="string" var="$securityContact.properties.alertNotifications.minimalSeverity" options="minimal-severity">
            <help short="Defines the minimal alert severity which will be sent as email notifications"/>
            <enum>
              <item name="High" value="&quot;High&quot;"/>
              <item name="Low" value="&quot;Low&quot;"/>
              <item name="Medium" value="&quot;Medium&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$securityContact.properties.alertNotifications.state" options="state">
            <help short="Defines if email notifications will be sent about new security alerts"/>
            <enum>
              <item name="Off" value="&quot;Off&quot;"/>
              <item name="On" value="&quot;On&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$securityContact.properties.emails" options="emails" group="Properties">
          <help short="List of email addresses which will get notifications from Microsoft Defender for Cloud by the configurations defined in this security contact."/>
        </arg>
        <arg type="object" var="$securityContact.properties.notificationsByRole" options="notifications-by-role" group="Properties">
          <help short="Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription."/>
          <arg type="array<string>" var="$securityContact.properties.notificationsByRole.roles" options="roles">
            <help short="Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles: "/>
            <item type="string">
              <enum>
                <item name="AccountAdmin" value="&quot;AccountAdmin&quot;"/>
                <item name="Contributor" value="&quot;Contributor&quot;"/>
                <item name="Owner" value="&quot;Owner&quot;"/>
                <item name="ServiceAdmin" value="&quot;ServiceAdmin&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="string" var="$securityContact.properties.notificationsByRole.state" options="state">
            <help short="Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription."/>
            <enum>
              <item name="Off" value="&quot;Off&quot;"/>
              <item name="On" value="&quot;On&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$securityContact.properties.phone" options="phone" group="Properties">
          <help short="The security contact's phone number"/>
        </arg>
      </argGroup>
      <operation operationId="SecurityContacts_Create">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}">
          <request method="put">
            <path>
              <param type="string" name="securityContactName" arg="$Path.securityContactName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format pattern="^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="securityContact" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="alertNotifications" arg="$securityContact.properties.alertNotifications">
                      <prop type="string" name="minimalSeverity" arg="$securityContact.properties.alertNotifications.minimalSeverity">
                        <enum>
                          <item value="&quot;High&quot;"/>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Medium&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state" arg="$securityContact.properties.alertNotifications.state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="emails" arg="$securityContact.properties.emails"/>
                    <prop type="object" name="notificationsByRole" arg="$securityContact.properties.notificationsByRole">
                      <prop type="array<string>" name="roles" arg="$securityContact.properties.notificationsByRole.roles">
                        <item type="string">
                          <enum>
                            <item value="&quot;AccountAdmin&quot;"/>
                            <item value="&quot;Contributor&quot;"/>
                            <item value="&quot;Owner&quot;"/>
                            <item value="&quot;ServiceAdmin&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="state" arg="$securityContact.properties.notificationsByRole.state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="phone" arg="$securityContact.properties.phone"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.Security/securityContacts/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="alertNotifications">
                      <prop type="string" name="minimalSeverity">
                        <enum>
                          <item value="&quot;High&quot;"/>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Medium&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="emails"/>
                    <prop type="object" name="notificationsByRole">
                      <prop type="array<string>" name="roles">
                        <item type="string">
                          <enum>
                            <item value="&quot;AccountAdmin&quot;"/>
                            <item value="&quot;Contributor&quot;"/>
                            <item value="&quot;Owner&quot;"/>
                            <item value="&quot;ServiceAdmin&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="phone"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2020-01-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.security/securitycontacts/{}" version="2020-01-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L3NlY3VyaXR5Q29udGFjdHMve3NlY3VyaXR5Q29udGFjdE5hbWV9/V/MjAyMC0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.securityContactName" options="security-contact-name name n" required="True" idPart="name">
          <help short="Name of the security contact object"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$securityContact.properties.alertNotifications" options="alert-notifications" group="Properties">
          <help short="Defines whether to send email notifications about new security alerts"/>
          <arg nullable="True" type="string" var="$securityContact.properties.alertNotifications.minimalSeverity" options="minimal-severity">
            <help short="Defines the minimal alert severity which will be sent as email notifications"/>
            <enum>
              <item name="High" value="&quot;High&quot;"/>
              <item name="Low" value="&quot;Low&quot;"/>
              <item name="Medium" value="&quot;Medium&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$securityContact.properties.alertNotifications.state" options="state">
            <help short="Defines if email notifications will be sent about new security alerts"/>
            <enum>
              <item name="Off" value="&quot;Off&quot;"/>
              <item name="On" value="&quot;On&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$securityContact.properties.emails" options="emails" group="Properties">
          <help short="List of email addresses which will get notifications from Microsoft Defender for Cloud by the configurations defined in this security contact."/>
        </arg>
        <arg nullable="True" type="object" var="$securityContact.properties.notificationsByRole" options="notifications-by-role" group="Properties">
          <help short="Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription."/>
          <arg nullable="True" type="array<string>" var="$securityContact.properties.notificationsByRole.roles" options="roles">
            <help short="Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles: "/>
            <item nullable="True" type="string">
              <enum>
                <item name="AccountAdmin" value="&quot;AccountAdmin&quot;"/>
                <item name="Contributor" value="&quot;Contributor&quot;"/>
                <item name="Owner" value="&quot;Owner&quot;"/>
                <item name="ServiceAdmin" value="&quot;ServiceAdmin&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$securityContact.properties.notificationsByRole.state" options="state">
            <help short="Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription."/>
            <enum>
              <item name="Off" value="&quot;Off&quot;"/>
              <item name="On" value="&quot;On&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$securityContact.properties.phone" options="phone" group="Properties">
          <help short="The security contact's phone number"/>
        </arg>
      </argGroup>
      <operation operationId="SecurityContacts_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}">
          <request method="get">
            <path>
              <param type="string" name="securityContactName" arg="$Path.securityContactName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format pattern="^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SecurityContact_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.Security/securityContacts/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="alertNotifications">
                      <prop type="string" name="minimalSeverity">
                        <enum>
                          <item value="&quot;High&quot;"/>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Medium&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="emails"/>
                    <prop type="object" name="notificationsByRole">
                      <prop type="array<string>" name="roles">
                        <item type="string">
                          <enum>
                            <item value="&quot;AccountAdmin&quot;"/>
                            <item value="&quot;Contributor&quot;"/>
                            <item value="&quot;Owner&quot;"/>
                            <item value="&quot;ServiceAdmin&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Off&quot;"/>
                          <item value="&quot;On&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="phone"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="securityContact" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="alertNotifications" arg="$securityContact.properties.alertNotifications">
                  <prop type="string" name="minimalSeverity" arg="$securityContact.properties.alertNotifications.minimalSeverity">
                    <enum>
                      <item value="&quot;High&quot;"/>
                      <item value="&quot;Low&quot;"/>
                      <item value="&quot;Medium&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="state" arg="$securityContact.properties.alertNotifications.state">
                    <enum>
                      <item value="&quot;Off&quot;"/>
                      <item value="&quot;On&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="emails" arg="$securityContact.properties.emails"/>
                <prop type="object" name="notificationsByRole" arg="$securityContact.properties.notificationsByRole">
                  <prop type="array<string>" name="roles" arg="$securityContact.properties.notificationsByRole.roles">
                    <item type="string">
                      <enum>
                        <item value="&quot;AccountAdmin&quot;"/>
                        <item value="&quot;Contributor&quot;"/>
                        <item value="&quot;Owner&quot;"/>
                        <item value="&quot;ServiceAdmin&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="string" name="state" arg="$securityContact.properties.notificationsByRole.state">
                    <enum>
                      <item value="&quot;Off&quot;"/>
                      <item value="&quot;On&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="phone" arg="$securityContact.properties.phone"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="SecurityContacts_Create">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}">
          <request method="put">
            <path>
              <param type="string" name="securityContactName" arg="$Path.securityContactName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format pattern="^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SecurityContact_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
