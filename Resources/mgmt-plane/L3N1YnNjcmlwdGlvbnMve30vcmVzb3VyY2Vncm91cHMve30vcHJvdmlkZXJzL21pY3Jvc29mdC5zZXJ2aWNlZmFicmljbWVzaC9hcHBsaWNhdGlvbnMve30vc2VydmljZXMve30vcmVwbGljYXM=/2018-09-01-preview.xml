<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}/services/{}/replicas" version="2018-09-01-preview" swagger="mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0vc2VydmljZXMve3NlcnZpY2VSZXNvdXJjZU5hbWV9L3JlcGxpY2Fz/V/MjAxOC0wOS0wMS1wcmV2aWV3"/>
  <commandGroup name="mesh service-replica">
    <command name="list" version="2018-09-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}/services/{}/replicas" version="2018-09-01-preview" swagger="mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0vc2VydmljZXMve3NlcnZpY2VSZXNvdXJjZU5hbWV9L3JlcGxpY2Fz/V/MjAxOC0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationResourceName" options="application-name app-name" required="True" group="" idPart="name">
          <help short="The name of the application."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceResourceName" options="service-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the service."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ServiceReplica_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas">
          <request method="get">
            <path>
              <param type="string" name="applicationResourceName" arg="$Path.applicationResourceName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="serviceResourceName" arg="$Path.serviceResourceName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-01-preview&quot;"/>
                <enum>
                  <item value="&quot;2018-09-01-preview&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="array<object>" name="codePackages" required="True">
                        <item type="object">
                          <prop type="array<string>" name="commands">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="diagnostics" cls="DiagnosticsRef_read">
                            <prop type="boolean" name="enabled"/>
                            <prop type="array<string>" name="sinkRefs">
                              <item type="string"/>
                            </prop>
                          </prop>
                          <prop type="array<object>" name="endpoints">
                            <item type="object">
                              <prop type="string" name="name" required="True"/>
                              <prop type="integer" name="port"/>
                            </item>
                          </prop>
                          <prop type="string" name="entrypoint"/>
                          <prop type="array<object>" name="environmentVariables">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="value"/>
                            </item>
                          </prop>
                          <prop type="string" name="image" required="True"/>
                          <prop type="object" name="imageRegistryCredential">
                            <prop type="string" name="password"/>
                            <prop type="string" name="server" required="True"/>
                            <prop type="string" name="username" required="True"/>
                          </prop>
                          <prop type="object" name="instanceView">
                            <prop type="object" name="currentState" cls="ContainerState_read">
                              <prop type="string" name="detailStatus"/>
                              <prop type="string" name="exitCode"/>
                              <prop type="dateTime" name="finishTime"/>
                              <prop type="dateTime" name="startTime"/>
                              <prop type="string" name="state"/>
                            </prop>
                            <prop type="array<object>" name="events">
                              <item type="object">
                                <prop type="integer" name="count"/>
                                <prop type="string" name="firstTimestamp"/>
                                <prop type="string" name="lastTimestamp"/>
                                <prop type="string" name="message"/>
                                <prop type="string" name="name"/>
                                <prop type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="@ContainerState_read" name="previousState"/>
                            <prop type="integer" name="restartCount"/>
                          </prop>
                          <prop type="array<object>" name="labels">
                            <item type="object">
                              <prop type="string" name="name" required="True"/>
                              <prop type="string" name="value" required="True"/>
                            </item>
                          </prop>
                          <prop type="string" name="name" required="True"/>
                          <prop type="array<object>" name="reliableCollectionsRefs">
                            <item type="object">
                              <prop type="boolean" name="doNotPersistState"/>
                              <prop type="string" name="name" required="True"/>
                            </item>
                          </prop>
                          <prop type="object" name="resources" required="True">
                            <prop type="object" name="limits">
                              <prop type="float64" name="cpu"/>
                              <prop type="float64" name="memoryInGB"/>
                            </prop>
                            <prop type="object" name="requests" required="True">
                              <prop type="float64" name="cpu" required="True"/>
                              <prop type="float64" name="memoryInGB" required="True"/>
                            </prop>
                          </prop>
                          <prop type="array<object>" name="settings">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="value"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="volumeRefs">
                            <item type="object">
                              <prop type="string" name="destinationPath" required="True"/>
                              <prop type="string" name="name" required="True"/>
                              <prop type="boolean" name="readOnly"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="volumes">
                            <item type="object">
                              <prop type="object" name="creationParameters" required="True">
                                <prop type="string" name="description"/>
                                <prop type="string" name="kind" required="True">
                                  <enum>
                                    <item value="&quot;ServiceFabricVolumeDisk&quot;"/>
                                  </enum>
                                </prop>
                                <discriminator property="kind" value="ServiceFabricVolumeDisk">
                                  <prop type="string" name="sizeDisk" required="True">
                                    <enum>
                                      <item value="&quot;Large&quot;"/>
                                      <item value="&quot;Medium&quot;"/>
                                      <item value="&quot;Small&quot;"/>
                                    </enum>
                                  </prop>
                                </discriminator>
                              </prop>
                              <prop type="string" name="destinationPath" required="True"/>
                              <prop type="string" name="name" required="True"/>
                              <prop type="boolean" name="readOnly"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="@DiagnosticsRef_read" name="diagnostics"/>
                      <prop type="array<object>" name="networkRefs">
                        <item type="object">
                          <prop type="array<object>" name="endpointRefs">
                            <item type="object">
                              <prop type="string" name="name"/>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="string" name="osType" required="True">
                        <enum>
                          <item value="&quot;Linux&quot;"/>
                          <item value="&quot;Windows&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="replicaName" required="True"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
