<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/installpatches" version="2022-12-27" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bmFtZX0vaW5zdGFsbFBhdGNoZXM=/V/MjAyMi0xMi0yNw=="/>
  <commandGroup name="connectedmachine">
    <command name="install-patches" version="2022-12-27" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/installpatches" version="2022-12-27" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bmFtZX0vaW5zdGFsbFBhdGNoZXM=/V/MjAyMi0xMi0yNw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" group="" idPart="name">
          <help short="The name of the hybrid machine."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="InstallPatchesInput">
        <arg type="object" var="$installPatchesInput.linuxParameters" options="linux-parameters" group="InstallPatchesInput">
          <help short="Input for InstallPatches on a Linux VM, as directly received by the API"/>
          <arg type="array<string>" var="$installPatchesInput.linuxParameters.classificationsToInclude" options="classifications-to-include">
            <help short="The update classifications to select when installing patches for Linux."/>
            <item type="string">
              <enum>
                <item name="Critical" value="&quot;Critical&quot;"/>
                <item name="Other" value="&quot;Other&quot;"/>
                <item name="Security" value="&quot;Security&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="array<string>" var="$installPatchesInput.linuxParameters.packageNameMasksToExclude" options="package-name-masks-to-exclude">
            <help short="packages to exclude in the patch operation. Format: packageName_packageVersion"/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$installPatchesInput.linuxParameters.packageNameMasksToInclude" options="package-name-masks-to-include">
            <help short="packages to include in the patch operation. Format: packageName_packageVersion"/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="string" var="$installPatchesInput.maximumDuration" options="maximum-duration" required="True" group="InstallPatchesInput">
          <help short="Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)"/>
        </arg>
        <arg type="string" var="$installPatchesInput.rebootSetting" options="reboot-setting" required="True" group="InstallPatchesInput">
          <help short="Defines when it is acceptable to reboot a VM during a software update operation."/>
          <enum>
            <item name="Always" value="&quot;Always&quot;"/>
            <item name="IfRequired" value="&quot;IfRequired&quot;"/>
            <item name="Never" value="&quot;Never&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$installPatchesInput.windowsParameters" options="windows-parameters" group="InstallPatchesInput">
          <help short="Input for InstallPatches on a Windows VM, as directly received by the API"/>
          <arg type="array<string>" var="$installPatchesInput.windowsParameters.classificationsToInclude" options="classifications-to-include">
            <help short="The update classifications to select when installing patches for Windows."/>
            <item type="string">
              <enum>
                <item name="Critical" value="&quot;Critical&quot;"/>
                <item name="Definition" value="&quot;Definition&quot;"/>
                <item name="FeaturePack" value="&quot;FeaturePack&quot;"/>
                <item name="Security" value="&quot;Security&quot;"/>
                <item name="ServicePack" value="&quot;ServicePack&quot;"/>
                <item name="Tools" value="&quot;Tools&quot;"/>
                <item name="UpdateRollUp" value="&quot;UpdateRollUp&quot;"/>
                <item name="Updates" value="&quot;Updates&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="boolean" var="$installPatchesInput.windowsParameters.excludeKbsRequiringReboot" options="exclude-kbs-requiring-reboot">
            <help short="Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."/>
          </arg>
          <arg type="array<string>" var="$installPatchesInput.windowsParameters.kbNumbersToExclude" options="kb-numbers-to-exclude">
            <help short="Kbs to exclude in the patch operation"/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$installPatchesInput.windowsParameters.kbNumbersToInclude" options="kb-numbers-to-include">
            <help short="Kbs to include in the patch operation"/>
            <item type="string"/>
          </arg>
          <arg type="dateTime" var="$installPatchesInput.windowsParameters.maxPatchPublishDate" options="max-patch-publish-date">
            <help short="This is used to install patches that were published on or before this given max published date."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Machines_InstallPatches">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{name}/installPatches">
          <request method="post">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-27&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="installPatchesInput" required="True" clientFlatten="True">
                  <prop type="object" name="linuxParameters" arg="$installPatchesInput.linuxParameters">
                    <prop type="array<string>" name="classificationsToInclude" arg="$installPatchesInput.linuxParameters.classificationsToInclude">
                      <item type="string">
                        <enum>
                          <item value="&quot;Critical&quot;"/>
                          <item value="&quot;Other&quot;"/>
                          <item value="&quot;Security&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="array<string>" name="packageNameMasksToExclude" arg="$installPatchesInput.linuxParameters.packageNameMasksToExclude">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="packageNameMasksToInclude" arg="$installPatchesInput.linuxParameters.packageNameMasksToInclude">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="string" name="maximumDuration" arg="$installPatchesInput.maximumDuration" required="True"/>
                  <prop type="string" name="rebootSetting" arg="$installPatchesInput.rebootSetting" required="True">
                    <enum>
                      <item value="&quot;Always&quot;"/>
                      <item value="&quot;IfRequired&quot;"/>
                      <item value="&quot;Never&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="windowsParameters" arg="$installPatchesInput.windowsParameters">
                    <prop type="array<string>" name="classificationsToInclude" arg="$installPatchesInput.windowsParameters.classificationsToInclude">
                      <item type="string">
                        <enum>
                          <item value="&quot;Critical&quot;"/>
                          <item value="&quot;Definition&quot;"/>
                          <item value="&quot;FeaturePack&quot;"/>
                          <item value="&quot;Security&quot;"/>
                          <item value="&quot;ServicePack&quot;"/>
                          <item value="&quot;Tools&quot;"/>
                          <item value="&quot;UpdateRollUp&quot;"/>
                          <item value="&quot;Updates&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="boolean" name="excludeKbsRequiringReboot" arg="$installPatchesInput.windowsParameters.excludeKbsRequiringReboot"/>
                    <prop type="array<string>" name="kbNumbersToExclude" arg="$installPatchesInput.windowsParameters.kbNumbersToExclude">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="kbNumbersToInclude" arg="$installPatchesInput.windowsParameters.kbNumbersToInclude">
                      <item type="string"/>
                    </prop>
                    <prop type="dateTime" name="maxPatchPublishDate" arg="$installPatchesInput.windowsParameters.maxPatchPublishDate"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="errorDetails" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                  <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                  <prop readOnly="True" type="string" name="installationActivityId"/>
                  <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                  <prop readOnly="True" type="dateTime" name="lastModifiedDateTime"/>
                  <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                  <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                  <prop readOnly="True" type="string" name="osType">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="patchServiceUsed">
                    <enum>
                      <item value="&quot;APT&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                      <item value="&quot;WU&quot;"/>
                      <item value="&quot;WU_WSUS&quot;"/>
                      <item value="&quot;YUM&quot;"/>
                      <item value="&quot;Zypper&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                  <prop readOnly="True" type="string" name="rebootStatus">
                    <enum>
                      <item value="&quot;Completed&quot;"/>
                      <item value="&quot;Failed&quot;"/>
                      <item value="&quot;NotNeeded&quot;"/>
                      <item value="&quot;Required&quot;"/>
                      <item value="&quot;Started&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="dateTime" name="startDateTime"/>
                  <prop readOnly="True" type="string" name="startedBy">
                    <enum>
                      <item value="&quot;Platform&quot;"/>
                      <item value="&quot;User&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="status">
                    <enum>
                      <item value="&quot;CompletedWithWarnings&quot;"/>
                      <item value="&quot;Failed&quot;"/>
                      <item value="&quot;InProgress&quot;"/>
                      <item value="&quot;Succeeded&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
