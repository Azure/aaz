{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/installpatches", "version": "2022-12-27", "swagger": "mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bmFtZX0vaW5zdGFsbFBhdGNoZXM=/V/MjAyMi0xMi0yNw=="}], "commandGroups": [{"name": "connectedmachine", "commands": [{"name": "install-patches", "version": "2022-12-27", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/installpatches", "version": "2022-12-27", "swagger": "mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bmFtZX0vaW5zdGFsbFBhdGNoZXM=/V/MjAyMi0xMi0yNw=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.name", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the hybrid machine."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "InstallPatchesInput", "args": [{"type": "object", "var": "$installPatchesInput.linuxParameters", "options": ["linux-parameters"], "group": "InstallPatchesInput", "help": {"short": "Input for InstallPatches on a Linux VM, as directly received by the API"}, "args": [{"type": "array<string>", "var": "$installPatchesInput.linuxParameters.classificationsToInclude", "options": ["classifications-to-include"], "help": {"short": "The update classifications to select when installing patches for Linux."}, "item": {"type": "string", "enum": {"items": [{"name": "Critical", "value": "Critical"}, {"name": "Other", "value": "Other"}, {"name": "Security", "value": "Security"}]}}}, {"type": "array<string>", "var": "$installPatchesInput.linuxParameters.packageNameMasksToExclude", "options": ["package-name-masks-to-exclude"], "help": {"short": "packages to exclude in the patch operation. Format: packageName_packageVersion"}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$installPatchesInput.linuxParameters.packageNameMasksToInclude", "options": ["package-name-masks-to-include"], "help": {"short": "packages to include in the patch operation. Format: packageName_packageVersion"}, "item": {"type": "string"}}]}, {"type": "string", "var": "$installPatchesInput.maximumDuration", "options": ["maximum-duration"], "required": true, "group": "InstallPatchesInput", "help": {"short": "Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)"}}, {"type": "string", "var": "$installPatchesInput.rebootSetting", "options": ["reboot-setting"], "required": true, "group": "InstallPatchesInput", "help": {"short": "Defines when it is acceptable to reboot a VM during a software update operation."}, "enum": {"items": [{"name": "Always", "value": "Always"}, {"name": "IfRequired", "value": "IfRequired"}, {"name": "Never", "value": "Never"}]}}, {"type": "object", "var": "$installPatchesInput.windowsParameters", "options": ["windows-parameters"], "group": "InstallPatchesInput", "help": {"short": "Input for InstallPatches on a Windows VM, as directly received by the API"}, "args": [{"type": "array<string>", "var": "$installPatchesInput.windowsParameters.classificationsToInclude", "options": ["classifications-to-include"], "help": {"short": "The update classifications to select when installing patches for Windows."}, "item": {"type": "string", "enum": {"items": [{"name": "Critical", "value": "Critical"}, {"name": "Definition", "value": "Definition"}, {"name": "FeaturePack", "value": "FeaturePack"}, {"name": "Security", "value": "Security"}, {"name": "ServicePack", "value": "ServicePack"}, {"name": "Tools", "value": "Tools"}, {"name": "UpdateRollUp", "value": "UpdateRollUp"}, {"name": "Updates", "value": "Updates"}]}}}, {"type": "boolean", "var": "$installPatchesInput.windowsParameters.excludeKbsRequiringReboot", "options": ["exclude-kbs-requiring-reboot"], "help": {"short": "Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."}}, {"type": "array<string>", "var": "$installPatchesInput.windowsParameters.kbNumbersToExclude", "options": ["kb-numbers-to-exclude"], "help": {"short": "Kbs to exclude in the patch operation"}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$installPatchesInput.windowsParameters.kbNumbersToInclude", "options": ["kb-numbers-to-include"], "help": {"short": "Kbs to include in the patch operation"}, "item": {"type": "string"}}, {"type": "dateTime", "var": "$installPatchesInput.windowsParameters.maxPatchPublishDate", "options": ["max-patch-publish-date"], "help": {"short": "This is used to install patches that were published on or before this given max published date."}}]}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "Machines_InstallPatches", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{name}/installPatches", "request": {"method": "post", "path": {"params": [{"type": "string", "name": "name", "arg": "$Path.name", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-12-27"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "installPatchesInput", "required": true, "props": [{"type": "object", "name": "linuxParameters", "arg": "$installPatchesInput.linuxParameters", "props": [{"type": "array<string>", "name": "classificationsToInclude", "arg": "$installPatchesInput.linuxParameters.classificationsToInclude", "item": {"type": "string", "enum": {"items": [{"value": "Critical"}, {"value": "Other"}, {"value": "Security"}]}}}, {"type": "array<string>", "name": "packageNameMasksToExclude", "arg": "$installPatchesInput.linuxParameters.packageNameMasksToExclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "packageNameMasksToInclude", "arg": "$installPatchesInput.linuxParameters.packageNameMasksToInclude", "item": {"type": "string"}}]}, {"type": "string", "name": "maximumDuration", "arg": "$installPatchesInput.maximumDuration", "required": true}, {"type": "string", "name": "rebootSetting", "arg": "$installPatchesInput.rebootSetting", "required": true, "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}]}}, {"type": "object", "name": "windowsParameters", "arg": "$installPatchesInput.windowsParameters", "props": [{"type": "array<string>", "name": "classificationsToInclude", "arg": "$installPatchesInput.windowsParameters.classificationsToInclude", "item": {"type": "string", "enum": {"items": [{"value": "Critical"}, {"value": "Definition"}, {"value": "FeaturePack"}, {"value": "Security"}, {"value": "ServicePack"}, {"value": "Tools"}, {"value": "UpdateRollUp"}, {"value": "Updates"}]}}}, {"type": "boolean", "name": "excludeKbsRequiringReboot", "arg": "$installPatchesInput.windowsParameters.excludeKbsRequiringReboot"}, {"type": "array<string>", "name": "kbNumbersToExclude", "arg": "$installPatchesInput.windowsParameters.kbNumbersToExclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "kbNumbersToInclude", "arg": "$installPatchesInput.windowsParameters.kbNumbersToInclude", "item": {"type": "string"}}, {"type": "dateTime", "name": "maxPatchPublishDate", "arg": "$installPatchesInput.windowsParameters.maxPatchPublishDate"}]}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "errorDetails", "props": [{"readOnly": true, "type": "array<object>", "name": "additionalInfo", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "code"}, {"readOnly": true, "type": "array<@ErrorDetail_read>", "name": "details", "item": {"type": "@ErrorDetail_read"}, "identifiers": ["target", "message"]}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "string", "name": "target"}], "cls": "ErrorDetail_read"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedDateTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"readOnly": true, "type": "string", "name": "patchServiceUsed", "enum": {"items": [{"value": "APT"}, {"value": "Unknown"}, {"value": "WU"}, {"value": "WU_WSUS"}, {"value": "YUM"}, {"value": "Zypper"}]}}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "string", "name": "rebootStatus", "enum": {"items": [{"value": "Completed"}, {"value": "Failed"}, {"value": "NotNeeded"}, {"value": "Required"}, {"value": "Started"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "dateTime", "name": "startDateTime"}, {"readOnly": true, "type": "string", "name": "startedBy", "enum": {"items": [{"value": "Platform"}, {"value": "User"}]}}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}}}}, {"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}