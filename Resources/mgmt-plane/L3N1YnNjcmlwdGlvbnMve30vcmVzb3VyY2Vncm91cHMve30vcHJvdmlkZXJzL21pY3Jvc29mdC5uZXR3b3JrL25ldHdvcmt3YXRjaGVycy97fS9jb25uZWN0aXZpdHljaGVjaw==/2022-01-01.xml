<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectivitycheck" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGl2aXR5Q2hlY2s=/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network watcher">
    <command name="test-connectivity" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectivitycheck" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGl2aXR5Q2hlY2s=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="watcher-name" required="True" group="" idPart="name">
          <help short="Name of the network watcher resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="watcher-rg" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group the watcher is in."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$parameters.protocol" options="protocol" group="">
          <help short="Protocol to test on."/>
          <enum>
            <item name="Http" value="&quot;Http&quot;"/>
            <item name="Https" value="&quot;Https&quot;"/>
            <item name="Icmp" value="&quot;Icmp&quot;"/>
            <item name="Tcp" value="&quot;Tcp&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$parameters.source.port" options="source-port" group="">
          <help short="Port number from which to originate traffic."/>
          <format maximum="65535" minimum="0"/>
        </arg>
        <arg type="string" var="$parameters.source.resourceId" options="source-resource" required="True" group="">
          <help short="Name or ID of the resource from which to originate traffic. Currently only Virtual Machines are supported."/>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg type="string" var="$parameters.destination.address" options="dest-address" group="Destination">
          <help short="IP address or URI at which to receive traffic."/>
        </arg>
        <arg type="integer32" var="$parameters.destination.port" options="dest-port" group="Destination">
          <help short="Port number on which to receive traffic."/>
          <format maximum="65535" minimum="0"/>
        </arg>
        <arg type="string" var="$parameters.destination.resourceId" options="dest-resource" group="Destination">
          <help short="Name or ID of the resource to receive traffic. Currently only Virtual Machines are supported."/>
        </arg>
      </argGroup>
      <argGroup name="HTTP Configuration">
        <arg type="array<object>" var="$parameters.protocolConfiguration.HTTPConfiguration.headers" options="headers-obj" group="HTTP Configuration">
          <help short="List of HTTP headers."/>
          <item type="object">
            <arg type="string" var="$parameters.protocolConfiguration.HTTPConfiguration.headers[].name" options="name">
              <help short="The name in HTTP header."/>
            </arg>
            <arg type="string" var="$parameters.protocolConfiguration.HTTPConfiguration.headers[].value" options="value">
              <help short="The value in HTTP header."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.protocolConfiguration.HTTPConfiguration.method" options="method" group="HTTP Configuration">
          <help short="HTTP method to use."/>
          <enum>
            <item name="Get" value="&quot;Get&quot;"/>
          </enum>
        </arg>
        <arg type="array<integer32>" var="$parameters.protocolConfiguration.HTTPConfiguration.validStatusCodes" options="valid-status-codes" group="HTTP Configuration">
          <help short="Space-separated list of HTTP status codes considered valid."/>
          <item type="integer32"/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.preferredIPVersion" options="preferred-ip-version" hide="True" group="Parameters">
          <help short="Preferred IP version of the connection."/>
          <enum>
            <item name="IPv4" value="&quot;IPv4&quot;"/>
            <item name="IPv6" value="&quot;IPv6&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="NetworkWatchers_CheckConnectivity">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck">
          <request method="post">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="destination" required="True">
                    <prop type="string" name="address" arg="$parameters.destination.address"/>
                    <prop type="integer32" name="port" arg="$parameters.destination.port">
                      <format maximum="65535" minimum="0"/>
                    </prop>
                    <prop type="string" name="resourceId" arg="$parameters.destination.resourceId"/>
                  </prop>
                  <prop type="string" name="preferredIPVersion" arg="$parameters.preferredIPVersion">
                    <enum>
                      <item value="&quot;IPv4&quot;"/>
                      <item value="&quot;IPv6&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="protocol" arg="$parameters.protocol">
                    <enum>
                      <item value="&quot;Http&quot;"/>
                      <item value="&quot;Https&quot;"/>
                      <item value="&quot;Icmp&quot;"/>
                      <item value="&quot;Tcp&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="protocolConfiguration">
                    <prop type="object" name="HTTPConfiguration">
                      <prop type="array<object>" name="headers" arg="$parameters.protocolConfiguration.HTTPConfiguration.headers">
                        <item type="object">
                          <prop type="string" name="name" arg="$parameters.protocolConfiguration.HTTPConfiguration.headers[].name"/>
                          <prop type="string" name="value" arg="$parameters.protocolConfiguration.HTTPConfiguration.headers[].value"/>
                        </item>
                      </prop>
                      <prop type="string" name="method" arg="$parameters.protocolConfiguration.HTTPConfiguration.method">
                        <enum>
                          <item value="&quot;Get&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<integer32>" name="validStatusCodes" arg="$parameters.protocolConfiguration.HTTPConfiguration.validStatusCodes">
                        <item type="integer32"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="source" required="True">
                    <prop type="integer32" name="port" arg="$parameters.source.port">
                      <format maximum="65535" minimum="0"/>
                    </prop>
                    <prop type="string" name="resourceId" arg="$parameters.source.resourceId" required="True"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ConnectivityInformation_read">
                  <prop readOnly="True" type="integer32" name="avgLatencyInMs"/>
                  <prop readOnly="True" type="string" name="connectionStatus">
                    <enum>
                      <item value="&quot;Connected&quot;"/>
                      <item value="&quot;Degraded&quot;"/>
                      <item value="&quot;Disconnected&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="array<object>" name="hops">
                    <item type="object">
                      <prop readOnly="True" type="string" name="address"/>
                      <prop readOnly="True" type="string" name="id"/>
                      <prop readOnly="True" type="array<@ConnectivityIssue_read>" name="issues">
                        <item type="@ConnectivityIssue_read"/>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="links">
                        <item type="object" cls="HopLink_read">
                          <prop readOnly="True" type="object" name="context">
                            <additionalProp readOnly="True">
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="issues">
                            <item type="object" cls="ConnectivityIssue_read">
                              <prop readOnly="True" type="array<object>" name="context">
                                <item type="object">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </item>
                              </prop>
                              <prop readOnly="True" type="string" name="origin">
                                <enum>
                                  <item value="&quot;Inbound&quot;"/>
                                  <item value="&quot;Local&quot;"/>
                                  <item value="&quot;Outbound&quot;"/>
                                </enum>
                              </prop>
                              <prop readOnly="True" type="string" name="severity">
                                <enum>
                                  <item value="&quot;Error&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop readOnly="True" type="string" name="type">
                                <enum>
                                  <item value="&quot;AgentStopped&quot;"/>
                                  <item value="&quot;DnsResolution&quot;"/>
                                  <item value="&quot;GuestFirewall&quot;"/>
                                  <item value="&quot;NetworkSecurityRule&quot;"/>
                                  <item value="&quot;Platform&quot;"/>
                                  <item value="&quot;PortThrottled&quot;"/>
                                  <item value="&quot;SocketBind&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                  <item value="&quot;UserDefinedRoute&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop readOnly="True" type="string" name="linkType"/>
                          <prop readOnly="True" type="string" name="nextHopId"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="integer64" name="roundTripTimeAvg">
                              <format maximum="4294967295" minimum="0"/>
                            </prop>
                            <prop readOnly="True" type="integer64" name="roundTripTimeMax">
                              <format maximum="4294967295" minimum="0"/>
                            </prop>
                            <prop readOnly="True" type="integer64" name="roundTripTimeMin">
                              <format maximum="4294967295" minimum="0"/>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="resourceId"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="nextHopIds">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="previousHopIds">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="array<@HopLink_read>" name="previousLinks">
                        <item type="@HopLink_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceId"/>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                  <prop readOnly="True" type="integer32" name="maxLatencyInMs"/>
                  <prop readOnly="True" type="integer32" name="minLatencyInMs"/>
                  <prop readOnly="True" type="integer32" name="probesFailed"/>
                  <prop readOnly="True" type="integer32" name="probesSent"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@ConnectivityInformation_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
