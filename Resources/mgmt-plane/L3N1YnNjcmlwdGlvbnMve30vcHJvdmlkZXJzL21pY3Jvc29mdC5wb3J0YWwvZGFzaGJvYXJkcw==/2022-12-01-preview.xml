<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.portal/dashboards" version="2022-12-01-preview" swagger="mgmt-plane/portal/ResourceProviders/Microsoft.Portal/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlBvcnRhbC9kYXNoYm9hcmRz/V/MjAyMi0xMi0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.portal/dashboards" version="2022-12-01-preview" swagger="mgmt-plane/portal/ResourceProviders/Microsoft.Portal/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuUG9ydGFsL2Rhc2hib2FyZHM=/V/MjAyMi0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="portal dashboard">
    <command name="list" version="2022-12-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.portal/dashboards" version="2022-12-01-preview" swagger="mgmt-plane/portal/ResourceProviders/Microsoft.Portal/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlBvcnRhbC9kYXNoYm9hcmRz/V/MjAyMi0xMi0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.portal/dashboards" version="2022-12-01-preview" swagger="mgmt-plane/portal/ResourceProviders/Microsoft.Portal/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuUG9ydGFsL2Rhc2hib2FyZHM=/V/MjAyMi0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Dashboards_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_Dashboards_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_Dashboards_ListBySubscription" operationId="Dashboards_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Portal/dashboards">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Portal/dashboards/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="array<object>" name="lenses">
                          <item type="object">
                            <prop type="object" name="metadata">
                              <additionalProp anyType="True"/>
                            </prop>
                            <prop type="integer32" name="order" required="True"/>
                            <prop type="array<object>" name="parts" required="True">
                              <item type="object">
                                <prop type="object" name="metadata">
                                  <prop type="string" name="type" required="True">
                                    <enum>
                                      <item value="&quot;Extension/HubsExtension/PartType/MarkdownPart&quot;"/>
                                    </enum>
                                  </prop>
                                  <discriminator property="type" value="Extension/HubsExtension/PartType/MarkdownPart">
                                    <prop type="array<object>" name="inputs">
                                      <item type="object">
                                        <additionalProp anyType="True"/>
                                      </item>
                                    </prop>
                                    <prop type="object" name="settings">
                                      <prop type="object" name="content">
                                        <prop type="object" name="settings">
                                          <prop type="string" name="content"/>
                                          <prop type="integer32" name="markdownSource"/>
                                          <prop type="string" name="markdownUri"/>
                                          <prop type="string" name="subtitle"/>
                                          <prop type="string" name="title"/>
                                        </prop>
                                      </prop>
                                    </prop>
                                  </discriminator>
                                </prop>
                                <prop type="object" name="position" required="True">
                                  <prop type="integer32" name="colSpan" required="True"/>
                                  <prop type="object" name="metadata">
                                    <additionalProp anyType="True"/>
                                  </prop>
                                  <prop type="integer32" name="rowSpan" required="True"/>
                                  <prop type="integer32" name="x" required="True"/>
                                  <prop type="integer32" name="y" required="True"/>
                                </prop>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="metadata">
                          <additionalProp anyType="True"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Dashboards_ListByResourceGroup" operationId="Dashboards_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/dashboards">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Portal/dashboards/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="array<object>" name="lenses">
                          <item type="object">
                            <prop type="object" name="metadata">
                              <additionalProp anyType="True"/>
                            </prop>
                            <prop type="integer32" name="order" required="True"/>
                            <prop type="array<object>" name="parts" required="True">
                              <item type="object">
                                <prop type="object" name="metadata">
                                  <prop type="string" name="type" required="True">
                                    <enum>
                                      <item value="&quot;Extension/HubsExtension/PartType/MarkdownPart&quot;"/>
                                    </enum>
                                  </prop>
                                  <discriminator property="type" value="Extension/HubsExtension/PartType/MarkdownPart">
                                    <prop type="array<object>" name="inputs">
                                      <item type="object">
                                        <additionalProp anyType="True"/>
                                      </item>
                                    </prop>
                                    <prop type="object" name="settings">
                                      <prop type="object" name="content">
                                        <prop type="object" name="settings">
                                          <prop type="string" name="content"/>
                                          <prop type="integer32" name="markdownSource"/>
                                          <prop type="string" name="markdownUri"/>
                                          <prop type="string" name="subtitle"/>
                                          <prop type="string" name="title"/>
                                        </prop>
                                      </prop>
                                    </prop>
                                  </discriminator>
                                </prop>
                                <prop type="object" name="position" required="True">
                                  <prop type="integer32" name="colSpan" required="True"/>
                                  <prop type="object" name="metadata">
                                    <additionalProp anyType="True"/>
                                  </prop>
                                  <prop type="integer32" name="rowSpan" required="True"/>
                                  <prop type="integer32" name="x" required="True"/>
                                  <prop type="integer32" name="y" required="True"/>
                                </prop>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="metadata">
                          <additionalProp anyType="True"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
