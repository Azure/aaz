<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
  <commandGroup name="network nic">
    <command name="show" version="2015-06-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkInterfaceName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the network interface (NIC)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Expands referenced resources."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkInterfaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
          <request method="get">
            <path>
              <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkInterface_read">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="dnsSettings">
                      <prop type="array<string>" name="appliedDnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="dnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="internalDnsNameLabel"/>
                      <prop type="string" name="internalFqdn"/>
                    </prop>
                    <prop type="boolean" name="enableIPForwarding"/>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                  <item type="@NetworkInterfaceIPConfiguration_read"/>
                                </prop>
                                <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                  <item type="@SubResource_read"/>
                                </prop>
                                <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                <prop type="string" name="provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                <prop type="integer32" name="backendPort"/>
                                <prop type="boolean" name="enableFloatingIP"/>
                                <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                <prop type="integer32" name="frontendPort"/>
                                <prop type="integer32" name="idleTimeoutInMinutes"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="primary"/>
                          <prop type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                          <prop type="@Subnet_read" name="subnet"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="macAddress"/>
                    <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                          <item type="@SecurityRule_read"/>
                        </prop>
                        <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                          <item type="@NetworkInterface_read"/>
                        </prop>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="array<object>" name="securityRules">
                          <item type="object" cls="SecurityRule_read">
                            <prop type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="access" required="True">
                                <enum>
                                  <item value="&quot;Allow&quot;"/>
                                  <item value="&quot;Deny&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description"/>
                              <prop type="string" name="destinationAddressPrefix" required="True"/>
                              <prop type="string" name="destinationPortRange"/>
                              <prop type="string" name="direction" required="True">
                                <enum>
                                  <item value="&quot;Inbound&quot;"/>
                                  <item value="&quot;Outbound&quot;"/>
                                </enum>
                              </prop>
                              <prop type="integer32" name="priority"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;*&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="sourceAddressPrefix" required="True"/>
                              <prop type="string" name="sourcePortRange"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="subnets">
                          <item type="object" cls="Subnet_read">
                            <prop type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="addressPrefix"/>
                              <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                <item type="object" cls="IPConfiguration_read">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="privateIPAddress"/>
                                    <prop type="string" name="privateIPAllocationMethod">
                                      <enum>
                                        <item value="&quot;Dynamic&quot;"/>
                                        <item value="&quot;Static&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location"/>
                                      <prop readOnly="True" type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel"/>
                                          <prop type="string" name="fqdn"/>
                                          <prop type="string" name="reverseFqdn"/>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="string" name="ipAddress"/>
                                        <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="string" name="publicIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="resourceGuid"/>
                                      </prop>
                                      <prop type="object" name="tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                      <prop readOnly="True" type="string" name="type"/>
                                    </prop>
                                    <prop type="@Subnet_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                              <prop type="string" name="provisioningState"/>
                              <prop type="object" name="routeTable">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location"/>
                                <prop readOnly="True" type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="array<object>" name="routes">
                                    <item type="object">
                                      <prop type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                      </prop>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="addressPrefix"/>
                                        <prop type="string" name="nextHopIpAddress"/>
                                        <prop type="string" name="nextHopType" required="True">
                                          <enum>
                                            <item value="&quot;Internet&quot;"/>
                                            <item value="&quot;None&quot;"/>
                                            <item value="&quot;VirtualAppliance&quot;"/>
                                            <item value="&quot;VirtualNetworkGateway&quot;"/>
                                            <item value="&quot;VnetLocal&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<@Subnet_read>" name="subnets">
                                    <item type="@Subnet_read"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </prop>
                    <prop type="boolean" name="primary"/>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="resourceGuid"/>
                    <prop type="object" name="virtualMachine" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2015-06-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkInterfaceName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the network interface (NIC)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkInterfaces_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
          <request method="delete">
            <path>
              <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2015-06-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkInterfaceName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the network interface (NIC)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableIPForwarding" options="ip-forwarding" group="">
          <help short="Whether to enable IP forwarding."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="DNS">
        <arg type="array<string>" var="$parameters.properties.dnsSettings.dnsServers" options="dns-servers" group="DNS">
          <help short="Space-separated list of DNS server IP addresses."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$parameters.properties.dnsSettings.internalDnsNameLabel" options="internal-dns-name" group="DNS">
          <help short="Name of internal DNS label."/>
        </arg>
      </argGroup>
      <argGroup name="DnsSettings">
        <arg type="array<string>" var="$parameters.properties.dnsSettings.appliedDnsServers" options="applied-dns-servers" hide="True" group="DnsSettings">
          <help short="If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$parameters.properties.dnsSettings.internalFqdn" options="internal-fqdn" hide="True" group="DnsSettings">
          <help short="Fully qualified DNS name supporting internal communications between VMs in the same virtual network."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.etag" options="etag" hide="True" group="Parameters">
          <help short="A unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.ipConfigurations" options="ip-configurations" group="Properties">
          <help short="A list of IPConfigurations of the network interface."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.ipConfigurations[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[]">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
              <help short="The reference to LoadBalancerBackendAddressPool resource."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                  <help short="Resource ID."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                  <help short="The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                  <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
              <help short="A list of references of LoadBalancerInboundNatRules."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                  <help short="Resource ID."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                  <help short="The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource."/>
                </arg>
                <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties">
                  <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties">
                  <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
                </arg>
                <arg type="@SubResource_create" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties">
                  <help short="A reference to frontend IP addresses."/>
                </arg>
                <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties">
                  <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
                </arg>
                <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                  <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                  <help short="The reference to the transport protocol used by the load balancing rule."/>
                  <enum>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                  <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
              </item>
            </arg>
            <arg type="boolean" var="$parameters.properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
              <help short="Whether this is a primary customer address on the network interface."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties">
              <help short="Private IP address of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
              <help short="Allocation method of private IP address."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties">
              <help short="Public IP address bound to the IP configuration."/>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag" options="address-etag" hide="True" group="PublicIPAddress">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id" options="id">
                <help short="Resource ID."/>
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
              </arg>
              <arg type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location" options="location l">
                <help short="Resource location."/>
              </arg>
              <arg type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="dns-settings" group="Properties">
                <help short="The FQDN of the DNS record associated with the public IP address."/>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                  <help short="The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
                  <help short="The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
                  <help short="The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN."/>
                </arg>
              </arg>
              <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                <help short="The idle timeout of the public IP address."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="ip-address" group="Properties">
                <help short="The IP address associated with the public IP address resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                <help short="The public IP address allocation method."/>
                <enum>
                  <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                  <item name="Static" value="&quot;Static&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
                <help short="The resource GUID property of the public IP resource."/>
              </arg>
              <arg type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags" options="tags">
                <help short="Resource tags."/>
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
              <help short="Subnet bound to the IP configuration."/>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.etag" options="etag" hide="True" group="">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="id" group="">
                <help short="Resource ID."/>
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="address-prefix" group="Properties">
                <help short="The address prefix for the subnet."/>
              </arg>
              <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="network-security-group" group="Properties" cls="NetworkSecurityGroup_create">
                <help short="The reference of the NetworkSecurityGroup resource."/>
                <arg type="string" var="@NetworkSecurityGroup_create.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="@NetworkSecurityGroup_create.id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                </arg>
                <arg type="ResourceLocation" var="@NetworkSecurityGroup_create.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg type="array<object>" var="@NetworkSecurityGroup_create.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
                  <help short="The default security rules of network security group."/>
                  <item type="object" cls="SecurityRule_create">
                    <arg type="string" var="@SecurityRule_create.etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg type="ResourceId" var="@SecurityRule_create.id" options="id" hide="True">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.access" options="access" group="Properties">
                      <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                      <enum>
                        <item name="Allow" value="&quot;Allow&quot;"/>
                        <item name="Deny" value="&quot;Deny&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.description" options="description" group="Properties">
                      <help short="A description for this rule. Restricted to 140 chars."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                      <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.destinationPortRange" options="destination-port-range" group="Properties">
                      <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.direction" options="direction" group="Properties">
                      <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                      <enum>
                        <item name="Inbound" value="&quot;Inbound&quot;"/>
                        <item name="Outbound" value="&quot;Outbound&quot;"/>
                      </enum>
                    </arg>
                    <arg type="integer32" var="@SecurityRule_create.properties.priority" options="priority" group="Properties">
                      <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.protocol" options="protocol" group="Properties">
                      <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                      <enum>
                        <item name="*" value="&quot;*&quot;"/>
                        <item name="Tcp" value="&quot;Tcp&quot;"/>
                        <item name="Udp" value="&quot;Udp&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                      <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                    </arg>
                    <arg type="string" var="@SecurityRule_create.properties.sourcePortRange" options="source-port-range" group="Properties">
                      <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                  </item>
                </arg>
                <arg type="array<object>" var="@NetworkSecurityGroup_create.properties.networkInterfaces" options="network-interfaces" group="Properties">
                  <help short="A collection of references to network interfaces."/>
                  <item type="object" cls="NetworkInterface_create">
                    <arg type="string" var="@NetworkInterface_create.etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg type="ResourceId" var="@NetworkInterface_create.id" options="id">
                      <help short="Resource Identifier."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </arg>
                    <arg type="ResourceLocation" var="@NetworkInterface_create.location" options="location l">
                      <help short="Resource location."/>
                    </arg>
                    <arg type="object" var="@NetworkInterface_create.properties.dnsSettings" options="dns-settings" group="Properties">
                      <help short="The DNS settings in network interface."/>
                      <arg type="array<string>" var="@NetworkInterface_create.properties.dnsSettings.appliedDnsServers" options="applied-dns-servers">
                        <help short="If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."/>
                        <item type="string"/>
                      </arg>
                      <arg type="array<string>" var="@NetworkInterface_create.properties.dnsSettings.dnsServers" options="dns-servers">
                        <help short="List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."/>
                        <item type="string"/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_create.properties.dnsSettings.internalDnsNameLabel" options="internal-dns-name-label">
                        <help short="Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_create.properties.dnsSettings.internalFqdn" options="internal-fqdn">
                        <help short="Fully qualified DNS name supporting internal communications between VMs in the same virtual network."/>
                      </arg>
                    </arg>
                    <arg type="boolean" var="@NetworkInterface_create.properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                      <help short="Indicates whether IP forwarding is enabled on this network interface."/>
                    </arg>
                    <arg type="array<object>" var="@NetworkInterface_create.properties.ipConfigurations" options="ip-configurations" group="Properties">
                      <help short="A list of IPConfigurations of the network interface."/>
                      <item type="object">
                        <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].etag" options="etag">
                          <help short="A unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].id" options="id">
                          <help short="Resource Identifier."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].name" options="name">
                          <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg type="array<object>" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                          <help short="The reference of LoadBalancerBackendAddressPool resource."/>
                          <item type="object">
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag">
                              <help short="A unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                              <help short="Resource Identifier."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                              <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                          </item>
                        </arg>
                        <arg type="array<object>" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
                          <help short="A list of references of LoadBalancerInboundNatRules."/>
                          <item type="object">
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag">
                              <help short="A unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                              <help short="Resource Identifier."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                              <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                            </arg>
                            <arg type="integer32" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties">
                              <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
                            </arg>
                            <arg type="boolean" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties">
                              <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
                            </arg>
                            <arg type="@SubResource_create" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties">
                              <help short="A reference to frontend IP addresses."/>
                            </arg>
                            <arg type="integer32" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties">
                              <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
                            </arg>
                            <arg type="integer32" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                              <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                              <help short="The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'"/>
                              <enum>
                                <item name="Tcp" value="&quot;Tcp&quot;"/>
                                <item name="Udp" value="&quot;Udp&quot;"/>
                              </enum>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                          </item>
                        </arg>
                        <arg type="boolean" var="@NetworkInterface_create.properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                          <help short="Gets whether this is a primary customer address on the network interface."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties"/>
                        <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                          <help short="Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'."/>
                          <enum>
                            <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                            <item name="Static" value="&quot;Static&quot;"/>
                          </enum>
                        </arg>
                        <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" group="Properties"/>
                        <arg type="object" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties">
                          <help short="Public IP address resource."/>
                          <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.etag" options="etag">
                            <help short="A unique read-only string that changes whenever the resource is updated."/>
                          </arg>
                          <arg type="ResourceId" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.id" options="id">
                            <help short="Resource Identifier."/>
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                          </arg>
                          <arg type="ResourceLocation" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.location" options="location l">
                            <help short="Resource location."/>
                          </arg>
                          <arg type="object" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="dns-settings" group="Properties">
                            <help short="The FQDN of the DNS record associated with the public IP address."/>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                              <help short="Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
                              <help short="Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
                              <help short="Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "/>
                            </arg>
                          </arg>
                          <arg type="integer32" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                            <help short="The idle timeout of the public IP address."/>
                          </arg>
                          <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="ip-address" group="Properties"/>
                          <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="provisioning-state" group="Properties">
                            <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                          </arg>
                          <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                            <help short="The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."/>
                            <enum>
                              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                              <item name="Static" value="&quot;Static&quot;"/>
                            </enum>
                          </arg>
                          <arg type="string" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" group="Properties">
                            <help short="The resource GUID property of the public IP resource."/>
                          </arg>
                          <arg type="object" var="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.tags" options="tags">
                            <help short="Resource tags."/>
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </arg>
                        </arg>
                        <arg type="@Subnet_create" var="@NetworkInterface_create.properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties"/>
                      </item>
                    </arg>
                    <arg type="string" var="@NetworkInterface_create.properties.macAddress" options="mac-address" group="Properties">
                      <help short="The MAC address of the network interface."/>
                    </arg>
                    <arg type="@NetworkSecurityGroup_create" var="@NetworkInterface_create.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                      <help short="The reference of the NetworkSecurityGroup resource."/>
                    </arg>
                    <arg type="boolean" var="@NetworkInterface_create.properties.primary" options="primary" group="Properties">
                      <help short="Gets whether this is a primary network interface on a virtual machine."/>
                    </arg>
                    <arg type="string" var="@NetworkInterface_create.properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg type="string" var="@NetworkInterface_create.properties.resourceGuid" options="resource-guid" group="Properties">
                      <help short="The resource GUID property of the network interface resource."/>
                    </arg>
                    <arg type="@SubResource_create" var="@NetworkInterface_create.properties.virtualMachine" options="virtual-machine" group="Properties">
                      <help short="The reference of a virtual machine."/>
                    </arg>
                    <arg type="object" var="@NetworkInterface_create.tags" options="tags">
                      <help short="Resource tags."/>
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_create.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_create.properties.resourceGuid" options="resource-guid" group="Properties">
                  <help short="The resource GUID property of the network security group resource."/>
                </arg>
                <arg type="array<object>" var="@NetworkSecurityGroup_create.properties.securityRules" options="security-rules" group="Properties">
                  <help short="A collection of security rules of the network security group."/>
                  <item type="object">
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg type="ResourceId" var="@NetworkSecurityGroup_create.properties.securityRules[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.access" options="access" group="Properties">
                      <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                      <enum>
                        <item name="Allow" value="&quot;Allow&quot;"/>
                        <item name="Deny" value="&quot;Deny&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.description" options="description" group="Properties">
                      <help short="A description for this rule. Restricted to 140 chars."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                      <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties">
                      <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.direction" options="direction" group="Properties">
                      <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                      <enum>
                        <item name="Inbound" value="&quot;Inbound&quot;"/>
                        <item name="Outbound" value="&quot;Outbound&quot;"/>
                      </enum>
                    </arg>
                    <arg type="integer32" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.priority" options="priority" group="Properties">
                      <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                      <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                      <enum>
                        <item name="*" value="&quot;*&quot;"/>
                        <item name="Tcp" value="&quot;Tcp&quot;"/>
                        <item name="Udp" value="&quot;Udp&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                      <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_create.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties">
                      <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                  </item>
                </arg>
                <arg type="array<object>" var="@NetworkSecurityGroup_create.properties.subnets" options="subnets" group="Properties">
                  <help short="A collection of references to subnets."/>
                  <item type="object" cls="Subnet_create">
                    <arg type="string" var="@Subnet_create.etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg type="ResourceId" var="@Subnet_create.id" options="id" hide="True">
                      <help short="Resource Identifier."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                    </arg>
                    <arg type="string" var="@Subnet_create.name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@Subnet_create.properties.addressPrefix" options="address-prefix" group="Properties">
                      <help short="The address prefix for the subnet."/>
                    </arg>
                    <arg type="@NetworkSecurityGroup_create" var="@Subnet_create.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                      <help short="The reference of the NetworkSecurityGroup resource."/>
                    </arg>
                    <arg type="string" var="@Subnet_create.properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the resource."/>
                    </arg>
                    <arg type="object" var="@Subnet_create.properties.routeTable" options="route-table" group="Properties">
                      <help short="The reference of the RouteTable resource."/>
                      <arg type="string" var="@Subnet_create.properties.routeTable.etag" options="etag">
                        <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg type="ResourceId" var="@Subnet_create.properties.routeTable.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                      </arg>
                      <arg type="ResourceLocation" var="@Subnet_create.properties.routeTable.location" options="location l">
                        <help short="Resource location."/>
                      </arg>
                      <arg type="string" var="@Subnet_create.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                      <arg type="array<object>" var="@Subnet_create.properties.routeTable.properties.routes" options="routes" group="Properties">
                        <help short="Collection of routes contained within a route table."/>
                        <item type="object">
                          <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].etag" options="etag">
                            <help short="A unique read-only string that changes whenever the resource is updated."/>
                          </arg>
                          <arg type="ResourceId" var="@Subnet_create.properties.routeTable.properties.routes[].id" options="id">
                            <help short="Resource Identifier."/>
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                          </arg>
                          <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].name" options="name">
                            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                          </arg>
                          <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                            <help short="The destination CIDR to which the route applies."/>
                          </arg>
                          <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                            <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                          </arg>
                          <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                            <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                            <enum>
                              <item name="Internet" value="&quot;Internet&quot;"/>
                              <item name="None" value="&quot;None&quot;"/>
                              <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                              <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                              <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                            </enum>
                          </arg>
                          <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                            <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                          </arg>
                        </item>
                      </arg>
                      <arg type="array<@Subnet_create>" var="@Subnet_create.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                        <help short="A collection of references to subnets."/>
                        <item type="@Subnet_create"/>
                      </arg>
                      <arg type="object" var="@Subnet_create.properties.routeTable.tags" options="tags">
                        <help short="Resource tags."/>
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </arg>
                    </arg>
                  </item>
                </arg>
                <arg type="object" var="@NetworkSecurityGroup_create.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="The provisioning state of the resource."/>
              </arg>
              <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="route-table" group="Properties">
                <help short="The reference of the RouteTable resource."/>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
                  <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                </arg>
                <arg type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="array<object>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
                  <help short="Collection of routes contained within a route table."/>
                  <item type="object">
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                    </arg>
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                      <help short="The destination CIDR to which the route applies."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                      <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                      <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                      <enum>
                        <item name="Internet" value="&quot;Internet&quot;"/>
                        <item name="None" value="&quot;None&quot;"/>
                        <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                        <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                        <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                  </item>
                </arg>
                <arg type="array<@Subnet_create>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                  <help short="A collection of references to subnets."/>
                  <item type="@Subnet_create"/>
                </arg>
                <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
              </arg>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.macAddress" options="mac-address" hide="True" group="Properties">
          <help short="The MAC address of the network interface."/>
        </arg>
        <arg type="object" var="$parameters.properties.networkSecurityGroup" options="nsg" group="Properties">
          <help short="The reference to the NetworkSecurityGroup resource."/>
          <arg type="string" var="$parameters.properties.networkSecurityGroup.etag" options="etag">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg type="ResourceId" var="$parameters.properties.networkSecurityGroup.id" options="id">
            <help short="Resource ID."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
          </arg>
          <arg type="ResourceLocation" var="$parameters.properties.networkSecurityGroup.location" options="location l">
            <help short="Resource location."/>
          </arg>
          <arg type="array<@SecurityRule_create>" var="$parameters.properties.networkSecurityGroup.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
            <help short="The default security rules of network security group."/>
            <item type="@SecurityRule_create"/>
          </arg>
          <arg type="array<@NetworkInterface_create>" var="$parameters.properties.networkSecurityGroup.properties.networkInterfaces" options="network-interfaces" group="Properties">
            <help short="A collection of references to network interfaces."/>
            <item type="@NetworkInterface_create"/>
          </arg>
          <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.provisioningState" options="provisioning-state" group="Properties">
            <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
          <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.resourceGuid" options="resource-guid" group="Properties">
            <help short="The resource GUID property of the network security group resource."/>
          </arg>
          <arg type="array<object>" var="$parameters.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
            <help short="A collection of security rules of the network security group."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].etag" options="etag">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg type="ResourceId" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].id" options="id">
                <help short="Resource ID."/>
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.access" options="access" group="Properties">
                <help short="The network traffic is allowed or denied."/>
                <enum>
                  <item name="Allow" value="&quot;Allow&quot;"/>
                  <item name="Deny" value="&quot;Deny&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.description" options="description" group="Properties">
                <help short="A description for this rule. Restricted to 140 chars."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties">
                <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.direction" options="direction" group="Properties">
                <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic."/>
                <enum>
                  <item name="Inbound" value="&quot;Inbound&quot;"/>
                  <item name="Outbound" value="&quot;Outbound&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.priority" options="priority" group="Properties">
                <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                <help short="Network protocol this rule applies to."/>
                <enum>
                  <item name="*" value="&quot;*&quot;"/>
                  <item name="Tcp" value="&quot;Tcp&quot;"/>
                  <item name="Udp" value="&quot;Udp&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties">
                <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
              </arg>
            </item>
          </arg>
          <arg type="array<@Subnet_create>" var="$parameters.properties.networkSecurityGroup.properties.subnets" options="subnets" group="Properties">
            <help short="A collection of references to subnets."/>
            <item type="@Subnet_create"/>
          </arg>
          <arg type="object" var="$parameters.properties.networkSecurityGroup.tags" options="tags">
            <help short="Resource tags."/>
            <additionalProp>
              <item type="string"/>
            </additionalProp>
          </arg>
        </arg>
        <arg type="boolean" var="$parameters.properties.primary" options="primary" hide="True" group="Properties">
          <help short="Gets whether this is a primary network interface on a virtual machine."/>
        </arg>
        <arg type="string" var="$parameters.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
        </arg>
        <arg type="string" var="$parameters.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
          <help short="The resource GUID property of the network interface resource."/>
        </arg>
        <arg type="object" var="$parameters.properties.virtualMachine" options="virtual-machine" hide="True" group="Properties" cls="SubResource_create">
          <help short="The reference of a virtual machine."/>
          <arg type="string" var="@SubResource_create.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkInterfaces_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
          <request method="put">
            <path>
              <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="etag" arg="$parameters.etag"/>
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="dnsSettings">
                      <prop type="array<string>" name="appliedDnsServers" arg="$parameters.properties.dnsSettings.appliedDnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="dnsServers" arg="$parameters.properties.dnsSettings.dnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="internalDnsNameLabel" arg="$parameters.properties.dnsSettings.internalDnsNameLabel"/>
                      <prop type="string" name="internalFqdn" arg="$parameters.properties.dnsSettings.internalFqdn"/>
                    </prop>
                    <prop type="boolean" name="enableIPForwarding" arg="$parameters.properties.enableIPForwarding"/>
                    <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.ipConfigurations">
                      <item type="object">
                        <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].etag"/>
                        <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                        <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                              <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                              <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="loadBalancerInboundNatRules" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                              <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                              <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="integer32" name="backendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                <prop type="@SubResource_create" name="frontendIPConfiguration" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                <prop type="integer32" name="frontendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                <prop type="string" name="protocol" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                                  <enum>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="primary" arg="$parameters.properties.ipConfigurations[].properties.primary"/>
                          <prop type="string" name="privateIPAddress" arg="$parameters.properties.ipConfigurations[].properties.privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.provisioningState"/>
                          <prop type="object" name="publicIPAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress">
                            <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                            <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="object" name="dnsSettings" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                                <prop type="string" name="domainNameLabel" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                                <prop type="string" name="fqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                                <prop type="string" name="reverseFqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                              </prop>
                              <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                              <prop type="string" name="ipAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                              <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                              <prop type="string" name="publicIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="resourceGuid" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                            </prop>
                            <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </prop>
                          <prop type="object" name="subnet" arg="$parameters.properties.ipConfigurations[].properties.subnet">
                            <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.etag"/>
                            <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                            </prop>
                            <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                              <prop type="object" name="networkSecurityGroup" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" cls="NetworkSecurityGroup_create">
                                <prop type="string" name="etag" arg="@NetworkSecurityGroup_create.etag"/>
                                <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_create.id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location" arg="@NetworkSecurityGroup_create.location"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<object>" name="defaultSecurityRules" arg="@NetworkSecurityGroup_create.properties.defaultSecurityRules">
                                    <item type="object" cls="SecurityRule_create">
                                      <prop type="string" name="etag" arg="@SecurityRule_create.etag"/>
                                      <prop type="ResourceId" name="id" arg="@SecurityRule_create.id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@SecurityRule_create.name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="access" arg="@SecurityRule_create.properties.access" required="True">
                                          <enum>
                                            <item value="&quot;Allow&quot;"/>
                                            <item value="&quot;Deny&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="description" arg="@SecurityRule_create.properties.description"/>
                                        <prop type="string" name="destinationAddressPrefix" arg="@SecurityRule_create.properties.destinationAddressPrefix" required="True"/>
                                        <prop type="string" name="destinationPortRange" arg="@SecurityRule_create.properties.destinationPortRange"/>
                                        <prop type="string" name="direction" arg="@SecurityRule_create.properties.direction" required="True">
                                          <enum>
                                            <item value="&quot;Inbound&quot;"/>
                                            <item value="&quot;Outbound&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="integer32" name="priority" arg="@SecurityRule_create.properties.priority"/>
                                        <prop type="string" name="protocol" arg="@SecurityRule_create.properties.protocol" required="True">
                                          <enum>
                                            <item value="&quot;*&quot;"/>
                                            <item value="&quot;Tcp&quot;"/>
                                            <item value="&quot;Udp&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState" arg="@SecurityRule_create.properties.provisioningState"/>
                                        <prop type="string" name="sourceAddressPrefix" arg="@SecurityRule_create.properties.sourceAddressPrefix" required="True"/>
                                        <prop type="string" name="sourcePortRange" arg="@SecurityRule_create.properties.sourcePortRange"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="networkInterfaces" arg="@NetworkSecurityGroup_create.properties.networkInterfaces">
                                    <item type="object" cls="NetworkInterface_create">
                                      <prop type="string" name="etag" arg="@NetworkInterface_create.etag"/>
                                      <prop type="ResourceId" name="id" arg="@NetworkInterface_create.id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location" arg="@NetworkInterface_create.location"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="object" name="dnsSettings" arg="@NetworkInterface_create.properties.dnsSettings">
                                          <prop type="array<string>" name="appliedDnsServers" arg="@NetworkInterface_create.properties.dnsSettings.appliedDnsServers">
                                            <item type="string"/>
                                          </prop>
                                          <prop type="array<string>" name="dnsServers" arg="@NetworkInterface_create.properties.dnsSettings.dnsServers">
                                            <item type="string"/>
                                          </prop>
                                          <prop type="string" name="internalDnsNameLabel" arg="@NetworkInterface_create.properties.dnsSettings.internalDnsNameLabel"/>
                                          <prop type="string" name="internalFqdn" arg="@NetworkInterface_create.properties.dnsSettings.internalFqdn"/>
                                        </prop>
                                        <prop type="boolean" name="enableIPForwarding" arg="@NetworkInterface_create.properties.enableIPForwarding"/>
                                        <prop type="array<object>" name="ipConfigurations" arg="@NetworkInterface_create.properties.ipConfigurations">
                                          <item type="object">
                                            <prop type="string" name="etag" arg="@NetworkInterface_create.properties.ipConfigurations[].etag"/>
                                            <prop type="string" name="id" arg="@NetworkInterface_create.properties.ipConfigurations[].id"/>
                                            <prop type="string" name="name" arg="@NetworkInterface_create.properties.ipConfigurations[].name"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                                                <item type="object">
                                                  <prop type="string" name="etag" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                                                  <prop type="string" name="id" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                                                  <prop type="string" name="name" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                                                  </prop>
                                                </item>
                                              </prop>
                                              <prop type="array<object>" name="loadBalancerInboundNatRules" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                                                <item type="object">
                                                  <prop type="string" name="etag" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                                                  <prop type="string" name="id" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                                                  <prop type="string" name="name" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="integer32" name="backendPort" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                                    <prop type="boolean" name="enableFloatingIP" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                                    <prop type="@SubResource_create" name="frontendIPConfiguration" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                                    <prop type="integer32" name="frontendPort" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                                    <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                                    <prop type="string" name="protocol" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                                                      <enum>
                                                        <item value="&quot;Tcp&quot;"/>
                                                        <item value="&quot;Udp&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                                                  </prop>
                                                </item>
                                              </prop>
                                              <prop type="boolean" name="primary" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.primary"/>
                                              <prop type="string" name="privateIPAddress" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.privateIPAddress"/>
                                              <prop type="string" name="privateIPAllocationMethod" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                                                <enum>
                                                  <item value="&quot;Dynamic&quot;"/>
                                                  <item value="&quot;Static&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="provisioningState" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.provisioningState"/>
                                              <prop type="object" name="publicIPAddress" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress">
                                                <prop type="string" name="etag" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                                                <prop type="ResourceId" name="id" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.id">
                                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                                </prop>
                                                <prop type="ResourceLocation" name="location" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                                                <prop type="object" name="properties" clientFlatten="True">
                                                  <prop type="object" name="dnsSettings" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                                                    <prop type="string" name="domainNameLabel" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                                                    <prop type="string" name="fqdn" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                                                    <prop type="string" name="reverseFqdn" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                                                  </prop>
                                                  <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                                                  <prop type="string" name="ipAddress" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                                                  <prop type="string" name="provisioningState" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                                                  <prop type="string" name="publicIPAllocationMethod" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                                                    <enum>
                                                      <item value="&quot;Dynamic&quot;"/>
                                                      <item value="&quot;Static&quot;"/>
                                                    </enum>
                                                  </prop>
                                                  <prop type="string" name="resourceGuid" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                                                </prop>
                                                <prop type="object" name="tags" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.publicIPAddress.tags">
                                                  <additionalProp>
                                                    <item type="string"/>
                                                  </additionalProp>
                                                </prop>
                                              </prop>
                                              <prop type="@Subnet_create" name="subnet" arg="@NetworkInterface_create.properties.ipConfigurations[].properties.subnet"/>
                                            </prop>
                                          </item>
                                        </prop>
                                        <prop type="string" name="macAddress" arg="@NetworkInterface_create.properties.macAddress"/>
                                        <prop type="@NetworkSecurityGroup_create" name="networkSecurityGroup" arg="@NetworkInterface_create.properties.networkSecurityGroup"/>
                                        <prop type="boolean" name="primary" arg="@NetworkInterface_create.properties.primary"/>
                                        <prop type="string" name="provisioningState" arg="@NetworkInterface_create.properties.provisioningState"/>
                                        <prop type="string" name="resourceGuid" arg="@NetworkInterface_create.properties.resourceGuid"/>
                                        <prop type="@SubResource_create" name="virtualMachine" arg="@NetworkInterface_create.properties.virtualMachine"/>
                                      </prop>
                                      <prop type="object" name="tags" arg="@NetworkInterface_create.tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_create.properties.provisioningState"/>
                                  <prop type="string" name="resourceGuid" arg="@NetworkSecurityGroup_create.properties.resourceGuid"/>
                                  <prop type="array<object>" name="securityRules" arg="@NetworkSecurityGroup_create.properties.securityRules">
                                    <item type="object">
                                      <prop type="string" name="etag" arg="@NetworkSecurityGroup_create.properties.securityRules[].etag"/>
                                      <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_create.properties.securityRules[].id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@NetworkSecurityGroup_create.properties.securityRules[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="access" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.access" required="True">
                                          <enum>
                                            <item value="&quot;Allow&quot;"/>
                                            <item value="&quot;Deny&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="description" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.description"/>
                                        <prop type="string" name="destinationAddressPrefix" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.destinationAddressPrefix" required="True"/>
                                        <prop type="string" name="destinationPortRange" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.destinationPortRange"/>
                                        <prop type="string" name="direction" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.direction" required="True">
                                          <enum>
                                            <item value="&quot;Inbound&quot;"/>
                                            <item value="&quot;Outbound&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="integer32" name="priority" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.priority"/>
                                        <prop type="string" name="protocol" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.protocol" required="True">
                                          <enum>
                                            <item value="&quot;*&quot;"/>
                                            <item value="&quot;Tcp&quot;"/>
                                            <item value="&quot;Udp&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.provisioningState"/>
                                        <prop type="string" name="sourceAddressPrefix" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.sourceAddressPrefix" required="True"/>
                                        <prop type="string" name="sourcePortRange" arg="@NetworkSecurityGroup_create.properties.securityRules[].properties.sourcePortRange"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="subnets" arg="@NetworkSecurityGroup_create.properties.subnets">
                                    <item type="object" cls="Subnet_create">
                                      <prop type="string" name="etag" arg="@Subnet_create.etag"/>
                                      <prop type="ResourceId" name="id" arg="@Subnet_create.id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@Subnet_create.name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="addressPrefix" arg="@Subnet_create.properties.addressPrefix"/>
                                        <prop type="@NetworkSecurityGroup_create" name="networkSecurityGroup" arg="@Subnet_create.properties.networkSecurityGroup"/>
                                        <prop type="string" name="provisioningState" arg="@Subnet_create.properties.provisioningState"/>
                                        <prop type="object" name="routeTable" arg="@Subnet_create.properties.routeTable">
                                          <prop type="string" name="etag" arg="@Subnet_create.properties.routeTable.etag"/>
                                          <prop type="ResourceId" name="id" arg="@Subnet_create.properties.routeTable.id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location" arg="@Subnet_create.properties.routeTable.location"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="provisioningState" arg="@Subnet_create.properties.routeTable.properties.provisioningState"/>
                                            <prop type="array<object>" name="routes" arg="@Subnet_create.properties.routeTable.properties.routes">
                                              <item type="object">
                                                <prop type="string" name="etag" arg="@Subnet_create.properties.routeTable.properties.routes[].etag"/>
                                                <prop type="ResourceId" name="id" arg="@Subnet_create.properties.routeTable.properties.routes[].id">
                                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                                </prop>
                                                <prop type="string" name="name" arg="@Subnet_create.properties.routeTable.properties.routes[].name"/>
                                                <prop type="object" name="properties" clientFlatten="True">
                                                  <prop type="string" name="addressPrefix" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                                  <prop type="string" name="nextHopIpAddress" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                                  <prop type="string" name="nextHopType" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                                    <enum>
                                                      <item value="&quot;Internet&quot;"/>
                                                      <item value="&quot;None&quot;"/>
                                                      <item value="&quot;VirtualAppliance&quot;"/>
                                                      <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                      <item value="&quot;VnetLocal&quot;"/>
                                                    </enum>
                                                  </prop>
                                                  <prop type="string" name="provisioningState" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                                </prop>
                                              </item>
                                            </prop>
                                            <prop type="array<@Subnet_create>" name="subnets" arg="@Subnet_create.properties.routeTable.properties.subnets">
                                              <item type="@Subnet_create"/>
                                            </prop>
                                          </prop>
                                          <prop type="object" name="tags" arg="@Subnet_create.properties.routeTable.tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                        </prop>
                                      </prop>
                                    </item>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags" arg="@NetworkSecurityGroup_create.tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                              </prop>
                              <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                              <prop type="object" name="routeTable" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                                <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                                <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                                  <prop type="array<object>" name="routes" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                                    <item type="object">
                                      <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                                      <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                        <prop type="string" name="nextHopIpAddress" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                        <prop type="string" name="nextHopType" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                          <enum>
                                            <item value="&quot;Internet&quot;"/>
                                            <item value="&quot;None&quot;"/>
                                            <item value="&quot;VirtualAppliance&quot;"/>
                                            <item value="&quot;VirtualNetworkGateway&quot;"/>
                                            <item value="&quot;VnetLocal&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<@Subnet_create>" name="subnets" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                                    <item type="@Subnet_create"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="macAddress" arg="$parameters.properties.macAddress"/>
                    <prop type="object" name="networkSecurityGroup" arg="$parameters.properties.networkSecurityGroup">
                      <prop type="string" name="etag" arg="$parameters.properties.networkSecurityGroup.etag"/>
                      <prop type="ResourceId" name="id" arg="$parameters.properties.networkSecurityGroup.id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" arg="$parameters.properties.networkSecurityGroup.location"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<@SecurityRule_create>" name="defaultSecurityRules" arg="$parameters.properties.networkSecurityGroup.properties.defaultSecurityRules">
                          <item type="@SecurityRule_create"/>
                        </prop>
                        <prop type="array<@NetworkInterface_create>" name="networkInterfaces" arg="$parameters.properties.networkSecurityGroup.properties.networkInterfaces">
                          <item type="@NetworkInterface_create"/>
                        </prop>
                        <prop type="string" name="provisioningState" arg="$parameters.properties.networkSecurityGroup.properties.provisioningState"/>
                        <prop type="string" name="resourceGuid" arg="$parameters.properties.networkSecurityGroup.properties.resourceGuid"/>
                        <prop type="array<object>" name="securityRules" arg="$parameters.properties.networkSecurityGroup.properties.securityRules">
                          <item type="object">
                            <prop type="string" name="etag" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].etag"/>
                            <prop type="ResourceId" name="id" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                            </prop>
                            <prop type="string" name="name" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="access" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.access" required="True">
                                <enum>
                                  <item value="&quot;Allow&quot;"/>
                                  <item value="&quot;Deny&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.description"/>
                              <prop type="string" name="destinationAddressPrefix" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix" required="True"/>
                              <prop type="string" name="destinationPortRange" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange"/>
                              <prop type="string" name="direction" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.direction" required="True">
                                <enum>
                                  <item value="&quot;Inbound&quot;"/>
                                  <item value="&quot;Outbound&quot;"/>
                                </enum>
                              </prop>
                              <prop type="integer32" name="priority" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.priority"/>
                              <prop type="string" name="protocol" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" required="True">
                                <enum>
                                  <item value="&quot;*&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.provisioningState"/>
                              <prop type="string" name="sourceAddressPrefix" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix" required="True"/>
                              <prop type="string" name="sourcePortRange" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<@Subnet_create>" name="subnets" arg="$parameters.properties.networkSecurityGroup.properties.subnets">
                          <item type="@Subnet_create"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags" arg="$parameters.properties.networkSecurityGroup.tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="boolean" name="primary" arg="$parameters.properties.primary"/>
                    <prop type="string" name="provisioningState" arg="$parameters.properties.provisioningState"/>
                    <prop type="string" name="resourceGuid" arg="$parameters.properties.resourceGuid"/>
                    <prop type="object" name="virtualMachine" arg="$parameters.properties.virtualMachine" cls="SubResource_create">
                      <prop type="string" name="id" arg="@SubResource_create.id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkInterface_read">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="dnsSettings">
                      <prop type="array<string>" name="appliedDnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="dnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="internalDnsNameLabel"/>
                      <prop type="string" name="internalFqdn"/>
                    </prop>
                    <prop type="boolean" name="enableIPForwarding"/>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                  <item type="@NetworkInterfaceIPConfiguration_read"/>
                                </prop>
                                <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                  <item type="@SubResource_read"/>
                                </prop>
                                <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                <prop type="string" name="provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                <prop type="integer32" name="backendPort"/>
                                <prop type="boolean" name="enableFloatingIP"/>
                                <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                <prop type="integer32" name="frontendPort"/>
                                <prop type="integer32" name="idleTimeoutInMinutes"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="primary"/>
                          <prop type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                          <prop type="@Subnet_read" name="subnet"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="macAddress"/>
                    <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                          <item type="@SecurityRule_read"/>
                        </prop>
                        <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                          <item type="@NetworkInterface_read"/>
                        </prop>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="array<object>" name="securityRules">
                          <item type="object" cls="SecurityRule_read">
                            <prop type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="access" required="True">
                                <enum>
                                  <item value="&quot;Allow&quot;"/>
                                  <item value="&quot;Deny&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description"/>
                              <prop type="string" name="destinationAddressPrefix" required="True"/>
                              <prop type="string" name="destinationPortRange"/>
                              <prop type="string" name="direction" required="True">
                                <enum>
                                  <item value="&quot;Inbound&quot;"/>
                                  <item value="&quot;Outbound&quot;"/>
                                </enum>
                              </prop>
                              <prop type="integer32" name="priority"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;*&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="sourceAddressPrefix" required="True"/>
                              <prop type="string" name="sourcePortRange"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="subnets">
                          <item type="object" cls="Subnet_read">
                            <prop type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="addressPrefix"/>
                              <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                <item type="object" cls="IPConfiguration_read">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="privateIPAddress"/>
                                    <prop type="string" name="privateIPAllocationMethod">
                                      <enum>
                                        <item value="&quot;Dynamic&quot;"/>
                                        <item value="&quot;Static&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location"/>
                                      <prop readOnly="True" type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel"/>
                                          <prop type="string" name="fqdn"/>
                                          <prop type="string" name="reverseFqdn"/>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="string" name="ipAddress"/>
                                        <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="string" name="publicIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="resourceGuid"/>
                                      </prop>
                                      <prop type="object" name="tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                      <prop readOnly="True" type="string" name="type"/>
                                    </prop>
                                    <prop type="@Subnet_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                              <prop type="string" name="provisioningState"/>
                              <prop type="object" name="routeTable">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location"/>
                                <prop readOnly="True" type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="array<object>" name="routes">
                                    <item type="object">
                                      <prop type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                      </prop>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="addressPrefix"/>
                                        <prop type="string" name="nextHopIpAddress"/>
                                        <prop type="string" name="nextHopType" required="True">
                                          <enum>
                                            <item value="&quot;Internet&quot;"/>
                                            <item value="&quot;None&quot;"/>
                                            <item value="&quot;VirtualAppliance&quot;"/>
                                            <item value="&quot;VirtualNetworkGateway&quot;"/>
                                            <item value="&quot;VnetLocal&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<@Subnet_read>" name="subnets">
                                    <item type="@Subnet_read"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </prop>
                    <prop type="boolean" name="primary"/>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="resourceGuid"/>
                    <prop type="object" name="virtualMachine" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2015-06-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkInterfaceName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the network interface (NIC)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableIPForwarding" options="ip-forwarding" group="">
          <help short="Whether to enable IP forwarding."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" hide="True" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="DNS">
        <arg nullable="True" type="array<string>" var="$parameters.properties.dnsSettings.dnsServers" options="dns-servers" group="DNS">
          <help short="Space-separated list of DNS server IP addresses. Use null to revert to default Azure servers."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.dnsSettings.internalDnsNameLabel" options="internal-dns-name" group="DNS">
          <help short="Name of internal DNS label."/>
        </arg>
      </argGroup>
      <argGroup name="DnsSettings">
        <arg nullable="True" type="array<string>" var="$parameters.properties.dnsSettings.appliedDnsServers" options="applied-dns-servers" hide="True" group="DnsSettings">
          <help short="If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.dnsSettings.internalFqdn" options="internal-fqdn" hide="True" group="DnsSettings">
          <help short="Fully qualified DNS name supporting internal communications between VMs in the same virtual network."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="string" var="$parameters.etag" options="etag" hide="True" group="Parameters">
          <help short="A unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations" options="ip-configurations" hide="True" group="Properties">
          <help short="A list of IPConfigurations of the network interface."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[]">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
              <help short="The reference to LoadBalancerBackendAddressPool resource."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                  <help short="Resource ID."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                  <help short="The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                  <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
              <help short="A list of references of LoadBalancerInboundNatRules."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                  <help short="Resource ID."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                  <help short="The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource."/>
                </arg>
                <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties">
                  <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties">
                  <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties">
                  <help short="A reference to frontend IP addresses."/>
                </arg>
                <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties">
                  <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
                </arg>
                <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                  <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                  <help short="The reference to the transport protocol used by the load balancing rule."/>
                  <enum>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                  <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
              <help short="Whether this is a primary customer address on the network interface."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties">
              <help short="Private IP address of the IP configuration."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
              <help short="The private IP address allocation method."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties">
              <help short="Public IP address bound to the IP configuration."/>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag" options="etag">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id" options="id">
                <help short="Resource ID."/>
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
              </arg>
              <arg nullable="True" type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location" options="location l">
                <help short="Resource location."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="dns-settings" group="Properties">
                <help short="The FQDN of the DNS record associated with the public IP address."/>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                  <help short="Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
                  <help short="Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
                  <help short="Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "/>
                </arg>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                <help short="The idle timeout of the public IP address."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="ip-address" group="Properties">
                <help short="The IP address associated with the public IP address resource."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="provisioning-state" group="Properties">
                <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                <help short="The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."/>
                <enum>
                  <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                  <item name="Static" value="&quot;Static&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" group="Properties">
                <help short="The resource GUID property of the public IP resource."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags" options="tags">
                <help short="Resource tags."/>
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
              <help short="Subnet bound to the IP configuration."/>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.etag" options="etag" hide="True" group="">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="id" group="">
                <help short="Resource ID."/>
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="address-prefix" group="Properties">
                <help short="The address prefix for the subnet."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="network-security-group" group="Properties" cls="NetworkSecurityGroup_update">
                <help short="The reference of the NetworkSecurityGroup resource."/>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="@NetworkSecurityGroup_update.id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                </arg>
                <arg nullable="True" type="ResourceLocation" var="@NetworkSecurityGroup_update.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
                  <help short="The default security rules of network security group."/>
                  <item nullable="True" type="object" cls="SecurityRule_update">
                    <arg nullable="True" type="string" var="@SecurityRule_update.etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg nullable="True" type="ResourceId" var="@SecurityRule_update.id" options="id" hide="True">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@SecurityRule_update.name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_update.properties.access" options="access" group="Properties">
                      <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                      <enum>
                        <item name="Allow" value="&quot;Allow&quot;"/>
                        <item name="Deny" value="&quot;Deny&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@SecurityRule_update.properties.description" options="description" group="Properties">
                      <help short="A description for this rule. Restricted to 140 chars."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_update.properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                      <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                    </arg>
                    <arg nullable="True" type="string" var="@SecurityRule_update.properties.destinationPortRange" options="destination-port-range" group="Properties">
                      <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_update.properties.direction" options="direction" group="Properties">
                      <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                      <enum>
                        <item name="Inbound" value="&quot;Inbound&quot;"/>
                        <item name="Outbound" value="&quot;Outbound&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="integer32" var="@SecurityRule_update.properties.priority" options="priority" group="Properties">
                      <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_update.properties.protocol" options="protocol" group="Properties">
                      <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                      <enum>
                        <item name="*" value="&quot;*&quot;"/>
                        <item name="Tcp" value="&quot;Tcp&quot;"/>
                        <item name="Udp" value="&quot;Udp&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@SecurityRule_update.properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg type="string" var="@SecurityRule_update.properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                      <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                    </arg>
                    <arg nullable="True" type="string" var="@SecurityRule_update.properties.sourcePortRange" options="source-port-range" group="Properties">
                      <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.networkInterfaces" options="network-interfaces" group="Properties">
                  <help short="A collection of references to network interfaces."/>
                  <item nullable="True" type="object" cls="NetworkInterface_update">
                    <arg nullable="True" type="string" var="@NetworkInterface_update.etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.id" options="id">
                      <help short="Resource Identifier."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </arg>
                    <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.location" options="location l">
                      <help short="Resource location."/>
                    </arg>
                    <arg nullable="True" type="object" var="@NetworkInterface_update.properties.dnsSettings" options="dns-settings" group="Properties">
                      <help short="The DNS settings in network interface."/>
                      <arg nullable="True" type="array<string>" var="@NetworkInterface_update.properties.dnsSettings.appliedDnsServers" options="applied-dns-servers">
                        <help short="If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."/>
                        <item nullable="True" type="string"/>
                      </arg>
                      <arg nullable="True" type="array<string>" var="@NetworkInterface_update.properties.dnsSettings.dnsServers" options="dns-servers">
                        <help short="List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."/>
                        <item nullable="True" type="string"/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.dnsSettings.internalDnsNameLabel" options="internal-dns-name-label">
                        <help short="Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.dnsSettings.internalFqdn" options="internal-fqdn">
                        <help short="Fully qualified DNS name supporting internal communications between VMs in the same virtual network."/>
                      </arg>
                    </arg>
                    <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                      <help short="Indicates whether IP forwarding is enabled on this network interface."/>
                    </arg>
                    <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations" options="ip-configurations" group="Properties">
                      <help short="A list of IPConfigurations of the network interface."/>
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].etag" options="etag">
                          <help short="A unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].id" options="id">
                          <help short="Resource Identifier."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].name" options="name">
                          <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                          <help short="The reference of LoadBalancerBackendAddressPool resource."/>
                          <item nullable="True" type="object">
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag">
                              <help short="A unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                              <help short="Resource Identifier."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                              <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                          </item>
                        </arg>
                        <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
                          <help short="A list of references of LoadBalancerInboundNatRules."/>
                          <item nullable="True" type="object">
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag">
                              <help short="A unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                              <help short="Resource Identifier."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                              <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                            </arg>
                            <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties">
                              <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
                            </arg>
                            <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties">
                              <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
                            </arg>
                            <arg nullable="True" type="@SubResource_update" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties">
                              <help short="A reference to frontend IP addresses."/>
                            </arg>
                            <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties">
                              <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
                            </arg>
                            <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                              <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                              <help short="The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'"/>
                              <enum>
                                <item name="Tcp" value="&quot;Tcp&quot;"/>
                                <item name="Udp" value="&quot;Udp&quot;"/>
                              </enum>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                          </item>
                        </arg>
                        <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                          <help short="Gets whether this is a primary customer address on the network interface."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties"/>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                          <help short="Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'."/>
                          <enum>
                            <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                            <item name="Static" value="&quot;Static&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" group="Properties"/>
                        <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties">
                          <help short="Public IP address resource."/>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.etag" options="etag">
                            <help short="A unique read-only string that changes whenever the resource is updated."/>
                          </arg>
                          <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.id" options="id">
                            <help short="Resource Identifier."/>
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                          </arg>
                          <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.location" options="location l">
                            <help short="Resource location."/>
                          </arg>
                          <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="dns-settings" group="Properties">
                            <help short="The FQDN of the DNS record associated with the public IP address."/>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                              <help short="Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
                              <help short="Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
                              <help short="Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "/>
                            </arg>
                          </arg>
                          <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                            <help short="The idle timeout of the public IP address."/>
                          </arg>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="ip-address" group="Properties"/>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="provisioning-state" group="Properties">
                            <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                          </arg>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                            <help short="The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."/>
                            <enum>
                              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                              <item name="Static" value="&quot;Static&quot;"/>
                            </enum>
                          </arg>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" group="Properties">
                            <help short="The resource GUID property of the public IP resource."/>
                          </arg>
                          <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.tags" options="tags">
                            <help short="Resource tags."/>
                            <additionalProp>
                              <item nullable="True" type="string"/>
                            </additionalProp>
                          </arg>
                        </arg>
                        <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.etag" options="etag">
                            <help short="A unique read-only string that changes whenever the resource is updated."/>
                          </arg>
                          <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.id" options="id">
                            <help short="Resource Identifier."/>
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                          </arg>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.name" options="name">
                            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                          </arg>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="address-prefix" group="Properties">
                            <help short="The address prefix for the subnet."/>
                          </arg>
                          <arg nullable="True" type="@NetworkSecurityGroup_update" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                            <help short="The reference of the NetworkSecurityGroup resource."/>
                          </arg>
                          <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="provisioning-state" group="Properties">
                            <help short="The provisioning state of the resource."/>
                          </arg>
                          <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="route-table" group="Properties">
                            <help short="The reference of the RouteTable resource."/>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
                              <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
                              <help short="Resource Identifier."/>
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                            </arg>
                            <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
                              <help short="Resource location."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                            <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
                              <help short="Collection of routes contained within a route table."/>
                              <item nullable="True" type="object">
                                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                                </arg>
                                <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                                  <help short="Resource Identifier."/>
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                </arg>
                                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                                </arg>
                                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                                  <help short="The destination CIDR to which the route applies."/>
                                </arg>
                                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                                  <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                                </arg>
                                <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                                  <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                                  <enum>
                                    <item name="Internet" value="&quot;Internet&quot;"/>
                                    <item name="None" value="&quot;None&quot;"/>
                                    <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                                    <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                                    <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                                  </enum>
                                </arg>
                                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                                  <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                                </arg>
                              </item>
                            </arg>
                            <arg nullable="True" type="array<@Subnet_update>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                              <help short="A collection of references to subnets."/>
                              <item nullable="True" type="@Subnet_update"/>
                            </arg>
                            <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
                              <help short="Resource tags."/>
                              <additionalProp>
                                <item nullable="True" type="string"/>
                              </additionalProp>
                            </arg>
                          </arg>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.macAddress" options="mac-address" group="Properties">
                      <help short="The MAC address of the network interface."/>
                    </arg>
                    <arg nullable="True" type="object" var="@NetworkInterface_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                      <help short="The reference of the NetworkSecurityGroup resource."/>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.networkSecurityGroup.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                      </arg>
                      <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.properties.networkSecurityGroup.location" options="location l">
                        <help short="Resource location."/>
                      </arg>
                      <arg nullable="True" type="array<@SecurityRule_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
                        <help short="The default security rules of network security group."/>
                        <item nullable="True" type="@SecurityRule_update"/>
                      </arg>
                      <arg nullable="True" type="array<@NetworkInterface_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.networkInterfaces" options="network-interfaces" group="Properties">
                        <help short="A collection of references to network interfaces."/>
                        <item nullable="True" type="@NetworkInterface_update"/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.resourceGuid" options="resource-guid" group="Properties">
                        <help short="The resource GUID property of the network security group resource."/>
                      </arg>
                      <arg nullable="True" type="array<@SecurityRule_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
                        <help short="A collection of security rules of the network security group."/>
                        <item nullable="True" type="@SecurityRule_update"/>
                      </arg>
                      <arg nullable="True" type="array<@Subnet_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.subnets" options="subnets" group="Properties">
                        <help short="A collection of references to subnets."/>
                        <item nullable="True" type="@Subnet_update"/>
                      </arg>
                      <arg nullable="True" type="object" var="@NetworkInterface_update.properties.networkSecurityGroup.tags" options="tags">
                        <help short="Resource tags."/>
                        <additionalProp>
                          <item nullable="True" type="string"/>
                        </additionalProp>
                      </arg>
                    </arg>
                    <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.primary" options="primary" group="Properties">
                      <help short="Gets whether this is a primary network interface on a virtual machine."/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.resourceGuid" options="resource-guid" group="Properties">
                      <help short="The resource GUID property of the network interface resource."/>
                    </arg>
                    <arg nullable="True" type="@SubResource_update" var="@NetworkInterface_update.properties.virtualMachine" options="virtual-machine" group="Properties">
                      <help short="The reference of a virtual machine."/>
                    </arg>
                    <arg nullable="True" type="object" var="@NetworkInterface_update.tags" options="tags">
                      <help short="Resource tags."/>
                      <additionalProp>
                        <item nullable="True" type="string"/>
                      </additionalProp>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.resourceGuid" options="resource-guid" group="Properties">
                  <help short="The resource GUID property of the network security group resource."/>
                </arg>
                <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.securityRules" options="security-rules" group="Properties">
                  <help short="A collection of security rules of the network security group."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg nullable="True" type="ResourceId" var="@NetworkSecurityGroup_update.properties.securityRules[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.access" options="access" group="Properties">
                      <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                      <enum>
                        <item name="Allow" value="&quot;Allow&quot;"/>
                        <item name="Deny" value="&quot;Deny&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.description" options="description" group="Properties">
                      <help short="A description for this rule. Restricted to 140 chars."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                      <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties">
                      <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.direction" options="direction" group="Properties">
                      <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                      <enum>
                        <item name="Inbound" value="&quot;Inbound&quot;"/>
                        <item name="Outbound" value="&quot;Outbound&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="integer32" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.priority" options="priority" group="Properties">
                      <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                      <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                      <enum>
                        <item name="*" value="&quot;*&quot;"/>
                        <item name="Tcp" value="&quot;Tcp&quot;"/>
                        <item name="Udp" value="&quot;Udp&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                      <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties">
                      <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.subnets" options="subnets" group="Properties">
                  <help short="A collection of references to subnets."/>
                  <item nullable="True" type="object" cls="Subnet_update">
                    <arg nullable="True" type="string" var="@Subnet_update.etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg nullable="True" type="ResourceId" var="@Subnet_update.id" options="id" hide="True">
                      <help short="Resource Identifier."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@Subnet_update.name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg nullable="True" type="string" var="@Subnet_update.properties.addressPrefix" options="address-prefix" group="Properties">
                      <help short="The address prefix for the subnet."/>
                    </arg>
                    <arg nullable="True" type="@NetworkSecurityGroup_update" var="@Subnet_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                      <help short="The reference of the NetworkSecurityGroup resource."/>
                    </arg>
                    <arg nullable="True" type="string" var="@Subnet_update.properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the resource."/>
                    </arg>
                    <arg nullable="True" type="object" var="@Subnet_update.properties.routeTable" options="route-table" group="Properties">
                      <help short="The reference of the RouteTable resource."/>
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.etag" options="etag">
                        <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.routeTable.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                      </arg>
                      <arg nullable="True" type="ResourceLocation" var="@Subnet_update.properties.routeTable.location" options="location l">
                        <help short="Resource location."/>
                      </arg>
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                      <arg nullable="True" type="array<object>" var="@Subnet_update.properties.routeTable.properties.routes" options="routes" group="Properties">
                        <help short="Collection of routes contained within a route table."/>
                        <item nullable="True" type="object">
                          <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].etag" options="etag">
                            <help short="A unique read-only string that changes whenever the resource is updated."/>
                          </arg>
                          <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.routeTable.properties.routes[].id" options="id">
                            <help short="Resource Identifier."/>
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                          </arg>
                          <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].name" options="name">
                            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                          </arg>
                          <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                            <help short="The destination CIDR to which the route applies."/>
                          </arg>
                          <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                            <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                          </arg>
                          <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                            <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                            <enum>
                              <item name="Internet" value="&quot;Internet&quot;"/>
                              <item name="None" value="&quot;None&quot;"/>
                              <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                              <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                              <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                            </enum>
                          </arg>
                          <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                            <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                          </arg>
                        </item>
                      </arg>
                      <arg nullable="True" type="array<@Subnet_update>" var="@Subnet_update.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                        <help short="A collection of references to subnets."/>
                        <item nullable="True" type="@Subnet_update"/>
                      </arg>
                      <arg nullable="True" type="object" var="@Subnet_update.properties.routeTable.tags" options="tags">
                        <help short="Resource tags."/>
                        <additionalProp>
                          <item nullable="True" type="string"/>
                        </additionalProp>
                      </arg>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="object" var="@NetworkSecurityGroup_update.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="The provisioning state of the resource."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="route-table" group="Properties">
                <help short="The reference of the RouteTable resource."/>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
                  <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                </arg>
                <arg nullable="True" type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
                  <help short="Collection of routes contained within a route table."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                      <help short="The destination CIDR to which the route applies."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                      <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                      <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                      <enum>
                        <item name="Internet" value="&quot;Internet&quot;"/>
                        <item name="None" value="&quot;None&quot;"/>
                        <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                        <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                        <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="array<@Subnet_update>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                  <help short="A collection of references to subnets."/>
                  <item nullable="True" type="@Subnet_update"/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </arg>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.macAddress" options="mac-address" hide="True" group="Properties">
          <help short="The MAC address of the network interface."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.networkSecurityGroup" options="nsg" group="Properties">
          <help short="The reference to the NetworkSecurityGroup resource."/>
          <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.etag" options="etag">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.networkSecurityGroup.id" options="id">
            <help short="Resource ID."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
          </arg>
          <arg nullable="True" type="ResourceLocation" var="$parameters.properties.networkSecurityGroup.location" options="location l">
            <help short="Resource location."/>
          </arg>
          <arg nullable="True" type="array<@SecurityRule_update>" var="$parameters.properties.networkSecurityGroup.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
            <help short="The default security rules of network security group."/>
            <item nullable="True" type="@SecurityRule_update"/>
          </arg>
          <arg nullable="True" type="array<@NetworkInterface_update>" var="$parameters.properties.networkSecurityGroup.properties.networkInterfaces" options="network-interfaces" group="Properties">
            <help short="A collection of references to network interfaces."/>
            <item nullable="True" type="@NetworkInterface_update"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.provisioningState" options="provisioning-state" group="Properties">
            <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.resourceGuid" options="resource-guid" group="Properties">
            <help short="The resource GUID property of the network security group resource."/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
            <help short="A collection of security rules of the network security group."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].etag" options="etag">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg nullable="True" type="ResourceId" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].id" options="id">
                <help short="Resource ID."/>
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.access" options="access" group="Properties">
                <help short="The network traffic is allowed or denied."/>
                <enum>
                  <item name="Allow" value="&quot;Allow&quot;"/>
                  <item name="Deny" value="&quot;Deny&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.description" options="description" group="Properties">
                <help short="A description for this rule. Restricted to 140 chars."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                <help short="The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties">
                <help short="The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.direction" options="direction" group="Properties">
                <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic."/>
                <enum>
                  <item name="Inbound" value="&quot;Inbound&quot;"/>
                  <item name="Outbound" value="&quot;Outbound&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.priority" options="priority" group="Properties">
                <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                <help short="Network protocol this rule applies to."/>
                <enum>
                  <item name="*" value="&quot;*&quot;"/>
                  <item name="Tcp" value="&quot;Tcp&quot;"/>
                  <item name="Udp" value="&quot;Udp&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                <help short="The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties">
                <help short="The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<@Subnet_update>" var="$parameters.properties.networkSecurityGroup.properties.subnets" options="subnets" group="Properties">
            <help short="A collection of references to subnets."/>
            <item nullable="True" type="@Subnet_update"/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.networkSecurityGroup.tags" options="tags">
            <help short="Resource tags."/>
            <additionalProp>
              <item nullable="True" type="string"/>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.primary" options="primary" hide="True" group="Properties">
          <help short="Gets whether this is a primary network interface on a virtual machine."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
          <help short="The resource GUID property of the network interface resource."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.virtualMachine" options="virtual-machine" hide="True" group="Properties" cls="SubResource_update">
          <help short="The reference of a virtual machine."/>
          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkInterfaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
          <request method="get">
            <path>
              <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkInterface_read">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="dnsSettings">
                      <prop type="array<string>" name="appliedDnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="dnsServers">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="internalDnsNameLabel"/>
                      <prop type="string" name="internalFqdn"/>
                    </prop>
                    <prop type="boolean" name="enableIPForwarding"/>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                  <item type="@NetworkInterfaceIPConfiguration_read"/>
                                </prop>
                                <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                  <item type="@SubResource_read"/>
                                </prop>
                                <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                <prop type="string" name="provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                            <item type="object">
                              <prop type="string" name="etag"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                <prop type="integer32" name="backendPort"/>
                                <prop type="boolean" name="enableFloatingIP"/>
                                <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                <prop type="integer32" name="frontendPort"/>
                                <prop type="integer32" name="idleTimeoutInMinutes"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="primary"/>
                          <prop type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                          <prop type="@Subnet_read" name="subnet"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="macAddress"/>
                    <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                          <item type="@SecurityRule_read"/>
                        </prop>
                        <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                          <item type="@NetworkInterface_read"/>
                        </prop>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="array<object>" name="securityRules">
                          <item type="object" cls="SecurityRule_read">
                            <prop type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="access" required="True">
                                <enum>
                                  <item value="&quot;Allow&quot;"/>
                                  <item value="&quot;Deny&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description"/>
                              <prop type="string" name="destinationAddressPrefix" required="True"/>
                              <prop type="string" name="destinationPortRange"/>
                              <prop type="string" name="direction" required="True">
                                <enum>
                                  <item value="&quot;Inbound&quot;"/>
                                  <item value="&quot;Outbound&quot;"/>
                                </enum>
                              </prop>
                              <prop type="integer32" name="priority"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;*&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="sourceAddressPrefix" required="True"/>
                              <prop type="string" name="sourcePortRange"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="subnets">
                          <item type="object" cls="Subnet_read">
                            <prop type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="addressPrefix"/>
                              <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                <item type="object" cls="IPConfiguration_read">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="privateIPAddress"/>
                                    <prop type="string" name="privateIPAllocationMethod">
                                      <enum>
                                        <item value="&quot;Dynamic&quot;"/>
                                        <item value="&quot;Static&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location"/>
                                      <prop readOnly="True" type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel"/>
                                          <prop type="string" name="fqdn"/>
                                          <prop type="string" name="reverseFqdn"/>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="string" name="ipAddress"/>
                                        <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="string" name="publicIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="resourceGuid"/>
                                      </prop>
                                      <prop type="object" name="tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                      <prop readOnly="True" type="string" name="type"/>
                                    </prop>
                                    <prop type="@Subnet_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                              <prop type="string" name="provisioningState"/>
                              <prop type="object" name="routeTable">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location"/>
                                <prop readOnly="True" type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="array<object>" name="routes">
                                    <item type="object">
                                      <prop type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                      </prop>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="addressPrefix"/>
                                        <prop type="string" name="nextHopIpAddress"/>
                                        <prop type="string" name="nextHopType" required="True">
                                          <enum>
                                            <item value="&quot;Internet&quot;"/>
                                            <item value="&quot;None&quot;"/>
                                            <item value="&quot;VirtualAppliance&quot;"/>
                                            <item value="&quot;VirtualNetworkGateway&quot;"/>
                                            <item value="&quot;VnetLocal&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<@Subnet_read>" name="subnets">
                                    <item type="@Subnet_read"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </prop>
                    <prop type="boolean" name="primary"/>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="resourceGuid"/>
                    <prop type="object" name="virtualMachine" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="string" name="etag" arg="$parameters.etag"/>
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="dnsSettings">
                  <prop type="array<string>" name="appliedDnsServers" arg="$parameters.properties.dnsSettings.appliedDnsServers">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="dnsServers" arg="$parameters.properties.dnsSettings.dnsServers">
                    <item type="string"/>
                  </prop>
                  <prop type="string" name="internalDnsNameLabel" arg="$parameters.properties.dnsSettings.internalDnsNameLabel"/>
                  <prop type="string" name="internalFqdn" arg="$parameters.properties.dnsSettings.internalFqdn"/>
                </prop>
                <prop type="boolean" name="enableIPForwarding" arg="$parameters.properties.enableIPForwarding"/>
                <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.ipConfigurations">
                  <item type="object">
                    <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].etag"/>
                    <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                        <item type="object">
                          <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                          <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="loadBalancerInboundNatRules" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                        <item type="object">
                          <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                          <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="integer32" name="backendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                            <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                            <prop type="@SubResource_update" name="frontendIPConfiguration" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                            <prop type="integer32" name="frontendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                            <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                            <prop type="string" name="protocol" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                              <enum>
                                <item value="&quot;Tcp&quot;"/>
                                <item value="&quot;Udp&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="boolean" name="primary" arg="$parameters.properties.ipConfigurations[].properties.primary"/>
                      <prop type="string" name="privateIPAddress" arg="$parameters.properties.ipConfigurations[].properties.privateIPAddress"/>
                      <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                        <enum>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.provisioningState"/>
                      <prop type="object" name="publicIPAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress">
                        <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                        <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="dnsSettings" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                            <prop type="string" name="domainNameLabel" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                            <prop type="string" name="fqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                            <prop type="string" name="reverseFqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                          </prop>
                          <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                          <prop type="string" name="ipAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                          <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                          <prop type="string" name="publicIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="resourceGuid" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                        </prop>
                        <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="object" name="subnet" arg="$parameters.properties.ipConfigurations[].properties.subnet">
                        <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.etag"/>
                        <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                          <prop type="object" name="networkSecurityGroup" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" cls="NetworkSecurityGroup_update">
                            <prop type="string" name="etag" arg="@NetworkSecurityGroup_update.etag"/>
                            <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_update.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location" arg="@NetworkSecurityGroup_update.location"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="defaultSecurityRules" arg="@NetworkSecurityGroup_update.properties.defaultSecurityRules">
                                <item type="object" cls="SecurityRule_update">
                                  <prop type="string" name="etag" arg="@SecurityRule_update.etag"/>
                                  <prop type="ResourceId" name="id" arg="@SecurityRule_update.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="@SecurityRule_update.name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="access" arg="@SecurityRule_update.properties.access" required="True">
                                      <enum>
                                        <item value="&quot;Allow&quot;"/>
                                        <item value="&quot;Deny&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="description" arg="@SecurityRule_update.properties.description"/>
                                    <prop type="string" name="destinationAddressPrefix" arg="@SecurityRule_update.properties.destinationAddressPrefix" required="True"/>
                                    <prop type="string" name="destinationPortRange" arg="@SecurityRule_update.properties.destinationPortRange"/>
                                    <prop type="string" name="direction" arg="@SecurityRule_update.properties.direction" required="True">
                                      <enum>
                                        <item value="&quot;Inbound&quot;"/>
                                        <item value="&quot;Outbound&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="integer32" name="priority" arg="@SecurityRule_update.properties.priority"/>
                                    <prop type="string" name="protocol" arg="@SecurityRule_update.properties.protocol" required="True">
                                      <enum>
                                        <item value="&quot;*&quot;"/>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState" arg="@SecurityRule_update.properties.provisioningState"/>
                                    <prop type="string" name="sourceAddressPrefix" arg="@SecurityRule_update.properties.sourceAddressPrefix" required="True"/>
                                    <prop type="string" name="sourcePortRange" arg="@SecurityRule_update.properties.sourcePortRange"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="networkInterfaces" arg="@NetworkSecurityGroup_update.properties.networkInterfaces">
                                <item type="object" cls="NetworkInterface_update">
                                  <prop type="string" name="etag" arg="@NetworkInterface_update.etag"/>
                                  <prop type="ResourceId" name="id" arg="@NetworkInterface_update.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.location"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="object" name="dnsSettings" arg="@NetworkInterface_update.properties.dnsSettings">
                                      <prop type="array<string>" name="appliedDnsServers" arg="@NetworkInterface_update.properties.dnsSettings.appliedDnsServers">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<string>" name="dnsServers" arg="@NetworkInterface_update.properties.dnsSettings.dnsServers">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="string" name="internalDnsNameLabel" arg="@NetworkInterface_update.properties.dnsSettings.internalDnsNameLabel"/>
                                      <prop type="string" name="internalFqdn" arg="@NetworkInterface_update.properties.dnsSettings.internalFqdn"/>
                                    </prop>
                                    <prop type="boolean" name="enableIPForwarding" arg="@NetworkInterface_update.properties.enableIPForwarding"/>
                                    <prop type="array<object>" name="ipConfigurations" arg="@NetworkInterface_update.properties.ipConfigurations">
                                      <item type="object">
                                        <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].etag"/>
                                        <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].id"/>
                                        <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                                            <item type="object">
                                              <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                                              <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                                              <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop type="array<object>" name="loadBalancerInboundNatRules" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                                            <item type="object">
                                              <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                                              <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                                              <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="integer32" name="backendPort" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                                <prop type="boolean" name="enableFloatingIP" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                                <prop type="@SubResource_update" name="frontendIPConfiguration" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                                <prop type="integer32" name="frontendPort" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                                <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                                <prop type="string" name="protocol" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                                                  <enum>
                                                    <item value="&quot;Tcp&quot;"/>
                                                    <item value="&quot;Udp&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop type="boolean" name="primary" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.primary"/>
                                          <prop type="string" name="privateIPAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAddress"/>
                                          <prop type="string" name="privateIPAllocationMethod" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.provisioningState"/>
                                          <prop type="object" name="publicIPAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress">
                                            <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                                            <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.id">
                                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                            </prop>
                                            <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="object" name="dnsSettings" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                                                <prop type="string" name="domainNameLabel" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                                                <prop type="string" name="fqdn" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                                                <prop type="string" name="reverseFqdn" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                                              </prop>
                                              <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                                              <prop type="string" name="ipAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                                              <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                                              <prop type="string" name="publicIPAllocationMethod" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                                                <enum>
                                                  <item value="&quot;Dynamic&quot;"/>
                                                  <item value="&quot;Static&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                                            </prop>
                                            <prop type="object" name="tags" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.tags">
                                              <additionalProp>
                                                <item type="string"/>
                                              </additionalProp>
                                            </prop>
                                          </prop>
                                          <prop type="object" name="subnet" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet">
                                            <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.etag"/>
                                            <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.id">
                                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                            </prop>
                                            <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.name"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="string" name="addressPrefix" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                                              <prop type="@NetworkSecurityGroup_update" name="networkSecurityGroup" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup"/>
                                              <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                                              <prop type="object" name="routeTable" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                                                <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                                                <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                                </prop>
                                                <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                                                <prop type="object" name="properties" clientFlatten="True">
                                                  <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                                                  <prop type="array<object>" name="routes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                                                    <item type="object">
                                                      <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                                                      <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                                      </prop>
                                                      <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="string" name="addressPrefix" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                                        <prop type="string" name="nextHopIpAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                                        <prop type="string" name="nextHopType" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                                          <enum>
                                                            <item value="&quot;Internet&quot;"/>
                                                            <item value="&quot;None&quot;"/>
                                                            <item value="&quot;VirtualAppliance&quot;"/>
                                                            <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                            <item value="&quot;VnetLocal&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                                      </prop>
                                                    </item>
                                                  </prop>
                                                  <prop type="array<@Subnet_update>" name="subnets" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                                                    <item type="@Subnet_update"/>
                                                  </prop>
                                                </prop>
                                                <prop type="object" name="tags" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                                                  <additionalProp>
                                                    <item type="string"/>
                                                  </additionalProp>
                                                </prop>
                                              </prop>
                                            </prop>
                                          </prop>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="string" name="macAddress" arg="@NetworkInterface_update.properties.macAddress"/>
                                    <prop type="object" name="networkSecurityGroup" arg="@NetworkInterface_update.properties.networkSecurityGroup">
                                      <prop type="string" name="etag" arg="@NetworkInterface_update.properties.networkSecurityGroup.etag"/>
                                      <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.networkSecurityGroup.id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.networkSecurityGroup.location"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="array<@SecurityRule_update>" name="defaultSecurityRules" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.defaultSecurityRules">
                                          <item type="@SecurityRule_update"/>
                                        </prop>
                                        <prop type="array<@NetworkInterface_update>" name="networkInterfaces" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.networkInterfaces">
                                          <item type="@NetworkInterface_update"/>
                                        </prop>
                                        <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.provisioningState"/>
                                        <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.resourceGuid"/>
                                        <prop type="array<@SecurityRule_update>" name="securityRules" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.securityRules">
                                          <item type="@SecurityRule_update"/>
                                        </prop>
                                        <prop type="array<@Subnet_update>" name="subnets" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.subnets">
                                          <item type="@Subnet_update"/>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="tags" arg="@NetworkInterface_update.properties.networkSecurityGroup.tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                    </prop>
                                    <prop type="boolean" name="primary" arg="@NetworkInterface_update.properties.primary"/>
                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.provisioningState"/>
                                    <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.resourceGuid"/>
                                    <prop type="@SubResource_update" name="virtualMachine" arg="@NetworkInterface_update.properties.virtualMachine"/>
                                  </prop>
                                  <prop type="object" name="tags" arg="@NetworkInterface_update.tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_update.properties.provisioningState"/>
                              <prop type="string" name="resourceGuid" arg="@NetworkSecurityGroup_update.properties.resourceGuid"/>
                              <prop type="array<object>" name="securityRules" arg="@NetworkSecurityGroup_update.properties.securityRules">
                                <item type="object">
                                  <prop type="string" name="etag" arg="@NetworkSecurityGroup_update.properties.securityRules[].etag"/>
                                  <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_update.properties.securityRules[].id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="@NetworkSecurityGroup_update.properties.securityRules[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="access" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.access" required="True">
                                      <enum>
                                        <item value="&quot;Allow&quot;"/>
                                        <item value="&quot;Deny&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="description" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.description"/>
                                    <prop type="string" name="destinationAddressPrefix" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationAddressPrefix" required="True"/>
                                    <prop type="string" name="destinationPortRange" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationPortRange"/>
                                    <prop type="string" name="direction" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.direction" required="True">
                                      <enum>
                                        <item value="&quot;Inbound&quot;"/>
                                        <item value="&quot;Outbound&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="integer32" name="priority" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.priority"/>
                                    <prop type="string" name="protocol" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.protocol" required="True">
                                      <enum>
                                        <item value="&quot;*&quot;"/>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.provisioningState"/>
                                    <prop type="string" name="sourceAddressPrefix" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourceAddressPrefix" required="True"/>
                                    <prop type="string" name="sourcePortRange" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourcePortRange"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="subnets" arg="@NetworkSecurityGroup_update.properties.subnets">
                                <item type="object" cls="Subnet_update">
                                  <prop type="string" name="etag" arg="@Subnet_update.etag"/>
                                  <prop type="ResourceId" name="id" arg="@Subnet_update.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="@Subnet_update.name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.addressPrefix"/>
                                    <prop type="@NetworkSecurityGroup_update" name="networkSecurityGroup" arg="@Subnet_update.properties.networkSecurityGroup"/>
                                    <prop type="string" name="provisioningState" arg="@Subnet_update.properties.provisioningState"/>
                                    <prop type="object" name="routeTable" arg="@Subnet_update.properties.routeTable">
                                      <prop type="string" name="etag" arg="@Subnet_update.properties.routeTable.etag"/>
                                      <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location" arg="@Subnet_update.properties.routeTable.location"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="provisioningState" arg="@Subnet_update.properties.routeTable.properties.provisioningState"/>
                                        <prop type="array<object>" name="routes" arg="@Subnet_update.properties.routeTable.properties.routes">
                                          <item type="object">
                                            <prop type="string" name="etag" arg="@Subnet_update.properties.routeTable.properties.routes[].etag"/>
                                            <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.properties.routes[].id">
                                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                            </prop>
                                            <prop type="string" name="name" arg="@Subnet_update.properties.routeTable.properties.routes[].name"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                              <prop type="string" name="nextHopIpAddress" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                              <prop type="string" name="nextHopType" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                                <enum>
                                                  <item value="&quot;Internet&quot;"/>
                                                  <item value="&quot;None&quot;"/>
                                                  <item value="&quot;VirtualAppliance&quot;"/>
                                                  <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                  <item value="&quot;VnetLocal&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="provisioningState" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                            </prop>
                                          </item>
                                        </prop>
                                        <prop type="array<@Subnet_update>" name="subnets" arg="@Subnet_update.properties.routeTable.properties.subnets">
                                          <item type="@Subnet_update"/>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="tags" arg="@Subnet_update.properties.routeTable.tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                    </prop>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="tags" arg="@NetworkSecurityGroup_update.tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                          <prop type="object" name="routeTable" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                            <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                            <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                              <prop type="array<object>" name="routes" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                                <item type="object">
                                  <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                                  <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                    <prop type="string" name="nextHopIpAddress" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                    <prop type="string" name="nextHopType" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                      <enum>
                                        <item value="&quot;Internet&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                        <item value="&quot;VirtualAppliance&quot;"/>
                                        <item value="&quot;VirtualNetworkGateway&quot;"/>
                                        <item value="&quot;VnetLocal&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<@Subnet_update>" name="subnets" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                                <item type="@Subnet_update"/>
                              </prop>
                            </prop>
                            <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="macAddress" arg="$parameters.properties.macAddress"/>
                <prop type="object" name="networkSecurityGroup" arg="$parameters.properties.networkSecurityGroup">
                  <prop type="string" name="etag" arg="$parameters.properties.networkSecurityGroup.etag"/>
                  <prop type="ResourceId" name="id" arg="$parameters.properties.networkSecurityGroup.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.properties.networkSecurityGroup.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<@SecurityRule_update>" name="defaultSecurityRules" arg="$parameters.properties.networkSecurityGroup.properties.defaultSecurityRules">
                      <item type="@SecurityRule_update"/>
                    </prop>
                    <prop type="array<@NetworkInterface_update>" name="networkInterfaces" arg="$parameters.properties.networkSecurityGroup.properties.networkInterfaces">
                      <item type="@NetworkInterface_update"/>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$parameters.properties.networkSecurityGroup.properties.provisioningState"/>
                    <prop type="string" name="resourceGuid" arg="$parameters.properties.networkSecurityGroup.properties.resourceGuid"/>
                    <prop type="array<object>" name="securityRules" arg="$parameters.properties.networkSecurityGroup.properties.securityRules">
                      <item type="object">
                        <prop type="string" name="etag" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].etag"/>
                        <prop type="ResourceId" name="id" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="access" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.access" required="True">
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                              <item value="&quot;Deny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="description" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.description"/>
                          <prop type="string" name="destinationAddressPrefix" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix" required="True"/>
                          <prop type="string" name="destinationPortRange" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange"/>
                          <prop type="string" name="direction" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.direction" required="True">
                            <enum>
                              <item value="&quot;Inbound&quot;"/>
                              <item value="&quot;Outbound&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="priority" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.priority"/>
                          <prop type="string" name="protocol" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" required="True">
                            <enum>
                              <item value="&quot;*&quot;"/>
                              <item value="&quot;Tcp&quot;"/>
                              <item value="&quot;Udp&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.provisioningState"/>
                          <prop type="string" name="sourceAddressPrefix" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix" required="True"/>
                          <prop type="string" name="sourcePortRange" arg="$parameters.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<@Subnet_update>" name="subnets" arg="$parameters.properties.networkSecurityGroup.properties.subnets">
                      <item type="@Subnet_update"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.properties.networkSecurityGroup.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </prop>
                <prop type="boolean" name="primary" arg="$parameters.properties.primary"/>
                <prop type="string" name="provisioningState" arg="$parameters.properties.provisioningState"/>
                <prop type="string" name="resourceGuid" arg="$parameters.properties.resourceGuid"/>
                <prop type="object" name="virtualMachine" arg="$parameters.properties.virtualMachine" cls="SubResource_update">
                  <prop type="string" name="id" arg="@SubResource_update.id"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NetworkInterfaces_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
          <request method="put">
            <path>
              <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NetworkInterface_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="ip-config">
      <command name="list" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
            <help short="Name of the network interface (NIC)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.ipConfigurations"/>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkInterfaces_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="get">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkInterface_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings">
                        <prop type="array<string>" name="appliedDnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="dnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="internalDnsNameLabel"/>
                        <prop type="string" name="internalFqdn"/>
                      </prop>
                      <prop type="boolean" name="enableIPForwarding"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                    <item type="@NetworkInterfaceIPConfiguration_read"/>
                                  </prop>
                                  <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                  <prop type="integer32" name="backendPort"/>
                                  <prop type="boolean" name="enableFloatingIP"/>
                                  <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                  <prop type="integer32" name="frontendPort"/>
                                  <prop type="integer32" name="idleTimeoutInMinutes"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="primary"/>
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                            <prop type="@Subnet_read" name="subnet"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="macAddress"/>
                      <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                        <prop type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                            <item type="@SecurityRule_read"/>
                          </prop>
                          <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                            <item type="@NetworkInterface_read"/>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="string" name="resourceGuid"/>
                          <prop type="array<object>" name="securityRules">
                            <item type="object" cls="SecurityRule_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description"/>
                                <prop type="string" name="destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange"/>
                                <prop type="string" name="direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority"/>
                                <prop type="string" name="protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets">
                            <item type="object" cls="Subnet_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                  <item type="object" cls="IPConfiguration_read">
                                    <prop type="string" name="etag"/>
                                    <prop type="string" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings">
                                            <prop type="string" name="domainNameLabel"/>
                                            <prop type="string" name="fqdn"/>
                                            <prop type="string" name="reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress"/>
                                          <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                          <prop type="string" name="provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="@Subnet_read" name="subnet"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                <prop type="string" name="provisioningState"/>
                                <prop type="object" name="routeTable">
                                  <prop type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location"/>
                                  <prop readOnly="True" type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="array<object>" name="routes">
                                      <item type="object">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_read>" name="subnets">
                                      <item type="@Subnet_read"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </prop>
                      <prop type="boolean" name="primary"/>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="virtualMachine" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="create" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
            <help short="Name of the network interface (NIC)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name n" required="True" group="">
            <help short="Name of the IP configuration."/>
          </arg>
        </argGroup>
        <argGroup name="IP Configuration">
          <arg type="boolean" var="$parameters.properties.ipConfigurations[].properties.primary" options="make-primary" group="IP Configuration">
            <help short="Set to make this configuration the primary one for the NIC."/>
            <default value="false"/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="IP Configuration">
            <help short="Static IP address to use or &quot;&quot;('&quot;&quot;' in PowerShell) to use a dynamic address."/>
          </arg>
          <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id" options="public-ip-address" group="IP Configuration">
            <help short="Name or ID of an existing public IP address."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
          </arg>
          <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="subnet" group="IP Configuration">
            <help short="Name or ID of an existing subnet. If name specified, please also specify `--vnet-name`."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
          </arg>
        </argGroup>
        <argGroup name="Parameters.properties.ipConfigurations[]">
          <arg type="string" var="$parameters.properties.ipConfigurations[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[]">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].id" options="ip-id" hide="True" group="Parameters.properties.ipConfigurations[]">
            <help short="Resource ID."/>
          </arg>
        </argGroup>
        <argGroup name="PipObj">
          <arg type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location" options="pip-location" hide="True" group="PipObj">
            <help short="Resource location."/>
          </arg>
          <arg type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="pip-dns-settings" hide="True" group="PipObj">
            <help short="The FQDN of the DNS record associated with the public IP address."/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
              <help short="The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
              <help short="The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
              <help short="The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN."/>
            </arg>
          </arg>
          <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="pip-idle-timeout-in-minutes" hide="True" group="PipObj">
            <help short="The idle timeout of the public IP address."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="pip-ip-address" hide="True" group="PipObj">
            <help short="The IP address associated with the public IP address resource."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="pip-public-ip-allocation-method" hide="True" group="PipObj">
            <help short="The public IP address allocation method."/>
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags" options="pip-tags" hide="True" group="PipObj">
            <help short="Resource tags."/>
            <additionalProp>
              <item type="string"/>
            </additionalProp>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
            <help short="The reference to LoadBalancerBackendAddressPool resource."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                <help short="Resource ID."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                <help short="The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
            <help short="A list of references of LoadBalancerInboundNatRules."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                <help short="Resource ID."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                <help short="The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" hide="True" group="Properties">
                <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" hide="True" group="Properties">
                <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
              </arg>
              <arg type="object" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" hide="True" group="Properties" cls="SubResource_update">
                <help short="A reference to frontend IP addresses."/>
                <arg type="string" var="@SubResource_update.id" options="id">
                  <help short="Resource ID."/>
                </arg>
              </arg>
              <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" hide="True" group="Properties">
                <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" hide="True" group="Properties">
                <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" hide="True" group="Properties">
                <help short="The reference to the transport protocol used by the load balancing rule."/>
                <enum>
                  <item name="Tcp" value="&quot;Tcp&quot;"/>
                  <item name="Udp" value="&quot;Udp&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
            <help short="The private IP address allocation method."/>
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="address-provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
            <help short="The resource GUID property of the public IP resource."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="subnet-provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the resource."/>
          </arg>
        </argGroup>
        <argGroup name="PublicIPAddress">
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag" options="address-etag" hide="True" group="PublicIPAddress">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
        </argGroup>
        <argGroup name="Subnet">
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.etag" options="subnet-etag" hide="True" group="Subnet">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
        </argGroup>
        <argGroup name="SubnetObj">
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.name" options="subnet-name" hide="True" group="SubnetObj">
            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
          </arg>
          <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="subnet-address-prefix" hide="True" group="SubnetObj">
            <help short="The address prefix for the subnet."/>
          </arg>
          <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="subnet-network-security-group" hide="True" group="SubnetObj" cls="NetworkSecurityGroup_update">
            <help short="The reference to the NetworkSecurityGroup resource."/>
            <arg type="string" var="@NetworkSecurityGroup_update.etag" options="etag">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg type="ResourceId" var="@NetworkSecurityGroup_update.id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@NetworkSecurityGroup_update.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg type="array<object>" var="@NetworkSecurityGroup_update.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
              <help short="The default security rules of network security group."/>
              <item type="object" cls="SecurityRule_update">
                <arg type="string" var="@SecurityRule_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="@SecurityRule_update.id" options="id" hide="True">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                </arg>
                <arg type="string" var="@SecurityRule_update.name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.access" options="access" group="Properties">
                  <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                  <enum>
                    <item name="Allow" value="&quot;Allow&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.description" options="description" group="Properties">
                  <help short="A description for this rule. Restricted to 140 chars."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                  <help short="The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.destinationPortRange" options="destination-port-range" group="Properties">
                  <help short="The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.direction" options="direction" group="Properties">
                  <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                  <enum>
                    <item name="Inbound" value="&quot;Inbound&quot;"/>
                    <item name="Outbound" value="&quot;Outbound&quot;"/>
                  </enum>
                </arg>
                <arg type="integer32" var="@SecurityRule_update.properties.priority" options="priority" group="Properties">
                  <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.protocol" options="protocol" group="Properties">
                  <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                  <enum>
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                  <help short="The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.sourcePortRange" options="source-port-range" group="Properties">
                  <help short="The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="@NetworkSecurityGroup_update.properties.networkInterfaces" options="network-interfaces" group="Properties">
              <help short="A collection of references to network interfaces."/>
              <item type="object" cls="NetworkInterface_update">
                <arg type="string" var="@NetworkInterface_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="@NetworkInterface_update.id" options="id">
                  <help short="Resource Identifier."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                </arg>
                <arg type="ResourceLocation" var="@NetworkInterface_update.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg type="object" var="@NetworkInterface_update.properties.dnsSettings" options="dns-settings" group="Properties">
                  <help short="The DNS settings in network interface."/>
                  <arg type="array<string>" var="@NetworkInterface_update.properties.dnsSettings.appliedDnsServers" options="applied-dns-servers">
                    <help short="If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."/>
                    <item type="string"/>
                  </arg>
                  <arg type="array<string>" var="@NetworkInterface_update.properties.dnsSettings.dnsServers" options="dns-servers">
                    <help short="List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."/>
                    <item type="string"/>
                  </arg>
                  <arg type="string" var="@NetworkInterface_update.properties.dnsSettings.internalDnsNameLabel" options="internal-dns-name-label">
                    <help short="Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."/>
                  </arg>
                  <arg type="string" var="@NetworkInterface_update.properties.dnsSettings.internalFqdn" options="internal-fqdn">
                    <help short="Fully qualified DNS name supporting internal communications between VMs in the same virtual network."/>
                  </arg>
                </arg>
                <arg type="boolean" var="@NetworkInterface_update.properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                  <help short="Indicates whether IP forwarding is enabled on this network interface."/>
                </arg>
                <arg type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations" options="ip-configurations" group="Properties">
                  <help short="A list of IPConfigurations of the network interface."/>
                  <item type="object">
                    <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].id" options="id">
                      <help short="Resource Identifier."/>
                    </arg>
                    <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                      <help short="The reference of LoadBalancerBackendAddressPool resource."/>
                      <item type="object">
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag">
                          <help short="A unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                          <help short="Resource Identifier."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                          <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" group="Properties">
                          <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                        </arg>
                      </item>
                    </arg>
                    <arg type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
                      <help short="A list of references of LoadBalancerInboundNatRules."/>
                      <item type="object">
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag">
                          <help short="A unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                          <help short="Resource Identifier."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                          <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties">
                          <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
                        </arg>
                        <arg type="boolean" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties">
                          <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
                        </arg>
                        <arg type="@SubResource_update" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties">
                          <help short="A reference to frontend IP addresses."/>
                        </arg>
                        <arg type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties">
                          <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
                        </arg>
                        <arg type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                          <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                          <help short="The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'"/>
                          <enum>
                            <item name="Tcp" value="&quot;Tcp&quot;"/>
                            <item name="Udp" value="&quot;Udp&quot;"/>
                          </enum>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                          <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                        </arg>
                      </item>
                    </arg>
                    <arg type="boolean" var="@NetworkInterface_update.properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                      <help short="Gets whether this is a primary customer address on the network interface."/>
                    </arg>
                    <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties"/>
                    <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                      <help short="Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'."/>
                      <enum>
                        <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                        <item name="Static" value="&quot;Static&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" group="Properties"/>
                    <arg type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties">
                      <help short="Public IP address resource."/>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                      </arg>
                      <arg type="ResourceLocation" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.location" options="location l">
                        <help short="Resource location."/>
                      </arg>
                      <arg type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="dns-settings" group="Properties">
                        <help short="The FQDN of the DNS record associated with the public IP address."/>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                          <help short="Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
                          <help short="Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
                          <help short="Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "/>
                        </arg>
                      </arg>
                      <arg type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                        <help short="The idle timeout of the public IP address."/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="ip-address" group="Properties"/>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                        <help short="The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."/>
                        <enum>
                          <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                          <item name="Static" value="&quot;Static&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" group="Properties">
                        <help short="The resource GUID property of the public IP resource."/>
                      </arg>
                      <arg type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.tags" options="tags">
                        <help short="Resource tags."/>
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </arg>
                    </arg>
                    <arg type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.name" options="name">
                        <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="address-prefix" group="Properties">
                        <help short="The address prefix for the subnet."/>
                      </arg>
                      <arg type="@NetworkSecurityGroup_update" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                        <help short="The reference of the NetworkSecurityGroup resource."/>
                      </arg>
                      <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the resource."/>
                      </arg>
                      <arg type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="route-table" group="Properties">
                        <help short="The reference of the RouteTable resource."/>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
                          <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
                          <help short="Resource Identifier."/>
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                        </arg>
                        <arg type="ResourceLocation" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
                          <help short="Resource location."/>
                        </arg>
                        <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                          <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                        </arg>
                        <arg type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
                          <help short="Collection of routes contained within a route table."/>
                          <item type="object">
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                              <help short="A unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                              <help short="Resource Identifier."/>
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                              <help short="The destination CIDR to which the route applies."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                              <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                              <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                              <enum>
                                <item name="Internet" value="&quot;Internet&quot;"/>
                                <item name="None" value="&quot;None&quot;"/>
                                <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                                <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                                <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                              </enum>
                            </arg>
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                          </item>
                        </arg>
                        <arg type="array<@Subnet_update>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                          <help short="A collection of references to subnets."/>
                          <item type="@Subnet_update"/>
                        </arg>
                        <arg type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
                          <help short="Resource tags."/>
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </arg>
                      </arg>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="@NetworkInterface_update.properties.macAddress" options="mac-address" group="Properties">
                  <help short="The MAC address of the network interface."/>
                </arg>
                <arg type="object" var="@NetworkInterface_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                  <help short="The reference of the NetworkSecurityGroup resource."/>
                  <arg type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.etag" options="etag">
                    <help short="A unique read-only string that changes whenever the resource is updated."/>
                  </arg>
                  <arg type="ResourceId" var="@NetworkInterface_update.properties.networkSecurityGroup.id" options="id">
                    <help short="Resource Identifier."/>
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                  </arg>
                  <arg type="ResourceLocation" var="@NetworkInterface_update.properties.networkSecurityGroup.location" options="location l">
                    <help short="Resource location."/>
                  </arg>
                  <arg type="array<@SecurityRule_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
                    <help short="The default security rules of network security group."/>
                    <item type="@SecurityRule_update"/>
                  </arg>
                  <arg type="array<@NetworkInterface_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.networkInterfaces" options="network-interfaces" group="Properties">
                    <help short="A collection of references to network interfaces."/>
                    <item type="@NetworkInterface_update"/>
                  </arg>
                  <arg type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.provisioningState" options="provisioning-state" group="Properties">
                    <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                  </arg>
                  <arg type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.resourceGuid" options="resource-guid" group="Properties">
                    <help short="The resource GUID property of the network security group resource."/>
                  </arg>
                  <arg type="array<@SecurityRule_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
                    <help short="A collection of security rules of the network security group."/>
                    <item type="@SecurityRule_update"/>
                  </arg>
                  <arg type="array<@Subnet_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.subnets" options="subnets" group="Properties">
                    <help short="A collection of references to subnets."/>
                    <item type="@Subnet_update"/>
                  </arg>
                  <arg type="object" var="@NetworkInterface_update.properties.networkSecurityGroup.tags" options="tags">
                    <help short="Resource tags."/>
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </arg>
                </arg>
                <arg type="boolean" var="@NetworkInterface_update.properties.primary" options="primary" group="Properties">
                  <help short="Gets whether this is a primary network interface on a virtual machine."/>
                </arg>
                <arg type="string" var="@NetworkInterface_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="string" var="@NetworkInterface_update.properties.resourceGuid" options="resource-guid" group="Properties">
                  <help short="The resource GUID property of the network interface resource."/>
                </arg>
                <arg type="@SubResource_update" var="@NetworkInterface_update.properties.virtualMachine" options="virtual-machine" group="Properties">
                  <help short="The reference of a virtual machine."/>
                </arg>
                <arg type="object" var="@NetworkInterface_update.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg type="string" var="@NetworkSecurityGroup_update.properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg type="string" var="@NetworkSecurityGroup_update.properties.resourceGuid" options="resource-guid" group="Properties">
              <help short="The resource GUID property of the network security group resource."/>
            </arg>
            <arg type="array<object>" var="@NetworkSecurityGroup_update.properties.securityRules" options="security-rules" group="Properties">
              <help short="A collection of security rules of the network security group."/>
              <item type="object">
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="@NetworkSecurityGroup_update.properties.securityRules[].id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.access" options="access" group="Properties">
                  <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                  <enum>
                    <item name="Allow" value="&quot;Allow&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.description" options="description" group="Properties">
                  <help short="A description for this rule. Restricted to 140 chars."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                  <help short="The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties">
                  <help short="The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.direction" options="direction" group="Properties">
                  <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                  <enum>
                    <item name="Inbound" value="&quot;Inbound&quot;"/>
                    <item name="Outbound" value="&quot;Outbound&quot;"/>
                  </enum>
                </arg>
                <arg type="integer32" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.priority" options="priority" group="Properties">
                  <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                  <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                  <enum>
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                  <help short="The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties">
                  <help short="The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="@NetworkSecurityGroup_update.properties.subnets" options="subnets" group="Properties">
              <help short="A collection of references to subnets."/>
              <item type="object" cls="Subnet_update">
                <arg type="string" var="@Subnet_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="@Subnet_update.id" options="id" hide="True">
                  <help short="Resource Identifier."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                </arg>
                <arg type="string" var="@Subnet_update.name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="@Subnet_update.properties.addressPrefix" options="address-prefix" group="Properties">
                  <help short="The address prefix for the subnet."/>
                </arg>
                <arg type="@NetworkSecurityGroup_update" var="@Subnet_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                  <help short="The reference of the NetworkSecurityGroup resource."/>
                </arg>
                <arg type="string" var="@Subnet_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the resource."/>
                </arg>
                <arg type="object" var="@Subnet_update.properties.routeTable" options="route-table" group="Properties">
                  <help short="The reference of the RouteTable resource."/>
                  <arg type="string" var="@Subnet_update.properties.routeTable.etag" options="etag">
                    <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                  </arg>
                  <arg type="ResourceId" var="@Subnet_update.properties.routeTable.id" options="id">
                    <help short="Resource Identifier."/>
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                  </arg>
                  <arg type="ResourceLocation" var="@Subnet_update.properties.routeTable.location" options="location l">
                    <help short="Resource location."/>
                  </arg>
                  <arg type="string" var="@Subnet_update.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                    <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                  </arg>
                  <arg type="array<object>" var="@Subnet_update.properties.routeTable.properties.routes" options="routes" group="Properties">
                    <help short="Collection of routes contained within a route table."/>
                    <item type="object">
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg type="ResourceId" var="@Subnet_update.properties.routeTable.properties.routes[].id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                      </arg>
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].name" options="name">
                        <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                      </arg>
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                        <help short="The destination CIDR to which the route applies."/>
                      </arg>
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                        <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                      </arg>
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                        <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                        <enum>
                          <item name="Internet" value="&quot;Internet&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                          <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                          <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                          <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="array<@Subnet_update>" var="@Subnet_update.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                    <help short="A collection of references to subnets."/>
                    <item type="@Subnet_update"/>
                  </arg>
                  <arg type="object" var="@Subnet_update.properties.routeTable.tags" options="tags">
                    <help short="Resource tags."/>
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </arg>
                </arg>
              </item>
            </arg>
            <arg type="object" var="@NetworkSecurityGroup_update.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="subnet-route-table" hide="True" group="SubnetObj">
            <help short="The reference to the RouteTable resource."/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
              <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
            </arg>
            <arg type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
              <help short="Collection of routes contained within a route table."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                  <help short="The destination CIDR to which the route applies."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                  <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                  <help short="The type of Azure hop the packet should be sent to."/>
                  <enum>
                    <item name="Internet" value="&quot;Internet&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                    <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                    <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
              </item>
            </arg>
            <arg type="array<@Subnet_update>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
              <help short="A collection of references to subnets."/>
              <item type="@Subnet_update"/>
            </arg>
            <arg type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.ipConfigurations">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkInterfaces_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="get">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkInterface_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings">
                        <prop type="array<string>" name="appliedDnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="dnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="internalDnsNameLabel"/>
                        <prop type="string" name="internalFqdn"/>
                      </prop>
                      <prop type="boolean" name="enableIPForwarding"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                    <item type="@NetworkInterfaceIPConfiguration_read"/>
                                  </prop>
                                  <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                  <prop type="integer32" name="backendPort"/>
                                  <prop type="boolean" name="enableFloatingIP"/>
                                  <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                  <prop type="integer32" name="frontendPort"/>
                                  <prop type="integer32" name="idleTimeoutInMinutes"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="primary"/>
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                            <prop type="@Subnet_read" name="subnet"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="macAddress"/>
                      <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                        <prop type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                            <item type="@SecurityRule_read"/>
                          </prop>
                          <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                            <item type="@NetworkInterface_read"/>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="string" name="resourceGuid"/>
                          <prop type="array<object>" name="securityRules">
                            <item type="object" cls="SecurityRule_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description"/>
                                <prop type="string" name="destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange"/>
                                <prop type="string" name="direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority"/>
                                <prop type="string" name="protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets">
                            <item type="object" cls="Subnet_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                  <item type="object" cls="IPConfiguration_read">
                                    <prop type="string" name="etag"/>
                                    <prop type="string" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings">
                                            <prop type="string" name="domainNameLabel"/>
                                            <prop type="string" name="fqdn"/>
                                            <prop type="string" name="reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress"/>
                                          <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                          <prop type="string" name="provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="@Subnet_read" name="subnet"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                <prop type="string" name="provisioningState"/>
                                <prop type="object" name="routeTable">
                                  <prop type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location"/>
                                  <prop readOnly="True" type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="array<object>" name="routes">
                                      <item type="object">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_read>" name="subnets">
                                      <item type="@Subnet_read"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </prop>
                      <prop type="boolean" name="primary"/>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="virtualMachine" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.ipConfigurations[]" required="True">
                <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].etag"/>
                <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                    <item type="object">
                      <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                      <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="loadBalancerInboundNatRules" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                    <item type="object">
                      <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                      <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="integer32" name="backendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                        <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                        <prop type="object" name="frontendIPConfiguration" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </prop>
                        <prop type="integer32" name="frontendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                        <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                        <prop type="string" name="protocol" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                          <enum>
                            <item value="&quot;Tcp&quot;"/>
                            <item value="&quot;Udp&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="boolean" name="primary" arg="$parameters.properties.ipConfigurations[].properties.primary"/>
                  <prop type="string" name="privateIPAddress" arg="$parameters.properties.ipConfigurations[].properties.privateIPAddress"/>
                  <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                    <enum>
                      <item value="&quot;Dynamic&quot;"/>
                      <item value="&quot;Static&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.provisioningState"/>
                  <prop type="object" name="publicIPAddress">
                    <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                    <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                        <prop type="string" name="domainNameLabel" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                        <prop type="string" name="fqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                        <prop type="string" name="reverseFqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                      </prop>
                      <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                      <prop type="string" name="ipAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                      <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                      <prop type="string" name="publicIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                        <enum>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="resourceGuid" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="subnet">
                    <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.etag"/>
                    <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                      <prop type="object" name="networkSecurityGroup" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" cls="NetworkSecurityGroup_update">
                        <prop type="string" name="etag" arg="@NetworkSecurityGroup_update.etag"/>
                        <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_update.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="@NetworkSecurityGroup_update.location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="defaultSecurityRules" arg="@NetworkSecurityGroup_update.properties.defaultSecurityRules">
                            <item type="object" cls="SecurityRule_update">
                              <prop type="string" name="etag" arg="@SecurityRule_update.etag"/>
                              <prop type="ResourceId" name="id" arg="@SecurityRule_update.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="@SecurityRule_update.name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" arg="@SecurityRule_update.properties.access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description" arg="@SecurityRule_update.properties.description"/>
                                <prop type="string" name="destinationAddressPrefix" arg="@SecurityRule_update.properties.destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange" arg="@SecurityRule_update.properties.destinationPortRange"/>
                                <prop type="string" name="direction" arg="@SecurityRule_update.properties.direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority" arg="@SecurityRule_update.properties.priority"/>
                                <prop type="string" name="protocol" arg="@SecurityRule_update.properties.protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="@SecurityRule_update.properties.provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" arg="@SecurityRule_update.properties.sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange" arg="@SecurityRule_update.properties.sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="networkInterfaces" arg="@NetworkSecurityGroup_update.properties.networkInterfaces">
                            <item type="object" cls="NetworkInterface_update">
                              <prop type="string" name="etag" arg="@NetworkInterface_update.etag"/>
                              <prop type="ResourceId" name="id" arg="@NetworkInterface_update.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.location"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="object" name="dnsSettings" arg="@NetworkInterface_update.properties.dnsSettings">
                                  <prop type="array<string>" name="appliedDnsServers" arg="@NetworkInterface_update.properties.dnsSettings.appliedDnsServers">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="dnsServers" arg="@NetworkInterface_update.properties.dnsSettings.dnsServers">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="internalDnsNameLabel" arg="@NetworkInterface_update.properties.dnsSettings.internalDnsNameLabel"/>
                                  <prop type="string" name="internalFqdn" arg="@NetworkInterface_update.properties.dnsSettings.internalFqdn"/>
                                </prop>
                                <prop type="boolean" name="enableIPForwarding" arg="@NetworkInterface_update.properties.enableIPForwarding"/>
                                <prop type="array<object>" name="ipConfigurations" arg="@NetworkInterface_update.properties.ipConfigurations">
                                  <item type="object">
                                    <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].etag"/>
                                    <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].id"/>
                                    <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                                        <item type="object">
                                          <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                                          <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                                          <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<object>" name="loadBalancerInboundNatRules" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                                        <item type="object">
                                          <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                                          <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                                          <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="integer32" name="backendPort" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                            <prop type="boolean" name="enableFloatingIP" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                            <prop type="@SubResource_update" name="frontendIPConfiguration" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                            <prop type="integer32" name="frontendPort" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                            <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                            <prop type="string" name="protocol" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                                              <enum>
                                                <item value="&quot;Tcp&quot;"/>
                                                <item value="&quot;Udp&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="boolean" name="primary" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.primary"/>
                                      <prop type="string" name="privateIPAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.provisioningState"/>
                                      <prop type="object" name="publicIPAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress">
                                        <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                                        <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                                            <prop type="string" name="domainNameLabel" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                                            <prop type="string" name="fqdn" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                                            <prop type="string" name="reverseFqdn" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                                          <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="subnet" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet">
                                        <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.etag"/>
                                        <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                        </prop>
                                        <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                                          <prop type="@NetworkSecurityGroup_update" name="networkSecurityGroup" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup"/>
                                          <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                                          <prop type="object" name="routeTable" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                                            <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                                            <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                            </prop>
                                            <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                                              <prop type="array<object>" name="routes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                                                <item type="object">
                                                  <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                                                  <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                                  </prop>
                                                  <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="string" name="addressPrefix" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                                    <prop type="string" name="nextHopIpAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                                    <prop type="string" name="nextHopType" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                                      <enum>
                                                        <item value="&quot;Internet&quot;"/>
                                                        <item value="&quot;None&quot;"/>
                                                        <item value="&quot;VirtualAppliance&quot;"/>
                                                        <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                        <item value="&quot;VnetLocal&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                                  </prop>
                                                </item>
                                              </prop>
                                              <prop type="array<@Subnet_update>" name="subnets" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                                                <item type="@Subnet_update"/>
                                              </prop>
                                            </prop>
                                            <prop type="object" name="tags" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                                              <additionalProp>
                                                <item type="string"/>
                                              </additionalProp>
                                            </prop>
                                          </prop>
                                        </prop>
                                      </prop>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="string" name="macAddress" arg="@NetworkInterface_update.properties.macAddress"/>
                                <prop type="object" name="networkSecurityGroup" arg="@NetworkInterface_update.properties.networkSecurityGroup">
                                  <prop type="string" name="etag" arg="@NetworkInterface_update.properties.networkSecurityGroup.etag"/>
                                  <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.networkSecurityGroup.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.networkSecurityGroup.location"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SecurityRule_update>" name="defaultSecurityRules" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.defaultSecurityRules">
                                      <item type="@SecurityRule_update"/>
                                    </prop>
                                    <prop type="array<@NetworkInterface_update>" name="networkInterfaces" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.networkInterfaces">
                                      <item type="@NetworkInterface_update"/>
                                    </prop>
                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.provisioningState"/>
                                    <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.resourceGuid"/>
                                    <prop type="array<@SecurityRule_update>" name="securityRules" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.securityRules">
                                      <item type="@SecurityRule_update"/>
                                    </prop>
                                    <prop type="array<@Subnet_update>" name="subnets" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.subnets">
                                      <item type="@Subnet_update"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags" arg="@NetworkInterface_update.properties.networkSecurityGroup.tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="primary" arg="@NetworkInterface_update.properties.primary"/>
                                <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.provisioningState"/>
                                <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.resourceGuid"/>
                                <prop type="@SubResource_update" name="virtualMachine" arg="@NetworkInterface_update.properties.virtualMachine"/>
                              </prop>
                              <prop type="object" name="tags" arg="@NetworkInterface_update.tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_update.properties.provisioningState"/>
                          <prop type="string" name="resourceGuid" arg="@NetworkSecurityGroup_update.properties.resourceGuid"/>
                          <prop type="array<object>" name="securityRules" arg="@NetworkSecurityGroup_update.properties.securityRules">
                            <item type="object">
                              <prop type="string" name="etag" arg="@NetworkSecurityGroup_update.properties.securityRules[].etag"/>
                              <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_update.properties.securityRules[].id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="@NetworkSecurityGroup_update.properties.securityRules[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.description"/>
                                <prop type="string" name="destinationAddressPrefix" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationPortRange"/>
                                <prop type="string" name="direction" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.priority"/>
                                <prop type="string" name="protocol" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets" arg="@NetworkSecurityGroup_update.properties.subnets">
                            <item type="object" cls="Subnet_update">
                              <prop type="string" name="etag" arg="@Subnet_update.etag"/>
                              <prop type="ResourceId" name="id" arg="@Subnet_update.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="@Subnet_update.name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.addressPrefix"/>
                                <prop type="@NetworkSecurityGroup_update" name="networkSecurityGroup" arg="@Subnet_update.properties.networkSecurityGroup"/>
                                <prop type="string" name="provisioningState" arg="@Subnet_update.properties.provisioningState"/>
                                <prop type="object" name="routeTable" arg="@Subnet_update.properties.routeTable">
                                  <prop type="string" name="etag" arg="@Subnet_update.properties.routeTable.etag"/>
                                  <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location" arg="@Subnet_update.properties.routeTable.location"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState" arg="@Subnet_update.properties.routeTable.properties.provisioningState"/>
                                    <prop type="array<object>" name="routes" arg="@Subnet_update.properties.routeTable.properties.routes">
                                      <item type="object">
                                        <prop type="string" name="etag" arg="@Subnet_update.properties.routeTable.properties.routes[].etag"/>
                                        <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.properties.routes[].id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name" arg="@Subnet_update.properties.routeTable.properties.routes[].name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_update>" name="subnets" arg="@Subnet_update.properties.routeTable.properties.subnets">
                                      <item type="@Subnet_update"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags" arg="@Subnet_update.properties.routeTable.tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags" arg="@NetworkSecurityGroup_update.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                      <prop type="object" name="routeTable" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                        <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                        <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                          <prop type="array<object>" name="routes" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                            <item type="object">
                              <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                              <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                <prop type="string" name="nextHopIpAddress" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                <prop type="string" name="nextHopType" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                  <enum>
                                    <item value="&quot;Internet&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;VirtualAppliance&quot;"/>
                                    <item value="&quot;VirtualNetworkGateway&quot;"/>
                                    <item value="&quot;VnetLocal&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<@Subnet_update>" name="subnets" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                            <item type="@Subnet_update"/>
                          </prop>
                        </prop>
                        <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="NetworkInterfaces_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="put">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@NetworkInterface_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
            <help short="Name of the network interface (NIC)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name n" required="True" group="">
            <help short="Name of the IP configuration."/>
          </arg>
        </argGroup>
        <argGroup name="IP Configuration">
          <arg nullable="True" type="boolean" var="$parameters.properties.ipConfigurations[].properties.primary" options="make-primary" group="IP Configuration">
            <help short="Set to make this configuration the primary one for the NIC."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="IP Configuration">
            <help short="Static IP address to use or &quot;&quot;('&quot;&quot;' in PowerShell) to use a dynamic address."/>
          </arg>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id" options="public-ip-address" group="IP Configuration">
            <help short="Name or ID of an existing public IP address."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
          </arg>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="subnet" group="IP Configuration">
            <help short="Name or ID of an existing subnet. If name specified, please also specify `--vnet-name`."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
          </arg>
        </argGroup>
        <argGroup name="Parameters.properties.ipConfigurations[]">
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[]">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].id" options="ip-id" hide="True" group="Parameters.properties.ipConfigurations[]">
            <help short="Resource ID."/>
          </arg>
        </argGroup>
        <argGroup name="PipObj">
          <arg nullable="True" type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location" options="pip-location" hide="True" group="PipObj">
            <help short="Resource location."/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="pip-dns-settings" hide="True" group="PipObj">
            <help short="The FQDN of the DNS record associated with the public IP address."/>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
              <help short="The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
              <help short="The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
              <help short="The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN."/>
            </arg>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="pip-idle-timeout-in-minutes" hide="True" group="PipObj">
            <help short="The idle timeout of the public IP address."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="pip-ip-address" hide="True" group="PipObj">
            <help short="The IP address associated with the public IP address resource."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="pip-public-ip-allocation-method" hide="True" group="PipObj">
            <help short="The public IP address allocation method."/>
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags" options="pip-tags" hide="True" group="PipObj">
            <help short="Resource tags."/>
            <additionalProp>
              <item nullable="True" type="string"/>
            </additionalProp>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
            <help short="The reference to LoadBalancerBackendAddressPool resource."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                <help short="Resource ID."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                <help short="The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
            <help short="A list of references of LoadBalancerInboundNatRules."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
                <help short="A unique read-only string that changes whenever the resource is updated."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                <help short="Resource ID."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                <help short="The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource."/>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" hide="True" group="Properties">
                <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" hide="True" group="Properties">
                <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" hide="True" group="Properties" cls="SubResource_update">
                <help short="A reference to frontend IP addresses."/>
                <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                  <help short="Resource ID."/>
                </arg>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" hide="True" group="Properties">
                <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" hide="True" group="Properties">
                <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" hide="True" group="Properties">
                <help short="The reference to the transport protocol used by the load balancing rule."/>
                <enum>
                  <item name="Tcp" value="&quot;Tcp&quot;"/>
                  <item name="Udp" value="&quot;Udp&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
                <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
            <help short="The private IP address allocation method."/>
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="address-provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
            <help short="The resource GUID property of the public IP resource."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="subnet-provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the resource."/>
          </arg>
        </argGroup>
        <argGroup name="PublicIPAddress">
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag" options="address-etag" hide="True" group="PublicIPAddress">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
        </argGroup>
        <argGroup name="Subnet">
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.etag" options="subnet-etag" hide="True" group="Subnet">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
        </argGroup>
        <argGroup name="SubnetObj">
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.name" options="subnet-name" hide="True" group="SubnetObj">
            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="subnet-address-prefix" hide="True" group="SubnetObj">
            <help short="The address prefix for the subnet."/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="subnet-network-security-group" hide="True" group="SubnetObj" cls="NetworkSecurityGroup_update">
            <help short="The reference to the NetworkSecurityGroup resource."/>
            <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.etag" options="etag">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg nullable="True" type="ResourceId" var="@NetworkSecurityGroup_update.id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
            </arg>
            <arg nullable="True" type="ResourceLocation" var="@NetworkSecurityGroup_update.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
              <help short="The default security rules of network security group."/>
              <item nullable="True" type="object" cls="SecurityRule_update">
                <arg nullable="True" type="string" var="@SecurityRule_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="@SecurityRule_update.id" options="id" hide="True">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                </arg>
                <arg nullable="True" type="string" var="@SecurityRule_update.name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.access" options="access" group="Properties">
                  <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                  <enum>
                    <item name="Allow" value="&quot;Allow&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="@SecurityRule_update.properties.description" options="description" group="Properties">
                  <help short="A description for this rule. Restricted to 140 chars."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                  <help short="The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                </arg>
                <arg nullable="True" type="string" var="@SecurityRule_update.properties.destinationPortRange" options="destination-port-range" group="Properties">
                  <help short="The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.direction" options="direction" group="Properties">
                  <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                  <enum>
                    <item name="Inbound" value="&quot;Inbound&quot;"/>
                    <item name="Outbound" value="&quot;Outbound&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="integer32" var="@SecurityRule_update.properties.priority" options="priority" group="Properties">
                  <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.protocol" options="protocol" group="Properties">
                  <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                  <enum>
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="@SecurityRule_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="string" var="@SecurityRule_update.properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                  <help short="The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                </arg>
                <arg nullable="True" type="string" var="@SecurityRule_update.properties.sourcePortRange" options="source-port-range" group="Properties">
                  <help short="The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.networkInterfaces" options="network-interfaces" group="Properties">
              <help short="A collection of references to network interfaces."/>
              <item nullable="True" type="object" cls="NetworkInterface_update">
                <arg nullable="True" type="string" var="@NetworkInterface_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.id" options="id">
                  <help short="Resource Identifier."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                </arg>
                <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg nullable="True" type="object" var="@NetworkInterface_update.properties.dnsSettings" options="dns-settings" group="Properties">
                  <help short="The DNS settings in network interface."/>
                  <arg nullable="True" type="array<string>" var="@NetworkInterface_update.properties.dnsSettings.appliedDnsServers" options="applied-dns-servers">
                    <help short="If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."/>
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="array<string>" var="@NetworkInterface_update.properties.dnsSettings.dnsServers" options="dns-servers">
                    <help short="List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."/>
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="string" var="@NetworkInterface_update.properties.dnsSettings.internalDnsNameLabel" options="internal-dns-name-label">
                    <help short="Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."/>
                  </arg>
                  <arg nullable="True" type="string" var="@NetworkInterface_update.properties.dnsSettings.internalFqdn" options="internal-fqdn">
                    <help short="Fully qualified DNS name supporting internal communications between VMs in the same virtual network."/>
                  </arg>
                </arg>
                <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                  <help short="Indicates whether IP forwarding is enabled on this network interface."/>
                </arg>
                <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations" options="ip-configurations" group="Properties">
                  <help short="A list of IPConfigurations of the network interface."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].etag" options="etag">
                      <help short="A unique read-only string that changes whenever the resource is updated."/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].id" options="id">
                      <help short="Resource Identifier."/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                      <help short="The reference of LoadBalancerBackendAddressPool resource."/>
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag">
                          <help short="A unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="id">
                          <help short="Resource Identifier."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="name">
                          <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" group="Properties">
                          <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
                      <help short="A list of references of LoadBalancerInboundNatRules."/>
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag">
                          <help short="A unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="id">
                          <help short="Resource Identifier."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="name">
                          <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties">
                          <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
                        </arg>
                        <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties">
                          <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
                        </arg>
                        <arg nullable="True" type="@SubResource_update" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties">
                          <help short="A reference to frontend IP addresses."/>
                        </arg>
                        <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties">
                          <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
                        </arg>
                        <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                          <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                          <help short="The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'"/>
                          <enum>
                            <item name="Tcp" value="&quot;Tcp&quot;"/>
                            <item name="Udp" value="&quot;Udp&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                          <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                      <help short="Gets whether this is a primary customer address on the network interface."/>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties"/>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                      <help short="Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'."/>
                      <enum>
                        <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                        <item name="Static" value="&quot;Static&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" group="Properties"/>
                    <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties">
                      <help short="Public IP address resource."/>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                      </arg>
                      <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.location" options="location l">
                        <help short="Resource location."/>
                      </arg>
                      <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings" options="dns-settings" group="Properties">
                        <help short="The FQDN of the DNS record associated with the public IP address."/>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                          <help short="Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn" options="fqdn">
                          <help short="Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn" options="reverse-fqdn">
                          <help short="Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "/>
                        </arg>
                      </arg>
                      <arg nullable="True" type="integer32" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                        <help short="The idle timeout of the public IP address."/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress" options="ip-address" group="Properties"/>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                        <help short="The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."/>
                        <enum>
                          <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                          <item name="Static" value="&quot;Static&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid" options="resource-guid" group="Properties">
                        <help short="The resource GUID property of the public IP resource."/>
                      </arg>
                      <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.tags" options="tags">
                        <help short="Resource tags."/>
                        <additionalProp>
                          <item nullable="True" type="string"/>
                        </additionalProp>
                      </arg>
                    </arg>
                    <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.name" options="name">
                        <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.addressPrefix" options="address-prefix" group="Properties">
                        <help short="The address prefix for the subnet."/>
                      </arg>
                      <arg nullable="True" type="@NetworkSecurityGroup_update" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                        <help short="The reference of the NetworkSecurityGroup resource."/>
                      </arg>
                      <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the resource."/>
                      </arg>
                      <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="route-table" group="Properties">
                        <help short="The reference of the RouteTable resource."/>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
                          <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                        </arg>
                        <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
                          <help short="Resource Identifier."/>
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                        </arg>
                        <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
                          <help short="Resource location."/>
                        </arg>
                        <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                          <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                        </arg>
                        <arg nullable="True" type="array<object>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
                          <help short="Collection of routes contained within a route table."/>
                          <item nullable="True" type="object">
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                              <help short="A unique read-only string that changes whenever the resource is updated."/>
                            </arg>
                            <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                              <help short="Resource Identifier."/>
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                              <help short="The destination CIDR to which the route applies."/>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                              <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                            </arg>
                            <arg type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                              <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                              <enum>
                                <item name="Internet" value="&quot;Internet&quot;"/>
                                <item name="None" value="&quot;None&quot;"/>
                                <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                                <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                                <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                              </enum>
                            </arg>
                            <arg nullable="True" type="string" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                              <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                            </arg>
                          </item>
                        </arg>
                        <arg nullable="True" type="array<@Subnet_update>" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                          <help short="A collection of references to subnets."/>
                          <item nullable="True" type="@Subnet_update"/>
                        </arg>
                        <arg nullable="True" type="object" var="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
                          <help short="Resource tags."/>
                          <additionalProp>
                            <item nullable="True" type="string"/>
                          </additionalProp>
                        </arg>
                      </arg>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.macAddress" options="mac-address" group="Properties">
                  <help short="The MAC address of the network interface."/>
                </arg>
                <arg nullable="True" type="object" var="@NetworkInterface_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                  <help short="The reference of the NetworkSecurityGroup resource."/>
                  <arg nullable="True" type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.etag" options="etag">
                    <help short="A unique read-only string that changes whenever the resource is updated."/>
                  </arg>
                  <arg nullable="True" type="ResourceId" var="@NetworkInterface_update.properties.networkSecurityGroup.id" options="id">
                    <help short="Resource Identifier."/>
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                  </arg>
                  <arg nullable="True" type="ResourceLocation" var="@NetworkInterface_update.properties.networkSecurityGroup.location" options="location l">
                    <help short="Resource location."/>
                  </arg>
                  <arg nullable="True" type="array<@SecurityRule_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.defaultSecurityRules" options="default-security-rules" group="Properties">
                    <help short="The default security rules of network security group."/>
                    <item nullable="True" type="@SecurityRule_update"/>
                  </arg>
                  <arg nullable="True" type="array<@NetworkInterface_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.networkInterfaces" options="network-interfaces" group="Properties">
                    <help short="A collection of references to network interfaces."/>
                    <item nullable="True" type="@NetworkInterface_update"/>
                  </arg>
                  <arg nullable="True" type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.provisioningState" options="provisioning-state" group="Properties">
                    <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                  </arg>
                  <arg nullable="True" type="string" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.resourceGuid" options="resource-guid" group="Properties">
                    <help short="The resource GUID property of the network security group resource."/>
                  </arg>
                  <arg nullable="True" type="array<@SecurityRule_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
                    <help short="A collection of security rules of the network security group."/>
                    <item nullable="True" type="@SecurityRule_update"/>
                  </arg>
                  <arg nullable="True" type="array<@Subnet_update>" var="@NetworkInterface_update.properties.networkSecurityGroup.properties.subnets" options="subnets" group="Properties">
                    <help short="A collection of references to subnets."/>
                    <item nullable="True" type="@Subnet_update"/>
                  </arg>
                  <arg nullable="True" type="object" var="@NetworkInterface_update.properties.networkSecurityGroup.tags" options="tags">
                    <help short="Resource tags."/>
                    <additionalProp>
                      <item nullable="True" type="string"/>
                    </additionalProp>
                  </arg>
                </arg>
                <arg nullable="True" type="boolean" var="@NetworkInterface_update.properties.primary" options="primary" group="Properties">
                  <help short="Gets whether this is a primary network interface on a virtual machine."/>
                </arg>
                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg nullable="True" type="string" var="@NetworkInterface_update.properties.resourceGuid" options="resource-guid" group="Properties">
                  <help short="The resource GUID property of the network interface resource."/>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="@NetworkInterface_update.properties.virtualMachine" options="virtual-machine" group="Properties">
                  <help short="The reference of a virtual machine."/>
                </arg>
                <arg nullable="True" type="object" var="@NetworkInterface_update.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.resourceGuid" options="resource-guid" group="Properties">
              <help short="The resource GUID property of the network security group resource."/>
            </arg>
            <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.securityRules" options="security-rules" group="Properties">
              <help short="A collection of security rules of the network security group."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="@NetworkSecurityGroup_update.properties.securityRules[].id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.access" options="access" group="Properties">
                  <help short="The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."/>
                  <enum>
                    <item name="Allow" value="&quot;Allow&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.description" options="description" group="Properties">
                  <help short="A description for this rule. Restricted to 140 chars."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties">
                  <help short="The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."/>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties">
                  <help short="The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.direction" options="direction" group="Properties">
                  <help short="The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."/>
                  <enum>
                    <item name="Inbound" value="&quot;Inbound&quot;"/>
                    <item name="Outbound" value="&quot;Outbound&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="integer32" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.priority" options="priority" group="Properties">
                  <help short="The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                  <help short="Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."/>
                  <enum>
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
                <arg type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties">
                  <help short="The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "/>
                </arg>
                <arg nullable="True" type="string" var="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties">
                  <help short="The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<object>" var="@NetworkSecurityGroup_update.properties.subnets" options="subnets" group="Properties">
              <help short="A collection of references to subnets."/>
              <item nullable="True" type="object" cls="Subnet_update">
                <arg nullable="True" type="string" var="@Subnet_update.etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="@Subnet_update.id" options="id" hide="True">
                  <help short="Resource Identifier."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                </arg>
                <arg nullable="True" type="string" var="@Subnet_update.name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg nullable="True" type="string" var="@Subnet_update.properties.addressPrefix" options="address-prefix" group="Properties">
                  <help short="The address prefix for the subnet."/>
                </arg>
                <arg nullable="True" type="@NetworkSecurityGroup_update" var="@Subnet_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
                  <help short="The reference of the NetworkSecurityGroup resource."/>
                </arg>
                <arg nullable="True" type="string" var="@Subnet_update.properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the resource."/>
                </arg>
                <arg nullable="True" type="object" var="@Subnet_update.properties.routeTable" options="route-table" group="Properties">
                  <help short="The reference of the RouteTable resource."/>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.etag" options="etag">
                    <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
                  </arg>
                  <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.routeTable.id" options="id">
                    <help short="Resource Identifier."/>
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                  </arg>
                  <arg nullable="True" type="ResourceLocation" var="@Subnet_update.properties.routeTable.location" options="location l">
                    <help short="Resource location."/>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
                    <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                  </arg>
                  <arg nullable="True" type="array<object>" var="@Subnet_update.properties.routeTable.properties.routes" options="routes" group="Properties">
                    <help short="Collection of routes contained within a route table."/>
                    <item nullable="True" type="object">
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].etag" options="etag">
                        <help short="A unique read-only string that changes whenever the resource is updated."/>
                      </arg>
                      <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.routeTable.properties.routes[].id" options="id">
                        <help short="Resource Identifier."/>
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                      </arg>
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].name" options="name">
                        <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                      </arg>
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                        <help short="The destination CIDR to which the route applies."/>
                      </arg>
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                        <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                      </arg>
                      <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                        <help short="The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"/>
                        <enum>
                          <item name="Internet" value="&quot;Internet&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                          <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                          <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                          <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                        <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="array<@Subnet_update>" var="@Subnet_update.properties.routeTable.properties.subnets" options="subnets" group="Properties">
                    <help short="A collection of references to subnets."/>
                    <item nullable="True" type="@Subnet_update"/>
                  </arg>
                  <arg nullable="True" type="object" var="@Subnet_update.properties.routeTable.tags" options="tags">
                    <help short="Resource tags."/>
                    <additionalProp>
                      <item nullable="True" type="string"/>
                    </additionalProp>
                  </arg>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="object" var="@NetworkSecurityGroup_update.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable" options="subnet-route-table" hide="True" group="SubnetObj">
            <help short="The reference to the RouteTable resource."/>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag" options="etag">
              <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
            </arg>
            <arg nullable="True" type="ResourceLocation" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes" options="routes" group="Properties">
              <help short="Collection of routes contained within a route table."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag" options="etag">
                  <help short="A unique read-only string that changes whenever the resource is updated."/>
                </arg>
                <arg nullable="True" type="ResourceId" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties">
                  <help short="The destination CIDR to which the route applies."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties">
                  <help short="The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."/>
                </arg>
                <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                  <help short="The type of Azure hop the packet should be sent to."/>
                  <enum>
                    <item name="Internet" value="&quot;Internet&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                    <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                    <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState" options="provisioning-state" group="Properties">
                  <help short="The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<@Subnet_update>" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets" options="subnets" group="Properties">
              <help short="A collection of references to subnets."/>
              <item nullable="True" type="@Subnet_update"/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags" options="tags">
              <help short="Resource tags."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.ipConfigurations">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkInterfaces_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="get">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkInterface_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings">
                        <prop type="array<string>" name="appliedDnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="dnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="internalDnsNameLabel"/>
                        <prop type="string" name="internalFqdn"/>
                      </prop>
                      <prop type="boolean" name="enableIPForwarding"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                    <item type="@NetworkInterfaceIPConfiguration_read"/>
                                  </prop>
                                  <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                  <prop type="integer32" name="backendPort"/>
                                  <prop type="boolean" name="enableFloatingIP"/>
                                  <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                  <prop type="integer32" name="frontendPort"/>
                                  <prop type="integer32" name="idleTimeoutInMinutes"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="primary"/>
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                            <prop type="@Subnet_read" name="subnet"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="macAddress"/>
                      <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                        <prop type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                            <item type="@SecurityRule_read"/>
                          </prop>
                          <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                            <item type="@NetworkInterface_read"/>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="string" name="resourceGuid"/>
                          <prop type="array<object>" name="securityRules">
                            <item type="object" cls="SecurityRule_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description"/>
                                <prop type="string" name="destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange"/>
                                <prop type="string" name="direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority"/>
                                <prop type="string" name="protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets">
                            <item type="object" cls="Subnet_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                  <item type="object" cls="IPConfiguration_read">
                                    <prop type="string" name="etag"/>
                                    <prop type="string" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings">
                                            <prop type="string" name="domainNameLabel"/>
                                            <prop type="string" name="fqdn"/>
                                            <prop type="string" name="reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress"/>
                                          <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                          <prop type="string" name="provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="@Subnet_read" name="subnet"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                <prop type="string" name="provisioningState"/>
                                <prop type="object" name="routeTable">
                                  <prop type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location"/>
                                  <prop readOnly="True" type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="array<object>" name="routes">
                                      <item type="object">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_read>" name="subnets">
                                      <item type="@Subnet_read"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </prop>
                      <prop type="boolean" name="primary"/>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="virtualMachine" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.ipConfigurations[]" required="True">
                <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].etag"/>
                <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                    <item type="object">
                      <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                      <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="loadBalancerInboundNatRules" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                    <item type="object">
                      <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                      <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="integer32" name="backendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                        <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                        <prop type="object" name="frontendIPConfiguration" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </prop>
                        <prop type="integer32" name="frontendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                        <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                        <prop type="string" name="protocol" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                          <enum>
                            <item value="&quot;Tcp&quot;"/>
                            <item value="&quot;Udp&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="boolean" name="primary" arg="$parameters.properties.ipConfigurations[].properties.primary"/>
                  <prop type="string" name="privateIPAddress" arg="$parameters.properties.ipConfigurations[].properties.privateIPAddress"/>
                  <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                    <enum>
                      <item value="&quot;Dynamic&quot;"/>
                      <item value="&quot;Static&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.provisioningState"/>
                  <prop type="object" name="publicIPAddress">
                    <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                    <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                        <prop type="string" name="domainNameLabel" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                        <prop type="string" name="fqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                        <prop type="string" name="reverseFqdn" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                      </prop>
                      <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                      <prop type="string" name="ipAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                      <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                      <prop type="string" name="publicIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                        <enum>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="resourceGuid" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="subnet">
                    <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.etag"/>
                    <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                      <prop type="object" name="networkSecurityGroup" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup" cls="NetworkSecurityGroup_update">
                        <prop type="string" name="etag" arg="@NetworkSecurityGroup_update.etag"/>
                        <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_update.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="@NetworkSecurityGroup_update.location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="defaultSecurityRules" arg="@NetworkSecurityGroup_update.properties.defaultSecurityRules">
                            <item type="object" cls="SecurityRule_update">
                              <prop type="string" name="etag" arg="@SecurityRule_update.etag"/>
                              <prop type="ResourceId" name="id" arg="@SecurityRule_update.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="@SecurityRule_update.name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" arg="@SecurityRule_update.properties.access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description" arg="@SecurityRule_update.properties.description"/>
                                <prop type="string" name="destinationAddressPrefix" arg="@SecurityRule_update.properties.destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange" arg="@SecurityRule_update.properties.destinationPortRange"/>
                                <prop type="string" name="direction" arg="@SecurityRule_update.properties.direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority" arg="@SecurityRule_update.properties.priority"/>
                                <prop type="string" name="protocol" arg="@SecurityRule_update.properties.protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="@SecurityRule_update.properties.provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" arg="@SecurityRule_update.properties.sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange" arg="@SecurityRule_update.properties.sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="networkInterfaces" arg="@NetworkSecurityGroup_update.properties.networkInterfaces">
                            <item type="object" cls="NetworkInterface_update">
                              <prop type="string" name="etag" arg="@NetworkInterface_update.etag"/>
                              <prop type="ResourceId" name="id" arg="@NetworkInterface_update.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.location"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="object" name="dnsSettings" arg="@NetworkInterface_update.properties.dnsSettings">
                                  <prop type="array<string>" name="appliedDnsServers" arg="@NetworkInterface_update.properties.dnsSettings.appliedDnsServers">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="dnsServers" arg="@NetworkInterface_update.properties.dnsSettings.dnsServers">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="internalDnsNameLabel" arg="@NetworkInterface_update.properties.dnsSettings.internalDnsNameLabel"/>
                                  <prop type="string" name="internalFqdn" arg="@NetworkInterface_update.properties.dnsSettings.internalFqdn"/>
                                </prop>
                                <prop type="boolean" name="enableIPForwarding" arg="@NetworkInterface_update.properties.enableIPForwarding"/>
                                <prop type="array<object>" name="ipConfigurations" arg="@NetworkInterface_update.properties.ipConfigurations">
                                  <item type="object">
                                    <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].etag"/>
                                    <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].id"/>
                                    <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" identifiers="id">
                                        <item type="object">
                                          <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                                          <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                                          <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<object>" name="loadBalancerInboundNatRules" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules" identifiers="id">
                                        <item type="object">
                                          <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                                          <prop type="string" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                                          <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="integer32" name="backendPort" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                            <prop type="boolean" name="enableFloatingIP" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                            <prop type="@SubResource_update" name="frontendIPConfiguration" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                            <prop type="integer32" name="frontendPort" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                            <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                            <prop type="string" name="protocol" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                                              <enum>
                                                <item value="&quot;Tcp&quot;"/>
                                                <item value="&quot;Udp&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="boolean" name="primary" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.primary"/>
                                      <prop type="string" name="privateIPAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.provisioningState"/>
                                      <prop type="object" name="publicIPAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress">
                                        <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.etag"/>
                                        <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.location"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings">
                                            <prop type="string" name="domainNameLabel" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.domainNameLabel"/>
                                            <prop type="string" name="fqdn" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.fqdn"/>
                                            <prop type="string" name="reverseFqdn" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.dnsSettings.reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.ipAddress"/>
                                          <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.properties.resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.publicIPAddress.tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="subnet" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet">
                                        <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.etag"/>
                                        <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                        </prop>
                                        <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.addressPrefix"/>
                                          <prop type="@NetworkSecurityGroup_update" name="networkSecurityGroup" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.networkSecurityGroup"/>
                                          <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                                          <prop type="object" name="routeTable" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                                            <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                                            <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                            </prop>
                                            <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                                              <prop type="array<object>" name="routes" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                                                <item type="object">
                                                  <prop type="string" name="etag" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                                                  <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                                  </prop>
                                                  <prop type="string" name="name" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="string" name="addressPrefix" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                                    <prop type="string" name="nextHopIpAddress" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                                    <prop type="string" name="nextHopType" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                                      <enum>
                                                        <item value="&quot;Internet&quot;"/>
                                                        <item value="&quot;None&quot;"/>
                                                        <item value="&quot;VirtualAppliance&quot;"/>
                                                        <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                        <item value="&quot;VnetLocal&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                                  </prop>
                                                </item>
                                              </prop>
                                              <prop type="array<@Subnet_update>" name="subnets" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                                                <item type="@Subnet_update"/>
                                              </prop>
                                            </prop>
                                            <prop type="object" name="tags" arg="@NetworkInterface_update.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                                              <additionalProp>
                                                <item type="string"/>
                                              </additionalProp>
                                            </prop>
                                          </prop>
                                        </prop>
                                      </prop>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="string" name="macAddress" arg="@NetworkInterface_update.properties.macAddress"/>
                                <prop type="object" name="networkSecurityGroup" arg="@NetworkInterface_update.properties.networkSecurityGroup">
                                  <prop type="string" name="etag" arg="@NetworkInterface_update.properties.networkSecurityGroup.etag"/>
                                  <prop type="ResourceId" name="id" arg="@NetworkInterface_update.properties.networkSecurityGroup.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location" arg="@NetworkInterface_update.properties.networkSecurityGroup.location"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SecurityRule_update>" name="defaultSecurityRules" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.defaultSecurityRules">
                                      <item type="@SecurityRule_update"/>
                                    </prop>
                                    <prop type="array<@NetworkInterface_update>" name="networkInterfaces" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.networkInterfaces">
                                      <item type="@NetworkInterface_update"/>
                                    </prop>
                                    <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.provisioningState"/>
                                    <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.resourceGuid"/>
                                    <prop type="array<@SecurityRule_update>" name="securityRules" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.securityRules">
                                      <item type="@SecurityRule_update"/>
                                    </prop>
                                    <prop type="array<@Subnet_update>" name="subnets" arg="@NetworkInterface_update.properties.networkSecurityGroup.properties.subnets">
                                      <item type="@Subnet_update"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags" arg="@NetworkInterface_update.properties.networkSecurityGroup.tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="primary" arg="@NetworkInterface_update.properties.primary"/>
                                <prop type="string" name="provisioningState" arg="@NetworkInterface_update.properties.provisioningState"/>
                                <prop type="string" name="resourceGuid" arg="@NetworkInterface_update.properties.resourceGuid"/>
                                <prop type="@SubResource_update" name="virtualMachine" arg="@NetworkInterface_update.properties.virtualMachine"/>
                              </prop>
                              <prop type="object" name="tags" arg="@NetworkInterface_update.tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_update.properties.provisioningState"/>
                          <prop type="string" name="resourceGuid" arg="@NetworkSecurityGroup_update.properties.resourceGuid"/>
                          <prop type="array<object>" name="securityRules" arg="@NetworkSecurityGroup_update.properties.securityRules">
                            <item type="object">
                              <prop type="string" name="etag" arg="@NetworkSecurityGroup_update.properties.securityRules[].etag"/>
                              <prop type="ResourceId" name="id" arg="@NetworkSecurityGroup_update.properties.securityRules[].id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="@NetworkSecurityGroup_update.properties.securityRules[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.description"/>
                                <prop type="string" name="destinationAddressPrefix" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.destinationPortRange"/>
                                <prop type="string" name="direction" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.priority"/>
                                <prop type="string" name="protocol" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange" arg="@NetworkSecurityGroup_update.properties.securityRules[].properties.sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets" arg="@NetworkSecurityGroup_update.properties.subnets">
                            <item type="object" cls="Subnet_update">
                              <prop type="string" name="etag" arg="@Subnet_update.etag"/>
                              <prop type="ResourceId" name="id" arg="@Subnet_update.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="@Subnet_update.name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.addressPrefix"/>
                                <prop type="@NetworkSecurityGroup_update" name="networkSecurityGroup" arg="@Subnet_update.properties.networkSecurityGroup"/>
                                <prop type="string" name="provisioningState" arg="@Subnet_update.properties.provisioningState"/>
                                <prop type="object" name="routeTable" arg="@Subnet_update.properties.routeTable">
                                  <prop type="string" name="etag" arg="@Subnet_update.properties.routeTable.etag"/>
                                  <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location" arg="@Subnet_update.properties.routeTable.location"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState" arg="@Subnet_update.properties.routeTable.properties.provisioningState"/>
                                    <prop type="array<object>" name="routes" arg="@Subnet_update.properties.routeTable.properties.routes">
                                      <item type="object">
                                        <prop type="string" name="etag" arg="@Subnet_update.properties.routeTable.properties.routes[].etag"/>
                                        <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.properties.routes[].id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name" arg="@Subnet_update.properties.routeTable.properties.routes[].name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_update>" name="subnets" arg="@Subnet_update.properties.routeTable.properties.subnets">
                                      <item type="@Subnet_update"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags" arg="@Subnet_update.properties.routeTable.tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags" arg="@NetworkSecurityGroup_update.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.provisioningState"/>
                      <prop type="object" name="routeTable" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable">
                        <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.etag"/>
                        <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.provisioningState"/>
                          <prop type="array<object>" name="routes" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes">
                            <item type="object">
                              <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].etag"/>
                              <prop type="ResourceId" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                <prop type="string" name="nextHopIpAddress" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                <prop type="string" name="nextHopType" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                  <enum>
                                    <item value="&quot;Internet&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;VirtualAppliance&quot;"/>
                                    <item value="&quot;VirtualNetworkGateway&quot;"/>
                                    <item value="&quot;VnetLocal&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.routes[].properties.provisioningState"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<@Subnet_update>" name="subnets" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.properties.subnets">
                            <item type="@Subnet_update"/>
                          </prop>
                        </prop>
                        <prop type="object" name="tags" arg="$parameters.properties.ipConfigurations[].properties.subnet.properties.routeTable.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="NetworkInterfaces_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="put">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@NetworkInterface_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
            <help short="Name of the network interface (NIC)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name n" required="True" group="">
            <help short="Name of the IP configuration."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.ipConfigurations">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkInterfaces_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="get">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkInterface_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings">
                        <prop type="array<string>" name="appliedDnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="dnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="internalDnsNameLabel"/>
                        <prop type="string" name="internalFqdn"/>
                      </prop>
                      <prop type="boolean" name="enableIPForwarding"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                    <item type="@NetworkInterfaceIPConfiguration_read"/>
                                  </prop>
                                  <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                  <prop type="integer32" name="backendPort"/>
                                  <prop type="boolean" name="enableFloatingIP"/>
                                  <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                  <prop type="integer32" name="frontendPort"/>
                                  <prop type="integer32" name="idleTimeoutInMinutes"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="primary"/>
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                            <prop type="@Subnet_read" name="subnet"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="macAddress"/>
                      <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                        <prop type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                            <item type="@SecurityRule_read"/>
                          </prop>
                          <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                            <item type="@NetworkInterface_read"/>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="string" name="resourceGuid"/>
                          <prop type="array<object>" name="securityRules">
                            <item type="object" cls="SecurityRule_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description"/>
                                <prop type="string" name="destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange"/>
                                <prop type="string" name="direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority"/>
                                <prop type="string" name="protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets">
                            <item type="object" cls="Subnet_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                  <item type="object" cls="IPConfiguration_read">
                                    <prop type="string" name="etag"/>
                                    <prop type="string" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings">
                                            <prop type="string" name="domainNameLabel"/>
                                            <prop type="string" name="fqdn"/>
                                            <prop type="string" name="reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress"/>
                                          <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                          <prop type="string" name="provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="@Subnet_read" name="subnet"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                <prop type="string" name="provisioningState"/>
                                <prop type="object" name="routeTable">
                                  <prop type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location"/>
                                  <prop readOnly="True" type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="array<object>" name="routes">
                                      <item type="object">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_read>" name="subnets">
                                      <item type="@Subnet_read"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </prop>
                      <prop type="boolean" name="primary"/>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="virtualMachine" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="NetworkInterfaces_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="put">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@NetworkInterface_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
            <help short="Name of the network interface (NIC)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name n" required="True" group="">
            <help short="Name of the IP configuration."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.ipConfigurations">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkInterfaces_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
            <request method="get">
              <path>
                <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkInterface_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="dnsSettings">
                        <prop type="array<string>" name="appliedDnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="dnsServers">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="internalDnsNameLabel"/>
                        <prop type="string" name="internalFqdn"/>
                      </prop>
                      <prop type="boolean" name="enableIPForwarding"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                    <item type="@NetworkInterfaceIPConfiguration_read"/>
                                  </prop>
                                  <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                              <item type="object">
                                <prop type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                  <prop type="integer32" name="backendPort"/>
                                  <prop type="boolean" name="enableFloatingIP"/>
                                  <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                  <prop type="integer32" name="frontendPort"/>
                                  <prop type="integer32" name="idleTimeoutInMinutes"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="primary"/>
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                            <prop type="@Subnet_read" name="subnet"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="macAddress"/>
                      <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                        <prop type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                            <item type="@SecurityRule_read"/>
                          </prop>
                          <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                            <item type="@NetworkInterface_read"/>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="string" name="resourceGuid"/>
                          <prop type="array<object>" name="securityRules">
                            <item type="object" cls="SecurityRule_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="access" required="True">
                                  <enum>
                                    <item value="&quot;Allow&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="description"/>
                                <prop type="string" name="destinationAddressPrefix" required="True"/>
                                <prop type="string" name="destinationPortRange"/>
                                <prop type="string" name="direction" required="True">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="priority"/>
                                <prop type="string" name="protocol" required="True">
                                  <enum>
                                    <item value="&quot;*&quot;"/>
                                    <item value="&quot;Tcp&quot;"/>
                                    <item value="&quot;Udp&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="provisioningState"/>
                                <prop type="string" name="sourceAddressPrefix" required="True"/>
                                <prop type="string" name="sourcePortRange"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="subnets">
                            <item type="object" cls="Subnet_read">
                              <prop type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                  <item type="object" cls="IPConfiguration_read">
                                    <prop type="string" name="etag"/>
                                    <prop type="string" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="privateIPAddress"/>
                                      <prop type="string" name="privateIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="object" name="dnsSettings">
                                            <prop type="string" name="domainNameLabel"/>
                                            <prop type="string" name="fqdn"/>
                                            <prop type="string" name="reverseFqdn"/>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes"/>
                                          <prop type="string" name="ipAddress"/>
                                          <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                          <prop type="string" name="provisioningState"/>
                                          <prop type="string" name="publicIPAllocationMethod">
                                            <enum>
                                              <item value="&quot;Dynamic&quot;"/>
                                              <item value="&quot;Static&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="resourceGuid"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="@Subnet_read" name="subnet"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                <prop type="string" name="provisioningState"/>
                                <prop type="object" name="routeTable">
                                  <prop type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                  </prop>
                                  <prop type="ResourceLocation" name="location"/>
                                  <prop readOnly="True" type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="provisioningState"/>
                                    <prop type="array<object>" name="routes">
                                      <item type="object">
                                        <prop type="string" name="etag"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                        </prop>
                                        <prop type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="addressPrefix"/>
                                          <prop type="string" name="nextHopIpAddress"/>
                                          <prop type="string" name="nextHopType" required="True">
                                            <enum>
                                              <item value="&quot;Internet&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;VirtualAppliance&quot;"/>
                                              <item value="&quot;VirtualNetworkGateway&quot;"/>
                                              <item value="&quot;VnetLocal&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="provisioningState"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="array<@Subnet_read>" name="subnets">
                                      <item type="@Subnet_read"/>
                                    </prop>
                                  </prop>
                                  <prop type="object" name="tags">
                                    <additionalProp>
                                      <item type="string"/>
                                    </additionalProp>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </prop>
                      <prop type="boolean" name="primary"/>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="virtualMachine" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <commandGroup name="inbound-nat-rule">
        <command name="list" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerInboundNatRules" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerInboundNatRules"/>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="array" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="add" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="inbound-nat-rule" required="True" group="">
              <help short="Name or ID of an existing inbound NAT rule. If name is used, `--lb-name` must be specified."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="rule-name" hide="True" group="">
              <help short="Name or ID of an existing inbound NAT rule. If name is used, `--lb-name` must be specified."/>
            </arg>
          </argGroup>
          <argGroup name="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
          </argGroup>
          <argGroup name="Properties">
            <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" hide="True" group="Properties">
              <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" hide="True" group="Properties">
              <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
            </arg>
            <arg type="object" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" hide="True" group="Properties" cls="SubResource_update">
              <help short="A reference to frontend IP addresses."/>
              <arg type="string" var="@SubResource_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" hide="True" group="Properties">
              <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" hide="True" group="Properties">
              <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" hide="True" group="Properties">
              <help short="The reference to the transport protocol used by the load balancing rule."/>
              <enum>
                <item name="Tcp" value="&quot;Tcp&quot;"/>
                <item name="Udp" value="&quot;Udp&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerInboundNatRules">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]" required="True">
                  <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                  <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                  <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="backendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                    <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                    <prop type="object" name="frontendIPConfiguration" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" cls="SubResource_update">
                      <prop type="string" name="id" arg="@SubResource_update.id"/>
                    </prop>
                    <prop type="integer32" name="frontendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                    <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                    <prop type="string" name="protocol" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                      <enum>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NetworkInterfaces_CreateOrUpdate">
            <longRunning finalStateVia="azure-async-operation"/>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="put">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NetworkInterface_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="inbound-nat-rule" required="True" group="">
              <help short="Name or ID of an existing inbound NAT rule. If name is used, `--lb-name` must be specified."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name" options="rule-name" hide="True" group="">
              <help short="Name or ID of an existing inbound NAT rule. If name is used, `--lb-name` must be specified."/>
            </arg>
          </argGroup>
          <argGroup name="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" hide="True" group="Properties">
              <help short="The port used for the internal endpoint. Acceptable values range from 1 to 65535."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" hide="True" group="Properties">
              <help short="Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" hide="True" group="Properties" cls="SubResource_update">
              <help short="A reference to frontend IP addresses."/>
              <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" hide="True" group="Properties">
              <help short="The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" hide="True" group="Properties">
              <help short="The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" hide="True" group="Properties">
              <help short="The reference to the transport protocol used by the load balancing rule."/>
              <enum>
                <item name="Tcp" value="&quot;Tcp&quot;"/>
                <item name="Udp" value="&quot;Udp&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerInboundNatRules">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]" required="True">
                  <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].etag"/>
                  <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id"/>
                  <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="backendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                    <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                    <prop type="object" name="frontendIPConfiguration" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" cls="SubResource_update">
                      <prop type="string" name="id" arg="@SubResource_update.id"/>
                    </prop>
                    <prop type="integer32" name="frontendPort" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                    <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                    <prop type="string" name="protocol" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol">
                      <enum>
                        <item value="&quot;Tcp&quot;"/>
                        <item value="&quot;Udp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.provisioningState"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NetworkInterfaces_CreateOrUpdate">
            <longRunning finalStateVia="azure-async-operation"/>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="put">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NetworkInterface_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="remove" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="inbound-nat-rule" required="True" group="">
              <help short="Resource ID."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerInboundNatRules">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NetworkInterfaces_CreateOrUpdate">
            <longRunning finalStateVia="azure-async-operation"/>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="put">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NetworkInterface_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerInboundNatRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" options="inbound-nat-rule" required="True" group="">
              <help short="Resource ID."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerInboundNatRules">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
      <commandGroup name="lb-pool">
        <command name="list" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerBackendAddressPools"/>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="array" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="add" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="pool-id" required="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="pool-name" hide="True" group="">
              <help short="The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."/>
            </arg>
          </argGroup>
          <argGroup name="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerBackendAddressPools">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]" required="True">
                  <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                  <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                  <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NetworkInterfaces_CreateOrUpdate">
            <longRunning finalStateVia="azure-async-operation"/>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="put">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NetworkInterface_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="pool-id" required="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name" options="pool-name" hide="True" group="">
              <help short="The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."/>
            </arg>
          </argGroup>
          <argGroup name="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag" options="etag" hide="True" group="Parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerBackendAddressPools">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]" required="True">
                  <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].etag"/>
                  <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id"/>
                  <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.provisioningState"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NetworkInterfaces_CreateOrUpdate">
            <longRunning finalStateVia="azure-async-operation"/>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="put">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NetworkInterface_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="remove" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="pool-id" required="True" group="">
              <help short="Resource ID."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerBackendAddressPools">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NetworkInterfaces_CreateOrUpdate">
            <longRunning finalStateVia="azure-async-operation"/>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="put">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NetworkInterface_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2015-06-15" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkinterfaces/{}" version="2015-06-15" subresource="properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrSW50ZXJmYWNlcy97bmV0d29ya0ludGVyZmFjZU5hbWV9/V/MjAxNS0wNi0xNQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.networkInterfaceName" options="nic-name" required="True" group="" idPart="name">
              <help short="Name of the network interface (NIC)."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="ip-config-name n" required="True" group="">
              <help short="Name of the IP configuration."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" options="pool-id" required="True" group="">
              <help short="Resource ID."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="array" name="properties.ipConfigurations">
                <item type="object">
                  <prop type="array" name="properties.loadBalancerBackendAddressPools">
                    <item type="object"/>
                    <identifier type="string" name="[].id" arg="$parameters.properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].id" required="True"/>
                  </prop>
                </item>
                <identifier type="string" name="[].name" arg="$parameters.properties.ipConfigurations[].name" required="True"/>
              </prop>
            </json>
          </subresourceSelector>
          <operation operationId="NetworkInterfaces_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}">
              <request method="get">
                <path>
                  <param type="string" name="networkInterfaceName" arg="$Path.networkInterfaceName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2015-06-15&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NetworkInterface_read">
                      <prop type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="dnsSettings">
                          <prop type="array<string>" name="appliedDnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="dnsServers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="internalDnsNameLabel"/>
                          <prop type="string" name="internalFqdn"/>
                        </prop>
                        <prop type="boolean" name="enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations">
                          <item type="object" cls="NetworkInterfaceIPConfiguration_read">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                      <item type="@NetworkInterfaceIPConfiguration_read"/>
                                    </prop>
                                    <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop readOnly="True" type="@SubResource_read" name="outboundNatRule"/>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" identifiers="id">
                                <item type="object">
                                  <prop type="string" name="etag"/>
                                  <prop type="string" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                                    <prop type="integer32" name="backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP"/>
                                    <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="provisioningState"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary"/>
                              <prop type="string" name="privateIPAddress"/>
                              <prop type="string" name="privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="provisioningState"/>
                              <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                              <prop type="@Subnet_read" name="subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="macAddress"/>
                        <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                          <prop type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@SecurityRule_read>" name="defaultSecurityRules">
                              <item type="@SecurityRule_read"/>
                            </prop>
                            <prop type="array<@NetworkInterface_read>" name="networkInterfaces">
                              <item type="@NetworkInterface_read"/>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="resourceGuid"/>
                            <prop type="array<object>" name="securityRules">
                              <item type="object" cls="SecurityRule_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}/securityRules/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description"/>
                                  <prop type="string" name="destinationAddressPrefix" required="True"/>
                                  <prop type="string" name="destinationPortRange"/>
                                  <prop type="string" name="direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="string" name="sourceAddressPrefix" required="True"/>
                                  <prop type="string" name="sourcePortRange"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="subnets">
                              <item type="object" cls="Subnet_read">
                                <prop type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualnetworks/{}/subnets/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="array<object>" name="ipConfigurations">
                                    <item type="object" cls="IPConfiguration_read">
                                      <prop type="string" name="etag"/>
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="privateIPAddress"/>
                                        <prop type="string" name="privateIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="provisioningState"/>
                                        <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel"/>
                                              <prop type="string" name="fqdn"/>
                                              <prop type="string" name="reverseFqdn"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="string" name="ipAddress"/>
                                            <prop readOnly="True" type="@IPConfiguration_read" name="ipConfiguration"/>
                                            <prop type="string" name="provisioningState"/>
                                            <prop type="string" name="publicIPAllocationMethod">
                                              <enum>
                                                <item value="&quot;Dynamic&quot;"/>
                                                <item value="&quot;Static&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </prop>
                                        <prop type="@Subnet_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                  <prop type="string" name="provisioningState"/>
                                  <prop type="object" name="routeTable">
                                    <prop type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="array<object>" name="routes">
                                        <item type="object">
                                          <prop type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="nextHopIpAddress"/>
                                            <prop type="string" name="nextHopType" required="True">
                                              <enum>
                                                <item value="&quot;Internet&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VirtualAppliance&quot;"/>
                                                <item value="&quot;VirtualNetworkGateway&quot;"/>
                                                <item value="&quot;VnetLocal&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="array<@Subnet_read>" name="subnets">
                                        <item type="@Subnet_read"/>
                                      </prop>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="provisioningState"/>
                        <prop type="string" name="resourceGuid"/>
                        <prop type="object" name="virtualMachine" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
    </commandGroup>
  </commandGroup>
</CodeGen>
