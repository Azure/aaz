<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/networkrulesets/default" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vbmV0d29ya1J1bGVTZXRzL2RlZmF1bHQ=/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
  <commandGroup name="eventhubs namespace network-rule-set">
    <command name="show" version="2023-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/networkrulesets/default" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vbmV0d29ya1J1bGVTZXRzL2RlZmF1bHQ=/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" group="" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Namespaces_GetNetworkRuleSet">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/networkRuleSets/default"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAction">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipRules">
                      <item type="object">
                        <prop type="string" name="action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask"/>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;SecuredByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="trustedServiceAccessEnabled"/>
                    <prop type="array<object>" name="virtualNetworkRules">
                      <item type="object">
                        <prop type="boolean" name="ignoreMissingVnetServiceEndpoint"/>
                        <prop type="object" name="subnet">
                          <prop type="string" name="id"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/networkrulesets/default" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vbmV0d29ya1J1bGVTZXRzL2RlZmF1bHQ=/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" group="" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.defaultAction" options="default-action" group="Properties">
          <help short="Default Action for Network Rule Set"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$parameters.properties.ipRules" options="ip-rules" group="Properties">
          <help short="List of IpRules"/>
          <item type="object">
            <arg type="string" var="$parameters.properties.ipRules[].action" options="action">
              <help short="The IP Filter Action"/>
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.ipRules[].ipMask" options="ip-mask">
              <help short="IP Mask"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. "/>
          <default value="&quot;Enabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="SecuredByPerimeter" value="&quot;SecuredByPerimeter&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$parameters.properties.trustedServiceAccessEnabled" options="enable-trusted-service-access t" group="Properties">
          <help short="Value that indicates whether Trusted Service Access is Enabled or not."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.virtualNetworkRules" options="virtual-network-rules" group="Properties">
          <help short="List VirtualNetwork Rules"/>
          <item type="object">
            <arg type="boolean" var="$parameters.properties.virtualNetworkRules[].ignoreMissingVnetServiceEndpoint" options="ignore-missing-endpoint missing-endpoint" group="">
              <help short="Value that indicates whether to ignore missing Vnet Service Endpoint"/>
            </arg>
            <arg type="string" var="$parameters.properties.virtualNetworkRules[].subnet.id" options="subnet" group="Subnet">
              <help short="Resource ID of Virtual Network Subnet"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Namespaces_CreateOrUpdateNetworkRuleSet">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAction" arg="$parameters.properties.defaultAction">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipRules" arg="$parameters.properties.ipRules">
                      <item type="object">
                        <prop type="string" name="action" arg="$parameters.properties.ipRules[].action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask" arg="$parameters.properties.ipRules[].ipMask"/>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$parameters.properties.publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;SecuredByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="trustedServiceAccessEnabled" arg="$parameters.properties.trustedServiceAccessEnabled"/>
                    <prop type="array<object>" name="virtualNetworkRules" arg="$parameters.properties.virtualNetworkRules">
                      <item type="object">
                        <prop type="boolean" name="ignoreMissingVnetServiceEndpoint" arg="$parameters.properties.virtualNetworkRules[].ignoreMissingVnetServiceEndpoint"/>
                        <prop type="object" name="subnet">
                          <prop type="string" name="id" arg="$parameters.properties.virtualNetworkRules[].subnet.id"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/networkRuleSets/default"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAction">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipRules">
                      <item type="object">
                        <prop type="string" name="action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask"/>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;SecuredByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="trustedServiceAccessEnabled"/>
                    <prop type="array<object>" name="virtualNetworkRules">
                      <item type="object">
                        <prop type="boolean" name="ignoreMissingVnetServiceEndpoint"/>
                        <prop type="object" name="subnet">
                          <prop type="string" name="id"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/networkrulesets/default" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vbmV0d29ya1J1bGVTZXRzL2RlZmF1bHQ=/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" group="" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.defaultAction" options="default-action" group="Properties">
          <help short="Default Action for Network Rule Set"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.ipRules" options="ip-rules" group="Properties">
          <help short="List of IpRules"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.ipRules[].action" options="action">
              <help short="The IP Filter Action"/>
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipRules[].ipMask" options="ip-mask">
              <help short="IP Mask"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. "/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="SecuredByPerimeter" value="&quot;SecuredByPerimeter&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.trustedServiceAccessEnabled" options="enable-trusted-service-access t" group="Properties">
          <help short="Value that indicates whether Trusted Service Access is Enabled or not."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.virtualNetworkRules" options="virtual-network-rules" group="Properties">
          <help short="List VirtualNetwork Rules"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="boolean" var="$parameters.properties.virtualNetworkRules[].ignoreMissingVnetServiceEndpoint" options="ignore-missing-endpoint missing-endpoint" group="">
              <help short="Value that indicates whether to ignore missing Vnet Service Endpoint"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualNetworkRules[].subnet.id" options="subnet" group="Subnet">
              <help short="Resource ID of Virtual Network Subnet"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Namespaces_GetNetworkRuleSet">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkRuleSet_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/networkRuleSets/default"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAction">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipRules">
                      <item type="object">
                        <prop type="string" name="action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask"/>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;SecuredByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="trustedServiceAccessEnabled"/>
                    <prop type="array<object>" name="virtualNetworkRules">
                      <item type="object">
                        <prop type="boolean" name="ignoreMissingVnetServiceEndpoint"/>
                        <prop type="object" name="subnet">
                          <prop type="string" name="id"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="defaultAction" arg="$parameters.properties.defaultAction">
                  <enum>
                    <item value="&quot;Allow&quot;"/>
                    <item value="&quot;Deny&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="ipRules" arg="$parameters.properties.ipRules">
                  <item type="object">
                    <prop type="string" name="action" arg="$parameters.properties.ipRules[].action">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipMask" arg="$parameters.properties.ipRules[].ipMask"/>
                  </item>
                </prop>
                <prop type="string" name="publicNetworkAccess" arg="$parameters.properties.publicNetworkAccess">
                  <default value="&quot;Enabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                    <item value="&quot;SecuredByPerimeter&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="trustedServiceAccessEnabled" arg="$parameters.properties.trustedServiceAccessEnabled"/>
                <prop type="array<object>" name="virtualNetworkRules" arg="$parameters.properties.virtualNetworkRules">
                  <item type="object">
                    <prop type="boolean" name="ignoreMissingVnetServiceEndpoint" arg="$parameters.properties.virtualNetworkRules[].ignoreMissingVnetServiceEndpoint"/>
                    <prop type="object" name="subnet">
                      <prop type="string" name="id" arg="$parameters.properties.virtualNetworkRules[].subnet.id"/>
                    </prop>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Namespaces_CreateOrUpdateNetworkRuleSet">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@NetworkRuleSet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
