<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.storagecache/amlfilesystems" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlN0b3JhZ2VDYWNoZS9hbWxGaWxlc3lzdGVtcw==/V/MjAyMy0wNS0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1z/V/MjAyMy0wNS0wMQ=="/>
  <commandGroup name="amlfs">
    <command name="list" version="2023-05-01">
      <resource id="/subscriptions/{}/providers/microsoft.storagecache/amlfilesystems" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlN0b3JhZ2VDYWNoZS9hbWxGaWxlc3lzdGVtcw==/V/MjAyMy0wNS0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1z/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_amlFilesystems_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_amlFilesystems_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_amlFilesystems_List" operationId="amlFilesystems_List">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/amlFilesystems">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="object" name="clientInfo">
                          <prop readOnly="True" type="object" name="containerStorageInterface">
                            <prop readOnly="True" type="string" name="persistentVolume"/>
                            <prop readOnly="True" type="string" name="persistentVolumeClaim"/>
                            <prop readOnly="True" type="string" name="storageClass"/>
                          </prop>
                          <prop readOnly="True" type="string" name="lustreVersion"/>
                          <prop readOnly="True" type="string" name="mgsAddress"/>
                          <prop readOnly="True" type="string" name="mountCommand"/>
                        </prop>
                        <prop type="object" name="encryptionSettings">
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="filesystemSubnet" required="True"/>
                        <prop readOnly="True" type="object" name="health">
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;Degraded&quot;"/>
                              <item value="&quot;Maintenance&quot;"/>
                              <item value="&quot;Transitioning&quot;"/>
                              <item value="&quot;Unavailable&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="statusCode"/>
                          <prop type="string" name="statusDescription"/>
                        </prop>
                        <prop type="object" name="hsm">
                          <prop readOnly="True" type="array<object>" name="archiveStatus" identifiers="filesystemPath">
                            <item readOnly="True" type="object">
                              <prop readOnly="True" type="string" name="filesystemPath"/>
                              <prop readOnly="True" type="object" name="status">
                                <prop readOnly="True" type="string" name="errorCode"/>
                                <prop readOnly="True" type="string" name="errorMessage"/>
                                <prop readOnly="True" type="dateTime" name="lastCompletionTime"/>
                                <prop readOnly="True" type="dateTime" name="lastStartedTime"/>
                                <prop readOnly="True" type="integer32" name="percentComplete"/>
                                <prop readOnly="True" type="string" name="state">
                                  <enum>
                                    <item value="&quot;Canceled&quot;"/>
                                    <item value="&quot;Cancelling&quot;"/>
                                    <item value="&quot;Completed&quot;"/>
                                    <item value="&quot;FSScanInProgress&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Idle&quot;"/>
                                    <item value="&quot;InProgress&quot;"/>
                                    <item value="&quot;NotConfigured&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="settings">
                            <prop type="string" name="container" required="True"/>
                            <prop type="string" name="importPrefix">
                              <default value="&quot;/&quot;"/>
                            </prop>
                            <prop type="string" name="loggingContainer" required="True"/>
                          </prop>
                        </prop>
                        <prop type="object" name="maintenanceWindow" required="True">
                          <prop type="string" name="dayOfWeek">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="timeOfDayUTC">
                            <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="float32" name="storageCapacityTiB" required="True"/>
                        <prop readOnly="True" type="integer32" name="throughputProvisionedMBps"/>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="string" name="name"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_amlFilesystems_ListByResourceGroup" operationId="amlFilesystems_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="object" name="clientInfo">
                          <prop readOnly="True" type="object" name="containerStorageInterface">
                            <prop readOnly="True" type="string" name="persistentVolume"/>
                            <prop readOnly="True" type="string" name="persistentVolumeClaim"/>
                            <prop readOnly="True" type="string" name="storageClass"/>
                          </prop>
                          <prop readOnly="True" type="string" name="lustreVersion"/>
                          <prop readOnly="True" type="string" name="mgsAddress"/>
                          <prop readOnly="True" type="string" name="mountCommand"/>
                        </prop>
                        <prop type="object" name="encryptionSettings">
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="filesystemSubnet" required="True"/>
                        <prop readOnly="True" type="object" name="health">
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;Degraded&quot;"/>
                              <item value="&quot;Maintenance&quot;"/>
                              <item value="&quot;Transitioning&quot;"/>
                              <item value="&quot;Unavailable&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="statusCode"/>
                          <prop type="string" name="statusDescription"/>
                        </prop>
                        <prop type="object" name="hsm">
                          <prop readOnly="True" type="array<object>" name="archiveStatus" identifiers="filesystemPath">
                            <item readOnly="True" type="object">
                              <prop readOnly="True" type="string" name="filesystemPath"/>
                              <prop readOnly="True" type="object" name="status">
                                <prop readOnly="True" type="string" name="errorCode"/>
                                <prop readOnly="True" type="string" name="errorMessage"/>
                                <prop readOnly="True" type="dateTime" name="lastCompletionTime"/>
                                <prop readOnly="True" type="dateTime" name="lastStartedTime"/>
                                <prop readOnly="True" type="integer32" name="percentComplete"/>
                                <prop readOnly="True" type="string" name="state">
                                  <enum>
                                    <item value="&quot;Canceled&quot;"/>
                                    <item value="&quot;Cancelling&quot;"/>
                                    <item value="&quot;Completed&quot;"/>
                                    <item value="&quot;FSScanInProgress&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Idle&quot;"/>
                                    <item value="&quot;InProgress&quot;"/>
                                    <item value="&quot;NotConfigured&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="settings">
                            <prop type="string" name="container" required="True"/>
                            <prop type="string" name="importPrefix">
                              <default value="&quot;/&quot;"/>
                            </prop>
                            <prop type="string" name="loggingContainer" required="True"/>
                          </prop>
                        </prop>
                        <prop type="object" name="maintenanceWindow" required="True">
                          <prop type="string" name="dayOfWeek">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="timeOfDayUTC">
                            <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="float32" name="storageCapacityTiB" required="True"/>
                        <prop readOnly="True" type="integer32" name="throughputProvisionedMBps"/>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="string" name="name"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
