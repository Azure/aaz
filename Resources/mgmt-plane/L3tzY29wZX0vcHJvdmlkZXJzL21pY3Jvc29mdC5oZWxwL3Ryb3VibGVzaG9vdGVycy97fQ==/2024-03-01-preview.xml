<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{scope}/providers/microsoft.help/troubleshooters/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3Ryb3VibGVzaG9vdGVycy97dHJvdWJsZXNob290ZXJOYW1lfQ==/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
  <commandGroup name="self-help troubleshooter">
    <command name="show" version="2024-03-01-preview">
      <resource id="/{scope}/providers/microsoft.help/troubleshooters/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3Ryb3VibGVzaG9vdGVycy97dHJvdWJsZXNob290ZXJOYW1lfQ==/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="This is an extension resource provider and only resource level extension is supported at the moment."/>
        </arg>
        <arg type="string" var="$Path.troubleshooterName" options="troubleshooter-name" required="True">
          <help short="Troubleshooter resource Name."/>
          <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="Troubleshooters_Get">
        <http path="/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}">
          <request method="get">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="troubleshooterName" arg="$Path.troubleshooterName" required="True">
                <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{scope}/providers/Microsoft.Help/troubleshooters/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;AutoContinue&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="solutionId"/>
                    <prop readOnly="True" type="array<object>" name="steps" identifiers="id">
                      <item type="object">
                        <prop type="object" name="automatedCheckResults">
                          <prop type="string" name="result"/>
                          <prop type="string" name="status"/>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Information&quot;"/>
                              <item value="&quot;Success&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="string" name="description"/>
                        <prop type="object" name="error" cls="ErrorDetail_read">
                          <prop readOnly="True" type="array<object>" name="additionalInfo">
                            <item type="object">
                              <prop readOnly="True" type="object" name="info"/>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="string" name="code"/>
                          <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                            <item type="@ErrorDetail_read"/>
                          </prop>
                          <prop readOnly="True" type="string" name="message"/>
                          <prop readOnly="True" type="string" name="target"/>
                        </prop>
                        <prop type="string" name="executionStatus">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;Success&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="executionStatusDescription"/>
                        <prop type="string" name="guidance"/>
                        <prop type="string" name="id"/>
                        <prop type="array<object>" name="inputs" identifiers="questionId">
                          <item type="object">
                            <prop type="string" name="questionContent"/>
                            <prop type="string" name="questionContentType">
                              <enum>
                                <item value="&quot;Html&quot;"/>
                                <item value="&quot;Markdown&quot;"/>
                                <item value="&quot;Text&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="questionId"/>
                            <prop type="string" name="questionTitle"/>
                            <prop type="string" name="questionType">
                              <enum>
                                <item value="&quot;DateTimePicker&quot;"/>
                                <item value="&quot;Dropdown&quot;"/>
                                <item value="&quot;MultiLineInfoBox&quot;"/>
                                <item value="&quot;MultiSelect&quot;"/>
                                <item value="&quot;RadioButton&quot;"/>
                                <item value="&quot;TextInput&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="recommendedOption"/>
                            <prop type="string" name="responseHint"/>
                            <prop type="array<object>" name="responseOptions" identifiers="key">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="object" name="responseValidationProperties">
                              <prop type="boolean" name="isRequired"/>
                              <prop type="integer64" name="maxLength"/>
                              <prop type="string" name="regex"/>
                              <prop type="string" name="validationErrorMessage"/>
                              <prop type="string" name="validationScope">
                                <enum>
                                  <item value="&quot;GuidFormat&quot;"/>
                                  <item value="&quot;IpAddressFormat&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;NumberOnlyFormat&quot;"/>
                                  <item value="&quot;URLFormat&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="selectedOptionValue"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="insights" identifiers="id">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="importanceLevel">
                              <enum>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Information&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="results"/>
                            <prop type="string" name="title"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="isLastStep"/>
                        <prop type="string" name="title"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;AutomatedCheck&quot;"/>
                            <item value="&quot;Decision&quot;"/>
                            <item value="&quot;Input&quot;"/>
                            <item value="&quot;Insight&quot;"/>
                            <item value="&quot;Solution&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2024-03-01-preview">
      <resource id="/{scope}/providers/microsoft.help/troubleshooters/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3Ryb3VibGVzaG9vdGVycy97dHJvdWJsZXNob290ZXJOYW1lfQ==/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="This is an extension resource provider and only resource level extension is supported at the moment."/>
        </arg>
        <arg type="string" var="$Path.troubleshooterName" options="troubleshooter-name" required="True">
          <help short="Troubleshooter resource Name."/>
          <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$createTroubleshooterRequestBody.properties.parameters" options="parameters" group="Properties">
          <help short="Client input parameters to run Troubleshooter Resource"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="string" var="$createTroubleshooterRequestBody.properties.solutionId" options="solution-id" group="Properties">
          <help short="Solution Id to identify single troubleshooter."/>
        </arg>
      </argGroup>
      <operation operationId="Troubleshooters_Create">
        <http path="/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}">
          <request method="put">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="troubleshooterName" arg="$Path.troubleshooterName" required="True">
                <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="createTroubleshooterRequestBody" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="parameters" arg="$createTroubleshooterRequestBody.properties.parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="solutionId" arg="$createTroubleshooterRequestBody.properties.solutionId"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{scope}/providers/Microsoft.Help/troubleshooters/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;AutoContinue&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="solutionId"/>
                    <prop readOnly="True" type="array<object>" name="steps" identifiers="id">
                      <item type="object">
                        <prop type="object" name="automatedCheckResults">
                          <prop type="string" name="result"/>
                          <prop type="string" name="status"/>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Information&quot;"/>
                              <item value="&quot;Success&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="string" name="description"/>
                        <prop type="object" name="error" cls="ErrorDetail_read">
                          <prop readOnly="True" type="array<object>" name="additionalInfo">
                            <item type="object">
                              <prop readOnly="True" type="object" name="info"/>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="string" name="code"/>
                          <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                            <item type="@ErrorDetail_read"/>
                          </prop>
                          <prop readOnly="True" type="string" name="message"/>
                          <prop readOnly="True" type="string" name="target"/>
                        </prop>
                        <prop type="string" name="executionStatus">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;Success&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="executionStatusDescription"/>
                        <prop type="string" name="guidance"/>
                        <prop type="string" name="id"/>
                        <prop type="array<object>" name="inputs" identifiers="questionId">
                          <item type="object">
                            <prop type="string" name="questionContent"/>
                            <prop type="string" name="questionContentType">
                              <enum>
                                <item value="&quot;Html&quot;"/>
                                <item value="&quot;Markdown&quot;"/>
                                <item value="&quot;Text&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="questionId"/>
                            <prop type="string" name="questionTitle"/>
                            <prop type="string" name="questionType">
                              <enum>
                                <item value="&quot;DateTimePicker&quot;"/>
                                <item value="&quot;Dropdown&quot;"/>
                                <item value="&quot;MultiLineInfoBox&quot;"/>
                                <item value="&quot;MultiSelect&quot;"/>
                                <item value="&quot;RadioButton&quot;"/>
                                <item value="&quot;TextInput&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="recommendedOption"/>
                            <prop type="string" name="responseHint"/>
                            <prop type="array<object>" name="responseOptions" identifiers="key">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="object" name="responseValidationProperties">
                              <prop type="boolean" name="isRequired"/>
                              <prop type="integer64" name="maxLength"/>
                              <prop type="string" name="regex"/>
                              <prop type="string" name="validationErrorMessage"/>
                              <prop type="string" name="validationScope">
                                <enum>
                                  <item value="&quot;GuidFormat&quot;"/>
                                  <item value="&quot;IpAddressFormat&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;NumberOnlyFormat&quot;"/>
                                  <item value="&quot;URLFormat&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="selectedOptionValue"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="insights" identifiers="id">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="importanceLevel">
                              <enum>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Information&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="results"/>
                            <prop type="string" name="title"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="isLastStep"/>
                        <prop type="string" name="title"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;AutomatedCheck&quot;"/>
                            <item value="&quot;Decision&quot;"/>
                            <item value="&quot;Input&quot;"/>
                            <item value="&quot;Insight&quot;"/>
                            <item value="&quot;Solution&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-03-01-preview">
      <resource id="/{scope}/providers/microsoft.help/troubleshooters/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3Ryb3VibGVzaG9vdGVycy97dHJvdWJsZXNob290ZXJOYW1lfQ==/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="scope = resourceUri of affected resource.<br/> For example: /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read "/>
        </arg>
        <arg type="string" var="$Path.troubleshooterName" options="troubleshooter-name" required="True">
          <help short="Troubleshooter resource Name."/>
          <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$createTroubleshooterRequestBody.properties.parameters" options="parameters" group="Properties">
          <help short="Client input parameters to run Troubleshooter Resource"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="string" var="$createTroubleshooterRequestBody.properties.solutionId" options="solution-id" group="Properties">
          <help short="Solution Id to identify single troubleshooter."/>
        </arg>
      </argGroup>
      <operation operationId="Troubleshooters_Get">
        <http path="/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}">
          <request method="get">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="troubleshooterName" arg="$Path.troubleshooterName" required="True">
                <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="TroubleshooterResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{scope}/providers/Microsoft.Help/troubleshooters/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;AutoContinue&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="solutionId"/>
                    <prop readOnly="True" type="array<object>" name="steps" identifiers="id">
                      <item type="object">
                        <prop type="object" name="automatedCheckResults">
                          <prop type="string" name="result"/>
                          <prop type="string" name="status"/>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Information&quot;"/>
                              <item value="&quot;Success&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="string" name="description"/>
                        <prop type="object" name="error" cls="ErrorDetail_read">
                          <prop readOnly="True" type="array<object>" name="additionalInfo">
                            <item type="object">
                              <prop readOnly="True" type="object" name="info"/>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="string" name="code"/>
                          <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                            <item type="@ErrorDetail_read"/>
                          </prop>
                          <prop readOnly="True" type="string" name="message"/>
                          <prop readOnly="True" type="string" name="target"/>
                        </prop>
                        <prop type="string" name="executionStatus">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;Success&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="executionStatusDescription"/>
                        <prop type="string" name="guidance"/>
                        <prop type="string" name="id"/>
                        <prop type="array<object>" name="inputs" identifiers="questionId">
                          <item type="object">
                            <prop type="string" name="questionContent"/>
                            <prop type="string" name="questionContentType">
                              <enum>
                                <item value="&quot;Html&quot;"/>
                                <item value="&quot;Markdown&quot;"/>
                                <item value="&quot;Text&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="questionId"/>
                            <prop type="string" name="questionTitle"/>
                            <prop type="string" name="questionType">
                              <enum>
                                <item value="&quot;DateTimePicker&quot;"/>
                                <item value="&quot;Dropdown&quot;"/>
                                <item value="&quot;MultiLineInfoBox&quot;"/>
                                <item value="&quot;MultiSelect&quot;"/>
                                <item value="&quot;RadioButton&quot;"/>
                                <item value="&quot;TextInput&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="recommendedOption"/>
                            <prop type="string" name="responseHint"/>
                            <prop type="array<object>" name="responseOptions" identifiers="key">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="object" name="responseValidationProperties">
                              <prop type="boolean" name="isRequired"/>
                              <prop type="integer64" name="maxLength"/>
                              <prop type="string" name="regex"/>
                              <prop type="string" name="validationErrorMessage"/>
                              <prop type="string" name="validationScope">
                                <enum>
                                  <item value="&quot;GuidFormat&quot;"/>
                                  <item value="&quot;IpAddressFormat&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;NumberOnlyFormat&quot;"/>
                                  <item value="&quot;URLFormat&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="selectedOptionValue"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="insights" identifiers="id">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="importanceLevel">
                              <enum>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Information&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="results"/>
                            <prop type="string" name="title"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="isLastStep"/>
                        <prop type="string" name="title"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;AutomatedCheck&quot;"/>
                            <item value="&quot;Decision&quot;"/>
                            <item value="&quot;Input&quot;"/>
                            <item value="&quot;Insight&quot;"/>
                            <item value="&quot;Solution&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="createTroubleshooterRequestBody" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="parameters" arg="$createTroubleshooterRequestBody.properties.parameters">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
                <prop type="string" name="solutionId" arg="$createTroubleshooterRequestBody.properties.solutionId"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Troubleshooters_Create">
        <http path="/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}">
          <request method="put">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="troubleshooterName" arg="$Path.troubleshooterName" required="True">
                <format pattern="([A-Za-z0-9]+(-[A-Za-z0-9]+)+)" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@TroubleshooterResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
