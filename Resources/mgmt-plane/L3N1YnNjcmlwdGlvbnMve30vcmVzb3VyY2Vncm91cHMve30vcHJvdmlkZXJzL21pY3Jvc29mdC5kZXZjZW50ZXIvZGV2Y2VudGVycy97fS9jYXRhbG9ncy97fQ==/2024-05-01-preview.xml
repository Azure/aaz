<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin catalog">
    <command name="show" version="2024-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the catalog."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Catalogs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}">
          <request method="get">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@GitCatalog_read" name="adoGit"/>
                    <prop readOnly="True" type="string" name="connectionState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="gitHub" cls="GitCatalog_read">
                      <prop type="string" name="branch"/>
                      <prop type="string" name="path"/>
                      <prop type="string" name="secretIdentifier"/>
                      <prop type="string" name="uri"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastConnectionTime"/>
                    <prop type="object" name="lastSyncStats">
                      <prop readOnly="True" type="integer32" name="added">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="removed">
                        <format minimum="0"/>
                      </prop>
                      <prop type="array<string>" name="syncedCatalogItemTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop readOnly="True" type="integer32" name="synchronizationErrors">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="unchanged">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="updated">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="validationErrors">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncTime"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="syncState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="syncType">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;Scheduled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-05-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the catalog."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Catalogs_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}">
          <request method="delete">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the catalog."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="@GitCatalog_create" var="$body.properties.adoGit" options="ado-git" group="Properties">
          <help short="Properties for an Azure DevOps catalog type."/>
        </arg>
        <arg type="object" var="$body.properties.gitHub" options="git-hub" group="Properties" cls="GitCatalog_create">
          <help short="Properties for a GitHub catalog type."/>
          <arg type="string" var="@GitCatalog_create.branch" options="branch">
            <help short="Git branch."/>
          </arg>
          <arg type="string" var="@GitCatalog_create.path" options="path">
            <help short="The folder where the catalog items can be found inside the repository."/>
          </arg>
          <arg type="string" var="@GitCatalog_create.secretIdentifier" options="secret-identifier">
            <help short="A reference to the Key Vault secret containing a security token to authenticate to a Git repository."/>
          </arg>
          <arg type="string" var="@GitCatalog_create.uri" options="uri">
            <help short="Git URI."/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.syncType" options="sync-type" group="Properties">
          <help short="Indicates the type of sync that is configured for the catalog."/>
          <enum>
            <item name="Manual" value="&quot;Manual&quot;"/>
            <item name="Scheduled" value="&quot;Scheduled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.tags" options="tags" group="Properties">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Catalogs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}">
          <request method="put">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@GitCatalog_create" name="adoGit" arg="$body.properties.adoGit"/>
                    <prop type="object" name="gitHub" arg="$body.properties.gitHub" cls="GitCatalog_create">
                      <prop type="string" name="branch" arg="@GitCatalog_create.branch"/>
                      <prop type="string" name="path" arg="@GitCatalog_create.path"/>
                      <prop type="string" name="secretIdentifier" arg="@GitCatalog_create.secretIdentifier"/>
                      <prop type="string" name="uri" arg="@GitCatalog_create.uri"/>
                    </prop>
                    <prop type="string" name="syncType" arg="$body.properties.syncType">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;Scheduled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="tags" arg="$body.properties.tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@GitCatalog_read" name="adoGit"/>
                    <prop readOnly="True" type="string" name="connectionState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="gitHub" cls="GitCatalog_read">
                      <prop type="string" name="branch"/>
                      <prop type="string" name="path"/>
                      <prop type="string" name="secretIdentifier"/>
                      <prop type="string" name="uri"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastConnectionTime"/>
                    <prop type="object" name="lastSyncStats">
                      <prop readOnly="True" type="integer32" name="added">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="removed">
                        <format minimum="0"/>
                      </prop>
                      <prop type="array<string>" name="syncedCatalogItemTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop readOnly="True" type="integer32" name="synchronizationErrors">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="unchanged">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="updated">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="validationErrors">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncTime"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="syncState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="syncType">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;Scheduled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the catalog."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="@GitCatalog_update" var="$body.properties.adoGit" options="ado-git" group="Properties">
          <help short="Properties for an Azure DevOps catalog type."/>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.gitHub" options="git-hub" group="Properties" cls="GitCatalog_update">
          <help short="Properties for a GitHub catalog type."/>
          <arg nullable="True" type="string" var="@GitCatalog_update.branch" options="branch">
            <help short="Git branch."/>
          </arg>
          <arg nullable="True" type="string" var="@GitCatalog_update.path" options="path">
            <help short="The folder where the catalog items can be found inside the repository."/>
          </arg>
          <arg nullable="True" type="string" var="@GitCatalog_update.secretIdentifier" options="secret-identifier">
            <help short="A reference to the Key Vault secret containing a security token to authenticate to a Git repository."/>
          </arg>
          <arg nullable="True" type="string" var="@GitCatalog_update.uri" options="uri">
            <help short="Git URI."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.syncType" options="sync-type" group="Properties">
          <help short="Indicates the type of sync that is configured for the catalog."/>
          <enum>
            <item name="Manual" value="&quot;Manual&quot;"/>
            <item name="Scheduled" value="&quot;Scheduled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.tags" options="tags" group="Properties">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Catalogs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}">
          <request method="get">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Catalog_read">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@GitCatalog_read" name="adoGit"/>
                    <prop readOnly="True" type="string" name="connectionState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="gitHub" cls="GitCatalog_read">
                      <prop type="string" name="branch"/>
                      <prop type="string" name="path"/>
                      <prop type="string" name="secretIdentifier"/>
                      <prop type="string" name="uri"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastConnectionTime"/>
                    <prop type="object" name="lastSyncStats">
                      <prop readOnly="True" type="integer32" name="added">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="removed">
                        <format minimum="0"/>
                      </prop>
                      <prop type="array<string>" name="syncedCatalogItemTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop readOnly="True" type="integer32" name="synchronizationErrors">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="unchanged">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="updated">
                        <format minimum="0"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="validationErrors">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncTime"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="syncState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="syncType">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;Scheduled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="@GitCatalog_update" name="adoGit" arg="$body.properties.adoGit"/>
                <prop type="object" name="gitHub" arg="$body.properties.gitHub" cls="GitCatalog_update">
                  <prop type="string" name="branch" arg="@GitCatalog_update.branch"/>
                  <prop type="string" name="path" arg="@GitCatalog_update.path"/>
                  <prop type="string" name="secretIdentifier" arg="@GitCatalog_update.secretIdentifier"/>
                  <prop type="string" name="uri" arg="@GitCatalog_update.uri"/>
                </prop>
                <prop type="string" name="syncType" arg="$body.properties.syncType">
                  <enum>
                    <item value="&quot;Manual&quot;"/>
                    <item value="&quot;Scheduled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="tags" arg="$body.properties.tags">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Catalogs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}">
          <request method="put">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Catalog_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
