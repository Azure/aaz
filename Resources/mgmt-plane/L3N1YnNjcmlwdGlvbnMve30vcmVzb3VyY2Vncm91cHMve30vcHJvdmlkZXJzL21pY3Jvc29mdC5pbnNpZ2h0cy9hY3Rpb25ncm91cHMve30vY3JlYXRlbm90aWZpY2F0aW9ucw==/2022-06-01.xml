<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/actiongroups/{}/createnotifications" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYWN0aW9uR3JvdXBzL3thY3Rpb25Hcm91cE5hbWV9L2NyZWF0ZU5vdGlmaWNhdGlvbnM=/V/MjAyMi0wNi0wMQ=="/>
  <commandGroup name="monitor action-group test-notifications">
    <command name="create" version="2022-06-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/actiongroups/{}/createnotifications" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYWN0aW9uR3JvdXBzL3thY3Rpb25Hcm91cE5hbWV9L2NyZWF0ZU5vdGlmaWNhdGlvbnM=/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.actionGroupName" options="action-group-name action-group" required="True" group="" idPart="name">
          <help short="The name of the action group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$notificationRequest.alertType" options="alert-type" required="True" group="">
          <help short="The value of the supported alert type. Supported alert type values are: servicehealth, metricstaticthreshold, metricsdynamicthreshold, logalertv2, smartalert, webtestalert, logalertv1numresult, logalertv1metricmeasurement, resourcehealth, activitylog, budget"/>
          <format maxLength="30"/>
        </arg>
      </argGroup>
      <argGroup name="NotificationRequest">
        <arg type="array<object>" var="$notificationRequest.armRoleReceivers" options="arm-role-receivers" group="NotificationRequest">
          <help short="The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.armRoleReceivers[].name" options="name" required="True">
              <help short="The name of the arm role receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.armRoleReceivers[].roleId" options="role-id" required="True">
              <help short="The arm role id."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.armRoleReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.automationRunbookReceivers" options="automation-runbook-receivers" group="NotificationRequest">
          <help short="The list of AutomationRunbook receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.automationRunbookReceivers[].automationAccountId" options="automation-account-id" required="True">
              <help short="The Azure automation account Id which holds this runbook and authenticate to Azure resource."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.automationRunbookReceivers[].isGlobalRunbook" options="is-global-runbook" required="True">
              <help short="Indicates whether this instance is global runbook."/>
            </arg>
            <arg type="string" var="$notificationRequest.automationRunbookReceivers[].name" options="name">
              <help short="Indicates name of the webhook."/>
            </arg>
            <arg type="string" var="$notificationRequest.automationRunbookReceivers[].runbookName" options="runbook-name" required="True">
              <help short="The name for this runbook."/>
            </arg>
            <arg type="string" var="$notificationRequest.automationRunbookReceivers[].serviceUri" options="service-uri">
              <help short="The URI where webhooks should be sent."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.automationRunbookReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
            <arg type="string" var="$notificationRequest.automationRunbookReceivers[].webhookResourceId" options="webhook-resource-id" required="True">
              <help short="The resource id for webhook linked to this runbook."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.azureAppPushReceivers" options="azure-app-push-receivers" group="NotificationRequest">
          <help short="The list of AzureAppPush receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.azureAppPushReceivers[].emailAddress" options="email-address" required="True">
              <help short="The email address registered for the Azure mobile app."/>
            </arg>
            <arg type="string" var="$notificationRequest.azureAppPushReceivers[].name" options="name" required="True">
              <help short="The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.azureFunctionReceivers" options="azure-function-receivers" group="NotificationRequest">
          <help short="The list of azure function receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.azureFunctionReceivers[].functionAppResourceId" options="function-app-resource-id" required="True">
              <help short="The azure resource id of the function app."/>
            </arg>
            <arg type="string" var="$notificationRequest.azureFunctionReceivers[].functionName" options="function-name" required="True">
              <help short="The function name in the function app."/>
            </arg>
            <arg type="string" var="$notificationRequest.azureFunctionReceivers[].httpTriggerUrl" options="http-trigger-url" required="True">
              <help short="The http trigger url where http request sent to."/>
            </arg>
            <arg type="string" var="$notificationRequest.azureFunctionReceivers[].name" options="name" required="True">
              <help short="The name of the azure function receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.azureFunctionReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.emailReceivers" options="email-receivers" group="NotificationRequest">
          <help short="The list of email receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.emailReceivers[].emailAddress" options="email-address" required="True">
              <help short="The email address of this receiver."/>
            </arg>
            <arg type="string" var="$notificationRequest.emailReceivers[].name" options="name" required="True">
              <help short="The name of the email receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.emailReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.eventHubReceivers" options="event-hub-receivers" group="NotificationRequest">
          <help short="The list of event hub receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.eventHubReceivers[].eventHubName" options="event-hub-name" required="True">
              <help short="The name of the specific Event Hub queue"/>
            </arg>
            <arg type="string" var="$notificationRequest.eventHubReceivers[].eventHubNameSpace" options="event-hub-name-space" required="True">
              <help short="The Event Hub namespace"/>
            </arg>
            <arg type="string" var="$notificationRequest.eventHubReceivers[].name" options="name" required="True">
              <help short="The name of the Event hub receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.eventHubReceivers[].subscriptionId" options="subscription-id" required="True">
              <help short="The Id for the subscription containing this event hub"/>
            </arg>
            <arg type="string" var="$notificationRequest.eventHubReceivers[].tenantId" options="tenant-id">
              <help short="The tenant Id for the subscription containing this event hub"/>
            </arg>
            <arg type="boolean" var="$notificationRequest.eventHubReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.itsmReceivers" options="itsm-receivers" group="NotificationRequest">
          <help short="The list of ITSM receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.itsmReceivers[].connectionId" options="connection-id" required="True">
              <help short="Unique identification of ITSM connection among multiple defined in above workspace."/>
            </arg>
            <arg type="string" var="$notificationRequest.itsmReceivers[].name" options="name" required="True">
              <help short="The name of the Itsm receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.itsmReceivers[].region" options="region" required="True">
              <help short="Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'"/>
            </arg>
            <arg type="string" var="$notificationRequest.itsmReceivers[].ticketConfiguration" options="ticket-configuration" required="True">
              <help short="JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well."/>
            </arg>
            <arg type="string" var="$notificationRequest.itsmReceivers[].workspaceId" options="workspace-id" required="True">
              <help short="OMS LA instance identifier."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.logicAppReceivers" options="logic-app-receivers" group="NotificationRequest">
          <help short="The list of logic app receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.logicAppReceivers[].callbackUrl" options="callback-url" required="True">
              <help short="The callback url where http request sent to."/>
            </arg>
            <arg type="string" var="$notificationRequest.logicAppReceivers[].name" options="name" required="True">
              <help short="The name of the logic app receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.logicAppReceivers[].resourceId" options="resource-id" required="True">
              <help short="The azure resource id of the logic app receiver."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.logicAppReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.smsReceivers" options="sms-receivers" group="NotificationRequest">
          <help short="The list of SMS receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.smsReceivers[].countryCode" options="country-code" required="True">
              <help short="The country code of the SMS receiver."/>
            </arg>
            <arg type="string" var="$notificationRequest.smsReceivers[].name" options="name" required="True">
              <help short="The name of the SMS receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.smsReceivers[].phoneNumber" options="phone-number" required="True">
              <help short="The phone number of the SMS receiver."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.voiceReceivers" options="voice-receivers" group="NotificationRequest">
          <help short="The list of voice receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.voiceReceivers[].countryCode" options="country-code" required="True">
              <help short="The country code of the voice receiver."/>
            </arg>
            <arg type="string" var="$notificationRequest.voiceReceivers[].name" options="name" required="True">
              <help short="The name of the voice receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.voiceReceivers[].phoneNumber" options="phone-number" required="True">
              <help short="The phone number of the voice receiver."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.webhookReceivers" options="webhook-receivers" group="NotificationRequest">
          <help short="The list of webhook receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.webhookReceivers[].identifierUri" options="identifier-uri">
              <help short="Indicates the identifier uri for aad auth."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].name" options="name" required="True">
              <help short="The name of the webhook receiver. Names must be unique across all receivers within an action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].objectId" options="object-id">
              <help short="Indicates the webhook app object Id for aad auth."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].serviceUri" options="service-uri" required="True">
              <help short="The URI where webhooks should be sent."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].tenantId" options="tenant-id">
              <help short="Indicates the tenant id for aad auth."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.webhookReceivers[].useAadAuth" options="use-aad-auth">
              <help short="Indicates whether or not use AAD authentication."/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$notificationRequest.webhookReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ActionGroups_CreateNotificationsAtActionGroupResourceLevel">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}/createNotifications">
          <request method="post">
            <path>
              <param type="string" name="actionGroupName" arg="$Path.actionGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="notificationRequest" required="True" clientFlatten="True">
                  <prop type="string" name="alertType" arg="$notificationRequest.alertType" required="True">
                    <format maxLength="30"/>
                  </prop>
                  <prop type="array<object>" name="armRoleReceivers" arg="$notificationRequest.armRoleReceivers">
                    <item type="object">
                      <prop type="string" name="name" arg="$notificationRequest.armRoleReceivers[].name" required="True"/>
                      <prop type="string" name="roleId" arg="$notificationRequest.armRoleReceivers[].roleId" required="True"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.armRoleReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="automationRunbookReceivers" arg="$notificationRequest.automationRunbookReceivers">
                    <item type="object">
                      <prop type="string" name="automationAccountId" arg="$notificationRequest.automationRunbookReceivers[].automationAccountId" required="True"/>
                      <prop type="boolean" name="isGlobalRunbook" arg="$notificationRequest.automationRunbookReceivers[].isGlobalRunbook" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.automationRunbookReceivers[].name"/>
                      <prop type="string" name="runbookName" arg="$notificationRequest.automationRunbookReceivers[].runbookName" required="True"/>
                      <prop type="string" name="serviceUri" arg="$notificationRequest.automationRunbookReceivers[].serviceUri"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.automationRunbookReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="webhookResourceId" arg="$notificationRequest.automationRunbookReceivers[].webhookResourceId" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="azureAppPushReceivers" arg="$notificationRequest.azureAppPushReceivers">
                    <item type="object">
                      <prop type="string" name="emailAddress" arg="$notificationRequest.azureAppPushReceivers[].emailAddress" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.azureAppPushReceivers[].name" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="azureFunctionReceivers" arg="$notificationRequest.azureFunctionReceivers">
                    <item type="object">
                      <prop type="string" name="functionAppResourceId" arg="$notificationRequest.azureFunctionReceivers[].functionAppResourceId" required="True"/>
                      <prop type="string" name="functionName" arg="$notificationRequest.azureFunctionReceivers[].functionName" required="True"/>
                      <prop type="string" name="httpTriggerUrl" arg="$notificationRequest.azureFunctionReceivers[].httpTriggerUrl" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.azureFunctionReceivers[].name" required="True"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.azureFunctionReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="emailReceivers" arg="$notificationRequest.emailReceivers">
                    <item type="object">
                      <prop type="string" name="emailAddress" arg="$notificationRequest.emailReceivers[].emailAddress" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.emailReceivers[].name" required="True"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.emailReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="eventHubReceivers" arg="$notificationRequest.eventHubReceivers">
                    <item type="object">
                      <prop type="string" name="eventHubName" arg="$notificationRequest.eventHubReceivers[].eventHubName" required="True"/>
                      <prop type="string" name="eventHubNameSpace" arg="$notificationRequest.eventHubReceivers[].eventHubNameSpace" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.eventHubReceivers[].name" required="True"/>
                      <prop type="string" name="subscriptionId" arg="$notificationRequest.eventHubReceivers[].subscriptionId" required="True"/>
                      <prop type="string" name="tenantId" arg="$notificationRequest.eventHubReceivers[].tenantId"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.eventHubReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="itsmReceivers" arg="$notificationRequest.itsmReceivers">
                    <item type="object">
                      <prop type="string" name="connectionId" arg="$notificationRequest.itsmReceivers[].connectionId" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.itsmReceivers[].name" required="True"/>
                      <prop type="string" name="region" arg="$notificationRequest.itsmReceivers[].region" required="True"/>
                      <prop type="string" name="ticketConfiguration" arg="$notificationRequest.itsmReceivers[].ticketConfiguration" required="True"/>
                      <prop type="string" name="workspaceId" arg="$notificationRequest.itsmReceivers[].workspaceId" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="logicAppReceivers" arg="$notificationRequest.logicAppReceivers">
                    <item type="object">
                      <prop type="string" name="callbackUrl" arg="$notificationRequest.logicAppReceivers[].callbackUrl" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.logicAppReceivers[].name" required="True"/>
                      <prop type="string" name="resourceId" arg="$notificationRequest.logicAppReceivers[].resourceId" required="True"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.logicAppReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="smsReceivers" arg="$notificationRequest.smsReceivers">
                    <item type="object">
                      <prop type="string" name="countryCode" arg="$notificationRequest.smsReceivers[].countryCode" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.smsReceivers[].name" required="True"/>
                      <prop type="string" name="phoneNumber" arg="$notificationRequest.smsReceivers[].phoneNumber" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="voiceReceivers" arg="$notificationRequest.voiceReceivers">
                    <item type="object">
                      <prop type="string" name="countryCode" arg="$notificationRequest.voiceReceivers[].countryCode" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.voiceReceivers[].name" required="True"/>
                      <prop type="string" name="phoneNumber" arg="$notificationRequest.voiceReceivers[].phoneNumber" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="webhookReceivers" arg="$notificationRequest.webhookReceivers">
                    <item type="object">
                      <prop type="string" name="identifierUri" arg="$notificationRequest.webhookReceivers[].identifierUri"/>
                      <prop type="string" name="name" arg="$notificationRequest.webhookReceivers[].name" required="True"/>
                      <prop type="string" name="objectId" arg="$notificationRequest.webhookReceivers[].objectId"/>
                      <prop type="string" name="serviceUri" arg="$notificationRequest.webhookReceivers[].serviceUri" required="True"/>
                      <prop type="string" name="tenantId" arg="$notificationRequest.webhookReceivers[].tenantId"/>
                      <prop type="boolean" name="useAadAuth" arg="$notificationRequest.webhookReceivers[].useAadAuth">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.webhookReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="actionDetails">
                    <item type="object">
                      <prop type="string" name="Detail"/>
                      <prop type="string" name="MechanismType"/>
                      <prop type="string" name="Name"/>
                      <prop type="string" name="SendTime"/>
                      <prop type="string" name="Status"/>
                      <prop type="string" name="SubState"/>
                    </item>
                  </prop>
                  <prop type="string" name="completedTime"/>
                  <prop type="object" name="context">
                    <prop type="string" name="contextType"/>
                    <prop type="string" name="notificationSource"/>
                  </prop>
                  <prop type="string" name="createdTime"/>
                  <prop type="string" name="state" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
