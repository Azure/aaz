<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/pipelines/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvcGlwZWxpbmVzL3twaXBlbGluZU5hbWV9/V/MjAyNS0wNS0yMQ=="/>
  <commandGroup name="data-transfer pipeline">
    <command name="show" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/pipelines/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvcGlwZWxpbmVzL3twaXBlbGluZU5hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineName" options="pipeline-name name n" required="True" idPart="name">
          <help short="The name for the pipeline to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Pipelines_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}">
          <request method="get">
            <path>
              <param type="string" name="pipelineName" arg="$Path.pipelineName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/pipelines/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="array<object>" name="connections" identifiers="id">
                      <item type="object">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id" required="True"/>
                        <prop type="string" name="location"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="object" name="internalMetadata">
                            <prop type="object" name="operationStatus">
                              <prop type="string" name="id"/>
                              <prop type="string" name="message"/>
                              <prop readOnly="True" type="string" name="status">
                                <enum>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="statusSetBy"/>
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop type="string" name="type"/>
                        <additionalProp>
                          <item type="any"/>
                        </additionalProp>
                      </item>
                    </prop>
                    <prop type="array<string>" name="disabledFlowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="displayName"/>
                    <prop type="array<string>" name="flowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="quarantineDownloadStorageAccount"/>
                    <prop type="string" name="quarantineDownloadStorageContainer"/>
                    <prop type="string" name="remoteCloud" required="True"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="subscribers">
                      <item type="object">
                        <prop type="string" name="email"/>
                        <prop type="integer64" name="notifications"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-05-21" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/pipelines/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvcGlwZWxpbmVzL3twaXBlbGluZU5hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineName" options="pipeline-name name n" required="True" idPart="name">
          <help short="The name for the pipeline to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Pipelines_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}">
          <request method="delete">
            <path>
              <param type="string" name="pipelineName" arg="$Path.pipelineName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/pipelines/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvcGlwZWxpbmVzL3twaXBlbGluZU5hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineName" options="pipeline-name name n" required="True" idPart="name">
          <help short="The name for the pipeline to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$pipeline.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$pipeline.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$pipeline.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$pipeline.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Pipeline">
        <arg type="ResourceLocation" var="$pipeline.location" options="location l" required="True" group="Pipeline">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$pipeline.tags" options="tags" group="Pipeline">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$pipeline.properties.disabledFlowTypes" options="disabled-flow-types" group="Properties">
          <help short="The flow types that are disabled for this pipeline"/>
          <item type="string">
            <enum>
              <item name="API" value="&quot;API&quot;"/>
              <item name="BasicFiles" value="&quot;BasicFiles&quot;"/>
              <item name="Complex" value="&quot;Complex&quot;"/>
              <item name="Data" value="&quot;Data&quot;"/>
              <item name="DevSecOps" value="&quot;DevSecOps&quot;"/>
              <item name="DiskImages" value="&quot;DiskImages&quot;"/>
              <item name="Messaging" value="&quot;Messaging&quot;"/>
              <item name="MicrosoftInternal" value="&quot;MicrosoftInternal&quot;"/>
              <item name="Mission" value="&quot;Mission&quot;"/>
              <item name="MissionOpaqueXML" value="&quot;MissionOpaqueXML&quot;"/>
              <item name="Opaque" value="&quot;Opaque&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
              <item name="StreamingVideo" value="&quot;StreamingVideo&quot;"/>
              <item name="Unknown" value="&quot;Unknown&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$pipeline.properties.displayName" options="display-name" group="Properties">
          <help short="Display name of this pipeline"/>
        </arg>
        <arg type="array<string>" var="$pipeline.properties.flowTypes" options="flow-types" group="Properties">
          <help short="The flow types allowed for this pipeline"/>
          <item type="string">
            <enum>
              <item name="API" value="&quot;API&quot;"/>
              <item name="BasicFiles" value="&quot;BasicFiles&quot;"/>
              <item name="Complex" value="&quot;Complex&quot;"/>
              <item name="Data" value="&quot;Data&quot;"/>
              <item name="DevSecOps" value="&quot;DevSecOps&quot;"/>
              <item name="DiskImages" value="&quot;DiskImages&quot;"/>
              <item name="Messaging" value="&quot;Messaging&quot;"/>
              <item name="MicrosoftInternal" value="&quot;MicrosoftInternal&quot;"/>
              <item name="Mission" value="&quot;Mission&quot;"/>
              <item name="MissionOpaqueXML" value="&quot;MissionOpaqueXML&quot;"/>
              <item name="Opaque" value="&quot;Opaque&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
              <item name="StreamingVideo" value="&quot;StreamingVideo&quot;"/>
              <item name="Unknown" value="&quot;Unknown&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="array<string>" var="$pipeline.properties.policies" options="policies" group="Properties">
          <help short="The policies for this pipeline"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$pipeline.properties.quarantineDownloadStorageAccount" options="quarantine-download-storage-account" group="Properties">
          <help short="Quarantine Download Storage Account"/>
        </arg>
        <arg type="string" var="$pipeline.properties.quarantineDownloadStorageContainer" options="quarantine-download-storage-container" group="Properties">
          <help short="Quarantine Download Storage Container"/>
        </arg>
        <arg type="string" var="$pipeline.properties.remoteCloud" options="remote-cloud" group="Properties">
          <help short="Remote cloud of the data to be transferred or received"/>
        </arg>
        <arg type="string" var="$pipeline.properties.status" options="status" group="Properties">
          <help short="Status of the current pipeline"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$pipeline.properties.subscribers" options="subscribers" group="Properties">
          <help short="Subscribers of this resource"/>
          <item type="object">
            <arg type="string" var="$pipeline.properties.subscribers[].email" options="email">
              <help short="Email of the subscriber"/>
            </arg>
            <arg type="integer64" var="$pipeline.properties.subscribers[].notifications" options="notifications">
              <help short="Number specifying what notifications to receive"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Pipelines_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}">
          <request method="put">
            <path>
              <param type="string" name="pipelineName" arg="$Path.pipelineName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="pipeline" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$pipeline.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$pipeline.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$pipeline.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$pipeline.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$pipeline.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="disabledFlowTypes" arg="$pipeline.properties.disabledFlowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="displayName" arg="$pipeline.properties.displayName"/>
                    <prop type="array<string>" name="flowTypes" arg="$pipeline.properties.flowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="array<string>" name="policies" arg="$pipeline.properties.policies">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="quarantineDownloadStorageAccount" arg="$pipeline.properties.quarantineDownloadStorageAccount"/>
                    <prop type="string" name="quarantineDownloadStorageContainer" arg="$pipeline.properties.quarantineDownloadStorageContainer"/>
                    <prop type="string" name="remoteCloud" arg="$pipeline.properties.remoteCloud" required="True"/>
                    <prop type="string" name="status" arg="$pipeline.properties.status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="subscribers" arg="$pipeline.properties.subscribers">
                      <item type="object">
                        <prop type="string" name="email" arg="$pipeline.properties.subscribers[].email"/>
                        <prop type="integer64" name="notifications" arg="$pipeline.properties.subscribers[].notifications"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$pipeline.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/pipelines/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="array<object>" name="connections" identifiers="id">
                      <item type="object">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id" required="True"/>
                        <prop type="string" name="location"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="object" name="internalMetadata">
                            <prop type="object" name="operationStatus">
                              <prop type="string" name="id"/>
                              <prop type="string" name="message"/>
                              <prop readOnly="True" type="string" name="status">
                                <enum>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="statusSetBy"/>
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop type="string" name="type"/>
                        <additionalProp>
                          <item type="any"/>
                        </additionalProp>
                      </item>
                    </prop>
                    <prop type="array<string>" name="disabledFlowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="displayName"/>
                    <prop type="array<string>" name="flowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="quarantineDownloadStorageAccount"/>
                    <prop type="string" name="quarantineDownloadStorageContainer"/>
                    <prop type="string" name="remoteCloud" required="True"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="subscribers">
                      <item type="object">
                        <prop type="string" name="email"/>
                        <prop type="integer64" name="notifications"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/pipelines/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvcGlwZWxpbmVzL3twaXBlbGluZU5hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineName" options="pipeline-name name n" required="True" idPart="name">
          <help short="The name for the pipeline to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$pipeline.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$pipeline.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Pipeline">
        <arg nullable="True" type="object" var="$pipeline.tags" options="tags" group="Pipeline">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$pipeline.properties.disabledFlowTypes" options="disabled-flow-types" group="Properties">
          <help short="The flow types that are disabled for this pipeline"/>
          <item nullable="True" type="string">
            <enum>
              <item name="API" value="&quot;API&quot;"/>
              <item name="BasicFiles" value="&quot;BasicFiles&quot;"/>
              <item name="Complex" value="&quot;Complex&quot;"/>
              <item name="Data" value="&quot;Data&quot;"/>
              <item name="DevSecOps" value="&quot;DevSecOps&quot;"/>
              <item name="DiskImages" value="&quot;DiskImages&quot;"/>
              <item name="Messaging" value="&quot;Messaging&quot;"/>
              <item name="MicrosoftInternal" value="&quot;MicrosoftInternal&quot;"/>
              <item name="Mission" value="&quot;Mission&quot;"/>
              <item name="MissionOpaqueXML" value="&quot;MissionOpaqueXML&quot;"/>
              <item name="Opaque" value="&quot;Opaque&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
              <item name="StreamingVideo" value="&quot;StreamingVideo&quot;"/>
              <item name="Unknown" value="&quot;Unknown&quot;"/>
            </enum>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$pipeline.properties.displayName" options="display-name" group="Properties">
          <help short="Display name of this pipeline"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$pipeline.properties.flowTypes" options="flow-types" group="Properties">
          <help short="The flow types allowed for this pipeline"/>
          <item nullable="True" type="string">
            <enum>
              <item name="API" value="&quot;API&quot;"/>
              <item name="BasicFiles" value="&quot;BasicFiles&quot;"/>
              <item name="Complex" value="&quot;Complex&quot;"/>
              <item name="Data" value="&quot;Data&quot;"/>
              <item name="DevSecOps" value="&quot;DevSecOps&quot;"/>
              <item name="DiskImages" value="&quot;DiskImages&quot;"/>
              <item name="Messaging" value="&quot;Messaging&quot;"/>
              <item name="MicrosoftInternal" value="&quot;MicrosoftInternal&quot;"/>
              <item name="Mission" value="&quot;Mission&quot;"/>
              <item name="MissionOpaqueXML" value="&quot;MissionOpaqueXML&quot;"/>
              <item name="Opaque" value="&quot;Opaque&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
              <item name="StreamingVideo" value="&quot;StreamingVideo&quot;"/>
              <item name="Unknown" value="&quot;Unknown&quot;"/>
            </enum>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$pipeline.properties.policies" options="policies" group="Properties">
          <help short="The policies for this pipeline"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$pipeline.properties.quarantineDownloadStorageAccount" options="quarantine-download-storage-account" group="Properties">
          <help short="Quarantine Download Storage Account"/>
        </arg>
        <arg nullable="True" type="string" var="$pipeline.properties.quarantineDownloadStorageContainer" options="quarantine-download-storage-container" group="Properties">
          <help short="Quarantine Download Storage Container"/>
        </arg>
        <arg type="string" var="$pipeline.properties.remoteCloud" options="remote-cloud" group="Properties">
          <help short="Remote cloud of the data to be transferred or received"/>
        </arg>
        <arg nullable="True" type="string" var="$pipeline.properties.status" options="status" group="Properties">
          <help short="Status of the current pipeline"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$pipeline.properties.subscribers" options="subscribers" group="Properties">
          <help short="Subscribers of this resource"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$pipeline.properties.subscribers[].email" options="email">
              <help short="Email of the subscriber"/>
            </arg>
            <arg nullable="True" type="integer64" var="$pipeline.properties.subscribers[].notifications" options="notifications">
              <help short="Number specifying what notifications to receive"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Pipelines_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}">
          <request method="get">
            <path>
              <param type="string" name="pipelineName" arg="$Path.pipelineName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Pipeline_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/pipelines/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="array<object>" name="connections" identifiers="id">
                      <item type="object">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id" required="True"/>
                        <prop type="string" name="location"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="object" name="internalMetadata">
                            <prop type="object" name="operationStatus">
                              <prop type="string" name="id"/>
                              <prop type="string" name="message"/>
                              <prop readOnly="True" type="string" name="status">
                                <enum>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="statusSetBy"/>
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop type="string" name="type"/>
                        <additionalProp>
                          <item type="any"/>
                        </additionalProp>
                      </item>
                    </prop>
                    <prop type="array<string>" name="disabledFlowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="displayName"/>
                    <prop type="array<string>" name="flowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="quarantineDownloadStorageAccount"/>
                    <prop type="string" name="quarantineDownloadStorageContainer"/>
                    <prop type="string" name="remoteCloud" required="True"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="subscribers">
                      <item type="object">
                        <prop type="string" name="email"/>
                        <prop type="integer64" name="notifications"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="pipeline" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$pipeline.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$pipeline.identity.userAssignedIdentities">
                  <additionalProp>
                    <item nullable="True" type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties">
                <prop type="array<string>" name="disabledFlowTypes" arg="$pipeline.properties.disabledFlowTypes">
                  <item type="string">
                    <enum>
                      <item value="&quot;API&quot;"/>
                      <item value="&quot;BasicFiles&quot;"/>
                      <item value="&quot;Complex&quot;"/>
                      <item value="&quot;Data&quot;"/>
                      <item value="&quot;DevSecOps&quot;"/>
                      <item value="&quot;DiskImages&quot;"/>
                      <item value="&quot;Messaging&quot;"/>
                      <item value="&quot;MicrosoftInternal&quot;"/>
                      <item value="&quot;Mission&quot;"/>
                      <item value="&quot;MissionOpaqueXML&quot;"/>
                      <item value="&quot;Opaque&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                      <item value="&quot;StreamingVideo&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="string" name="displayName" arg="$pipeline.properties.displayName"/>
                <prop type="array<string>" name="flowTypes" arg="$pipeline.properties.flowTypes">
                  <item type="string">
                    <enum>
                      <item value="&quot;API&quot;"/>
                      <item value="&quot;BasicFiles&quot;"/>
                      <item value="&quot;Complex&quot;"/>
                      <item value="&quot;Data&quot;"/>
                      <item value="&quot;DevSecOps&quot;"/>
                      <item value="&quot;DiskImages&quot;"/>
                      <item value="&quot;Messaging&quot;"/>
                      <item value="&quot;MicrosoftInternal&quot;"/>
                      <item value="&quot;Mission&quot;"/>
                      <item value="&quot;MissionOpaqueXML&quot;"/>
                      <item value="&quot;Opaque&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                      <item value="&quot;StreamingVideo&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="array<string>" name="policies" arg="$pipeline.properties.policies">
                  <item type="string"/>
                </prop>
                <prop type="string" name="quarantineDownloadStorageAccount" arg="$pipeline.properties.quarantineDownloadStorageAccount"/>
                <prop type="string" name="quarantineDownloadStorageContainer" arg="$pipeline.properties.quarantineDownloadStorageContainer"/>
                <prop type="string" name="remoteCloud" arg="$pipeline.properties.remoteCloud" required="True"/>
                <prop type="string" name="status" arg="$pipeline.properties.status">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="subscribers" arg="$pipeline.properties.subscribers">
                  <item type="object">
                    <prop type="string" name="email" arg="$pipeline.properties.subscribers[].email"/>
                    <prop type="integer64" name="notifications" arg="$pipeline.properties.subscribers[].notifications"/>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$pipeline.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Pipelines_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}">
          <request method="put">
            <path>
              <param type="string" name="pipelineName" arg="$Path.pipelineName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Pipeline_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
