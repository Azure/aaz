<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databricks/workspaces/{}" version="2023-02-01" swagger="mgmt-plane/databricks/ResourceProviders/Microsoft.Databricks/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJyaWNrcy93b3Jrc3BhY2VzL3t3b3Jrc3BhY2VOYW1lfQ==/V/MjAyMy0wMi0wMQ=="/>
  <commandGroup name="databricks workspace">
    <command name="show" version="2023-02-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databricks/workspaces/{}" version="2023-02-01" swagger="mgmt-plane/databricks/ResourceProviders/Microsoft.Databricks/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJyaWNrcy93b3Jrc3BhY2VzL3t3b3Jrc3BhY2VOYW1lfQ==/V/MjAyMy0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the workspace."/>
          <format maxLength="64" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="Workspaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Databricks/workspaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="authorizations">
                      <item type="object">
                        <prop type="uuid" name="principalId" required="True"/>
                        <prop type="uuid" name="roleDefinitionId" required="True"/>
                      </item>
                    </prop>
                    <prop type="object" name="createdBy" cls="CreatedBy_read">
                      <prop readOnly="True" type="uuid" name="applicationId"/>
                      <prop readOnly="True" type="uuid" name="oid"/>
                      <prop readOnly="True" type="string" name="puid"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="createdDateTime"/>
                    <prop readOnly="True" type="string" name="diskEncryptionSetId"/>
                    <prop type="object" name="encryption">
                      <prop type="object" name="entities" required="True">
                        <prop type="object" name="managedDisk">
                          <prop type="string" name="keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties" required="True">
                            <prop type="string" name="keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" required="True"/>
                          </prop>
                          <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                        </prop>
                        <prop type="object" name="managedServices">
                          <prop type="string" name="keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties">
                            <prop type="string" name="keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" required="True"/>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="@ManagedIdentityConfiguration_read" name="managedDiskIdentity"/>
                    <prop type="string" name="managedResourceGroupId" required="True"/>
                    <prop type="object" name="parameters">
                      <prop type="object" name="amlWorkspaceId" cls="WorkspaceCustomStringParameter_read">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" required="True"/>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customPrivateSubnetName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customPublicSubnetName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customVirtualNetworkId"/>
                      <prop type="object" name="enableNoPublicIp" cls="WorkspaceCustomBooleanParameter_read">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="value" required="True"/>
                      </prop>
                      <prop type="object" name="encryption">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="value">
                          <prop type="string" name="KeyName"/>
                          <prop type="string" name="keySource">
                            <default value="&quot;Default&quot;"/>
                            <enum>
                              <item value="&quot;Default&quot;"/>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="keyvaulturi"/>
                          <prop type="string" name="keyversion"/>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="loadBalancerBackendPoolName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="loadBalancerId"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="natGatewayName"/>
                      <prop type="@WorkspaceCustomBooleanParameter_read" name="prepareEncryption"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="publicIpName"/>
                      <prop type="@WorkspaceCustomBooleanParameter_read" name="requireInfrastructureEncryption"/>
                      <prop type="object" name="resourceTags">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="storageAccountName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="storageAccountSkuName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="vnetAddressPrefix"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Databricks/workspaces/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" required="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status" required="True">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="requiredNsgRules">
                      <enum>
                        <item value="&quot;AllRules&quot;"/>
                        <item value="&quot;NoAzureDatabricksRules&quot;"/>
                        <item value="&quot;NoAzureServiceRules&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="storageAccountIdentity" cls="ManagedIdentityConfiguration_read">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop readOnly="True" type="string" name="type"/>
                    </prop>
                    <prop type="string" name="uiDefinitionUri"/>
                    <prop type="@CreatedBy_read" name="updatedBy"/>
                    <prop readOnly="True" type="string" name="workspaceId"/>
                    <prop readOnly="True" type="string" name="workspaceUrl"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-02-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databricks/workspaces/{}" version="2023-02-01" swagger="mgmt-plane/databricks/ResourceProviders/Microsoft.Databricks/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJyaWNrcy93b3Jrc3BhY2VzL3t3b3Jrc3BhY2VOYW1lfQ==/V/MjAyMy0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the workspace."/>
          <format maxLength="64" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="Workspaces_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databricks/workspaces/{}" version="2023-02-01" swagger="mgmt-plane/databricks/ResourceProviders/Microsoft.Databricks/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJyaWNrcy93b3Jrc3BhY2VzL3t3b3Jrc3BhY2VOYW1lfQ==/V/MjAyMy0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the workspace."/>
          <format maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="string" var="$parameters.properties.managedResourceGroupId" options="managed-resource-group" required="True" group="">
          <help short="The managed resource group to create. It can be either a name or a resource ID."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.parameters.enableNoPublicIp.value" options="enable-no-public-ip" group="">
          <help short="Flag to enable the no public ip feature."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.parameters.prepareEncryption.value" options="prepare-encryption" group="">
          <help short="Flag to enable the Managed Identity for managed storage account to prepare for CMK encryption."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.parameters.requireInfrastructureEncryption.value" options="require-infrastructure-encryption" group="">
          <help short="Flag to enable the DBFS root file system with secondary layer of encryption with platform managed keys for data at rest."/>
        </arg>
        <arg type="string" var="$parameters.properties.publicNetworkAccess" options="public-network-access" group="">
          <help short="The configuration to set whether network access from public internet to the endpoints are allowed. Allowed values: Disabled, Enabled."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.requiredNsgRules" options="required-nsg-rules" group="">
          <help short="The type of Nsg rule for internal use only.  Allowed values: AllRules, NoAzureDatabricksRules, NoAzureServiceRules."/>
          <enum>
            <item name="AllRules" value="&quot;AllRules&quot;"/>
            <item name="NoAzureDatabricksRules" value="&quot;NoAzureDatabricksRules&quot;"/>
            <item name="NoAzureServiceRules" value="&quot;NoAzureServiceRules&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.sku.name" options="sku" group="">
          <help short="The SKU tier name.  Allowed values: premium, standard, trial."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Custom VNET">
        <arg type="string" var="$parameters.properties.parameters.customPrivateSubnetName.value" options="private-subnet" group="Custom VNET">
          <help short="The name of a Private Subnet within the Virtual Network."/>
        </arg>
        <arg type="string" var="$parameters.properties.parameters.customPublicSubnetName.value" options="public-subnet" group="Custom VNET">
          <help short="The name of a Public Subnet within the Virtual Network."/>
        </arg>
        <arg type="string" var="$parameters.properties.parameters.customVirtualNetworkId.value" options="vnet" group="Custom VNET">
          <help short="Virtual Network name or resource ID."/>
        </arg>
      </argGroup>
      <argGroup name="Encryption">
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keySource" options="disk-key-source" group="Encryption">
          <help short="The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Keyvault"/>
          <enum>
            <item name="Microsoft.Keyvault" value="&quot;Microsoft.Keyvault&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyName" options="disk-key-name" group="Encryption">
          <help short="The name of KeyVault key."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVaultUri" options="disk-key-vault" group="Encryption">
          <help short="The URI of KeyVault."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVersion" options="disk-key-version" group="Encryption">
          <help short="The version of KeyVault key."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.encryption.entities.managedDisk.rotationToLatestKeyVersionEnabled" options="disk-key-auto-rotation" group="Encryption">
          <help short="Indicate whether the latest key version should be automatically used for Managed Disk Encryption."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keySource" options="managed-services-key-source" group="Encryption">
          <help short="The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Keyvault"/>
          <enum>
            <item name="Microsoft.Keyvault" value="&quot;Microsoft.Keyvault&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyName" options="managed-services-key-name ms-key-name" group="Encryption">
          <help short="The name of KeyVault key."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVaultUri" options="managed-services-key-vault ms-key-vault" group="Encryption">
          <help short="The Uri of KeyVault."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVersion" options="managed-services-key-version ms-key-version" group="Encryption">
          <help short="The version of KeyVault key."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.properties.parameters.amlWorkspaceId" options="aml-workspace-id" hide="True" group="Parameters" cls="WorkspaceCustomStringParameter_create">
          <help short="The ID of a Azure Machine Learning workspace to link with Databricks workspace"/>
          <arg type="string" var="@WorkspaceCustomStringParameter_create.value" options="value" required="True">
            <help short="The value which should be used for this field."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.parameters.encryption" options="param-encryption" hide="True" group="Parameters">
          <help short="Contains the encryption details for Customer-Managed Key (CMK) enabled workspace."/>
          <arg type="object" var="$parameters.properties.parameters.encryption.value" options="value">
            <help short="The value which should be used for this field."/>
            <arg type="string" var="$parameters.properties.parameters.encryption.value.KeyName" options="key-name">
              <help short="The name of KeyVault key."/>
            </arg>
            <arg type="string" var="$parameters.properties.parameters.encryption.value.keySource" options="key-source">
              <help short="The encryption keySource (provider). Possible values (case-insensitive):  Default, Microsoft.Keyvault"/>
              <default value="&quot;Default&quot;"/>
              <enum>
                <item name="Default" value="&quot;Default&quot;"/>
                <item name="Microsoft.Keyvault" value="&quot;Microsoft.Keyvault&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.parameters.encryption.value.keyvaulturi" options="keyvaulturi">
              <help short="The Uri of KeyVault."/>
            </arg>
            <arg type="string" var="$parameters.properties.parameters.encryption.value.keyversion" options="keyversion">
              <help short="The version of KeyVault key."/>
            </arg>
          </arg>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.loadBalancerBackendPoolName" options="load-balancer-backend-pool-name" hide="True" group="Parameters">
          <help short="Name of the outbound Load Balancer Backend Pool for Secure Cluster Connectivity (No Public IP)."/>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.loadBalancerId" options="load-balancer-id" hide="True" group="Parameters">
          <help short="Resource URI of Outbound Load balancer for Secure Cluster Connectivity (No Public IP) workspace."/>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.natGatewayName" options="nat-gateway-name" hide="True" group="Parameters">
          <help short="Name of the NAT gateway for Secure Cluster Connectivity (No Public IP) workspace subnets."/>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.publicIpName" options="public-ip-name" hide="True" group="Parameters">
          <help short="Name of the Public IP for No Public IP workspace with managed vNet."/>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.storageAccountName" options="storage-account-name" hide="True" group="Parameters">
          <help short="Default DBFS storage account name."/>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.storageAccountSkuName" options="storage-account-sku-name" hide="True" group="Parameters">
          <help short="Storage account SKU name, ex: Standard_GRS, Standard_LRS. Refer https://aka.ms/storageskus for valid inputs."/>
        </arg>
        <arg type="@WorkspaceCustomStringParameter_create" var="$parameters.properties.parameters.vnetAddressPrefix" options="vnet-address-prefix" hide="True" group="Parameters">
          <help short="Address prefix for Managed virtual network. Default value for this input is 10.139."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.authorizations" options="authorizations" hide="True" group="Properties">
          <help short="The workspace provider authorizations."/>
          <item type="object">
            <arg type="uuid" var="$parameters.properties.authorizations[].principalId" options="principal-id" required="True">
              <help short="The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources."/>
            </arg>
            <arg type="uuid" var="$parameters.properties.authorizations[].roleDefinitionId" options="role-definition-id" required="True">
              <help short="The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.uiDefinitionUri" options="ui-definition-uri" hide="True" group="Properties">
          <help short="The blob URI where the UI definition file is located."/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="string" var="$parameters.sku.tier" options="sku-tier" hide="True" group="Sku">
          <help short="The SKU tier."/>
        </arg>
      </argGroup>
      <operation operationId="Workspaces_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="authorizations" arg="$parameters.properties.authorizations">
                      <item type="object">
                        <prop type="uuid" name="principalId" arg="$parameters.properties.authorizations[].principalId" required="True"/>
                        <prop type="uuid" name="roleDefinitionId" arg="$parameters.properties.authorizations[].roleDefinitionId" required="True"/>
                      </item>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="entities" required="True">
                        <prop type="object" name="managedDisk">
                          <prop type="string" name="keySource" arg="$parameters.properties.encryption.entities.managedDisk.keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties" required="True">
                            <prop type="string" name="keyName" arg="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" arg="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" arg="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVersion" required="True"/>
                          </prop>
                          <prop type="boolean" name="rotationToLatestKeyVersionEnabled" arg="$parameters.properties.encryption.entities.managedDisk.rotationToLatestKeyVersionEnabled"/>
                        </prop>
                        <prop type="object" name="managedServices">
                          <prop type="string" name="keySource" arg="$parameters.properties.encryption.entities.managedServices.keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties">
                            <prop type="string" name="keyName" arg="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" arg="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" arg="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVersion" required="True"/>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="managedResourceGroupId" arg="$parameters.properties.managedResourceGroupId" required="True"/>
                    <prop type="object" name="parameters">
                      <prop type="object" name="amlWorkspaceId" arg="$parameters.properties.parameters.amlWorkspaceId" cls="WorkspaceCustomStringParameter_create">
                        <prop type="string" name="value" arg="@WorkspaceCustomStringParameter_create.value" required="True"/>
                      </prop>
                      <prop type="object" name="customPrivateSubnetName">
                        <prop type="string" name="value" arg="$parameters.properties.parameters.customPrivateSubnetName.value" required="True"/>
                      </prop>
                      <prop type="object" name="customPublicSubnetName">
                        <prop type="string" name="value" arg="$parameters.properties.parameters.customPublicSubnetName.value" required="True"/>
                      </prop>
                      <prop type="object" name="customVirtualNetworkId">
                        <prop type="string" name="value" arg="$parameters.properties.parameters.customVirtualNetworkId.value" required="True"/>
                      </prop>
                      <prop type="object" name="enableNoPublicIp">
                        <prop type="boolean" name="value" arg="$parameters.properties.parameters.enableNoPublicIp.value" required="True"/>
                      </prop>
                      <prop type="object" name="encryption" arg="$parameters.properties.parameters.encryption">
                        <prop type="object" name="value" arg="$parameters.properties.parameters.encryption.value">
                          <prop type="string" name="KeyName" arg="$parameters.properties.parameters.encryption.value.KeyName"/>
                          <prop type="string" name="keySource" arg="$parameters.properties.parameters.encryption.value.keySource">
                            <default value="&quot;Default&quot;"/>
                            <enum>
                              <item value="&quot;Default&quot;"/>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="keyvaulturi" arg="$parameters.properties.parameters.encryption.value.keyvaulturi"/>
                          <prop type="string" name="keyversion" arg="$parameters.properties.parameters.encryption.value.keyversion"/>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_create" name="loadBalancerBackendPoolName" arg="$parameters.properties.parameters.loadBalancerBackendPoolName"/>
                      <prop type="@WorkspaceCustomStringParameter_create" name="loadBalancerId" arg="$parameters.properties.parameters.loadBalancerId"/>
                      <prop type="@WorkspaceCustomStringParameter_create" name="natGatewayName" arg="$parameters.properties.parameters.natGatewayName"/>
                      <prop type="object" name="prepareEncryption">
                        <prop type="boolean" name="value" arg="$parameters.properties.parameters.prepareEncryption.value" required="True"/>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_create" name="publicIpName" arg="$parameters.properties.parameters.publicIpName"/>
                      <prop type="object" name="requireInfrastructureEncryption">
                        <prop type="boolean" name="value" arg="$parameters.properties.parameters.requireInfrastructureEncryption.value" required="True"/>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_create" name="storageAccountName" arg="$parameters.properties.parameters.storageAccountName"/>
                      <prop type="@WorkspaceCustomStringParameter_create" name="storageAccountSkuName" arg="$parameters.properties.parameters.storageAccountSkuName"/>
                      <prop type="@WorkspaceCustomStringParameter_create" name="vnetAddressPrefix" arg="$parameters.properties.parameters.vnetAddressPrefix"/>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$parameters.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="requiredNsgRules" arg="$parameters.properties.requiredNsgRules">
                      <enum>
                        <item value="&quot;AllRules&quot;"/>
                        <item value="&quot;NoAzureDatabricksRules&quot;"/>
                        <item value="&quot;NoAzureServiceRules&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="uiDefinitionUri" arg="$parameters.properties.uiDefinitionUri"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" arg="$parameters.sku.name" required="True"/>
                    <prop type="string" name="tier" arg="$parameters.sku.tier"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Databricks/workspaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="authorizations">
                      <item type="object">
                        <prop type="uuid" name="principalId" required="True"/>
                        <prop type="uuid" name="roleDefinitionId" required="True"/>
                      </item>
                    </prop>
                    <prop type="object" name="createdBy" cls="CreatedBy_read">
                      <prop readOnly="True" type="uuid" name="applicationId"/>
                      <prop readOnly="True" type="uuid" name="oid"/>
                      <prop readOnly="True" type="string" name="puid"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="createdDateTime"/>
                    <prop readOnly="True" type="string" name="diskEncryptionSetId"/>
                    <prop type="object" name="encryption">
                      <prop type="object" name="entities" required="True">
                        <prop type="object" name="managedDisk">
                          <prop type="string" name="keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties" required="True">
                            <prop type="string" name="keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" required="True"/>
                          </prop>
                          <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                        </prop>
                        <prop type="object" name="managedServices">
                          <prop type="string" name="keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties">
                            <prop type="string" name="keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" required="True"/>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="@ManagedIdentityConfiguration_read" name="managedDiskIdentity"/>
                    <prop type="string" name="managedResourceGroupId" required="True"/>
                    <prop type="object" name="parameters">
                      <prop type="object" name="amlWorkspaceId" cls="WorkspaceCustomStringParameter_read">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" required="True"/>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customPrivateSubnetName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customPublicSubnetName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customVirtualNetworkId"/>
                      <prop type="object" name="enableNoPublicIp" cls="WorkspaceCustomBooleanParameter_read">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="value" required="True"/>
                      </prop>
                      <prop type="object" name="encryption">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="value">
                          <prop type="string" name="KeyName"/>
                          <prop type="string" name="keySource">
                            <default value="&quot;Default&quot;"/>
                            <enum>
                              <item value="&quot;Default&quot;"/>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="keyvaulturi"/>
                          <prop type="string" name="keyversion"/>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="loadBalancerBackendPoolName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="loadBalancerId"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="natGatewayName"/>
                      <prop type="@WorkspaceCustomBooleanParameter_read" name="prepareEncryption"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="publicIpName"/>
                      <prop type="@WorkspaceCustomBooleanParameter_read" name="requireInfrastructureEncryption"/>
                      <prop type="object" name="resourceTags">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="storageAccountName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="storageAccountSkuName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="vnetAddressPrefix"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Databricks/workspaces/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" required="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status" required="True">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="requiredNsgRules">
                      <enum>
                        <item value="&quot;AllRules&quot;"/>
                        <item value="&quot;NoAzureDatabricksRules&quot;"/>
                        <item value="&quot;NoAzureServiceRules&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="storageAccountIdentity" cls="ManagedIdentityConfiguration_read">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop readOnly="True" type="string" name="type"/>
                    </prop>
                    <prop type="string" name="uiDefinitionUri"/>
                    <prop type="@CreatedBy_read" name="updatedBy"/>
                    <prop readOnly="True" type="string" name="workspaceId"/>
                    <prop readOnly="True" type="string" name="workspaceUrl"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-02-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databricks/workspaces/{}" version="2023-02-01" swagger="mgmt-plane/databricks/ResourceProviders/Microsoft.Databricks/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJyaWNrcy93b3Jrc3BhY2VzL3t3b3Jrc3BhY2VOYW1lfQ==/V/MjAyMy0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the workspace."/>
          <format maxLength="64" minLength="3"/>
        </arg>
        <arg type="string" var="$parameters.properties.managedResourceGroupId" options="managed-resource-group-id" hide="True" group="">
          <help short="The managed resource group to create. It can be either a name or a resource ID."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.parameters.enableNoPublicIp.value" options="enable-no-public-ip" group="">
          <help short="Flag to enable the no public ip feature."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.parameters.prepareEncryption.value" options="prepare-encryption" group="">
          <help short="Flag to enable the Managed Identity for managed storage account to prepare for CMK encryption."/>
        </arg>
        <arg type="string" var="$parameters.properties.parameters.storageAccountSkuName.value" options="storage-account-sku-name sa-sku-name" group="">
          <help short="Storage account SKU name, ex: Standard_GRS, Standard_LRS. Refer https://aka.ms/storageskus for valid inputs."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.publicNetworkAccess" options="public-network-access" group="">
          <help short="The network access type for accessing workspace. Set value to disabled to access workspace only via private link."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.requiredNsgRules" options="required-nsg-rules" group="">
          <help short="The type of Nsg rule for internal use only.  Allowed values: AllRules, NoAzureDatabricksRules, NoAzureServiceRules."/>
          <enum>
            <item name="AllRules" value="&quot;AllRules&quot;"/>
            <item name="NoAzureDatabricksRules" value="&quot;NoAzureDatabricksRules&quot;"/>
            <item name="NoAzureServiceRules" value="&quot;NoAzureServiceRules&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.sku.name" options="sku" group="">
          <help short="The SKU tier name.  Allowed values: premium, standard, trial."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Encryption">
        <arg nullable="True" type="string" var="$parameters.properties.parameters.encryption.value.KeyName" options="key-name" group="Encryption">
          <help short="The name of KeyVault key."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.parameters.encryption.value.keySource" options="key-source" group="Encryption">
          <help short="The encryption key source (provider).  Allowed values: Default, Microsoft.Keyvault."/>
          <enum>
            <item name="Default" value="&quot;Default&quot;"/>
            <item name="Microsoft.Keyvault" value="&quot;Microsoft.Keyvault&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.parameters.encryption.value.keyvaulturi" options="key-vault" group="Encryption">
          <help short="The Uri of KeyVault."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.parameters.encryption.value.keyversion" options="key-version" group="Encryption">
          <help short="The version of KeyVault key. It is optional when updating CMK."/>
        </arg>
      </argGroup>
      <argGroup name="Managed Disk">
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keySource" options="disk-key-source" group="Managed Disk">
          <help short="The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Keyvault"/>
          <enum>
            <item name="Microsoft.Keyvault" value="&quot;Microsoft.Keyvault&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyName" options="disk-key-name" group="Managed Disk">
          <help short="The name of KeyVault key."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVaultUri" options="disk-key-vault" group="Managed Disk">
          <help short="The URI of KeyVault."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVersion" options="disk-key-version" group="Managed Disk">
          <help short="The version of KeyVault key."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.encryption.entities.managedDisk.rotationToLatestKeyVersionEnabled" options="disk-key-auto-rotation" group="Managed Disk">
          <help short="Indicate whether the latest key version should be automatically used for Managed Disk Encryption."/>
        </arg>
      </argGroup>
      <argGroup name="Managed Services">
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keySource" options="managed-services-key-source" group="Managed Services">
          <help short="The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Keyvault"/>
          <enum>
            <item name="Microsoft.Keyvault" value="&quot;Microsoft.Keyvault&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyName" options="managed-services-key-name ms-key-name" group="Managed Services">
          <help short="The name of KeyVault key."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVaultUri" options="managed-services-key-vault ms-key-vault" group="Managed Services">
          <help short="The Uri of KeyVault."/>
        </arg>
        <arg type="string" var="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVersion" options="managed-services-key-version ms-key-version" group="Managed Services">
          <help short="The version of KeyVault key."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.properties.parameters.amlWorkspaceId" options="aml-workspace-id" hide="True" group="Parameters" cls="WorkspaceCustomStringParameter_update">
          <help short="The ID of a Azure Machine Learning workspace to link with Databricks workspace"/>
          <arg type="string" var="@WorkspaceCustomStringParameter_update.value" options="value">
            <help short="The value which should be used for this field."/>
          </arg>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.customPrivateSubnetName" options="custom-private-subnet-name" hide="True" group="Parameters">
          <help short="The name of the Private Subnet within the Virtual Network"/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.customPublicSubnetName" options="custom-public-subnet-name" hide="True" group="Parameters">
          <help short="The name of a Public Subnet within the Virtual Network"/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.customVirtualNetworkId" options="custom-virtual-network-id" hide="True" group="Parameters">
          <help short="The ID of a Virtual Network where this Databricks Cluster should be created"/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.loadBalancerBackendPoolName" options="load-balancer-backend-pool-name" hide="True" group="Parameters">
          <help short="Name of the outbound Load Balancer Backend Pool for Secure Cluster Connectivity (No Public IP)."/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.loadBalancerId" options="load-balancer-id" hide="True" group="Parameters">
          <help short="Resource URI of Outbound Load balancer for Secure Cluster Connectivity (No Public IP) workspace."/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.natGatewayName" options="nat-gateway-name" hide="True" group="Parameters">
          <help short="Name of the NAT gateway for Secure Cluster Connectivity (No Public IP) workspace subnets."/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.publicIpName" options="public-ip-name" hide="True" group="Parameters">
          <help short="Name of the Public IP for No Public IP workspace with managed vNet."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.parameters.requireInfrastructureEncryption" options="require-infrastructure-encryption" hide="True" group="Parameters" cls="WorkspaceCustomBooleanParameter_update">
          <help short="A boolean indicating whether or not the DBFS root file system will be enabled with secondary layer of encryption with platform managed keys for data at rest."/>
          <arg type="boolean" var="@WorkspaceCustomBooleanParameter_update.value" options="prepare-encryption-value" group="">
            <help short="The value which should be used for this field."/>
          </arg>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.storageAccountName" options="storage-account-name" hide="True" group="Parameters">
          <help short="Default DBFS storage account name."/>
        </arg>
        <arg nullable="True" type="@WorkspaceCustomStringParameter_update" var="$parameters.properties.parameters.vnetAddressPrefix" options="vnet-address-prefix" hide="True" group="Parameters">
          <help short="Address prefix for Managed virtual network. Default value for this input is 10.139."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.authorizations" options="authorizations" hide="True" group="Properties">
          <help short="The workspace provider authorizations."/>
          <item nullable="True" type="object">
            <arg type="uuid" var="$parameters.properties.authorizations[].principalId" options="principal-id">
              <help short="The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources."/>
            </arg>
            <arg type="uuid" var="$parameters.properties.authorizations[].roleDefinitionId" options="role-definition-id">
              <help short="The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.uiDefinitionUri" options="ui-definition-uri" hide="True" group="Properties">
          <help short="The blob URI where the UI definition file is located."/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg nullable="True" type="string" var="$parameters.sku.tier" options="sku-tier" hide="True" group="Sku">
          <help short="The SKU tier."/>
        </arg>
      </argGroup>
      <operation operationId="Workspaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Workspace_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Databricks/workspaces/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="authorizations">
                      <item type="object">
                        <prop type="uuid" name="principalId" required="True"/>
                        <prop type="uuid" name="roleDefinitionId" required="True"/>
                      </item>
                    </prop>
                    <prop type="object" name="createdBy" cls="CreatedBy_read">
                      <prop readOnly="True" type="uuid" name="applicationId"/>
                      <prop readOnly="True" type="uuid" name="oid"/>
                      <prop readOnly="True" type="string" name="puid"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="createdDateTime"/>
                    <prop readOnly="True" type="string" name="diskEncryptionSetId"/>
                    <prop type="object" name="encryption">
                      <prop type="object" name="entities" required="True">
                        <prop type="object" name="managedDisk">
                          <prop type="string" name="keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties" required="True">
                            <prop type="string" name="keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" required="True"/>
                          </prop>
                          <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                        </prop>
                        <prop type="object" name="managedServices">
                          <prop type="string" name="keySource" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties">
                            <prop type="string" name="keyName" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop type="string" name="keyVersion" required="True"/>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="@ManagedIdentityConfiguration_read" name="managedDiskIdentity"/>
                    <prop type="string" name="managedResourceGroupId" required="True"/>
                    <prop type="object" name="parameters">
                      <prop type="object" name="amlWorkspaceId" cls="WorkspaceCustomStringParameter_read">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" required="True"/>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customPrivateSubnetName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customPublicSubnetName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="customVirtualNetworkId"/>
                      <prop type="object" name="enableNoPublicIp" cls="WorkspaceCustomBooleanParameter_read">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="value" required="True"/>
                      </prop>
                      <prop type="object" name="encryption">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="value">
                          <prop type="string" name="KeyName"/>
                          <prop type="string" name="keySource">
                            <default value="&quot;Default&quot;"/>
                            <enum>
                              <item value="&quot;Default&quot;"/>
                              <item value="&quot;Microsoft.Keyvault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="keyvaulturi"/>
                          <prop type="string" name="keyversion"/>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="loadBalancerBackendPoolName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="loadBalancerId"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="natGatewayName"/>
                      <prop type="@WorkspaceCustomBooleanParameter_read" name="prepareEncryption"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="publicIpName"/>
                      <prop type="@WorkspaceCustomBooleanParameter_read" name="requireInfrastructureEncryption"/>
                      <prop type="object" name="resourceTags">
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;Bool&quot;"/>
                            <item value="&quot;Object&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@WorkspaceCustomStringParameter_read" name="storageAccountName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="storageAccountSkuName"/>
                      <prop type="@WorkspaceCustomStringParameter_read" name="vnetAddressPrefix"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Databricks/workspaces/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" required="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status" required="True">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="requiredNsgRules">
                      <enum>
                        <item value="&quot;AllRules&quot;"/>
                        <item value="&quot;NoAzureDatabricksRules&quot;"/>
                        <item value="&quot;NoAzureServiceRules&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="storageAccountIdentity" cls="ManagedIdentityConfiguration_read">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop readOnly="True" type="string" name="type"/>
                    </prop>
                    <prop type="string" name="uiDefinitionUri"/>
                    <prop type="@CreatedBy_read" name="updatedBy"/>
                    <prop readOnly="True" type="string" name="workspaceId"/>
                    <prop readOnly="True" type="string" name="workspaceUrl"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="array<object>" name="authorizations" arg="$parameters.properties.authorizations">
                  <item type="object">
                    <prop type="uuid" name="principalId" arg="$parameters.properties.authorizations[].principalId" required="True"/>
                    <prop type="uuid" name="roleDefinitionId" arg="$parameters.properties.authorizations[].roleDefinitionId" required="True"/>
                  </item>
                </prop>
                <prop type="object" name="encryption">
                  <prop type="object" name="entities" required="True">
                    <prop type="object" name="managedDisk">
                      <prop type="string" name="keySource" arg="$parameters.properties.encryption.entities.managedDisk.keySource" required="True">
                        <enum>
                          <item value="&quot;Microsoft.Keyvault&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="keyVaultProperties" required="True">
                        <prop type="string" name="keyName" arg="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyName" required="True"/>
                        <prop type="string" name="keyVaultUri" arg="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVaultUri" required="True"/>
                        <prop type="string" name="keyVersion" arg="$parameters.properties.encryption.entities.managedDisk.keyVaultProperties.keyVersion" required="True"/>
                      </prop>
                      <prop type="boolean" name="rotationToLatestKeyVersionEnabled" arg="$parameters.properties.encryption.entities.managedDisk.rotationToLatestKeyVersionEnabled"/>
                    </prop>
                    <prop type="object" name="managedServices">
                      <prop type="string" name="keySource" arg="$parameters.properties.encryption.entities.managedServices.keySource" required="True">
                        <enum>
                          <item value="&quot;Microsoft.Keyvault&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="keyVaultProperties">
                        <prop type="string" name="keyName" arg="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyName" required="True"/>
                        <prop type="string" name="keyVaultUri" arg="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVaultUri" required="True"/>
                        <prop type="string" name="keyVersion" arg="$parameters.properties.encryption.entities.managedServices.keyVaultProperties.keyVersion" required="True"/>
                      </prop>
                    </prop>
                  </prop>
                </prop>
                <prop type="string" name="managedResourceGroupId" arg="$parameters.properties.managedResourceGroupId" required="True"/>
                <prop type="object" name="parameters">
                  <prop type="object" name="amlWorkspaceId" arg="$parameters.properties.parameters.amlWorkspaceId" cls="WorkspaceCustomStringParameter_update">
                    <prop type="string" name="value" arg="@WorkspaceCustomStringParameter_update.value" required="True"/>
                  </prop>
                  <prop type="@WorkspaceCustomStringParameter_update" name="customPrivateSubnetName" arg="$parameters.properties.parameters.customPrivateSubnetName"/>
                  <prop type="@WorkspaceCustomStringParameter_update" name="customPublicSubnetName" arg="$parameters.properties.parameters.customPublicSubnetName"/>
                  <prop type="@WorkspaceCustomStringParameter_update" name="customVirtualNetworkId" arg="$parameters.properties.parameters.customVirtualNetworkId"/>
                  <prop type="object" name="enableNoPublicIp">
                    <prop type="boolean" name="value" arg="$parameters.properties.parameters.enableNoPublicIp.value" required="True"/>
                  </prop>
                  <prop type="object" name="encryption">
                    <prop type="object" name="value">
                      <prop type="string" name="KeyName" arg="$parameters.properties.parameters.encryption.value.KeyName"/>
                      <prop type="string" name="keySource" arg="$parameters.properties.parameters.encryption.value.keySource">
                        <default value="&quot;Default&quot;"/>
                        <enum>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Microsoft.Keyvault&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="keyvaulturi" arg="$parameters.properties.parameters.encryption.value.keyvaulturi"/>
                      <prop type="string" name="keyversion" arg="$parameters.properties.parameters.encryption.value.keyversion"/>
                    </prop>
                  </prop>
                  <prop type="@WorkspaceCustomStringParameter_update" name="loadBalancerBackendPoolName" arg="$parameters.properties.parameters.loadBalancerBackendPoolName"/>
                  <prop type="@WorkspaceCustomStringParameter_update" name="loadBalancerId" arg="$parameters.properties.parameters.loadBalancerId"/>
                  <prop type="@WorkspaceCustomStringParameter_update" name="natGatewayName" arg="$parameters.properties.parameters.natGatewayName"/>
                  <prop type="object" name="prepareEncryption">
                    <prop type="boolean" name="value" arg="$parameters.properties.parameters.prepareEncryption.value" required="True"/>
                  </prop>
                  <prop type="@WorkspaceCustomStringParameter_update" name="publicIpName" arg="$parameters.properties.parameters.publicIpName"/>
                  <prop type="object" name="requireInfrastructureEncryption" arg="$parameters.properties.parameters.requireInfrastructureEncryption" cls="WorkspaceCustomBooleanParameter_update">
                    <prop type="boolean" name="value" arg="@WorkspaceCustomBooleanParameter_update.value" required="True"/>
                  </prop>
                  <prop type="@WorkspaceCustomStringParameter_update" name="storageAccountName" arg="$parameters.properties.parameters.storageAccountName"/>
                  <prop type="object" name="storageAccountSkuName">
                    <prop type="string" name="value" arg="$parameters.properties.parameters.storageAccountSkuName.value" required="True"/>
                  </prop>
                  <prop type="@WorkspaceCustomStringParameter_update" name="vnetAddressPrefix" arg="$parameters.properties.parameters.vnetAddressPrefix"/>
                </prop>
                <prop type="string" name="publicNetworkAccess" arg="$parameters.properties.publicNetworkAccess">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="requiredNsgRules" arg="$parameters.properties.requiredNsgRules">
                  <enum>
                    <item value="&quot;AllRules&quot;"/>
                    <item value="&quot;NoAzureDatabricksRules&quot;"/>
                    <item value="&quot;NoAzureServiceRules&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="uiDefinitionUri" arg="$parameters.properties.uiDefinitionUri"/>
              </prop>
              <prop type="object" name="sku">
                <prop type="string" name="name" arg="$parameters.sku.name" required="True"/>
                <prop type="string" name="tier" arg="$parameters.sku.tier"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Workspaces_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Workspace_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
