<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
  <commandGroup name="afd profile">
    <command name="show" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Profiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
          <request method="get">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="kind"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="extendedProperties">
                      <additionalProp readOnly="True">
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="frontDoorId"/>
                    <prop type="object" name="logScrubbing">
                      <prop type="array<object>" name="scrubbingRules">
                        <item type="object">
                          <prop type="string" name="matchVariable" required="True">
                            <enum>
                              <item value="&quot;QueryStringArgNames&quot;"/>
                              <item value="&quot;RequestIPAddress&quot;"/>
                              <item value="&quot;RequestUri&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="selector"/>
                          <prop type="string" name="selectorMatchOperator" required="True">
                            <enum>
                              <item value="&quot;EqualsAny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="originResponseTimeoutSeconds">
                      <format minimum="16"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;AbortingMigration&quot;"/>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;CommittingMigration&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Migrated&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;PendingMigrationCommit&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;Custom_Verizon&quot;"/>
                        <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                        <item value="&quot;Premium_Verizon&quot;"/>
                        <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Akamai&quot;"/>
                        <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                        <item value="&quot;Standard_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Microsoft&quot;"/>
                        <item value="&quot;Standard_Verizon&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-02-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Profiles_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
          <request method="delete">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Profile">
        <arg type="object" var="$profile.identity" options="identity" group="Profile">
          <help short="Managed service identity (system assigned and/or user assigned identities)."/>
          <arg type="string" var="$profile.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$profile.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$profile.location" options="location l" required="True" group="Profile">
          <help short="Resource location."/>
        </arg>
        <arg type="object" var="$profile.tags" options="tags" group="Profile">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$profile.properties.logScrubbing" options="log-scrubbing" group="Properties">
          <help short="Defines rules that scrub sensitive fields in the Azure Front Door profile logs."/>
          <arg type="array<object>" var="$profile.properties.logScrubbing.scrubbingRules" options="scrubbing-rules">
            <help short="List of log scrubbing rules applied to the Azure Front Door profile logs."/>
            <item type="object">
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" options="match-variable" required="True">
                <help short="The variable to be scrubbed from the logs."/>
                <enum>
                  <item name="QueryStringArgNames" value="&quot;QueryStringArgNames&quot;"/>
                  <item name="RequestIPAddress" value="&quot;RequestIPAddress&quot;"/>
                  <item name="RequestUri" value="&quot;RequestUri&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selector" options="selector">
                <help short="When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to."/>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" options="selector-match-operator" required="True">
                <help short="When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to."/>
                <enum>
                  <item name="EqualsAny" value="&quot;EqualsAny&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].state" options="state">
                <help short="Defines the state of a log scrubbing rule. Default value is enabled."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$profile.properties.logScrubbing.state" options="state">
            <help short="State of the log scrubbing config. Default value is Enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="integer32" var="$profile.properties.originResponseTimeoutSeconds" options="origin-response-timeout-seconds" group="Properties">
          <help short="Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns."/>
          <format minimum="16"/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="string" var="$profile.sku.name" options="sku" group="Sku">
          <help short="Name of the pricing tier."/>
          <enum>
            <item name="Custom_Verizon" value="&quot;Custom_Verizon&quot;"/>
            <item name="Premium_AzureFrontDoor" value="&quot;Premium_AzureFrontDoor&quot;"/>
            <item name="Premium_Verizon" value="&quot;Premium_Verizon&quot;"/>
            <item name="StandardPlus_955BandWidth_ChinaCdn" value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
            <item name="StandardPlus_AvgBandWidth_ChinaCdn" value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
            <item name="StandardPlus_ChinaCdn" value="&quot;StandardPlus_ChinaCdn&quot;"/>
            <item name="Standard_955BandWidth_ChinaCdn" value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
            <item name="Standard_Akamai" value="&quot;Standard_Akamai&quot;"/>
            <item name="Standard_AvgBandWidth_ChinaCdn" value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
            <item name="Standard_AzureFrontDoor" value="&quot;Standard_AzureFrontDoor&quot;"/>
            <item name="Standard_ChinaCdn" value="&quot;Standard_ChinaCdn&quot;"/>
            <item name="Standard_Microsoft" value="&quot;Standard_Microsoft&quot;"/>
            <item name="Standard_Verizon" value="&quot;Standard_Verizon&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Profiles_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
          <request method="put">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="profile" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$profile.identity">
                    <prop type="string" name="type" arg="$profile.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$profile.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$profile.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="logScrubbing" arg="$profile.properties.logScrubbing">
                      <prop type="array<object>" name="scrubbingRules" arg="$profile.properties.logScrubbing.scrubbingRules">
                        <item type="object">
                          <prop type="string" name="matchVariable" arg="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" required="True">
                            <enum>
                              <item value="&quot;QueryStringArgNames&quot;"/>
                              <item value="&quot;RequestIPAddress&quot;"/>
                              <item value="&quot;RequestUri&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="selector" arg="$profile.properties.logScrubbing.scrubbingRules[].selector"/>
                          <prop type="string" name="selectorMatchOperator" arg="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" required="True">
                            <enum>
                              <item value="&quot;EqualsAny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state" arg="$profile.properties.logScrubbing.scrubbingRules[].state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="state" arg="$profile.properties.logScrubbing.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="originResponseTimeoutSeconds" arg="$profile.properties.originResponseTimeoutSeconds">
                      <format minimum="16"/>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" arg="$profile.sku.name">
                      <enum>
                        <item value="&quot;Custom_Verizon&quot;"/>
                        <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                        <item value="&quot;Premium_Verizon&quot;"/>
                        <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Akamai&quot;"/>
                        <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                        <item value="&quot;Standard_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Microsoft&quot;"/>
                        <item value="&quot;Standard_Verizon&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$profile.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Profile_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="kind"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="extendedProperties">
                      <additionalProp readOnly="True">
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="frontDoorId"/>
                    <prop type="object" name="logScrubbing">
                      <prop type="array<object>" name="scrubbingRules">
                        <item type="object">
                          <prop type="string" name="matchVariable" required="True">
                            <enum>
                              <item value="&quot;QueryStringArgNames&quot;"/>
                              <item value="&quot;RequestIPAddress&quot;"/>
                              <item value="&quot;RequestUri&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="selector"/>
                          <prop type="string" name="selectorMatchOperator" required="True">
                            <enum>
                              <item value="&quot;EqualsAny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="originResponseTimeoutSeconds">
                      <format minimum="16"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;AbortingMigration&quot;"/>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;CommittingMigration&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Migrated&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;PendingMigrationCommit&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;Custom_Verizon&quot;"/>
                        <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                        <item value="&quot;Premium_Verizon&quot;"/>
                        <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Akamai&quot;"/>
                        <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                        <item value="&quot;Standard_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Microsoft&quot;"/>
                        <item value="&quot;Standard_Verizon&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Profile_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Profile">
        <arg nullable="True" type="object" var="$profile.identity" options="identity" group="Profile">
          <help short="Managed service identity (system assigned and/or user assigned identities)."/>
          <arg type="string" var="$profile.identity.type" options="type">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$profile.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$profile.location" options="location l" group="Profile">
          <help short="Resource location."/>
        </arg>
        <arg nullable="True" type="object" var="$profile.tags" options="tags" group="Profile">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$profile.properties.logScrubbing" options="log-scrubbing" group="Properties">
          <help short="Defines rules that scrub sensitive fields in the Azure Front Door profile logs."/>
          <arg nullable="True" type="array<object>" var="$profile.properties.logScrubbing.scrubbingRules" options="scrubbing-rules">
            <help short="List of log scrubbing rules applied to the Azure Front Door profile logs."/>
            <item nullable="True" type="object">
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" options="match-variable">
                <help short="The variable to be scrubbed from the logs."/>
                <enum>
                  <item name="QueryStringArgNames" value="&quot;QueryStringArgNames&quot;"/>
                  <item name="RequestIPAddress" value="&quot;RequestIPAddress&quot;"/>
                  <item name="RequestUri" value="&quot;RequestUri&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selector" options="selector">
                <help short="When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to."/>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" options="selector-match-operator">
                <help short="When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to."/>
                <enum>
                  <item name="EqualsAny" value="&quot;EqualsAny&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$profile.properties.logScrubbing.scrubbingRules[].state" options="state">
                <help short="Defines the state of a log scrubbing rule. Default value is enabled."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$profile.properties.logScrubbing.state" options="state">
            <help short="State of the log scrubbing config. Default value is Enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="integer32" var="$profile.properties.originResponseTimeoutSeconds" options="origin-response-timeout-seconds" group="Properties">
          <help short="Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns."/>
          <format minimum="16"/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg nullable="True" type="string" var="$profile.sku.name" options="sku" group="Sku">
          <help short="Name of the pricing tier."/>
          <enum>
            <item name="Custom_Verizon" value="&quot;Custom_Verizon&quot;"/>
            <item name="Premium_AzureFrontDoor" value="&quot;Premium_AzureFrontDoor&quot;"/>
            <item name="Premium_Verizon" value="&quot;Premium_Verizon&quot;"/>
            <item name="StandardPlus_955BandWidth_ChinaCdn" value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
            <item name="StandardPlus_AvgBandWidth_ChinaCdn" value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
            <item name="StandardPlus_ChinaCdn" value="&quot;StandardPlus_ChinaCdn&quot;"/>
            <item name="Standard_955BandWidth_ChinaCdn" value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
            <item name="Standard_Akamai" value="&quot;Standard_Akamai&quot;"/>
            <item name="Standard_AvgBandWidth_ChinaCdn" value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
            <item name="Standard_AzureFrontDoor" value="&quot;Standard_AzureFrontDoor&quot;"/>
            <item name="Standard_ChinaCdn" value="&quot;Standard_ChinaCdn&quot;"/>
            <item name="Standard_Microsoft" value="&quot;Standard_Microsoft&quot;"/>
            <item name="Standard_Verizon" value="&quot;Standard_Verizon&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Profiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
          <request method="get">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Profile_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="kind"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="extendedProperties">
                      <additionalProp readOnly="True">
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="frontDoorId"/>
                    <prop type="object" name="logScrubbing">
                      <prop type="array<object>" name="scrubbingRules">
                        <item type="object">
                          <prop type="string" name="matchVariable" required="True">
                            <enum>
                              <item value="&quot;QueryStringArgNames&quot;"/>
                              <item value="&quot;RequestIPAddress&quot;"/>
                              <item value="&quot;RequestUri&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="selector"/>
                          <prop type="string" name="selectorMatchOperator" required="True">
                            <enum>
                              <item value="&quot;EqualsAny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="originResponseTimeoutSeconds">
                      <format minimum="16"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;AbortingMigration&quot;"/>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;CommittingMigration&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Migrated&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;PendingMigrationCommit&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;Custom_Verizon&quot;"/>
                        <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                        <item value="&quot;Premium_Verizon&quot;"/>
                        <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Akamai&quot;"/>
                        <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                        <item value="&quot;Standard_ChinaCdn&quot;"/>
                        <item value="&quot;Standard_Microsoft&quot;"/>
                        <item value="&quot;Standard_Verizon&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="profile" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$profile.identity">
                <prop type="string" name="type" arg="$profile.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$profile.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$profile.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="logScrubbing" arg="$profile.properties.logScrubbing">
                  <prop type="array<object>" name="scrubbingRules" arg="$profile.properties.logScrubbing.scrubbingRules">
                    <item type="object">
                      <prop type="string" name="matchVariable" arg="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" required="True">
                        <enum>
                          <item value="&quot;QueryStringArgNames&quot;"/>
                          <item value="&quot;RequestIPAddress&quot;"/>
                          <item value="&quot;RequestUri&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="selector" arg="$profile.properties.logScrubbing.scrubbingRules[].selector"/>
                      <prop type="string" name="selectorMatchOperator" arg="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" required="True">
                        <enum>
                          <item value="&quot;EqualsAny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state" arg="$profile.properties.logScrubbing.scrubbingRules[].state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="state" arg="$profile.properties.logScrubbing.state">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="integer32" name="originResponseTimeoutSeconds" arg="$profile.properties.originResponseTimeoutSeconds">
                  <format minimum="16"/>
                </prop>
              </prop>
              <prop type="object" name="sku" required="True">
                <prop type="string" name="name" arg="$profile.sku.name">
                  <enum>
                    <item value="&quot;Custom_Verizon&quot;"/>
                    <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                    <item value="&quot;Premium_Verizon&quot;"/>
                    <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                    <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                    <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                    <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                    <item value="&quot;Standard_Akamai&quot;"/>
                    <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                    <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                    <item value="&quot;Standard_ChinaCdn&quot;"/>
                    <item value="&quot;Standard_Microsoft&quot;"/>
                    <item value="&quot;Standard_Verizon&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$profile.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Profiles_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
          <request method="put">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Profile_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Profile_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="log-scrubbing">
      <command name="create" version="2024-02-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" subresource="properties.logScrubbing" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
            <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Profile.properties.logScrubbing">
          <arg type="array<object>" var="$profile.properties.logScrubbing.scrubbingRules" options="scrubbing-rules" group="Profile.properties.logScrubbing">
            <help short="List of log scrubbing rules applied to the Azure Front Door profile logs."/>
            <item type="object">
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" options="match-variable" required="True">
                <help short="The variable to be scrubbed from the logs."/>
                <enum>
                  <item name="QueryStringArgNames" value="&quot;QueryStringArgNames&quot;"/>
                  <item name="RequestIPAddress" value="&quot;RequestIPAddress&quot;"/>
                  <item name="RequestUri" value="&quot;RequestUri&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selector" options="selector">
                <help short="When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to."/>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" options="selector-match-operator" required="True">
                <help short="When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to."/>
                <enum>
                  <item name="EqualsAny" value="&quot;EqualsAny&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].state" options="state">
                <help short="Defines the state of a log scrubbing rule. Default value is enabled."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$profile.properties.logScrubbing.state" options="state" group="Profile.properties.logScrubbing">
            <help short="State of the log scrubbing config. Default value is Enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="profile">
            <prop type="object" name="properties.logScrubbing"/>
          </json>
        </subresourceSelector>
        <operation operationId="Profiles_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="get">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Profile_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="kind"/>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="object" name="extendedProperties">
                        <additionalProp readOnly="True">
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="frontDoorId"/>
                      <prop type="object" name="logScrubbing">
                        <prop type="array<object>" name="scrubbingRules">
                          <item type="object">
                            <prop type="string" name="matchVariable" required="True">
                              <enum>
                                <item value="&quot;QueryStringArgNames&quot;"/>
                                <item value="&quot;RequestIPAddress&quot;"/>
                                <item value="&quot;RequestUri&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="selector"/>
                            <prop type="string" name="selectorMatchOperator" required="True">
                              <enum>
                                <item value="&quot;EqualsAny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="originResponseTimeoutSeconds">
                        <format minimum="16"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceState">
                        <enum>
                          <item value="&quot;AbortingMigration&quot;"/>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;CommittingMigration&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Migrated&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;PendingMigrationCommit&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Custom_Verizon&quot;"/>
                          <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                          <item value="&quot;Premium_Verizon&quot;"/>
                          <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Akamai&quot;"/>
                          <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                          <item value="&quot;Standard_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Microsoft&quot;"/>
                          <item value="&quot;Standard_Verizon&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="profile.properties.logScrubbing" required="True">
                <prop type="array<object>" name="scrubbingRules" arg="$profile.properties.logScrubbing.scrubbingRules">
                  <item type="object">
                    <prop type="string" name="matchVariable" arg="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" required="True">
                      <enum>
                        <item value="&quot;QueryStringArgNames&quot;"/>
                        <item value="&quot;RequestIPAddress&quot;"/>
                        <item value="&quot;RequestUri&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="selector" arg="$profile.properties.logScrubbing.scrubbingRules[].selector"/>
                    <prop type="string" name="selectorMatchOperator" arg="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" required="True">
                      <enum>
                        <item value="&quot;EqualsAny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="state" arg="$profile.properties.logScrubbing.scrubbingRules[].state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="state" arg="$profile.properties.logScrubbing.state">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="Profiles_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="put">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Profile_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202">
              <header>
                <item name="location"/>
              </header>
              <body>
                <json var="$Instance">
                  <schema type="@Profile_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2024-02-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" subresource="properties.logScrubbing" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
            <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Profile.properties.logScrubbing">
          <arg nullable="True" type="array<object>" var="$profile.properties.logScrubbing.scrubbingRules" options="scrubbing-rules" group="Profile.properties.logScrubbing">
            <help short="List of log scrubbing rules applied to the Azure Front Door profile logs."/>
            <item nullable="True" type="object">
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" options="match-variable">
                <help short="The variable to be scrubbed from the logs."/>
                <enum>
                  <item name="QueryStringArgNames" value="&quot;QueryStringArgNames&quot;"/>
                  <item name="RequestIPAddress" value="&quot;RequestIPAddress&quot;"/>
                  <item name="RequestUri" value="&quot;RequestUri&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selector" options="selector">
                <help short="When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to."/>
              </arg>
              <arg type="string" var="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" options="selector-match-operator">
                <help short="When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to."/>
                <enum>
                  <item name="EqualsAny" value="&quot;EqualsAny&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$profile.properties.logScrubbing.scrubbingRules[].state" options="state">
                <help short="Defines the state of a log scrubbing rule. Default value is enabled."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$profile.properties.logScrubbing.state" options="state" group="Profile.properties.logScrubbing">
            <help short="State of the log scrubbing config. Default value is Enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="profile">
            <prop type="object" name="properties.logScrubbing"/>
          </json>
        </subresourceSelector>
        <operation operationId="Profiles_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="get">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Profile_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="kind"/>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="object" name="extendedProperties">
                        <additionalProp readOnly="True">
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="frontDoorId"/>
                      <prop type="object" name="logScrubbing">
                        <prop type="array<object>" name="scrubbingRules">
                          <item type="object">
                            <prop type="string" name="matchVariable" required="True">
                              <enum>
                                <item value="&quot;QueryStringArgNames&quot;"/>
                                <item value="&quot;RequestIPAddress&quot;"/>
                                <item value="&quot;RequestUri&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="selector"/>
                            <prop type="string" name="selectorMatchOperator" required="True">
                              <enum>
                                <item value="&quot;EqualsAny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="originResponseTimeoutSeconds">
                        <format minimum="16"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceState">
                        <enum>
                          <item value="&quot;AbortingMigration&quot;"/>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;CommittingMigration&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Migrated&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;PendingMigrationCommit&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Custom_Verizon&quot;"/>
                          <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                          <item value="&quot;Premium_Verizon&quot;"/>
                          <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Akamai&quot;"/>
                          <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                          <item value="&quot;Standard_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Microsoft&quot;"/>
                          <item value="&quot;Standard_Verizon&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="profile.properties.logScrubbing" required="True">
                <prop type="array<object>" name="scrubbingRules" arg="$profile.properties.logScrubbing.scrubbingRules">
                  <item type="object">
                    <prop type="string" name="matchVariable" arg="$profile.properties.logScrubbing.scrubbingRules[].matchVariable" required="True">
                      <enum>
                        <item value="&quot;QueryStringArgNames&quot;"/>
                        <item value="&quot;RequestIPAddress&quot;"/>
                        <item value="&quot;RequestUri&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="selector" arg="$profile.properties.logScrubbing.scrubbingRules[].selector"/>
                    <prop type="string" name="selectorMatchOperator" arg="$profile.properties.logScrubbing.scrubbingRules[].selectorMatchOperator" required="True">
                      <enum>
                        <item value="&quot;EqualsAny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="state" arg="$profile.properties.logScrubbing.scrubbingRules[].state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="state" arg="$profile.properties.logScrubbing.state">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="Profiles_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="put">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Profile_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202">
              <header>
                <item name="location"/>
              </header>
              <body>
                <json var="$Instance">
                  <schema type="@Profile_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2024-02-01" confirmation="Are you sure you want to perform this operation?">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" subresource="properties.logScrubbing" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
            <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="profile">
            <prop type="object" name="properties.logScrubbing"/>
          </json>
        </subresourceSelector>
        <operation operationId="Profiles_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="get">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Profile_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="kind"/>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="object" name="extendedProperties">
                        <additionalProp readOnly="True">
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="frontDoorId"/>
                      <prop type="object" name="logScrubbing">
                        <prop type="array<object>" name="scrubbingRules">
                          <item type="object">
                            <prop type="string" name="matchVariable" required="True">
                              <enum>
                                <item value="&quot;QueryStringArgNames&quot;"/>
                                <item value="&quot;RequestIPAddress&quot;"/>
                                <item value="&quot;RequestUri&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="selector"/>
                            <prop type="string" name="selectorMatchOperator" required="True">
                              <enum>
                                <item value="&quot;EqualsAny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="originResponseTimeoutSeconds">
                        <format minimum="16"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceState">
                        <enum>
                          <item value="&quot;AbortingMigration&quot;"/>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;CommittingMigration&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Migrated&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;PendingMigrationCommit&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Custom_Verizon&quot;"/>
                          <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                          <item value="&quot;Premium_Verizon&quot;"/>
                          <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Akamai&quot;"/>
                          <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                          <item value="&quot;Standard_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Microsoft&quot;"/>
                          <item value="&quot;Standard_Verizon&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="Profiles_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="put">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Profile_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202">
              <header>
                <item name="location"/>
              </header>
              <body>
                <json var="$Instance">
                  <schema type="@Profile_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2024-02-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}" version="2024-02-01" subresource="properties.logScrubbing" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
            <help short="Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="profile">
            <prop type="object" name="properties.logScrubbing"/>
          </json>
        </subresourceSelector>
        <operation operationId="Profiles_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}">
            <request method="get">
              <path>
                <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-02-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Profile_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="kind"/>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="object" name="extendedProperties">
                        <additionalProp readOnly="True">
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="frontDoorId"/>
                      <prop type="object" name="logScrubbing">
                        <prop type="array<object>" name="scrubbingRules">
                          <item type="object">
                            <prop type="string" name="matchVariable" required="True">
                              <enum>
                                <item value="&quot;QueryStringArgNames&quot;"/>
                                <item value="&quot;RequestIPAddress&quot;"/>
                                <item value="&quot;RequestUri&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="selector"/>
                            <prop type="string" name="selectorMatchOperator" required="True">
                              <enum>
                                <item value="&quot;EqualsAny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="originResponseTimeoutSeconds">
                        <format minimum="16"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceState">
                        <enum>
                          <item value="&quot;AbortingMigration&quot;"/>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;CommittingMigration&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Migrated&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;PendingMigrationCommit&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Custom_Verizon&quot;"/>
                          <item value="&quot;Premium_AzureFrontDoor&quot;"/>
                          <item value="&quot;Premium_Verizon&quot;"/>
                          <item value="&quot;StandardPlus_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;StandardPlus_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_955BandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Akamai&quot;"/>
                          <item value="&quot;Standard_AvgBandWidth_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_AzureFrontDoor&quot;"/>
                          <item value="&quot;Standard_ChinaCdn&quot;"/>
                          <item value="&quot;Standard_Microsoft&quot;"/>
                          <item value="&quot;Standard_Verizon&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;application&quot;"/>
                          <item value="&quot;key&quot;"/>
                          <item value="&quot;managedIdentity&quot;"/>
                          <item value="&quot;user&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
