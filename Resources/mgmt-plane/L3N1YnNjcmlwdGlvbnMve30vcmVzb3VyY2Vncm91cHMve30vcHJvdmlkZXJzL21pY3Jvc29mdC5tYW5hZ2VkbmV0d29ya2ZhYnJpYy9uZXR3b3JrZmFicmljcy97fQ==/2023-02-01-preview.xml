<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfQ==/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkfabric fabric">
    <command name="show" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfQ==/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabrics_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}">
          <request method="get">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation"/>
                    <prop type="integer32" name="fabricASN" required="True">
                      <format maximum="65535" minimum="1"/>
                    </prop>
                    <prop type="string" name="ipv4Prefix"/>
                    <prop type="string" name="ipv6Prefix"/>
                    <prop readOnly="True" type="array<string>" name="l2IsolationDomains">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="l3IsolationDomains">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="managementNetworkConfiguration" required="True">
                      <prop type="object" name="infrastructureVpnConfiguration" required="True" cls="VpnConfigurationProperties_read">
                        <prop readOnly="True" type="string" name="administrativeState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="networkToNetworkInterconnectId"/>
                        <prop type="object" name="optionAProperties">
                          <prop type="object" name="bfdConfiguration">
                            <prop readOnly="True" type="integer32" name="interval"/>
                            <prop readOnly="True" type="integer32" name="multiplier"/>
                          </prop>
                          <prop type="integer32" name="mtu">
                            <default value="1500"/>
                            <format maximum="9000" minimum="1500"/>
                          </prop>
                          <prop type="integer32" name="peerASN">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="string" name="primaryIpv4Prefix"/>
                          <prop type="string" name="primaryIpv6Prefix"/>
                          <prop type="string" name="secondaryIpv4Prefix"/>
                          <prop type="string" name="secondaryIpv6Prefix"/>
                          <prop type="integer32" name="vlanId">
                            <format maximum="4095" minimum="501"/>
                          </prop>
                        </prop>
                        <prop type="object" name="optionBProperties">
                          <prop type="array<string>" name="exportRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="importRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="peeringOption" required="True">
                          <enum>
                            <item value="&quot;OptionA&quot;"/>
                            <item value="&quot;OptionB&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@VpnConfigurationProperties_read" name="workloadVpnConfiguration" required="True"/>
                    </prop>
                    <prop type="string" name="networkFabricControllerId" required="True"/>
                    <prop type="string" name="networkFabricSku" required="True"/>
                    <prop readOnly="True" type="string" name="operationalState">
                      <enum>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="rackCount" required="True">
                      <format maximum="8" minimum="2"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="racks">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="routerId"/>
                    <prop type="integer32" name="serverCountPerRack" required="True">
                      <format maximum="16" minimum="1"/>
                    </prop>
                    <prop type="object" name="terminalServerConfiguration" required="True">
                      <prop readOnly="True" type="string" name="networkDeviceId"/>
                      <prop type="string" name="password" required="True" secret="True"/>
                      <prop type="string" name="primaryIpv4Prefix" required="True"/>
                      <prop type="string" name="primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix" required="True"/>
                      <prop type="string" name="secondaryIpv6Prefix"/>
                      <prop type="string" name="serialNumber"/>
                      <prop type="string" name="username" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfQ==/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabrics_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}">
          <request method="delete">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfQ==/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="Location of Azure region"/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Switch configuration description."/>
        </arg>
        <arg type="integer32" var="$body.properties.fabricASN" options="fabric-asn" group="Properties">
          <help short="ASN of CE devices for CE/PE connectivity. The value should be between 1 to 65535. Example : 65123"/>
          <format maximum="65535" minimum="1"/>
        </arg>
        <arg type="string" var="$body.properties.ipv4Prefix" options="ipv4-prefix" group="Properties">
          <help short="IPv4Prefix for Management Network. Example : 10.1.0.0/19."/>
        </arg>
        <arg type="string" var="$body.properties.ipv6Prefix" options="ipv6-prefix" group="Properties">
          <help short="IPv6Prefix for Management Network. Example : 3FFE:FFFF:0:CD40::/59."/>
        </arg>
        <arg type="object" var="$body.properties.managementNetworkConfiguration" options="managed-network-config" group="Properties">
          <help short="Configuration to be used to setup the management network."/>
          <arg type="object" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration" options="infrastructure-vpn-configuration" required="True">
            <help short="Configuration for infrastructure vpn."/>
            <arg type="object" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties" options="option-a-properties" group="">
              <help short="Peering option A properties."/>
              <arg type="integer32" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.mtu" options="mtu" group="">
                <help short="MTU to use for option A peering."/>
                <format maximum="9000" minimum="1500"/>
              </arg>
              <arg type="integer32" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.peerASN" options="peer-asn">
                <help short="Peer ASN number.Example : 28"/>
                <format maximum="65535" minimum="1"/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.primaryIpv4Prefix" options="primary-ipv4-prefix">
                <help short="IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.primaryIpv6Prefix" options="primary-ipv6-prefix">
                <help short="IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.secondaryIpv4Prefix" options="secondary-ipv4-prefix">
                <help short="Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.secondaryIpv6Prefix" options="secondary-ipv6-prefix">
                <help short="Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="integer32" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.vlanId" options="vlan-id">
                <help short="Vlan identifier. Example : 501"/>
                <format maximum="4095" minimum="501"/>
              </arg>
            </arg>
            <arg type="object" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionBProperties" options="option-b-properties" group="">
              <help short="Option B configuration to be used for management vpn."/>
              <arg type="array<string>" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionBProperties.exportRouteTargets" options="export-route-targets" required="True">
                <help short="Route Targets to be applied for outgoing routes from CE."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionBProperties.importRouteTargets" options="import-route-targets" required="True">
                <help short="Route Targets to be applied for incoming routes into CE."/>
                <item type="string"/>
              </arg>
            </arg>
            <arg type="string" var="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.peeringOption" options="peering-option" required="True" group="">
              <help short="Peering option list."/>
              <enum>
                <item name="OptionA" value="&quot;OptionA&quot;"/>
                <item name="OptionB" value="&quot;OptionB&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration" options="workload-vpn-configuration" required="True">
            <help short="Configuration for workload vpn."/>
            <arg type="object" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties" options="option-a-properties" group="">
              <help short="Peering option A properties."/>
              <arg type="integer32" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.mtu" options="mtu" group="">
                <help short="MTU to use for option A peering."/>
                <format maximum="9000" minimum="1500"/>
              </arg>
              <arg type="integer32" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.peerASN" options="peer-asn">
                <help short="Peer ASN number.Example : 28"/>
                <format maximum="65535" minimum="1"/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.primaryIpv4Prefix" options="primary-ipv4-prefix">
                <help short="IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.primaryIpv6Prefix" options="primary-ipv6-prefix">
                <help short="IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.secondaryIpv4Prefix" options="secondary-ipv4-prefix">
                <help short="Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="string" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.secondaryIpv6Prefix" options="secondary-ipv6-prefix">
                <help short="Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces."/>
              </arg>
              <arg type="integer32" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.vlanId" options="vlan-id">
                <help short="Vlan identifier. Example : 501"/>
                <format maximum="4095" minimum="501"/>
              </arg>
            </arg>
            <arg type="object" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionBProperties" options="option-b-properties" group="">
              <help short="Option B configuration to be used for management vpn."/>
              <arg type="array<string>" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionBProperties.exportRouteTargets" options="export-route-targets" required="True">
                <help short="Route Targets to be applied for outgoing routes from CE."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionBProperties.importRouteTargets" options="import-route-targets" required="True">
                <help short="Route Targets to be applied for incoming routes into CE."/>
                <item type="string"/>
              </arg>
            </arg>
            <arg type="string" var="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.peeringOption" options="peering-option" required="True" group="">
              <help short="Peering option list."/>
              <enum>
                <item name="OptionA" value="&quot;OptionA&quot;"/>
                <item name="OptionB" value="&quot;OptionB&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.networkFabricControllerId" options="nfc-id" group="Properties">
          <help short="Network Fabric Controller ARM resource id"/>
        </arg>
        <arg type="string" var="$body.properties.networkFabricSku" options="nf-sku" group="Properties">
          <help short="Fabric SKU id based on the SKU of the BoM that was ordered"/>
        </arg>
        <arg type="integer32" var="$body.properties.rackCount" options="rack-count" group="Properties">
          <help short="Number of racks associated to Network Fabric.Possible values are from 2-8."/>
          <format maximum="8" minimum="2"/>
        </arg>
        <arg type="integer32" var="$body.properties.serverCountPerRack" options="server-count-per-rack" group="Properties">
          <help short="Number of servers.Possible values are from 1-16."/>
          <format maximum="16" minimum="1"/>
        </arg>
        <arg type="object" var="$body.properties.terminalServerConfiguration" options="ts-config" group="Properties">
          <help short="Network and credentials configuration currently applied to terminal server."/>
          <arg type="string" var="$body.properties.terminalServerConfiguration.password" options="password" required="True" group="">
            <help short="Password of terminal server."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.primaryIpv4Prefix" options="primary-ipv4-prefix" required="True" group="">
            <help short="IPv4 Address Prefix of CE-PE interconnect links. Example : 172.31.0.0/31."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.primaryIpv6Prefix" options="primary-ipv6-prefix" group="">
            <help short="IPv6 Address Prefix of CE-PE interconnect links. Example : 3FFE:FFFF:0:CD30::a0/126."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.secondaryIpv4Prefix" options="secondary-ipv4-prefix" required="True" group="">
            <help short="Secondary IPv4 Address Prefix of CE-PE interconnect links. Example : 172.31.0.20/31."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.secondaryIpv6Prefix" options="secondary-ipv6-prefix" group="">
            <help short="Secondary IPv6 Address Prefix of CE-PE interconnect links. Example : 3FFE:FFFF:0:CD30::a4/126."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.serialNumber" options="serial-number">
            <help short="Serial Number of Terminal server."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.username" options="username" required="True" group="">
            <help short="Username of terminal server."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabrics_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}">
          <request method="put">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="integer32" name="fabricASN" arg="$body.properties.fabricASN" required="True">
                      <format maximum="65535" minimum="1"/>
                    </prop>
                    <prop type="string" name="ipv4Prefix" arg="$body.properties.ipv4Prefix"/>
                    <prop type="string" name="ipv6Prefix" arg="$body.properties.ipv6Prefix"/>
                    <prop type="object" name="managementNetworkConfiguration" arg="$body.properties.managementNetworkConfiguration" required="True">
                      <prop type="object" name="infrastructureVpnConfiguration" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration" required="True">
                        <prop type="object" name="optionAProperties" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties">
                          <prop type="integer32" name="mtu" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.mtu">
                            <default value="1500"/>
                            <format maximum="9000" minimum="1500"/>
                          </prop>
                          <prop type="integer32" name="peerASN" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.peerASN">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="string" name="primaryIpv4Prefix" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.primaryIpv4Prefix"/>
                          <prop type="string" name="primaryIpv6Prefix" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.primaryIpv6Prefix"/>
                          <prop type="string" name="secondaryIpv4Prefix" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.secondaryIpv4Prefix"/>
                          <prop type="string" name="secondaryIpv6Prefix" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.secondaryIpv6Prefix"/>
                          <prop type="integer32" name="vlanId" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionAProperties.vlanId">
                            <format maximum="4095" minimum="501"/>
                          </prop>
                        </prop>
                        <prop type="object" name="optionBProperties" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionBProperties">
                          <prop type="array<string>" name="exportRouteTargets" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionBProperties.exportRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="importRouteTargets" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.optionBProperties.importRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="peeringOption" arg="$body.properties.managementNetworkConfiguration.infrastructureVpnConfiguration.peeringOption" required="True">
                          <enum>
                            <item value="&quot;OptionA&quot;"/>
                            <item value="&quot;OptionB&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="workloadVpnConfiguration" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration" required="True">
                        <prop type="object" name="optionAProperties" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties">
                          <prop type="integer32" name="mtu" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.mtu">
                            <default value="1500"/>
                            <format maximum="9000" minimum="1500"/>
                          </prop>
                          <prop type="integer32" name="peerASN" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.peerASN">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="string" name="primaryIpv4Prefix" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.primaryIpv4Prefix"/>
                          <prop type="string" name="primaryIpv6Prefix" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.primaryIpv6Prefix"/>
                          <prop type="string" name="secondaryIpv4Prefix" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.secondaryIpv4Prefix"/>
                          <prop type="string" name="secondaryIpv6Prefix" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.secondaryIpv6Prefix"/>
                          <prop type="integer32" name="vlanId" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionAProperties.vlanId">
                            <format maximum="4095" minimum="501"/>
                          </prop>
                        </prop>
                        <prop type="object" name="optionBProperties" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionBProperties">
                          <prop type="array<string>" name="exportRouteTargets" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionBProperties.exportRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="importRouteTargets" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.optionBProperties.importRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="peeringOption" arg="$body.properties.managementNetworkConfiguration.workloadVpnConfiguration.peeringOption" required="True">
                          <enum>
                            <item value="&quot;OptionA&quot;"/>
                            <item value="&quot;OptionB&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="networkFabricControllerId" arg="$body.properties.networkFabricControllerId" required="True"/>
                    <prop type="string" name="networkFabricSku" arg="$body.properties.networkFabricSku" required="True"/>
                    <prop type="integer32" name="rackCount" arg="$body.properties.rackCount" required="True">
                      <format maximum="8" minimum="2"/>
                    </prop>
                    <prop type="integer32" name="serverCountPerRack" arg="$body.properties.serverCountPerRack" required="True">
                      <format maximum="16" minimum="1"/>
                    </prop>
                    <prop type="object" name="terminalServerConfiguration" arg="$body.properties.terminalServerConfiguration" required="True">
                      <prop type="string" name="password" arg="$body.properties.terminalServerConfiguration.password" required="True" secret="True"/>
                      <prop type="string" name="primaryIpv4Prefix" arg="$body.properties.terminalServerConfiguration.primaryIpv4Prefix" required="True"/>
                      <prop type="string" name="primaryIpv6Prefix" arg="$body.properties.terminalServerConfiguration.primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix" arg="$body.properties.terminalServerConfiguration.secondaryIpv4Prefix" required="True"/>
                      <prop type="string" name="secondaryIpv6Prefix" arg="$body.properties.terminalServerConfiguration.secondaryIpv6Prefix"/>
                      <prop type="string" name="serialNumber" arg="$body.properties.terminalServerConfiguration.serialNumber"/>
                      <prop type="string" name="username" arg="$body.properties.terminalServerConfiguration.username" required="True"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation"/>
                    <prop type="integer32" name="fabricASN" required="True">
                      <format maximum="65535" minimum="1"/>
                    </prop>
                    <prop type="string" name="ipv4Prefix"/>
                    <prop type="string" name="ipv6Prefix"/>
                    <prop readOnly="True" type="array<string>" name="l2IsolationDomains">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="l3IsolationDomains">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="managementNetworkConfiguration" required="True">
                      <prop type="object" name="infrastructureVpnConfiguration" required="True" cls="VpnConfigurationProperties_read">
                        <prop readOnly="True" type="string" name="administrativeState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="networkToNetworkInterconnectId"/>
                        <prop type="object" name="optionAProperties">
                          <prop type="object" name="bfdConfiguration">
                            <prop readOnly="True" type="integer32" name="interval"/>
                            <prop readOnly="True" type="integer32" name="multiplier"/>
                          </prop>
                          <prop type="integer32" name="mtu">
                            <default value="1500"/>
                            <format maximum="9000" minimum="1500"/>
                          </prop>
                          <prop type="integer32" name="peerASN">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="string" name="primaryIpv4Prefix"/>
                          <prop type="string" name="primaryIpv6Prefix"/>
                          <prop type="string" name="secondaryIpv4Prefix"/>
                          <prop type="string" name="secondaryIpv6Prefix"/>
                          <prop type="integer32" name="vlanId">
                            <format maximum="4095" minimum="501"/>
                          </prop>
                        </prop>
                        <prop type="object" name="optionBProperties">
                          <prop type="array<string>" name="exportRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="importRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="peeringOption" required="True">
                          <enum>
                            <item value="&quot;OptionA&quot;"/>
                            <item value="&quot;OptionB&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@VpnConfigurationProperties_read" name="workloadVpnConfiguration" required="True"/>
                    </prop>
                    <prop type="string" name="networkFabricControllerId" required="True"/>
                    <prop type="string" name="networkFabricSku" required="True"/>
                    <prop readOnly="True" type="string" name="operationalState">
                      <enum>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="rackCount" required="True">
                      <format maximum="8" minimum="2"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="racks">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="routerId"/>
                    <prop type="integer32" name="serverCountPerRack" required="True">
                      <format maximum="16" minimum="1"/>
                    </prop>
                    <prop type="object" name="terminalServerConfiguration" required="True">
                      <prop readOnly="True" type="string" name="networkDeviceId"/>
                      <prop type="string" name="password" required="True" secret="True"/>
                      <prop type="string" name="primaryIpv4Prefix" required="True"/>
                      <prop type="string" name="primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix" required="True"/>
                      <prop type="string" name="secondaryIpv6Prefix"/>
                      <prop type="string" name="serialNumber"/>
                      <prop type="string" name="username" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-02-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfQ==/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Switch configuration description."/>
        </arg>
        <arg type="object" var="$body.properties.terminalServerConfiguration" options="terminal-server-configuration" group="Properties">
          <help short="Network and credentials configuration already applied to terminal server."/>
          <arg type="string" var="$body.properties.terminalServerConfiguration.password" options="password" group="">
            <help short="Password of terminal server."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.serialNumber" options="serial-number">
            <help short="Serial Number of Terminal server."/>
          </arg>
          <arg type="string" var="$body.properties.terminalServerConfiguration.username" options="username" group="">
            <help short="Username of terminal server."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabrics_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}">
          <request method="patch">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="object" name="terminalServerConfiguration" arg="$body.properties.terminalServerConfiguration">
                      <prop type="string" name="password" arg="$body.properties.terminalServerConfiguration.password" secret="True"/>
                      <prop type="string" name="serialNumber" arg="$body.properties.terminalServerConfiguration.serialNumber"/>
                      <prop type="string" name="username" arg="$body.properties.terminalServerConfiguration.username"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation"/>
                    <prop type="integer32" name="fabricASN" required="True">
                      <format maximum="65535" minimum="1"/>
                    </prop>
                    <prop type="string" name="ipv4Prefix"/>
                    <prop type="string" name="ipv6Prefix"/>
                    <prop readOnly="True" type="array<string>" name="l2IsolationDomains">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="l3IsolationDomains">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="managementNetworkConfiguration" required="True">
                      <prop type="object" name="infrastructureVpnConfiguration" required="True" cls="VpnConfigurationProperties_read">
                        <prop readOnly="True" type="string" name="administrativeState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="networkToNetworkInterconnectId"/>
                        <prop type="object" name="optionAProperties">
                          <prop type="object" name="bfdConfiguration">
                            <prop readOnly="True" type="integer32" name="interval"/>
                            <prop readOnly="True" type="integer32" name="multiplier"/>
                          </prop>
                          <prop type="integer32" name="mtu">
                            <default value="1500"/>
                            <format maximum="9000" minimum="1500"/>
                          </prop>
                          <prop type="integer32" name="peerASN">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="string" name="primaryIpv4Prefix"/>
                          <prop type="string" name="primaryIpv6Prefix"/>
                          <prop type="string" name="secondaryIpv4Prefix"/>
                          <prop type="string" name="secondaryIpv6Prefix"/>
                          <prop type="integer32" name="vlanId">
                            <format maximum="4095" minimum="501"/>
                          </prop>
                        </prop>
                        <prop type="object" name="optionBProperties">
                          <prop type="array<string>" name="exportRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="importRouteTargets" required="True">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="peeringOption" required="True">
                          <enum>
                            <item value="&quot;OptionA&quot;"/>
                            <item value="&quot;OptionB&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@VpnConfigurationProperties_read" name="workloadVpnConfiguration" required="True"/>
                    </prop>
                    <prop type="string" name="networkFabricControllerId" required="True"/>
                    <prop type="string" name="networkFabricSku" required="True"/>
                    <prop readOnly="True" type="string" name="operationalState">
                      <enum>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="rackCount" required="True">
                      <format maximum="8" minimum="2"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="racks">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="routerId"/>
                    <prop type="integer32" name="serverCountPerRack" required="True">
                      <format maximum="16" minimum="1"/>
                    </prop>
                    <prop type="object" name="terminalServerConfiguration" required="True">
                      <prop readOnly="True" type="string" name="networkDeviceId"/>
                      <prop type="string" name="password" required="True" secret="True"/>
                      <prop type="string" name="primaryIpv4Prefix" required="True"/>
                      <prop type="string" name="primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix" required="True"/>
                      <prop type="string" name="secondaryIpv6Prefix"/>
                      <prop type="string" name="serialNumber"/>
                      <prop type="string" name="username" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
