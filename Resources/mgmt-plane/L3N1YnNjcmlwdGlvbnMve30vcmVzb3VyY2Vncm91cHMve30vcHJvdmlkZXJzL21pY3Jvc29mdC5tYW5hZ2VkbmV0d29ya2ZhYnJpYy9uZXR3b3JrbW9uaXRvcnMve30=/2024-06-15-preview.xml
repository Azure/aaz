<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3JzL3tuZXR3b3JrTW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
  <commandGroup name="networkfabric networkmonitor">
    <command name="show" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3JzL3tuZXR3b3JrTW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkMonitorName" options="network-monitor-name name n" required="True" idPart="name">
          <help short="Name of the Network Monitor."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkMonitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{networkMonitorName}">
          <request method="get">
            <path>
              <param type="string" name="networkMonitorName" arg="$Path.networkMonitorName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                        <item value="&quot;UnderMaintenance&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop type="object" name="bmpConfiguration">
                      <prop type="string" name="exportPolicy">
                        <default value="&quot;All&quot;"/>
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Post-Policy&quot;"/>
                          <item value="&quot;Pre-Policy&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="monitoredAddressFamilies">
                        <default value="[&quot;All&quot;]"/>
                        <item type="string">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;ipv4Unicast&quot;"/>
                            <item value="&quot;ipv6Unicast&quot;"/>
                            <item value="&quot;vpnIpv4&quot;"/>
                            <item value="&quot;vpnIpv6&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<ResourceId>" name="monitoredNetworks">
                        <item type="ResourceId"/>
                      </prop>
                      <prop type="ResourceId" name="scopeResourceId"/>
                      <prop type="string" name="stationConfigurationState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="stationConnectionMode">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Passive&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="stationConnectionProperties">
                        <prop type="integer32" name="keepaliveIdleTime">
                          <default value="180"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeCount">
                          <default value="10"/>
                          <format maximum="100" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeInterval">
                          <default value="60"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                      </prop>
                      <prop type="string" name="stationIp"/>
                      <prop type="string" name="stationName"/>
                      <prop type="ResourceId" name="stationNetwork"/>
                      <prop type="integer32" name="stationPort">
                        <default value="5000"/>
                        <format maximum="65535" minimum="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="lastOperation">
                      <prop readOnly="True" type="string" name="details"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-06-15-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3JzL3tuZXR3b3JrTW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkMonitorName" options="network-monitor-name name n" required="True" idPart="name">
          <help short="Name of the Network Monitor."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkMonitors_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{networkMonitorName}">
          <request method="delete">
            <path>
              <param type="string" name="networkMonitorName" arg="$Path.networkMonitorName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3JzL3tuZXR3b3JrTW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkMonitorName" options="network-monitor-name name n" required="True" idPart="name">
          <help short="Name of the Network Monitor."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.annotation" options="annotation" group="Properties">
          <help short="Switch configuration description."/>
        </arg>
        <arg type="object" var="$resource.properties.bmpConfiguration" options="bmp-configuration" group="Properties">
          <help short="BMP Configurations for the Network Fabric."/>
          <arg type="string" var="$resource.properties.bmpConfiguration.exportPolicy" options="export-policy">
            <help short="Export Policy for the BMP Configuration."/>
            <default value="&quot;All&quot;"/>
            <enum>
              <item name="All" value="&quot;All&quot;"/>
              <item name="Post-Policy" value="&quot;Post-Policy&quot;"/>
              <item name="Pre-Policy" value="&quot;Pre-Policy&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$resource.properties.bmpConfiguration.monitoredAddressFamilies" options="monitored-address-families">
            <help short="Monitored Address Families for the BMP Configuration."/>
            <default value="[&quot;All&quot;]"/>
            <item type="string">
              <enum>
                <item name="All" value="&quot;All&quot;"/>
                <item name="ipv4Unicast" value="&quot;ipv4Unicast&quot;"/>
                <item name="ipv6Unicast" value="&quot;ipv6Unicast&quot;"/>
                <item name="vpnIpv4" value="&quot;vpnIpv4&quot;"/>
                <item name="vpnIpv6" value="&quot;vpnIpv6&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="array<ResourceId>" var="$resource.properties.bmpConfiguration.monitoredNetworks" options="monitored-networks">
            <help short="The List of Network ID's that need to be monitored."/>
            <item type="ResourceId"/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.bmpConfiguration.scopeResourceId" options="scope-resource-id">
            <help short="Scope resource ARM Identifier."/>
          </arg>
          <arg type="string" var="$resource.properties.bmpConfiguration.stationConfigurationState" options="station-configuration-state">
            <help short="Enabling a station. Either True/False."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.bmpConfiguration.stationConnectionMode" options="station-connection-mode">
            <help short="Station Connection Mode."/>
            <enum>
              <item name="Active" value="&quot;Active&quot;"/>
              <item name="Passive" value="&quot;Passive&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.properties.bmpConfiguration.stationConnectionProperties" options="station-connection-properties">
            <help short="Station Connection Properties."/>
            <arg type="integer32" var="$resource.properties.bmpConfiguration.stationConnectionProperties.keepaliveIdleTime" options="keepalive-idle-time">
              <help short="Connection keepalive idle time in seconds"/>
              <default value="180"/>
              <format maximum="3600" minimum="1"/>
            </arg>
            <arg type="integer32" var="$resource.properties.bmpConfiguration.stationConnectionProperties.probeCount" options="probe-count">
              <help short="Probe count, default value is 10"/>
              <default value="10"/>
              <format maximum="100" minimum="1"/>
            </arg>
            <arg type="integer32" var="$resource.properties.bmpConfiguration.stationConnectionProperties.probeInterval" options="probe-interval">
              <help short="Probe interval in seconds, default value is 60"/>
              <default value="60"/>
              <format maximum="3600" minimum="1"/>
            </arg>
          </arg>
          <arg type="string" var="$resource.properties.bmpConfiguration.stationIp" options="station-ip">
            <help short="IP Address of the station."/>
          </arg>
          <arg type="string" var="$resource.properties.bmpConfiguration.stationName" options="station-name">
            <help short="Name of the station."/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.bmpConfiguration.stationNetwork" options="station-network">
            <help short="Network of the station"/>
          </arg>
          <arg type="integer32" var="$resource.properties.bmpConfiguration.stationPort" options="station-port">
            <help short="Port of the station. Default value is 5000."/>
            <default value="5000"/>
            <format maximum="65535" minimum="1"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="NetworkMonitors_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{networkMonitorName}">
          <request method="put">
            <path>
              <param type="string" name="networkMonitorName" arg="$Path.networkMonitorName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$resource.properties.annotation"/>
                    <prop type="object" name="bmpConfiguration" arg="$resource.properties.bmpConfiguration">
                      <prop type="string" name="exportPolicy" arg="$resource.properties.bmpConfiguration.exportPolicy">
                        <default value="&quot;All&quot;"/>
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Post-Policy&quot;"/>
                          <item value="&quot;Pre-Policy&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="monitoredAddressFamilies" arg="$resource.properties.bmpConfiguration.monitoredAddressFamilies">
                        <default value="[&quot;All&quot;]"/>
                        <item type="string">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;ipv4Unicast&quot;"/>
                            <item value="&quot;ipv6Unicast&quot;"/>
                            <item value="&quot;vpnIpv4&quot;"/>
                            <item value="&quot;vpnIpv6&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<ResourceId>" name="monitoredNetworks" arg="$resource.properties.bmpConfiguration.monitoredNetworks">
                        <item type="ResourceId"/>
                      </prop>
                      <prop type="ResourceId" name="scopeResourceId" arg="$resource.properties.bmpConfiguration.scopeResourceId"/>
                      <prop type="string" name="stationConfigurationState" arg="$resource.properties.bmpConfiguration.stationConfigurationState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="stationConnectionMode" arg="$resource.properties.bmpConfiguration.stationConnectionMode">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Passive&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="stationConnectionProperties" arg="$resource.properties.bmpConfiguration.stationConnectionProperties">
                        <prop type="integer32" name="keepaliveIdleTime" arg="$resource.properties.bmpConfiguration.stationConnectionProperties.keepaliveIdleTime">
                          <default value="180"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeCount" arg="$resource.properties.bmpConfiguration.stationConnectionProperties.probeCount">
                          <default value="10"/>
                          <format maximum="100" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeInterval" arg="$resource.properties.bmpConfiguration.stationConnectionProperties.probeInterval">
                          <default value="60"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                      </prop>
                      <prop type="string" name="stationIp" arg="$resource.properties.bmpConfiguration.stationIp"/>
                      <prop type="string" name="stationName" arg="$resource.properties.bmpConfiguration.stationName"/>
                      <prop type="ResourceId" name="stationNetwork" arg="$resource.properties.bmpConfiguration.stationNetwork"/>
                      <prop type="integer32" name="stationPort" arg="$resource.properties.bmpConfiguration.stationPort">
                        <default value="5000"/>
                        <format maximum="65535" minimum="1"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                        <item value="&quot;UnderMaintenance&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop type="object" name="bmpConfiguration">
                      <prop type="string" name="exportPolicy">
                        <default value="&quot;All&quot;"/>
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Post-Policy&quot;"/>
                          <item value="&quot;Pre-Policy&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="monitoredAddressFamilies">
                        <default value="[&quot;All&quot;]"/>
                        <item type="string">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;ipv4Unicast&quot;"/>
                            <item value="&quot;ipv6Unicast&quot;"/>
                            <item value="&quot;vpnIpv4&quot;"/>
                            <item value="&quot;vpnIpv6&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<ResourceId>" name="monitoredNetworks">
                        <item type="ResourceId"/>
                      </prop>
                      <prop type="ResourceId" name="scopeResourceId"/>
                      <prop type="string" name="stationConfigurationState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="stationConnectionMode">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Passive&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="stationConnectionProperties">
                        <prop type="integer32" name="keepaliveIdleTime">
                          <default value="180"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeCount">
                          <default value="10"/>
                          <format maximum="100" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeInterval">
                          <default value="60"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                      </prop>
                      <prop type="string" name="stationIp"/>
                      <prop type="string" name="stationName"/>
                      <prop type="ResourceId" name="stationNetwork"/>
                      <prop type="integer32" name="stationPort">
                        <default value="5000"/>
                        <format maximum="65535" minimum="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="lastOperation">
                      <prop readOnly="True" type="string" name="details"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors/{}" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3JzL3tuZXR3b3JrTW9uaXRvck5hbWV9/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkMonitorName" options="network-monitor-name name n" required="True" idPart="name">
          <help short="Name of the Network Monitor."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$properties.properties.bmpConfiguration" options="bmp-configuration" group="Properties">
          <help short="BGP Monitoring Protocol (BMP) Configurations for the Network Monitor."/>
          <arg type="string" var="$properties.properties.bmpConfiguration.exportPolicy" options="export-policy">
            <help short="Export Policy for the BMP Configuration."/>
            <enum>
              <item name="All" value="&quot;All&quot;"/>
              <item name="Post-Policy" value="&quot;Post-Policy&quot;"/>
              <item name="Pre-Policy" value="&quot;Pre-Policy&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$properties.properties.bmpConfiguration.monitoredAddressFamilies" options="monitored-address-families">
            <help short="Monitored Address Families for the BMP Configuration."/>
            <item type="string">
              <enum>
                <item name="All" value="&quot;All&quot;"/>
                <item name="ipv4Unicast" value="&quot;ipv4Unicast&quot;"/>
                <item name="ipv6Unicast" value="&quot;ipv6Unicast&quot;"/>
                <item name="vpnIpv4" value="&quot;vpnIpv4&quot;"/>
                <item name="vpnIpv6" value="&quot;vpnIpv6&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="array<ResourceId>" var="$properties.properties.bmpConfiguration.monitoredNetworks" options="monitored-networks">
            <help short="The List of Network ID's that need to be monitored."/>
            <item type="ResourceId"/>
          </arg>
          <arg type="ResourceId" var="$properties.properties.bmpConfiguration.scopeResourceId" options="scope-resource-id">
            <help short="Scope resource ARM Identifier."/>
          </arg>
          <arg type="string" var="$properties.properties.bmpConfiguration.stationConfigurationState" options="station-configuration-state">
            <help short="Enabling a station. Either True/False."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$properties.properties.bmpConfiguration.stationConnectionMode" options="station-connection-mode">
            <help short="Station Connection Mode."/>
            <enum>
              <item name="Active" value="&quot;Active&quot;"/>
              <item name="Passive" value="&quot;Passive&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$properties.properties.bmpConfiguration.stationConnectionProperties" options="station-connection-properties">
            <help short="Station Connection Properties."/>
            <arg type="integer32" var="$properties.properties.bmpConfiguration.stationConnectionProperties.keepaliveIdleTime" options="keepalive-idle-time">
              <help short="Connection keepalive idle time in seconds"/>
              <format maximum="3600" minimum="1"/>
            </arg>
            <arg type="integer32" var="$properties.properties.bmpConfiguration.stationConnectionProperties.probeCount" options="probe-count">
              <help short="Probe count, default value is 10"/>
              <format maximum="100" minimum="1"/>
            </arg>
            <arg type="integer32" var="$properties.properties.bmpConfiguration.stationConnectionProperties.probeInterval" options="probe-interval">
              <help short="Probe interval in seconds, default value is 60"/>
              <format maximum="3600" minimum="1"/>
            </arg>
          </arg>
          <arg type="string" var="$properties.properties.bmpConfiguration.stationIp" options="station-ip">
            <help short="IP Address of the station."/>
          </arg>
          <arg type="string" var="$properties.properties.bmpConfiguration.stationName" options="station-name">
            <help short="Name of the station."/>
          </arg>
          <arg type="ResourceId" var="$properties.properties.bmpConfiguration.stationNetwork" options="station-network">
            <help short="Network of the station"/>
          </arg>
          <arg type="integer32" var="$properties.properties.bmpConfiguration.stationPort" options="station-port">
            <help short="Port of the station. Default value is 5000."/>
            <format maximum="65535" minimum="1"/>
          </arg>
        </arg>
        <arg type="object" var="$properties.tags" options="tags" group="Properties">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="NetworkMonitors_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{networkMonitorName}">
          <request method="patch">
            <path>
              <param type="string" name="networkMonitorName" arg="$Path.networkMonitorName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop nullable="True" type="object" name="bmpConfiguration" arg="$properties.properties.bmpConfiguration">
                      <prop type="string" name="exportPolicy" arg="$properties.properties.bmpConfiguration.exportPolicy">
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Post-Policy&quot;"/>
                          <item value="&quot;Pre-Policy&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="monitoredAddressFamilies" arg="$properties.properties.bmpConfiguration.monitoredAddressFamilies">
                        <item type="string">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;ipv4Unicast&quot;"/>
                            <item value="&quot;ipv6Unicast&quot;"/>
                            <item value="&quot;vpnIpv4&quot;"/>
                            <item value="&quot;vpnIpv6&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<ResourceId>" name="monitoredNetworks" arg="$properties.properties.bmpConfiguration.monitoredNetworks">
                        <item type="ResourceId"/>
                      </prop>
                      <prop type="ResourceId" name="scopeResourceId" arg="$properties.properties.bmpConfiguration.scopeResourceId"/>
                      <prop type="string" name="stationConfigurationState" arg="$properties.properties.bmpConfiguration.stationConfigurationState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="stationConnectionMode" arg="$properties.properties.bmpConfiguration.stationConnectionMode">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Passive&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="stationConnectionProperties" arg="$properties.properties.bmpConfiguration.stationConnectionProperties">
                        <prop type="integer32" name="keepaliveIdleTime" arg="$properties.properties.bmpConfiguration.stationConnectionProperties.keepaliveIdleTime">
                          <format maximum="3600" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeCount" arg="$properties.properties.bmpConfiguration.stationConnectionProperties.probeCount">
                          <format maximum="100" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeInterval" arg="$properties.properties.bmpConfiguration.stationConnectionProperties.probeInterval">
                          <format maximum="3600" minimum="1"/>
                        </prop>
                      </prop>
                      <prop type="string" name="stationIp" arg="$properties.properties.bmpConfiguration.stationIp"/>
                      <prop type="string" name="stationName" arg="$properties.properties.bmpConfiguration.stationName"/>
                      <prop type="ResourceId" name="stationNetwork" arg="$properties.properties.bmpConfiguration.stationNetwork"/>
                      <prop type="integer32" name="stationPort" arg="$properties.properties.bmpConfiguration.stationPort">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$properties.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                        <item value="&quot;UnderMaintenance&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop type="object" name="bmpConfiguration">
                      <prop type="string" name="exportPolicy">
                        <default value="&quot;All&quot;"/>
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Post-Policy&quot;"/>
                          <item value="&quot;Pre-Policy&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="monitoredAddressFamilies">
                        <default value="[&quot;All&quot;]"/>
                        <item type="string">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;ipv4Unicast&quot;"/>
                            <item value="&quot;ipv6Unicast&quot;"/>
                            <item value="&quot;vpnIpv4&quot;"/>
                            <item value="&quot;vpnIpv6&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<ResourceId>" name="monitoredNetworks">
                        <item type="ResourceId"/>
                      </prop>
                      <prop type="ResourceId" name="scopeResourceId"/>
                      <prop type="string" name="stationConfigurationState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="stationConnectionMode">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Passive&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="stationConnectionProperties">
                        <prop type="integer32" name="keepaliveIdleTime">
                          <default value="180"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeCount">
                          <default value="10"/>
                          <format maximum="100" minimum="1"/>
                        </prop>
                        <prop type="integer32" name="probeInterval">
                          <default value="60"/>
                          <format maximum="3600" minimum="1"/>
                        </prop>
                      </prop>
                      <prop type="string" name="stationIp"/>
                      <prop type="string" name="stationName"/>
                      <prop type="ResourceId" name="stationNetwork"/>
                      <prop type="integer32" name="stationPort">
                        <default value="5000"/>
                        <format maximum="65535" minimum="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="lastOperation">
                      <prop readOnly="True" type="string" name="details"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
