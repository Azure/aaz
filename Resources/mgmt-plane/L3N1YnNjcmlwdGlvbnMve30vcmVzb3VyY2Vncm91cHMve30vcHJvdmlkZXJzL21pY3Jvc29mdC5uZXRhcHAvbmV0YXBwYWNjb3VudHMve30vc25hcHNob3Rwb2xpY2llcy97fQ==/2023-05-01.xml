<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/snapshotpolicies/{}" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vc25hcHNob3RQb2xpY2llcy97c25hcHNob3RQb2xpY3lOYW1lfQ==/V/MjAyMy0wNS0wMQ=="/>
  <commandGroup name="netappfiles snapshot policy">
    <command name="show" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/snapshotpolicies/{}" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vc25hcHNob3RQb2xpY2llcy97c25hcHNob3RQb2xpY3lOYW1lfQ==/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.snapshotPolicyName" options="snapshot-policy-name name n" required="True" idPart="child_name_1">
          <help short="The name of the snapshot policy"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SnapshotPolicies_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="snapshotPolicyName" arg="$Path.snapshotPolicyName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/snapshotPolicies/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="dailySchedule" required="True">
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop type="boolean" name="enabled"/>
                    <prop type="object" name="hourlySchedule" required="True">
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop type="object" name="monthlySchedule" required="True">
                      <prop type="string" name="daysOfMonth"/>
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="object" name="weeklySchedule" required="True">
                      <prop type="string" name="day"/>
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-05-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/snapshotpolicies/{}" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vc25hcHNob3RQb2xpY2llcy97c25hcHNob3RQb2xpY3lOYW1lfQ==/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.snapshotPolicyName" options="snapshot-policy-name name n" required="True" idPart="child_name_1">
          <help short="The name of the snapshot policy"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SnapshotPolicies_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}">
          <request method="delete">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="snapshotPolicyName" arg="$Path.snapshotPolicyName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/snapshotpolicies/{}" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vc25hcHNob3RQb2xpY2llcy97c25hcHNob3RQb2xpY3lOYW1lfQ==/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.snapshotPolicyName" options="snapshot-policy-name name n" required="True" idPart="child_name_1">
          <help short="The name of the snapshot policy"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="DailySchedule">
        <arg type="integer32" var="$body.properties.dailySchedule.hour" options="daily-hour" group="DailySchedule">
          <help short="Indicates which hour in UTC timezone a snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.dailySchedule.minute" options="daily-minute" group="DailySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.dailySchedule.snapshotsToKeep" options="snapshots-to-keep daily-snapshots d" group="DailySchedule">
          <help short="Daily snapshot count to keep"/>
        </arg>
        <arg type="integer64" var="$body.properties.dailySchedule.usedBytes" options="used-bytes" hide="True" group="DailySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <argGroup name="HourlySchedule">
        <arg type="integer32" var="$body.properties.hourlySchedule.minute" options="hourly-minute minute" group="HourlySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.hourlySchedule.snapshotsToKeep" options="hourly-snapshots u" group="HourlySchedule">
          <help short="Hourly snapshot count to keep"/>
        </arg>
        <arg type="integer64" var="$body.properties.hourlySchedule.usedBytes" options="hourly-used-bytes" hide="True" group="HourlySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <argGroup name="MonthlySchedule">
        <arg type="string" var="$body.properties.monthlySchedule.daysOfMonth" options="days-of-month monthly-days" group="MonthlySchedule">
          <help short="Indicates which days of the month snapshot should be taken. A comma delimited string."/>
        </arg>
        <arg type="integer32" var="$body.properties.monthlySchedule.hour" options="monthly-hour hour" group="MonthlySchedule">
          <help short="Indicates which hour in UTC timezone a snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.monthlySchedule.minute" options="monthly-minute" group="MonthlySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.monthlySchedule.snapshotsToKeep" options="monthly-snapshots m" group="MonthlySchedule">
          <help short="Monthly snapshot count to keep"/>
        </arg>
        <arg type="integer64" var="$body.properties.monthlySchedule.usedBytes" options="monthly-used-bytes" hide="True" group="MonthlySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$body.properties.enabled" options="enabled e" group="Properties">
          <help short="The property to decide policy is enabled or not"/>
          <default value="true"/>
        </arg>
      </argGroup>
      <argGroup name="WeeklySchedule">
        <arg type="string" var="$body.properties.weeklySchedule.day" options="weekly-day" group="WeeklySchedule">
          <help short="Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english"/>
        </arg>
        <arg type="integer32" var="$body.properties.weeklySchedule.hour" options="weekly-hour" group="WeeklySchedule">
          <help short="Indicates which hour in UTC timezone a snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.weeklySchedule.minute" options="weekly-minute" group="WeeklySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg type="integer32" var="$body.properties.weeklySchedule.snapshotsToKeep" options="weekly-snapshots w" group="WeeklySchedule">
          <help short="Weekly snapshot count to keep"/>
        </arg>
        <arg type="integer64" var="$body.properties.weeklySchedule.usedBytes" options="weekly-used-bytes" hide="True" group="WeeklySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <operation operationId="SnapshotPolicies_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="snapshotPolicyName" arg="$Path.snapshotPolicyName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="dailySchedule" required="True">
                      <prop type="integer32" name="hour" arg="$body.properties.dailySchedule.hour"/>
                      <prop type="integer32" name="minute" arg="$body.properties.dailySchedule.minute"/>
                      <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.dailySchedule.snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes" arg="$body.properties.dailySchedule.usedBytes"/>
                    </prop>
                    <prop type="boolean" name="enabled" arg="$body.properties.enabled"/>
                    <prop type="object" name="hourlySchedule" required="True">
                      <prop type="integer32" name="minute" arg="$body.properties.hourlySchedule.minute"/>
                      <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.hourlySchedule.snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes" arg="$body.properties.hourlySchedule.usedBytes"/>
                    </prop>
                    <prop type="object" name="monthlySchedule" required="True">
                      <prop type="string" name="daysOfMonth" arg="$body.properties.monthlySchedule.daysOfMonth"/>
                      <prop type="integer32" name="hour" arg="$body.properties.monthlySchedule.hour"/>
                      <prop type="integer32" name="minute" arg="$body.properties.monthlySchedule.minute"/>
                      <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.monthlySchedule.snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes" arg="$body.properties.monthlySchedule.usedBytes"/>
                    </prop>
                    <prop type="object" name="weeklySchedule" required="True">
                      <prop type="string" name="day" arg="$body.properties.weeklySchedule.day"/>
                      <prop type="integer32" name="hour" arg="$body.properties.weeklySchedule.hour"/>
                      <prop type="integer32" name="minute" arg="$body.properties.weeklySchedule.minute"/>
                      <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.weeklySchedule.snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes" arg="$body.properties.weeklySchedule.usedBytes"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/snapshotPolicies/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="dailySchedule" required="True">
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop type="boolean" name="enabled"/>
                    <prop type="object" name="hourlySchedule" required="True">
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop type="object" name="monthlySchedule" required="True">
                      <prop type="string" name="daysOfMonth"/>
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="object" name="weeklySchedule" required="True">
                      <prop type="string" name="day"/>
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/snapshotpolicies/{}" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vc25hcHNob3RQb2xpY2llcy97c25hcHNob3RQb2xpY3lOYW1lfQ==/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.snapshotPolicyName" options="snapshot-policy-name name n" required="True" idPart="child_name_1">
          <help short="The name of the snapshot policy"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="DailySchedule">
        <arg nullable="True" type="integer32" var="$body.properties.dailySchedule.hour" options="daily-hour" group="DailySchedule">
          <help short="Indicates which hour in UTC timezone a snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.dailySchedule.minute" options="daily-minute" group="DailySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.dailySchedule.snapshotsToKeep" options="snapshots-to-keep daily-snapshots d" group="DailySchedule">
          <help short="Daily snapshot count to keep"/>
        </arg>
        <arg nullable="True" type="integer64" var="$body.properties.dailySchedule.usedBytes" options="used-bytes" hide="True" group="DailySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <argGroup name="HourlySchedule">
        <arg nullable="True" type="integer32" var="$body.properties.hourlySchedule.minute" options="hourly-minute minute" group="HourlySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.hourlySchedule.snapshotsToKeep" options="hourly-snapshots u" group="HourlySchedule">
          <help short="Hourly snapshot count to keep"/>
        </arg>
        <arg nullable="True" type="integer64" var="$body.properties.hourlySchedule.usedBytes" options="hourly-used-bytes" hide="True" group="HourlySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <argGroup name="MonthlySchedule">
        <arg nullable="True" type="string" var="$body.properties.monthlySchedule.daysOfMonth" options="days-of-month monthly-days" group="MonthlySchedule">
          <help short="Indicates which days of the month snapshot should be taken. A comma delimited string."/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.monthlySchedule.hour" options="monthly-hour hour" group="MonthlySchedule">
          <help short="Indicates which hour in UTC timezone a snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.monthlySchedule.minute" options="monthly-minute" group="MonthlySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.monthlySchedule.snapshotsToKeep" options="monthly-snapshots m" group="MonthlySchedule">
          <help short="Monthly snapshot count to keep"/>
        </arg>
        <arg nullable="True" type="integer64" var="$body.properties.monthlySchedule.usedBytes" options="monthly-used-bytes" hide="True" group="MonthlySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$body.properties.enabled" options="enabled e" group="Properties">
          <help short="The property to decide policy is enabled or not"/>
        </arg>
      </argGroup>
      <argGroup name="WeeklySchedule">
        <arg nullable="True" type="string" var="$body.properties.weeklySchedule.day" options="weekly-day" group="WeeklySchedule">
          <help short="Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.weeklySchedule.hour" options="weekly-hour" group="WeeklySchedule">
          <help short="Indicates which hour in UTC timezone a snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.weeklySchedule.minute" options="weekly-minute" group="WeeklySchedule">
          <help short="Indicates which minute snapshot should be taken"/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.weeklySchedule.snapshotsToKeep" options="weekly-snapshots w" group="WeeklySchedule">
          <help short="Weekly snapshot count to keep"/>
        </arg>
        <arg nullable="True" type="integer64" var="$body.properties.weeklySchedule.usedBytes" options="weekly-used-bytes" hide="True" group="WeeklySchedule">
          <help short="Resource size in bytes, current storage usage for the volume in bytes"/>
        </arg>
      </argGroup>
      <operation operationId="SnapshotPolicies_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="snapshotPolicyName" arg="$Path.snapshotPolicyName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SnapshotPolicy_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/snapshotPolicies/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="dailySchedule" required="True">
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop type="boolean" name="enabled"/>
                    <prop type="object" name="hourlySchedule" required="True">
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop type="object" name="monthlySchedule" required="True">
                      <prop type="string" name="daysOfMonth"/>
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="object" name="weeklySchedule" required="True">
                      <prop type="string" name="day"/>
                      <prop type="integer32" name="hour"/>
                      <prop type="integer32" name="minute"/>
                      <prop type="integer32" name="snapshotsToKeep"/>
                      <prop type="integer64" name="usedBytes"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="object" name="dailySchedule" required="True">
                  <prop type="integer32" name="hour" arg="$body.properties.dailySchedule.hour"/>
                  <prop type="integer32" name="minute" arg="$body.properties.dailySchedule.minute"/>
                  <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.dailySchedule.snapshotsToKeep"/>
                  <prop type="integer64" name="usedBytes" arg="$body.properties.dailySchedule.usedBytes"/>
                </prop>
                <prop type="boolean" name="enabled" arg="$body.properties.enabled"/>
                <prop type="object" name="hourlySchedule" required="True">
                  <prop type="integer32" name="minute" arg="$body.properties.hourlySchedule.minute"/>
                  <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.hourlySchedule.snapshotsToKeep"/>
                  <prop type="integer64" name="usedBytes" arg="$body.properties.hourlySchedule.usedBytes"/>
                </prop>
                <prop type="object" name="monthlySchedule" required="True">
                  <prop type="string" name="daysOfMonth" arg="$body.properties.monthlySchedule.daysOfMonth"/>
                  <prop type="integer32" name="hour" arg="$body.properties.monthlySchedule.hour"/>
                  <prop type="integer32" name="minute" arg="$body.properties.monthlySchedule.minute"/>
                  <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.monthlySchedule.snapshotsToKeep"/>
                  <prop type="integer64" name="usedBytes" arg="$body.properties.monthlySchedule.usedBytes"/>
                </prop>
                <prop type="object" name="weeklySchedule" required="True">
                  <prop type="string" name="day" arg="$body.properties.weeklySchedule.day"/>
                  <prop type="integer32" name="hour" arg="$body.properties.weeklySchedule.hour"/>
                  <prop type="integer32" name="minute" arg="$body.properties.weeklySchedule.minute"/>
                  <prop type="integer32" name="snapshotsToKeep" arg="$body.properties.weeklySchedule.snapshotsToKeep"/>
                  <prop type="integer64" name="usedBytes" arg="$body.properties.weeklySchedule.usedBytes"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="SnapshotPolicies_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="snapshotPolicyName" arg="$Path.snapshotPolicyName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SnapshotPolicy_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
