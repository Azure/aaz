<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances" version="2023-11-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcw==/V/MjAyMy0xMS0wMQ=="/>
  <commandGroup name="dataprotection backup-instance">
    <command name="list" version="2023-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances" version="2023-11-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcw==/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name v" required="True" group="" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <operation operationId="BackupInstances_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop readOnly="True" type="string" name="currentProtectionState">
                          <enum>
                            <item value="&quot;BackupSchedulesSuspended&quot;"/>
                            <item value="&quot;ConfiguringProtection&quot;"/>
                            <item value="&quot;ConfiguringProtectionFailed&quot;"/>
                            <item value="&quot;Invalid&quot;"/>
                            <item value="&quot;NotProtected&quot;"/>
                            <item value="&quot;ProtectionConfigured&quot;"/>
                            <item value="&quot;ProtectionError&quot;"/>
                            <item value="&quot;ProtectionStopped&quot;"/>
                            <item value="&quot;RetentionSchedulesSuspended&quot;"/>
                            <item value="&quot;SoftDeleted&quot;"/>
                            <item value="&quot;SoftDeleting&quot;"/>
                            <item value="&quot;UpdatingProtection&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="dataSourceInfo" required="True">
                          <prop type="string" name="datasourceType"/>
                          <prop type="string" name="objectType"/>
                          <prop type="string" name="resourceID" required="True"/>
                          <prop type="string" name="resourceLocation"/>
                          <prop type="string" name="resourceName"/>
                          <prop type="object" name="resourceProperties" cls="BaseResourceProperties_read">
                            <prop type="string" name="objectType" required="True">
                              <enum>
                                <item value="&quot;DefaultResourceProperties&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="resourceType"/>
                          <prop type="string" name="resourceUri"/>
                        </prop>
                        <prop type="object" name="dataSourceSetInfo">
                          <prop type="string" name="datasourceType"/>
                          <prop type="string" name="objectType"/>
                          <prop type="string" name="resourceID" required="True"/>
                          <prop type="string" name="resourceLocation"/>
                          <prop type="string" name="resourceName"/>
                          <prop type="@BaseResourceProperties_read" name="resourceProperties"/>
                          <prop type="string" name="resourceType"/>
                          <prop type="string" name="resourceUri"/>
                        </prop>
                        <prop type="object" name="datasourceAuthCredentials">
                          <prop type="string" name="objectType" required="True">
                            <enum>
                              <item value="&quot;SecretStoreBasedAuthCredentials&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="objectType" value="SecretStoreBasedAuthCredentials">
                            <prop type="object" name="secretStoreResource">
                              <prop type="string" name="secretStoreType" required="True">
                                <enum>
                                  <item value="&quot;AzureKeyVault&quot;"/>
                                  <item value="&quot;Invalid&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="uri"/>
                              <prop type="string" name="value"/>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="string" name="friendlyName"/>
                        <prop type="object" name="identityDetails">
                          <prop type="boolean" name="useSystemAssignedIdentity"/>
                          <prop type="string" name="userAssignedIdentityArmUrl"/>
                        </prop>
                        <prop type="string" name="objectType" required="True"/>
                        <prop type="object" name="policyInfo" required="True">
                          <prop type="string" name="policyId" required="True"/>
                          <prop type="object" name="policyParameters">
                            <prop type="array<object>" name="backupDatasourceParametersList">
                              <item type="object">
                                <prop type="string" name="objectType" required="True">
                                  <enum>
                                    <item value="&quot;BlobBackupDatasourceParameters&quot;"/>
                                    <item value="&quot;KubernetesClusterBackupDatasourceParameters&quot;"/>
                                  </enum>
                                </prop>
                                <discriminator property="objectType" value="BlobBackupDatasourceParameters">
                                  <prop type="array<string>" name="containersList" required="True">
                                    <item type="string"/>
                                  </prop>
                                </discriminator>
                                <discriminator property="objectType" value="KubernetesClusterBackupDatasourceParameters">
                                  <prop type="array<object>" name="backupHookReferences">
                                    <item type="object">
                                      <prop type="string" name="name"/>
                                      <prop type="string" name="namespace"/>
                                    </item>
                                  </prop>
                                  <prop type="array<string>" name="excludedNamespaces">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="excludedResourceTypes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="boolean" name="includeClusterScopeResources" required="True"/>
                                  <prop type="array<string>" name="includedNamespaces">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="includedResourceTypes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="labelSelectors">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="boolean" name="snapshotVolumes" required="True"/>
                                </discriminator>
                              </item>
                            </prop>
                            <prop type="array<object>" name="dataStoreParametersList">
                              <item type="object">
                                <prop type="string" name="dataStoreType" required="True">
                                  <enum>
                                    <item value="&quot;ArchiveStore&quot;"/>
                                    <item value="&quot;OperationalStore&quot;"/>
                                    <item value="&quot;VaultStore&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="objectType" required="True">
                                  <enum>
                                    <item value="&quot;AzureOperationalStoreParameters&quot;"/>
                                  </enum>
                                </prop>
                                <discriminator property="objectType" value="AzureOperationalStoreParameters">
                                  <prop type="string" name="resourceGroupId"/>
                                </discriminator>
                              </item>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="policyVersion"/>
                        </prop>
                        <prop readOnly="True" type="@UserFacingError_read" name="protectionErrorDetails"/>
                        <prop type="object" name="protectionStatus">
                          <prop type="object" name="errorDetails" cls="UserFacingError_read">
                            <prop type="string" name="code"/>
                            <prop type="array<@UserFacingError_read>" name="details">
                              <item type="@UserFacingError_read"/>
                            </prop>
                            <prop type="object" name="innerError" cls="InnerError_read">
                              <prop type="object" name="additionalInfo">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop type="string" name="code"/>
                              <prop type="@InnerError_read" name="embeddedInnerError"/>
                            </prop>
                            <prop type="boolean" name="isRetryable"/>
                            <prop type="boolean" name="isUserError"/>
                            <prop type="string" name="message"/>
                            <prop type="object" name="properties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="array<string>" name="recommendedAction">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="target"/>
                          </prop>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;ConfiguringProtection&quot;"/>
                              <item value="&quot;ConfiguringProtectionFailed&quot;"/>
                              <item value="&quot;ProtectionConfigured&quot;"/>
                              <item value="&quot;ProtectionStopped&quot;"/>
                              <item value="&quot;SoftDeleted&quot;"/>
                              <item value="&quot;SoftDeleting&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="string" name="validationType">
                          <enum>
                            <item value="&quot;DeepValidation&quot;"/>
                            <item value="&quot;ShallowValidation&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
