<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}" version="2024-01-10" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0=/V/MjAyNC0wMS0xMA=="/>
  <commandGroup name="firmwareanalysis firmware">
    <command name="show" version="2024-01-10" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}" version="2024-01-10" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0=/V/MjAyNC0wMS0xMA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firmwareId" options="firmware-id name n" required="True" idPart="child_name_1">
          <help short="The id of the firmware."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="name">
          <help short="The name of the firmware analysis workspace."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
      </argGroup>
      <operation operationId="Firmwares_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}">
          <request method="get">
            <path>
              <param type="string" name="firmwareId" arg="$Path.firmwareId" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-10&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.IoTFirmwareDefense/workspaces/{}/firmwares/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="fileName"/>
                    <prop nullable="True" type="integer64" name="fileSize"/>
                    <prop type="string" name="model"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <default value="&quot;Pending&quot;"/>
                      <enum>
                        <item value="&quot;Analyzing&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Extracting&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="statusMessages">
                      <item type="object">
                        <prop type="integer64" name="errorCode"/>
                        <prop type="string" name="message"/>
                      </item>
                    </prop>
                    <prop type="string" name="vendor"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-01-10" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}" version="2024-01-10" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0=/V/MjAyNC0wMS0xMA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firmwareId" options="firmware-id name n" required="True" idPart="child_name_1">
          <help short="The id of the firmware."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="name">
          <help short="The name of the firmware analysis workspace."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
      </argGroup>
      <operation operationId="Firmwares_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}">
          <request method="delete">
            <path>
              <param type="string" name="firmwareId" arg="$Path.firmwareId" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-10&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-01-10" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}" version="2024-01-10" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0=/V/MjAyNC0wMS0xMA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firmwareId" options="firmware-id name n" required="True" idPart="child_name_1">
          <help short="The id of the firmware."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="name">
          <help short="The name of the firmware analysis workspace."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$firmware.properties.description" options="description" group="Properties">
          <help short="User-specified description of the firmware."/>
        </arg>
        <arg type="string" var="$firmware.properties.fileName" options="file-name" group="Properties">
          <help short="File name for a firmware that user uploaded."/>
        </arg>
        <arg nullable="True" type="integer64" var="$firmware.properties.fileSize" options="file-size" group="Properties">
          <help short="File size of the uploaded firmware image."/>
        </arg>
        <arg type="string" var="$firmware.properties.model" options="model" group="Properties">
          <help short="Firmware model."/>
        </arg>
        <arg type="string" var="$firmware.properties.status" options="status" group="Properties">
          <help short="The status of firmware scan."/>
          <default value="&quot;Pending&quot;"/>
          <enum>
            <item name="Analyzing" value="&quot;Analyzing&quot;"/>
            <item name="Error" value="&quot;Error&quot;"/>
            <item name="Extracting" value="&quot;Extracting&quot;"/>
            <item name="Pending" value="&quot;Pending&quot;"/>
            <item name="Ready" value="&quot;Ready&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$firmware.properties.statusMessages" options="status-messages" group="Properties">
          <help short="A list of errors or other messages generated during firmware analysis"/>
          <item type="object">
            <arg type="integer64" var="$firmware.properties.statusMessages[].errorCode" options="error-code">
              <help short="The error code"/>
            </arg>
            <arg type="string" var="$firmware.properties.statusMessages[].message" options="message">
              <help short="The error or status message"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$firmware.properties.vendor" options="vendor" group="Properties">
          <help short="Firmware vendor."/>
        </arg>
        <arg type="string" var="$firmware.properties.version" options="version" group="Properties">
          <help short="Firmware version."/>
        </arg>
      </argGroup>
      <operation operationId="Firmwares_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}">
          <request method="put">
            <path>
              <param type="string" name="firmwareId" arg="$Path.firmwareId" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-10&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="firmware" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$firmware.properties.description"/>
                    <prop type="string" name="fileName" arg="$firmware.properties.fileName"/>
                    <prop nullable="True" type="integer64" name="fileSize" arg="$firmware.properties.fileSize"/>
                    <prop type="string" name="model" arg="$firmware.properties.model"/>
                    <prop type="string" name="status" arg="$firmware.properties.status">
                      <default value="&quot;Pending&quot;"/>
                      <enum>
                        <item value="&quot;Analyzing&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Extracting&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="statusMessages" arg="$firmware.properties.statusMessages">
                      <item type="object">
                        <prop type="integer64" name="errorCode" arg="$firmware.properties.statusMessages[].errorCode"/>
                        <prop type="string" name="message" arg="$firmware.properties.statusMessages[].message"/>
                      </item>
                    </prop>
                    <prop type="string" name="vendor" arg="$firmware.properties.vendor"/>
                    <prop type="string" name="version" arg="$firmware.properties.version"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.IoTFirmwareDefense/workspaces/{}/firmwares/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="fileName"/>
                    <prop nullable="True" type="integer64" name="fileSize"/>
                    <prop type="string" name="model"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <default value="&quot;Pending&quot;"/>
                      <enum>
                        <item value="&quot;Analyzing&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Extracting&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="statusMessages">
                      <item type="object">
                        <prop type="integer64" name="errorCode"/>
                        <prop type="string" name="message"/>
                      </item>
                    </prop>
                    <prop type="string" name="vendor"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
