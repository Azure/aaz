{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/volumegroups/{}", "version": "2023-05-01", "swagger": "mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vdm9sdW1lR3JvdXBzL3t2b2x1bWVHcm91cE5hbWV9/V/MjAyMy0wNS0wMQ=="}], "commandGroups": [{"name": "netappfiles volume-group", "commands": [{"name": "show", "version": "2023-05-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/volumegroups/{}", "version": "2023-05-01", "swagger": "mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vdm9sdW1lR3JvdXBzL3t2b2x1bWVHcm91cE5hbWV9/V/MjAyMy0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.accountName", "options": ["a", "account-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the NetApp account"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.volumeGroupName", "options": ["n", "name", "group-name", "volume-group-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the volumeGroup"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}], "operations": [{"operationId": "VolumeGroups_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "volumeGroupName", "arg": "$Path.volumeGroupName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "groupMetaData", "props": [{"type": "string", "name": "applicationIdentifier"}, {"type": "string", "name": "applicationType", "enum": {"items": [{"value": "ORACLE"}, {"value": "SAP-HANA"}]}}, {"type": "string", "name": "deploymentSpecId"}, {"type": "array<object>", "name": "globalPlacementRules", "item": {"type": "object", "props": [{"type": "string", "name": "key", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "PlacementKeyValuePairs_read"}, "identifiers": ["key"]}, {"type": "string", "name": "groupDescription"}, {"readOnly": true, "type": "integer64", "name": "volumesCount"}]}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "volumes", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"readOnly": true, "type": "float", "name": "actualThroughputMibps"}, {"default": {"value": "Disabled"}, "type": "string", "name": "avsDataStore", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"nullable": true, "type": "string", "name": "backupId"}, {"readOnly": true, "type": "string", "name": "baremetalTenantId"}, {"type": "string", "name": "capacityPoolResourceId"}, {"readOnly": true, "nullable": true, "type": "integer32", "name": "cloneProgress"}, {"default": {"value": false}, "type": "boolean", "name": "coolAccess"}, {"type": "string", "name": "coolAccessRetrievalPolicy", "enum": {"items": [{"value": "Default"}, {"value": "Never"}, {"value": "OnRead"}]}}, {"type": "integer32", "name": "coolnessPeriod", "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "name": "creationToken", "required": true, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"type": "object", "name": "dataProtection", "props": [{"type": "object", "name": "replication", "props": [{"type": "string", "name": "endpointType", "enum": {"items": [{"value": "dst"}, {"value": "src"}]}}, {"type": "string", "name": "remoteVolumeRegion"}, {"type": "string", "name": "remoteVolumeResourceId", "required": true}, {"readOnly": true, "type": "string", "name": "replicationId"}, {"type": "string", "name": "replicationSchedule", "enum": {"items": [{"value": "_10minutely"}, {"value": "daily"}, {"value": "hourly"}]}}]}, {"type": "object", "name": "snapshot", "props": [{"type": "string", "name": "snapshotPolicyId"}]}, {"type": "object", "name": "volumeRelocation", "props": [{"readOnly": true, "type": "boolean", "name": "readyToBeFinalized"}, {"type": "boolean", "name": "relocationRequested"}]}]}, {"readOnly": true, "type": "array<string>", "name": "dataStoreResourceId", "item": {"type": "string"}}, {"default": {"value": 0}, "type": "integer64", "name": "defaultGroupQuotaInKiBs"}, {"default": {"value": 0}, "type": "integer64", "name": "defaultUserQuotaInKiBs"}, {"type": "boolean", "name": "deleteBaseSnapshot"}, {"default": {"value": "Disabled"}, "type": "string", "name": "enableSubvolumes", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "boolean", "name": "encrypted"}, {"default": {"value": "Microsoft.NetApp"}, "type": "string", "name": "encryptionKeySource", "enum": {"items": [{"value": "Microsoft.KeyVault"}, {"value": "Microsoft.NetApp"}]}}, {"type": "object", "name": "exportPolicy", "props": [{"type": "array<object>", "name": "rules", "item": {"type": "object", "props": [{"type": "string", "name": "allowedClients"}, {"default": {"value": "Restricted"}, "type": "string", "name": "chownMode", "enum": {"items": [{"value": "Restricted"}, {"value": "Unrestricted"}]}}, {"type": "boolean", "name": "cifs"}, {"default": {"value": true}, "type": "boolean", "name": "hasRootAccess"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadWrite"}, {"type": "boolean", "name": "nfsv3"}, {"type": "boolean", "name": "nfsv41"}, {"type": "integer32", "name": "ruleIndex"}, {"type": "boolean", "name": "unixReadOnly"}, {"type": "boolean", "name": "unixReadWrite"}]}, "identifiers": ["ruleIndex"]}]}, {"readOnly": true, "default": {"value": "Disabled"}, "type": "string", "name": "fileAccessLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "string", "name": "fileSystemId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"default": {"value": false}, "type": "boolean", "name": "isDefaultQuotaEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "isLargeVolume"}, {"type": "boolean", "name": "isRestoring"}, {"default": {"value": false}, "type": "boolean", "name": "kerberosEnabled"}, {"type": "string", "name": "keyVaultPrivateEndpointResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "ldapEnabled"}, {"readOnly": true, "type": "integer64", "name": "maximumNumberOfFiles"}, {"readOnly": true, "type": "array<object>", "name": "mountTargets", "item": {"type": "object", "props": [{"type": "string", "name": "fileSystemId", "required": true, "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"readOnly": true, "type": "string", "name": "ipAddress"}, {"readOnly": true, "type": "string", "name": "mountTargetId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"type": "string", "name": "smbServerFqdn"}]}, "identifiers": ["fileSystemId"]}, {"default": {"value": "Basic"}, "type": "string", "name": "networkFeatures", "enum": {"items": [{"value": "Basic"}, {"value": "Basic_Standard"}, {"value": "Standard"}, {"value": "Standard_Basic"}]}}, {"readOnly": true, "type": "string", "name": "networkSiblingSetId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"readOnly": true, "nullable": true, "type": "string", "name": "originatingResourceId"}, {"type": "array<@PlacementKeyValuePairs_read>", "name": "placementRules", "item": {"type": "@PlacementKeyValuePairs_read"}, "identifiers": ["key"]}, {"type": "array<string>", "name": "protocolTypes", "item": {"type": "string"}}, {"readOnly": true, "nullable": true, "type": "string", "name": "provisionedAvailabilityZone"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "proximityPlacementGroup"}, {"default": {"value": "unix"}, "type": "string", "name": "securityStyle", "enum": {"items": [{"value": "ntfs"}, {"value": "unix"}]}}, {"default": {"value": "Premium"}, "type": "string", "name": "serviceLevel", "enum": {"items": [{"value": "Premium"}, {"value": "Standard"}, {"value": "StandardZRS"}, {"value": "Ultra"}]}}, {"nullable": true, "type": "string", "name": "smbAccessBasedEnumeration", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": false}, "type": "boolean", "name": "smbContinuouslyAvailable"}, {"default": {"value": false}, "type": "boolean", "name": "smbEncryption"}, {"type": "string", "name": "smbNonBrowsable", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": true}, "type": "boolean", "name": "snapshotDirectoryVisible"}, {"nullable": true, "type": "string", "name": "snapshotId"}, {"readOnly": true, "type": "string", "name": "storageToNetworkProximity", "enum": {"items": [{"value": "AcrossT2"}, {"value": "Default"}, {"value": "T1"}, {"value": "T2"}]}}, {"type": "string", "name": "subnetId", "required": true}, {"readOnly": true, "type": "string", "name": "t2Network"}, {"nullable": true, "type": "float", "name": "throughputMibps"}, {"nullable": true, "type": "string", "name": "unixPermissions", "format": {"maxLength": 4, "minLength": 4}}, {"default": {"value": 107374182400}, "type": "integer64", "name": "usageThreshold", "required": true, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"readOnly": true, "type": "string", "name": "volumeGroupName"}, {"type": "string", "name": "volumeSpecName"}, {"type": "string", "name": "volumeType"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string", "format": {"maxLength": 255, "minLength": 1}}}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-05-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/volumegroups/{}", "version": "2023-05-01", "swagger": "mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vdm9sdW1lR3JvdXBzL3t2b2x1bWVHcm91cE5hbWV9/V/MjAyMy0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.accountName", "options": ["a", "account-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the NetApp account"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.volumeGroupName", "options": ["n", "name", "group-name", "volume-group-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the volumeGroup"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VolumeGroups_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "volumeGroupName", "arg": "$Path.volumeGroupName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-05-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/volumegroups/{}", "version": "2023-05-01", "swagger": "mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vdm9sdW1lR3JvdXBzL3t2b2x1bWVHcm91cE5hbWV9/V/MjAyMy0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.accountName", "options": ["a", "account-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the NetApp account"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.volumeGroupName", "options": ["n", "name", "group-name", "volume-group-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the volumeGroup"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, {"name": "Body", "args": [{"type": "string", "var": "$body.location", "options": ["l", "location"], "group": "Body", "help": {"short": "Resource location"}}]}, {"name": "GroupMetaData", "args": [{"type": "string", "var": "$body.properties.groupMetaData.applicationIdentifier", "options": ["sap-sid", "application-identifier"], "group": "GroupMetaData", "help": {"short": "Application specific identifier"}}, {"type": "string", "var": "$body.properties.groupMetaData.applicationType", "options": ["application-type"], "group": "GroupMetaData", "help": {"short": "Application Type"}, "default": {"value": "SAP-HANA"}, "enum": {"items": [{"name": "ORACLE", "value": "ORACLE"}, {"name": "SAP-HANA", "value": "SAP-HANA"}]}}, {"type": "string", "var": "$body.properties.groupMetaData.deploymentSpecId", "options": ["deployment-spec-id"], "hide": true, "group": "GroupMetaData", "help": {"short": "Application specific identifier of deployment rules for the volume group"}}, {"type": "array<object>", "var": "$body.properties.groupMetaData.globalPlacementRules", "options": ["global-placement-rules"], "group": "GroupMetaData", "help": {"short": "Application specific placement rules for the volume group"}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.groupMetaData.globalPlacementRules[].key", "options": ["key"], "required": true}, {"type": "string", "var": "$body.properties.groupMetaData.globalPlacementRules[].value", "options": ["value"], "required": true}]}}, {"type": "string", "var": "$body.properties.groupMetaData.groupDescription", "options": ["group-description"], "group": "GroupMetaData", "help": {"short": "Group Description"}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$body.properties.volumes", "options": ["volumes"], "group": "Properties", "help": {"short": "List of volumes from group"}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.volumes[].name", "options": ["name"], "help": {"short": "Resource name"}}, {"type": "string", "var": "$body.properties.volumes[].properties.avsDataStore", "options": ["avs-data-store"], "group": "Properties", "help": {"short": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose"}, "default": {"value": "Disabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.backupId", "options": ["backup-id"], "group": "Properties", "help": {"short": "UUID v4 or resource identifier used to identify the Backup."}}, {"type": "string", "var": "$body.properties.volumes[].properties.capacityPoolResourceId", "options": ["capacity-pool-resource-id"], "group": "Properties", "help": {"short": "Pool Resource Id used in case of creating a volume through volume group"}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.coolAccess", "options": ["cool-access"], "group": "Properties", "help": {"short": "Specifies whether Cool Access(tiering) is enabled for the volume."}, "default": {"value": false}}, {"type": "string", "var": "$body.properties.volumes[].properties.coolAccessRetrievalPolicy", "options": ["cool-access-retrieval-policy"], "group": "Properties", "help": {"short": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:   Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.  OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.  Never - No client-driven data is pulled from cool tier to standard storage."}, "enum": {"items": [{"name": "Default", "value": "Default"}, {"name": "Never", "value": "Never"}, {"name": "OnRead", "value": "OnRead"}]}}, {"type": "integer32", "var": "$body.properties.volumes[].properties.coolnessPeriod", "options": ["coolness-period"], "group": "Properties", "help": {"short": "Specifies the number of days after which data that is not accessed by clients will be tiered."}, "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "var": "$body.properties.volumes[].properties.creationToken", "options": ["creation-token"], "required": true, "group": "Properties", "help": {"short": "A unique file path for the volume. Used when creating mount targets"}, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"type": "object", "var": "$body.properties.volumes[].properties.dataProtection", "options": ["data-protection"], "group": "Properties", "help": {"short": "DataProtection type volumes include an object containing details of the replication"}, "args": [{"type": "object", "var": "$body.properties.volumes[].properties.dataProtection.replication", "options": ["replication"], "help": {"short": "Replication properties"}, "args": [{"type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.endpointType", "options": ["endpoint-type"], "help": {"short": "Indicates whether the local volume is the source or destination for the Volume Replication"}, "enum": {"items": [{"name": "dst", "value": "dst"}, {"name": "src", "value": "src"}]}}, {"type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeRegion", "options": ["remote-volume-region"], "help": {"short": "The remote region for the other end of the Volume Replication."}}, {"type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeResourceId", "options": ["remote-volume-resource-id"], "required": true, "help": {"short": "The resource ID of the remote volume."}}, {"type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.replicationSchedule", "options": ["replication-schedule"], "help": {"short": "Schedule"}, "enum": {"items": [{"name": "_10minutely", "value": "_10minutely"}, {"name": "daily", "value": "daily"}, {"name": "hourly", "value": "hourly"}]}}]}, {"type": "object", "var": "$body.properties.volumes[].properties.dataProtection.snapshot", "options": ["snapshot"], "help": {"short": "Snapshot properties."}, "args": [{"type": "string", "var": "$body.properties.volumes[].properties.dataProtection.snapshot.snapshotPolicyId", "options": ["snapshot-policy-id"], "help": {"short": "Snapshot Policy ResourceId"}}]}, {"type": "object", "var": "$body.properties.volumes[].properties.dataProtection.volumeRelocation", "options": ["volume-relocation"], "help": {"short": "VolumeRelocation properties"}, "args": [{"type": "boolean", "var": "$body.properties.volumes[].properties.dataProtection.volumeRelocation.relocationRequested", "options": ["relocation-requested"], "help": {"short": "Has relocation been requested for this volume"}}]}]}, {"type": "integer64", "var": "$body.properties.volumes[].properties.defaultGroupQuotaInKiBs", "options": ["default-group-quota-in-ki-bs"], "group": "Properties", "help": {"short": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies."}, "default": {"value": 0}}, {"type": "integer64", "var": "$body.properties.volumes[].properties.defaultUserQuotaInKiBs", "options": ["default-user-quota-in-ki-bs"], "group": "Properties", "help": {"short": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies ."}, "default": {"value": 0}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.deleteBaseSnapshot", "options": ["delete-base-snapshot"], "group": "Properties", "help": {"short": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"}}, {"type": "string", "var": "$body.properties.volumes[].properties.enableSubvolumes", "options": ["enable-subvolumes"], "group": "Properties", "help": {"short": "Flag indicating whether subvolume operations are enabled on the volume"}, "default": {"value": "Disabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$body.properties.volumes[].properties.encryptionKeySource", "options": ["encryption-key-source"], "group": "Properties", "help": {"short": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'"}, "default": {"value": "Microsoft.NetApp"}, "enum": {"items": [{"name": "Microsoft.KeyVault", "value": "Microsoft.KeyVault"}, {"name": "Microsoft.NetApp", "value": "Microsoft.NetApp"}]}}, {"type": "object", "var": "$body.properties.volumes[].properties.exportPolicy", "options": ["export-policy"], "group": "Properties", "help": {"short": "Set of export policy rules"}, "args": [{"type": "array<object>", "var": "$body.properties.volumes[].properties.exportPolicy.rules", "options": ["rules"], "help": {"short": "Export policy rule"}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].allowedClients", "options": ["allowed-clients"], "help": {"short": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"}}, {"type": "string", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].chownMode", "options": ["chown-mode"], "help": {"short": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own."}, "default": {"value": "Restricted"}, "enum": {"items": [{"name": "Restricted", "value": "Restricted"}, {"name": "Unrestricted", "value": "Unrestricted"}]}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].cifs", "options": ["cifs"], "help": {"short": "Allows CIFS protocol"}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].hasRootAccess", "options": ["has-root-access"], "help": {"short": "Has root access to volume"}, "default": {"value": true}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadOnly", "options": ["kerberos5-read-only"], "help": {"short": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadWrite", "options": ["kerberos5-read-write"], "help": {"short": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadOnly", "options": ["kerberos5i-read-only"], "help": {"short": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadWrite", "options": ["kerberos5i-read-write"], "help": {"short": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadOnly", "options": ["kerberos5p-read-only"], "help": {"short": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadWrite", "options": ["kerberos5p-read-write"], "help": {"short": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv3", "options": ["nfsv3"], "help": {"short": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv41", "options": ["nfsv41"], "help": {"short": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"}}, {"type": "integer32", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].ruleIndex", "options": ["rule-index"], "help": {"short": "Order index"}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadOnly", "options": ["unix-read-only"], "help": {"short": "Read only access"}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadWrite", "options": ["unix-read-write"], "help": {"short": "Read and write access"}}]}}]}, {"type": "boolean", "var": "$body.properties.volumes[].properties.isDefaultQuotaEnabled", "options": ["is-default-quota-enabled"], "group": "Properties", "help": {"short": "Specifies if default quota is enabled for the volume."}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.isLargeVolume", "options": ["is-large-volume"], "group": "Properties", "help": {"short": "Specifies whether volume is a Large Volume or Regular Volume."}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.isRestoring", "options": ["is-restoring"], "group": "Properties", "help": {"short": "Restoring"}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.kerberosEnabled", "options": ["kerberos-enabled"], "group": "Properties", "help": {"short": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later"}, "default": {"value": false}}, {"type": "string", "var": "$body.properties.volumes[].properties.keyVaultPrivateEndpointResourceId", "options": ["key-vault-private-endpoint-resource-id"], "group": "Properties", "help": {"short": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.ldapEnabled", "options": ["ldap-enabled"], "group": "Properties", "help": {"short": "Specifies whether LDAP is enabled or not for a given NFS volume."}, "default": {"value": false}}, {"type": "string", "var": "$body.properties.volumes[].properties.networkFeatures", "options": ["network-features"], "group": "Properties", "help": {"short": "Network features available to the volume, or current state of update."}, "default": {"value": "Basic"}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Basic_Standard", "value": "Basic_Standard"}, {"name": "Standard", "value": "Standard"}, {"name": "Standard_Basic", "value": "Standard_Basic"}]}}, {"type": "array<object>", "var": "$body.properties.volumes[].properties.placementRules", "options": ["placement-rules"], "group": "Properties", "help": {"short": "Application specific placement rules for the particular volume"}, "item": {"type": "object", "args": [{"type": "string", "var": "@PlacementKeyValuePairs_create.key", "options": ["key"], "required": true, "help": {"short": "Key for an application specific parameter for the placement of volumes in the volume group"}}, {"type": "string", "var": "@PlacementKeyValuePairs_create.value", "options": ["value"], "required": true, "help": {"short": "Value for an application specific parameter for the placement of volumes in the volume group"}}], "cls": "PlacementKeyValuePairs_create"}}, {"type": "array<string>", "var": "$body.properties.volumes[].properties.protocolTypes", "options": ["protocol-types"], "group": "Properties", "help": {"short": "Set of protocol types, default NFSv3, CIFS for SMB protocol"}, "item": {"type": "string"}}, {"type": "string", "var": "$body.properties.volumes[].properties.proximityPlacementGroup", "options": ["proximity-placement-group"], "group": "Properties", "help": {"short": "Proximity placement group associated with the volume"}}, {"type": "string", "var": "$body.properties.volumes[].properties.securityStyle", "options": ["security-style"], "group": "Properties", "help": {"short": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol"}, "default": {"value": "unix"}, "enum": {"items": [{"name": "ntfs", "value": "ntfs"}, {"name": "unix", "value": "unix"}]}}, {"type": "string", "var": "$body.properties.volumes[].properties.serviceLevel", "options": ["service-level"], "group": "Properties", "help": {"short": "serviceLevel"}, "default": {"value": "Premium"}, "enum": {"items": [{"name": "Premium", "value": "Premium"}, {"name": "Standard", "value": "Standard"}, {"name": "StandardZRS", "value": "StandardZRS"}, {"name": "Ultra", "value": "Ultra"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.smbAccessBasedEnumeration", "options": ["smb-access-based-enumeration"], "group": "Properties", "help": {"short": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.smbContinuouslyAvailable", "options": ["smb-continuously-available"], "group": "Properties", "help": {"short": "Enables continuously available share property for smb volume. Only applicable for SMB volume"}, "default": {"value": false}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.smbEncryption", "options": ["smb-encryption"], "group": "Properties", "help": {"short": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later"}, "default": {"value": false}}, {"type": "string", "var": "$body.properties.volumes[].properties.smbNonBrowsable", "options": ["smb-non-browsable"], "group": "Properties", "help": {"short": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "boolean", "var": "$body.properties.volumes[].properties.snapshotDirectoryVisible", "options": ["snapshot-directory-visible"], "group": "Properties", "help": {"short": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."}, "default": {"value": true}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.snapshotId", "options": ["snapshot-id"], "group": "Properties", "help": {"short": "UUID v4 or resource identifier used to identify the Snapshot."}}, {"type": "string", "var": "$body.properties.volumes[].properties.subnetId", "options": ["subnet-id"], "required": true, "group": "Properties", "help": {"short": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"}}, {"nullable": true, "type": "float", "var": "$body.properties.volumes[].properties.throughputMibps", "options": ["throughput-mibps"], "group": "Properties", "help": {"short": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.unixPermissions", "options": ["unix-permissions"], "group": "Properties", "help": {"short": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users."}, "format": {"maxLength": 4, "minLength": 4}}, {"type": "integer64", "var": "$body.properties.volumes[].properties.usageThreshold", "options": ["usage-threshold"], "required": true, "group": "Properties", "help": {"short": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB, 500Tib for LargeVolume or 2400Tib for LargeVolume on exceptional basis. Specified in bytes."}, "default": {"value": 107374182400}, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"type": "string", "var": "$body.properties.volumes[].properties.volumeSpecName", "options": ["volume-spec-name"], "group": "Properties", "help": {"short": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log"}}, {"type": "string", "var": "$body.properties.volumes[].properties.volumeType", "options": ["volume-type"], "group": "Properties", "help": {"short": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection"}}, {"type": "object", "var": "$body.properties.volumes[].tags", "options": ["tags"], "help": {"short": "Resource tags"}, "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "var": "$body.properties.volumes[].zones", "options": ["zones"], "help": {"short": "Availability Zone"}, "item": {"type": "string", "format": {"maxLength": 255, "minLength": 1}}}]}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VolumeGroups_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "volumeGroupName", "arg": "$Path.volumeGroupName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "required": true, "props": [{"type": "string", "name": "location", "arg": "$body.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "groupMetaData", "props": [{"type": "string", "name": "applicationIdentifier", "arg": "$body.properties.groupMetaData.applicationIdentifier"}, {"type": "string", "name": "applicationType", "arg": "$body.properties.groupMetaData.applicationType", "enum": {"items": [{"value": "ORACLE"}, {"value": "SAP-HANA"}]}}, {"type": "string", "name": "deploymentSpecId", "arg": "$body.properties.groupMetaData.deploymentSpecId"}, {"type": "array<object>", "name": "globalPlacementRules", "arg": "$body.properties.groupMetaData.globalPlacementRules", "item": {"type": "object", "props": [{"type": "string", "name": "key", "arg": "$body.properties.groupMetaData.globalPlacementRules[].key", "required": true}, {"type": "string", "name": "value", "arg": "$body.properties.groupMetaData.globalPlacementRules[].value", "required": true}]}, "identifiers": ["key"]}, {"type": "string", "name": "groupDescription", "arg": "$body.properties.groupMetaData.groupDescription"}]}, {"type": "array<object>", "name": "volumes", "arg": "$body.properties.volumes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.volumes[].name"}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Disabled"}, "type": "string", "name": "avsDataStore", "arg": "$body.properties.volumes[].properties.avsDataStore", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"nullable": true, "type": "string", "name": "backupId", "arg": "$body.properties.volumes[].properties.backupId"}, {"type": "string", "name": "capacityPoolResourceId", "arg": "$body.properties.volumes[].properties.capacityPoolResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "coolAccess", "arg": "$body.properties.volumes[].properties.coolAccess"}, {"type": "string", "name": "coolAccessRetrievalPolicy", "arg": "$body.properties.volumes[].properties.coolAccessRetrievalPolicy", "enum": {"items": [{"value": "Default"}, {"value": "Never"}, {"value": "OnRead"}]}}, {"type": "integer32", "name": "coolnessPeriod", "arg": "$body.properties.volumes[].properties.coolnessPeriod", "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "name": "creationToken", "arg": "$body.properties.volumes[].properties.creationToken", "required": true, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"type": "object", "name": "dataProtection", "arg": "$body.properties.volumes[].properties.dataProtection", "props": [{"type": "object", "name": "replication", "arg": "$body.properties.volumes[].properties.dataProtection.replication", "props": [{"type": "string", "name": "endpointType", "arg": "$body.properties.volumes[].properties.dataProtection.replication.endpointType", "enum": {"items": [{"value": "dst"}, {"value": "src"}]}}, {"type": "string", "name": "remoteVolumeRegion", "arg": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeRegion"}, {"type": "string", "name": "remoteVolumeResourceId", "arg": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeResourceId", "required": true}, {"type": "string", "name": "replicationSchedule", "arg": "$body.properties.volumes[].properties.dataProtection.replication.replicationSchedule", "enum": {"items": [{"value": "_10minutely"}, {"value": "daily"}, {"value": "hourly"}]}}]}, {"type": "object", "name": "snapshot", "arg": "$body.properties.volumes[].properties.dataProtection.snapshot", "props": [{"type": "string", "name": "snapshotPolicyId", "arg": "$body.properties.volumes[].properties.dataProtection.snapshot.snapshotPolicyId"}]}, {"type": "object", "name": "volumeRelocation", "arg": "$body.properties.volumes[].properties.dataProtection.volumeRelocation", "props": [{"type": "boolean", "name": "relocationRequested", "arg": "$body.properties.volumes[].properties.dataProtection.volumeRelocation.relocationRequested"}]}]}, {"default": {"value": 0}, "type": "integer64", "name": "defaultGroupQuotaInKiBs", "arg": "$body.properties.volumes[].properties.defaultGroupQuotaInKiBs"}, {"default": {"value": 0}, "type": "integer64", "name": "defaultUserQuotaInKiBs", "arg": "$body.properties.volumes[].properties.defaultUserQuotaInKiBs"}, {"type": "boolean", "name": "deleteBaseSnapshot", "arg": "$body.properties.volumes[].properties.deleteBaseSnapshot"}, {"default": {"value": "Disabled"}, "type": "string", "name": "enableSubvolumes", "arg": "$body.properties.volumes[].properties.enableSubvolumes", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "Microsoft.NetApp"}, "type": "string", "name": "encryptionKeySource", "arg": "$body.properties.volumes[].properties.encryptionKeySource", "enum": {"items": [{"value": "Microsoft.KeyVault"}, {"value": "Microsoft.NetApp"}]}}, {"type": "object", "name": "exportPolicy", "arg": "$body.properties.volumes[].properties.exportPolicy", "props": [{"type": "array<object>", "name": "rules", "arg": "$body.properties.volumes[].properties.exportPolicy.rules", "item": {"type": "object", "props": [{"type": "string", "name": "allowedClients", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].allowedClients"}, {"default": {"value": "Restricted"}, "type": "string", "name": "chownMode", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].chownMode", "enum": {"items": [{"value": "Restricted"}, {"value": "Unrestricted"}]}}, {"type": "boolean", "name": "cifs", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].cifs"}, {"default": {"value": true}, "type": "boolean", "name": "hasRootAccess", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].hasRootAccess"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadWrite"}, {"type": "boolean", "name": "nfsv3", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv3"}, {"type": "boolean", "name": "nfsv41", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv41"}, {"type": "integer32", "name": "ruleIndex", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].ruleIndex"}, {"type": "boolean", "name": "unixReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadOnly"}, {"type": "boolean", "name": "unixReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadWrite"}]}, "identifiers": ["ruleIndex"]}]}, {"default": {"value": false}, "type": "boolean", "name": "isDefaultQuotaEnabled", "arg": "$body.properties.volumes[].properties.isDefaultQuotaEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "isLargeVolume", "arg": "$body.properties.volumes[].properties.isLargeVolume"}, {"type": "boolean", "name": "isRestoring", "arg": "$body.properties.volumes[].properties.isRestoring"}, {"default": {"value": false}, "type": "boolean", "name": "kerberosEnabled", "arg": "$body.properties.volumes[].properties.kerberosEnabled"}, {"type": "string", "name": "keyVaultPrivateEndpointResourceId", "arg": "$body.properties.volumes[].properties.keyVaultPrivateEndpointResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "ldapEnabled", "arg": "$body.properties.volumes[].properties.ldapEnabled"}, {"default": {"value": "Basic"}, "type": "string", "name": "networkFeatures", "arg": "$body.properties.volumes[].properties.networkFeatures", "enum": {"items": [{"value": "Basic"}, {"value": "Basic_Standard"}, {"value": "Standard"}, {"value": "Standard_Basic"}]}}, {"type": "array<object>", "name": "placementRules", "arg": "$body.properties.volumes[].properties.placementRules", "item": {"type": "object", "props": [{"type": "string", "name": "key", "arg": "@PlacementKeyValuePairs_create.key", "required": true}, {"type": "string", "name": "value", "arg": "@PlacementKeyValuePairs_create.value", "required": true}], "cls": "PlacementKeyValuePairs_create"}, "identifiers": ["key"]}, {"type": "array<string>", "name": "protocolTypes", "arg": "$body.properties.volumes[].properties.protocolTypes", "item": {"type": "string"}}, {"type": "string", "name": "proximityPlacementGroup", "arg": "$body.properties.volumes[].properties.proximityPlacementGroup"}, {"default": {"value": "unix"}, "type": "string", "name": "securityStyle", "arg": "$body.properties.volumes[].properties.securityStyle", "enum": {"items": [{"value": "ntfs"}, {"value": "unix"}]}}, {"default": {"value": "Premium"}, "type": "string", "name": "serviceLevel", "arg": "$body.properties.volumes[].properties.serviceLevel", "enum": {"items": [{"value": "Premium"}, {"value": "Standard"}, {"value": "StandardZRS"}, {"value": "Ultra"}]}}, {"nullable": true, "type": "string", "name": "smbAccessBasedEnumeration", "arg": "$body.properties.volumes[].properties.smbAccessBasedEnumeration", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": false}, "type": "boolean", "name": "smbContinuouslyAvailable", "arg": "$body.properties.volumes[].properties.smbContinuouslyAvailable"}, {"default": {"value": false}, "type": "boolean", "name": "smbEncryption", "arg": "$body.properties.volumes[].properties.smbEncryption"}, {"type": "string", "name": "smbNonBrowsable", "arg": "$body.properties.volumes[].properties.smbNonBrowsable", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": true}, "type": "boolean", "name": "snapshotDirectoryVisible", "arg": "$body.properties.volumes[].properties.snapshotDirectoryVisible"}, {"nullable": true, "type": "string", "name": "snapshotId", "arg": "$body.properties.volumes[].properties.snapshotId"}, {"type": "string", "name": "subnetId", "arg": "$body.properties.volumes[].properties.subnetId", "required": true}, {"nullable": true, "type": "float", "name": "throughputMibps", "arg": "$body.properties.volumes[].properties.throughputMibps"}, {"nullable": true, "type": "string", "name": "unixPermissions", "arg": "$body.properties.volumes[].properties.unixPermissions", "format": {"maxLength": 4, "minLength": 4}}, {"default": {"value": 107374182400}, "type": "integer64", "name": "usageThreshold", "arg": "$body.properties.volumes[].properties.usageThreshold", "required": true, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"type": "string", "name": "volumeSpecName", "arg": "$body.properties.volumes[].properties.volumeSpecName"}, {"type": "string", "name": "volumeType", "arg": "$body.properties.volumes[].properties.volumeType"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$body.properties.volumes[].tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$body.properties.volumes[].zones", "item": {"type": "string", "format": {"maxLength": 255, "minLength": 1}}}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "groupMetaData", "props": [{"type": "string", "name": "applicationIdentifier"}, {"type": "string", "name": "applicationType", "enum": {"items": [{"value": "ORACLE"}, {"value": "SAP-HANA"}]}}, {"type": "string", "name": "deploymentSpecId"}, {"type": "array<object>", "name": "globalPlacementRules", "item": {"type": "object", "props": [{"type": "string", "name": "key", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "PlacementKeyValuePairs_read"}, "identifiers": ["key"]}, {"type": "string", "name": "groupDescription"}, {"readOnly": true, "type": "integer64", "name": "volumesCount"}]}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "volumes", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"readOnly": true, "type": "float", "name": "actualThroughputMibps"}, {"default": {"value": "Disabled"}, "type": "string", "name": "avsDataStore", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"nullable": true, "type": "string", "name": "backupId"}, {"readOnly": true, "type": "string", "name": "baremetalTenantId"}, {"type": "string", "name": "capacityPoolResourceId"}, {"readOnly": true, "nullable": true, "type": "integer32", "name": "cloneProgress"}, {"default": {"value": false}, "type": "boolean", "name": "coolAccess"}, {"type": "string", "name": "coolAccessRetrievalPolicy", "enum": {"items": [{"value": "Default"}, {"value": "Never"}, {"value": "OnRead"}]}}, {"type": "integer32", "name": "coolnessPeriod", "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "name": "creationToken", "required": true, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"type": "object", "name": "dataProtection", "props": [{"type": "object", "name": "replication", "props": [{"type": "string", "name": "endpointType", "enum": {"items": [{"value": "dst"}, {"value": "src"}]}}, {"type": "string", "name": "remoteVolumeRegion"}, {"type": "string", "name": "remoteVolumeResourceId", "required": true}, {"readOnly": true, "type": "string", "name": "replicationId"}, {"type": "string", "name": "replicationSchedule", "enum": {"items": [{"value": "_10minutely"}, {"value": "daily"}, {"value": "hourly"}]}}]}, {"type": "object", "name": "snapshot", "props": [{"type": "string", "name": "snapshotPolicyId"}]}, {"type": "object", "name": "volumeRelocation", "props": [{"readOnly": true, "type": "boolean", "name": "readyToBeFinalized"}, {"type": "boolean", "name": "relocationRequested"}]}]}, {"readOnly": true, "type": "array<string>", "name": "dataStoreResourceId", "item": {"type": "string"}}, {"default": {"value": 0}, "type": "integer64", "name": "defaultGroupQuotaInKiBs"}, {"default": {"value": 0}, "type": "integer64", "name": "defaultUserQuotaInKiBs"}, {"type": "boolean", "name": "deleteBaseSnapshot"}, {"default": {"value": "Disabled"}, "type": "string", "name": "enableSubvolumes", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "boolean", "name": "encrypted"}, {"default": {"value": "Microsoft.NetApp"}, "type": "string", "name": "encryptionKeySource", "enum": {"items": [{"value": "Microsoft.KeyVault"}, {"value": "Microsoft.NetApp"}]}}, {"type": "object", "name": "exportPolicy", "props": [{"type": "array<object>", "name": "rules", "item": {"type": "object", "props": [{"type": "string", "name": "allowedClients"}, {"default": {"value": "Restricted"}, "type": "string", "name": "chownMode", "enum": {"items": [{"value": "Restricted"}, {"value": "Unrestricted"}]}}, {"type": "boolean", "name": "cifs"}, {"default": {"value": true}, "type": "boolean", "name": "hasRootAccess"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadWrite"}, {"type": "boolean", "name": "nfsv3"}, {"type": "boolean", "name": "nfsv41"}, {"type": "integer32", "name": "ruleIndex"}, {"type": "boolean", "name": "unixReadOnly"}, {"type": "boolean", "name": "unixReadWrite"}]}, "identifiers": ["ruleIndex"]}]}, {"readOnly": true, "default": {"value": "Disabled"}, "type": "string", "name": "fileAccessLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "string", "name": "fileSystemId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"default": {"value": false}, "type": "boolean", "name": "isDefaultQuotaEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "isLargeVolume"}, {"type": "boolean", "name": "isRestoring"}, {"default": {"value": false}, "type": "boolean", "name": "kerberosEnabled"}, {"type": "string", "name": "keyVaultPrivateEndpointResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "ldapEnabled"}, {"readOnly": true, "type": "integer64", "name": "maximumNumberOfFiles"}, {"readOnly": true, "type": "array<object>", "name": "mountTargets", "item": {"type": "object", "props": [{"type": "string", "name": "fileSystemId", "required": true, "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"readOnly": true, "type": "string", "name": "ipAddress"}, {"readOnly": true, "type": "string", "name": "mountTargetId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"type": "string", "name": "smbServerFqdn"}]}, "identifiers": ["fileSystemId"]}, {"default": {"value": "Basic"}, "type": "string", "name": "networkFeatures", "enum": {"items": [{"value": "Basic"}, {"value": "Basic_Standard"}, {"value": "Standard"}, {"value": "Standard_Basic"}]}}, {"readOnly": true, "type": "string", "name": "networkSiblingSetId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"readOnly": true, "nullable": true, "type": "string", "name": "originatingResourceId"}, {"type": "array<@PlacementKeyValuePairs_read>", "name": "placementRules", "item": {"type": "@PlacementKeyValuePairs_read"}, "identifiers": ["key"]}, {"type": "array<string>", "name": "protocolTypes", "item": {"type": "string"}}, {"readOnly": true, "nullable": true, "type": "string", "name": "provisionedAvailabilityZone"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "proximityPlacementGroup"}, {"default": {"value": "unix"}, "type": "string", "name": "securityStyle", "enum": {"items": [{"value": "ntfs"}, {"value": "unix"}]}}, {"default": {"value": "Premium"}, "type": "string", "name": "serviceLevel", "enum": {"items": [{"value": "Premium"}, {"value": "Standard"}, {"value": "StandardZRS"}, {"value": "Ultra"}]}}, {"nullable": true, "type": "string", "name": "smbAccessBasedEnumeration", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": false}, "type": "boolean", "name": "smbContinuouslyAvailable"}, {"default": {"value": false}, "type": "boolean", "name": "smbEncryption"}, {"type": "string", "name": "smbNonBrowsable", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": true}, "type": "boolean", "name": "snapshotDirectoryVisible"}, {"nullable": true, "type": "string", "name": "snapshotId"}, {"readOnly": true, "type": "string", "name": "storageToNetworkProximity", "enum": {"items": [{"value": "AcrossT2"}, {"value": "Default"}, {"value": "T1"}, {"value": "T2"}]}}, {"type": "string", "name": "subnetId", "required": true}, {"readOnly": true, "type": "string", "name": "t2Network"}, {"nullable": true, "type": "float", "name": "throughputMibps"}, {"nullable": true, "type": "string", "name": "unixPermissions", "format": {"maxLength": 4, "minLength": 4}}, {"default": {"value": 107374182400}, "type": "integer64", "name": "usageThreshold", "required": true, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"readOnly": true, "type": "string", "name": "volumeGroupName"}, {"type": "string", "name": "volumeSpecName"}, {"type": "string", "name": "volumeType"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string", "format": {"maxLength": 255, "minLength": 1}}}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2023-05-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/volumegroups/{}", "version": "2023-05-01", "swagger": "mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vdm9sdW1lR3JvdXBzL3t2b2x1bWVHcm91cE5hbWV9/V/MjAyMy0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.accountName", "options": ["a", "account-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the NetApp account"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.volumeGroupName", "options": ["n", "name", "group-name", "volume-group-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the volumeGroup"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "object", "var": "$body.properties.groupMetaData", "options": ["group-meta-data"], "group": "Properties", "help": {"short": "Volume group details"}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.groupMetaData.applicationIdentifier", "options": ["application-identifier"], "help": {"short": "Application specific identifier"}}, {"nullable": true, "type": "string", "var": "$body.properties.groupMetaData.applicationType", "options": ["application-type"], "group": "GroupMetaData", "help": {"short": "Application Type"}, "default": {"value": "SAP-HANA"}, "enum": {"items": [{"name": "ORACLE", "value": "ORACLE"}, {"name": "SAP-HANA", "value": "SAP-HANA"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.groupMetaData.deploymentSpecId", "options": ["deployment-spec-id"], "help": {"short": "Application specific identifier of deployment rules for the volume group"}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.groupMetaData.globalPlacementRules", "options": ["global-placement-rules"], "help": {"short": "Application specific placement rules for the volume group"}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "@PlacementKeyValuePairs_update.key", "options": ["key"], "help": {"short": "Key for an application specific parameter for the placement of volumes in the volume group"}}, {"type": "string", "var": "@PlacementKeyValuePairs_update.value", "options": ["value"], "help": {"short": "Value for an application specific parameter for the placement of volumes in the volume group"}}], "cls": "PlacementKeyValuePairs_update"}}, {"nullable": true, "type": "string", "var": "$body.properties.groupMetaData.groupDescription", "options": ["group-description"], "help": {"short": "Group Description"}}]}, {"nullable": true, "type": "array<object>", "var": "$body.properties.volumes", "options": ["volumes"], "group": "Properties", "help": {"short": "List of volumes from group"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.volumes[].name", "options": ["name"], "help": {"short": "Resource name"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.avsDataStore", "options": ["avs-data-store"], "group": "Properties", "help": {"short": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.capacityPoolResourceId", "options": ["capacity-pool-resource-id"], "group": "Properties", "help": {"short": "Pool Resource Id used in case of creating a volume through volume group"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.coolAccess", "options": ["cool-access"], "group": "Properties", "help": {"short": "Specifies whether Cool Access(tiering) is enabled for the volume."}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.coolAccessRetrievalPolicy", "options": ["cool-access-retrieval-policy"], "group": "Properties", "help": {"short": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:   Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.  OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.  Never - No client-driven data is pulled from cool tier to standard storage."}, "enum": {"items": [{"name": "Default", "value": "Default"}, {"name": "Never", "value": "Never"}, {"name": "OnRead", "value": "OnRead"}]}}, {"nullable": true, "type": "integer32", "var": "$body.properties.volumes[].properties.coolnessPeriod", "options": ["coolness-period"], "group": "Properties", "help": {"short": "Specifies the number of days after which data that is not accessed by clients will be tiered."}, "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "var": "$body.properties.volumes[].properties.creationToken", "options": ["creation-token"], "group": "Properties", "help": {"short": "A unique file path for the volume. Used when creating mount targets"}, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"nullable": true, "type": "object", "var": "$body.properties.volumes[].properties.dataProtection", "options": ["data-protection"], "group": "Properties", "help": {"short": "DataProtection type volumes include an object containing details of the replication"}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.volumes[].properties.dataProtection.replication", "options": ["replication"], "help": {"short": "Replication properties"}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.endpointType", "options": ["endpoint-type"], "help": {"short": "Indicates whether the local volume is the source or destination for the Volume Replication"}, "enum": {"items": [{"name": "dst", "value": "dst"}, {"name": "src", "value": "src"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeRegion", "options": ["remote-volume-region"], "help": {"short": "The remote region for the other end of the Volume Replication."}}, {"type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeResourceId", "options": ["remote-volume-resource-id"], "help": {"short": "The resource ID of the remote volume."}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.dataProtection.replication.replicationSchedule", "options": ["replication-schedule"], "help": {"short": "Schedule"}, "enum": {"items": [{"name": "_10minutely", "value": "_10minutely"}, {"name": "daily", "value": "daily"}, {"name": "hourly", "value": "hourly"}]}}]}, {"nullable": true, "type": "object", "var": "$body.properties.volumes[].properties.dataProtection.snapshot", "options": ["snapshot"], "help": {"short": "Snapshot properties."}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.dataProtection.snapshot.snapshotPolicyId", "options": ["snapshot-policy-id"], "help": {"short": "Snapshot Policy ResourceId"}}]}, {"nullable": true, "type": "object", "var": "$body.properties.volumes[].properties.dataProtection.volumeRelocation", "options": ["volume-relocation"], "help": {"short": "VolumeRelocation properties"}, "args": [{"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.dataProtection.volumeRelocation.relocationRequested", "options": ["relocation-requested"], "help": {"short": "Has relocation been requested for this volume"}}]}]}, {"nullable": true, "type": "integer64", "var": "$body.properties.volumes[].properties.defaultGroupQuotaInKiBs", "options": ["default-group-quota-in-ki-bs"], "group": "Properties", "help": {"short": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies."}}, {"nullable": true, "type": "integer64", "var": "$body.properties.volumes[].properties.defaultUserQuotaInKiBs", "options": ["default-user-quota-in-ki-bs"], "group": "Properties", "help": {"short": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies ."}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.deleteBaseSnapshot", "options": ["delete-base-snapshot"], "group": "Properties", "help": {"short": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.enableSubvolumes", "options": ["enable-subvolumes"], "group": "Properties", "help": {"short": "Flag indicating whether subvolume operations are enabled on the volume"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.encryptionKeySource", "options": ["encryption-key-source"], "group": "Properties", "help": {"short": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'"}, "enum": {"items": [{"name": "Microsoft.KeyVault", "value": "Microsoft.KeyVault"}, {"name": "Microsoft.NetApp", "value": "Microsoft.NetApp"}]}}, {"nullable": true, "type": "object", "var": "$body.properties.volumes[].properties.exportPolicy", "options": ["export-policy"], "group": "Properties", "help": {"short": "Set of export policy rules"}, "args": [{"nullable": true, "type": "array<object>", "var": "$body.properties.volumes[].properties.exportPolicy.rules", "options": ["rules"], "help": {"short": "Export policy rule"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].allowedClients", "options": ["allowed-clients"], "help": {"short": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].chownMode", "options": ["chown-mode"], "help": {"short": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own."}, "enum": {"items": [{"name": "Restricted", "value": "Restricted"}, {"name": "Unrestricted", "value": "Unrestricted"}]}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].cifs", "options": ["cifs"], "help": {"short": "Allows CIFS protocol"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].hasRootAccess", "options": ["has-root-access"], "help": {"short": "Has root access to volume"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadOnly", "options": ["kerberos5-read-only"], "help": {"short": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadWrite", "options": ["kerberos5-read-write"], "help": {"short": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadOnly", "options": ["kerberos5i-read-only"], "help": {"short": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadWrite", "options": ["kerberos5i-read-write"], "help": {"short": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadOnly", "options": ["kerberos5p-read-only"], "help": {"short": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadWrite", "options": ["kerberos5p-read-write"], "help": {"short": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv3", "options": ["nfsv3"], "help": {"short": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv41", "options": ["nfsv41"], "help": {"short": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"}}, {"nullable": true, "type": "integer32", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].ruleIndex", "options": ["rule-index"], "help": {"short": "Order index"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadOnly", "options": ["unix-read-only"], "help": {"short": "Read only access"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadWrite", "options": ["unix-read-write"], "help": {"short": "Read and write access"}}]}}]}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.isDefaultQuotaEnabled", "options": ["is-default-quota-enabled"], "group": "Properties", "help": {"short": "Specifies if default quota is enabled for the volume."}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.isLargeVolume", "options": ["is-large-volume"], "group": "Properties", "help": {"short": "Specifies whether volume is a Large Volume or Regular Volume."}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.isRestoring", "options": ["is-restoring"], "group": "Properties", "help": {"short": "Restoring"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.keyVaultPrivateEndpointResourceId", "options": ["key-vault-private-endpoint-resource-id"], "group": "Properties", "help": {"short": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.ldapEnabled", "options": ["ldap-enabled"], "group": "Properties", "help": {"short": "Specifies whether LDAP is enabled or not for a given NFS volume."}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.networkFeatures", "options": ["network-features"], "group": "Properties", "help": {"short": "Network features available to the volume, or current state of update."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Basic_Standard", "value": "Basic_Standard"}, {"name": "Standard", "value": "Standard"}, {"name": "Standard_Basic", "value": "Standard_Basic"}]}}, {"nullable": true, "type": "array<@PlacementKeyValuePairs_update>", "var": "$body.properties.volumes[].properties.placementRules", "options": ["placement-rules"], "group": "Properties", "help": {"short": "Application specific placement rules for the particular volume"}, "item": {"nullable": true, "type": "@PlacementKeyValuePairs_update"}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.volumes[].properties.protocolTypes", "options": ["protocol-types"], "group": "Properties", "help": {"short": "Set of protocol types, default NFSv3, CIFS for SMB protocol"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.proximityPlacementGroup", "options": ["proximity-placement-group"], "group": "Properties", "help": {"short": "Proximity placement group associated with the volume"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.securityStyle", "options": ["security-style"], "group": "Properties", "help": {"short": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol"}, "enum": {"items": [{"name": "ntfs", "value": "ntfs"}, {"name": "unix", "value": "unix"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.serviceLevel", "options": ["service-level"], "group": "Properties", "help": {"short": "serviceLevel"}, "enum": {"items": [{"name": "Premium", "value": "Premium"}, {"name": "Standard", "value": "Standard"}, {"name": "StandardZRS", "value": "StandardZRS"}, {"name": "Ultra", "value": "Ultra"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.smbAccessBasedEnumeration", "options": ["smb-access-based-enumeration"], "group": "Properties", "help": {"short": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.smbContinuouslyAvailable", "options": ["smb-continuously-available"], "group": "Properties", "help": {"short": "Enables continuously available share property for smb volume. Only applicable for SMB volume"}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.smbEncryption", "options": ["smb-encryption"], "group": "Properties", "help": {"short": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.smbNonBrowsable", "options": ["smb-non-browsable"], "group": "Properties", "help": {"short": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "boolean", "var": "$body.properties.volumes[].properties.snapshotDirectoryVisible", "options": ["snapshot-directory-visible"], "group": "Properties", "help": {"short": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."}}, {"type": "string", "var": "$body.properties.volumes[].properties.subnetId", "options": ["subnet-id"], "group": "Properties", "help": {"short": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"}}, {"nullable": true, "type": "float", "var": "$body.properties.volumes[].properties.throughputMibps", "options": ["throughput-mibps"], "group": "Properties", "help": {"short": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.unixPermissions", "options": ["unix-permissions"], "group": "Properties", "help": {"short": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users."}, "format": {"maxLength": 4, "minLength": 4}}, {"type": "integer64", "var": "$body.properties.volumes[].properties.usageThreshold", "options": ["usage-threshold"], "group": "Properties", "help": {"short": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB, 500Tib for LargeVolume or 2400Tib for LargeVolume on exceptional basis. Specified in bytes."}, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.volumeSpecName", "options": ["volume-spec-name"], "group": "Properties", "help": {"short": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log"}}, {"nullable": true, "type": "string", "var": "$body.properties.volumes[].properties.volumeType", "options": ["volume-type"], "group": "Properties", "help": {"short": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection"}}, {"nullable": true, "type": "object", "var": "$body.properties.volumes[].tags", "options": ["tags"], "help": {"short": "Resource tags"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}}]}], "operations": [{"operationId": "VolumeGroups_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "volumeGroupName", "arg": "$Path.volumeGroupName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "groupMetaData", "props": [{"type": "string", "name": "applicationIdentifier"}, {"type": "string", "name": "applicationType", "enum": {"items": [{"value": "ORACLE"}, {"value": "SAP-HANA"}]}}, {"type": "string", "name": "deploymentSpecId"}, {"type": "array<object>", "name": "globalPlacementRules", "item": {"type": "object", "props": [{"type": "string", "name": "key", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "PlacementKeyValuePairs_read"}, "identifiers": ["key"]}, {"type": "string", "name": "groupDescription"}, {"readOnly": true, "type": "integer64", "name": "volumesCount"}]}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "volumes", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"readOnly": true, "type": "float", "name": "actualThroughputMibps"}, {"default": {"value": "Disabled"}, "type": "string", "name": "avsDataStore", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"nullable": true, "type": "string", "name": "backupId"}, {"readOnly": true, "type": "string", "name": "baremetalTenantId"}, {"type": "string", "name": "capacityPoolResourceId"}, {"readOnly": true, "nullable": true, "type": "integer32", "name": "cloneProgress"}, {"default": {"value": false}, "type": "boolean", "name": "coolAccess"}, {"type": "string", "name": "coolAccessRetrievalPolicy", "enum": {"items": [{"value": "Default"}, {"value": "Never"}, {"value": "OnRead"}]}}, {"type": "integer32", "name": "coolnessPeriod", "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "name": "creationToken", "required": true, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"type": "object", "name": "dataProtection", "props": [{"type": "object", "name": "replication", "props": [{"type": "string", "name": "endpointType", "enum": {"items": [{"value": "dst"}, {"value": "src"}]}}, {"type": "string", "name": "remoteVolumeRegion"}, {"type": "string", "name": "remoteVolumeResourceId", "required": true}, {"readOnly": true, "type": "string", "name": "replicationId"}, {"type": "string", "name": "replicationSchedule", "enum": {"items": [{"value": "_10minutely"}, {"value": "daily"}, {"value": "hourly"}]}}]}, {"type": "object", "name": "snapshot", "props": [{"type": "string", "name": "snapshotPolicyId"}]}, {"type": "object", "name": "volumeRelocation", "props": [{"readOnly": true, "type": "boolean", "name": "readyToBeFinalized"}, {"type": "boolean", "name": "relocationRequested"}]}]}, {"readOnly": true, "type": "array<string>", "name": "dataStoreResourceId", "item": {"type": "string"}}, {"default": {"value": 0}, "type": "integer64", "name": "defaultGroupQuotaInKiBs"}, {"default": {"value": 0}, "type": "integer64", "name": "defaultUserQuotaInKiBs"}, {"type": "boolean", "name": "deleteBaseSnapshot"}, {"default": {"value": "Disabled"}, "type": "string", "name": "enableSubvolumes", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "boolean", "name": "encrypted"}, {"default": {"value": "Microsoft.NetApp"}, "type": "string", "name": "encryptionKeySource", "enum": {"items": [{"value": "Microsoft.KeyVault"}, {"value": "Microsoft.NetApp"}]}}, {"type": "object", "name": "exportPolicy", "props": [{"type": "array<object>", "name": "rules", "item": {"type": "object", "props": [{"type": "string", "name": "allowedClients"}, {"default": {"value": "Restricted"}, "type": "string", "name": "chownMode", "enum": {"items": [{"value": "Restricted"}, {"value": "Unrestricted"}]}}, {"type": "boolean", "name": "cifs"}, {"default": {"value": true}, "type": "boolean", "name": "hasRootAccess"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadWrite"}, {"type": "boolean", "name": "nfsv3"}, {"type": "boolean", "name": "nfsv41"}, {"type": "integer32", "name": "ruleIndex"}, {"type": "boolean", "name": "unixReadOnly"}, {"type": "boolean", "name": "unixReadWrite"}]}, "identifiers": ["ruleIndex"]}]}, {"readOnly": true, "default": {"value": "Disabled"}, "type": "string", "name": "fileAccessLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "string", "name": "fileSystemId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"default": {"value": false}, "type": "boolean", "name": "isDefaultQuotaEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "isLargeVolume"}, {"type": "boolean", "name": "isRestoring"}, {"default": {"value": false}, "type": "boolean", "name": "kerberosEnabled"}, {"type": "string", "name": "keyVaultPrivateEndpointResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "ldapEnabled"}, {"readOnly": true, "type": "integer64", "name": "maximumNumberOfFiles"}, {"readOnly": true, "type": "array<object>", "name": "mountTargets", "item": {"type": "object", "props": [{"type": "string", "name": "fileSystemId", "required": true, "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"readOnly": true, "type": "string", "name": "ipAddress"}, {"readOnly": true, "type": "string", "name": "mountTargetId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"type": "string", "name": "smbServerFqdn"}]}, "identifiers": ["fileSystemId"]}, {"default": {"value": "Basic"}, "type": "string", "name": "networkFeatures", "enum": {"items": [{"value": "Basic"}, {"value": "Basic_Standard"}, {"value": "Standard"}, {"value": "Standard_Basic"}]}}, {"readOnly": true, "type": "string", "name": "networkSiblingSetId", "format": {"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", "maxLength": 36, "minLength": 36}}, {"readOnly": true, "nullable": true, "type": "string", "name": "originatingResourceId"}, {"type": "array<@PlacementKeyValuePairs_read>", "name": "placementRules", "item": {"type": "@PlacementKeyValuePairs_read"}, "identifiers": ["key"]}, {"type": "array<string>", "name": "protocolTypes", "item": {"type": "string"}}, {"readOnly": true, "nullable": true, "type": "string", "name": "provisionedAvailabilityZone"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "proximityPlacementGroup"}, {"default": {"value": "unix"}, "type": "string", "name": "securityStyle", "enum": {"items": [{"value": "ntfs"}, {"value": "unix"}]}}, {"default": {"value": "Premium"}, "type": "string", "name": "serviceLevel", "enum": {"items": [{"value": "Premium"}, {"value": "Standard"}, {"value": "StandardZRS"}, {"value": "Ultra"}]}}, {"nullable": true, "type": "string", "name": "smbAccessBasedEnumeration", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": false}, "type": "boolean", "name": "smbContinuouslyAvailable"}, {"default": {"value": false}, "type": "boolean", "name": "smbEncryption"}, {"type": "string", "name": "smbNonBrowsable", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": true}, "type": "boolean", "name": "snapshotDirectoryVisible"}, {"nullable": true, "type": "string", "name": "snapshotId"}, {"readOnly": true, "type": "string", "name": "storageToNetworkProximity", "enum": {"items": [{"value": "AcrossT2"}, {"value": "Default"}, {"value": "T1"}, {"value": "T2"}]}}, {"type": "string", "name": "subnetId", "required": true}, {"readOnly": true, "type": "string", "name": "t2Network"}, {"nullable": true, "type": "float", "name": "throughputMibps"}, {"nullable": true, "type": "string", "name": "unixPermissions", "format": {"maxLength": 4, "minLength": 4}}, {"default": {"value": 107374182400}, "type": "integer64", "name": "usageThreshold", "required": true, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"readOnly": true, "type": "string", "name": "volumeGroupName"}, {"type": "string", "name": "volumeSpecName"}, {"type": "string", "name": "volumeType"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string", "format": {"maxLength": 255, "minLength": 1}}}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "VolumeGroupDetails_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "body", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "groupMetaData", "arg": "$body.properties.groupMetaData", "props": [{"type": "string", "name": "applicationIdentifier", "arg": "$body.properties.groupMetaData.applicationIdentifier"}, {"type": "string", "name": "applicationType", "arg": "$body.properties.groupMetaData.applicationType", "enum": {"items": [{"value": "ORACLE"}, {"value": "SAP-HANA"}]}}, {"type": "string", "name": "deploymentSpecId", "arg": "$body.properties.groupMetaData.deploymentSpecId"}, {"type": "array<object>", "name": "globalPlacementRules", "arg": "$body.properties.groupMetaData.globalPlacementRules", "item": {"type": "object", "props": [{"type": "string", "name": "key", "arg": "@PlacementKeyValuePairs_update.key", "required": true}, {"type": "string", "name": "value", "arg": "@PlacementKeyValuePairs_update.value", "required": true}], "cls": "PlacementKeyValuePairs_update"}, "identifiers": ["key"]}, {"type": "string", "name": "groupDescription", "arg": "$body.properties.groupMetaData.groupDescription"}]}, {"type": "array<object>", "name": "volumes", "arg": "$body.properties.volumes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.volumes[].name"}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Disabled"}, "type": "string", "name": "avsDataStore", "arg": "$body.properties.volumes[].properties.avsDataStore", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "capacityPoolResourceId", "arg": "$body.properties.volumes[].properties.capacityPoolResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "coolAccess", "arg": "$body.properties.volumes[].properties.coolAccess"}, {"type": "string", "name": "coolAccessRetrievalPolicy", "arg": "$body.properties.volumes[].properties.coolAccessRetrievalPolicy", "enum": {"items": [{"value": "Default"}, {"value": "Never"}, {"value": "OnRead"}]}}, {"type": "integer32", "name": "coolnessPeriod", "arg": "$body.properties.volumes[].properties.coolnessPeriod", "format": {"maximum": 63, "minimum": 7}}, {"type": "string", "name": "creationToken", "arg": "$body.properties.volumes[].properties.creationToken", "required": true, "format": {"pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$", "maxLength": 80, "minLength": 1}}, {"type": "object", "name": "dataProtection", "arg": "$body.properties.volumes[].properties.dataProtection", "props": [{"type": "object", "name": "replication", "arg": "$body.properties.volumes[].properties.dataProtection.replication", "props": [{"type": "string", "name": "endpointType", "arg": "$body.properties.volumes[].properties.dataProtection.replication.endpointType", "enum": {"items": [{"value": "dst"}, {"value": "src"}]}}, {"type": "string", "name": "remoteVolumeRegion", "arg": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeRegion"}, {"type": "string", "name": "remoteVolumeResourceId", "arg": "$body.properties.volumes[].properties.dataProtection.replication.remoteVolumeResourceId", "required": true}, {"type": "string", "name": "replicationSchedule", "arg": "$body.properties.volumes[].properties.dataProtection.replication.replicationSchedule", "enum": {"items": [{"value": "_10minutely"}, {"value": "daily"}, {"value": "hourly"}]}}]}, {"type": "object", "name": "snapshot", "arg": "$body.properties.volumes[].properties.dataProtection.snapshot", "props": [{"type": "string", "name": "snapshotPolicyId", "arg": "$body.properties.volumes[].properties.dataProtection.snapshot.snapshotPolicyId"}]}, {"type": "object", "name": "volumeRelocation", "arg": "$body.properties.volumes[].properties.dataProtection.volumeRelocation", "props": [{"type": "boolean", "name": "relocationRequested", "arg": "$body.properties.volumes[].properties.dataProtection.volumeRelocation.relocationRequested"}]}]}, {"default": {"value": 0}, "type": "integer64", "name": "defaultGroupQuotaInKiBs", "arg": "$body.properties.volumes[].properties.defaultGroupQuotaInKiBs"}, {"default": {"value": 0}, "type": "integer64", "name": "defaultUserQuotaInKiBs", "arg": "$body.properties.volumes[].properties.defaultUserQuotaInKiBs"}, {"type": "boolean", "name": "deleteBaseSnapshot", "arg": "$body.properties.volumes[].properties.deleteBaseSnapshot"}, {"default": {"value": "Disabled"}, "type": "string", "name": "enableSubvolumes", "arg": "$body.properties.volumes[].properties.enableSubvolumes", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "Microsoft.NetApp"}, "type": "string", "name": "encryptionKeySource", "arg": "$body.properties.volumes[].properties.encryptionKeySource", "enum": {"items": [{"value": "Microsoft.KeyVault"}, {"value": "Microsoft.NetApp"}]}}, {"type": "object", "name": "exportPolicy", "arg": "$body.properties.volumes[].properties.exportPolicy", "props": [{"type": "array<object>", "name": "rules", "arg": "$body.properties.volumes[].properties.exportPolicy.rules", "item": {"type": "object", "props": [{"type": "string", "name": "allowedClients", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].allowedClients"}, {"default": {"value": "Restricted"}, "type": "string", "name": "chownMode", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].chownMode", "enum": {"items": [{"value": "Restricted"}, {"value": "Unrestricted"}]}}, {"type": "boolean", "name": "cifs", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].cifs"}, {"default": {"value": true}, "type": "boolean", "name": "hasRootAccess", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].hasRootAccess"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5ReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5ReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5iReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5iReadWrite"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadOnly"}, {"default": {"value": false}, "type": "boolean", "name": "kerberos5pReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].kerberos5pReadWrite"}, {"type": "boolean", "name": "nfsv3", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv3"}, {"type": "boolean", "name": "nfsv41", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].nfsv41"}, {"type": "integer32", "name": "ruleIndex", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].ruleIndex"}, {"type": "boolean", "name": "unixReadOnly", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadOnly"}, {"type": "boolean", "name": "unixReadWrite", "arg": "$body.properties.volumes[].properties.exportPolicy.rules[].unixReadWrite"}]}, "identifiers": ["ruleIndex"]}]}, {"default": {"value": false}, "type": "boolean", "name": "isDefaultQuotaEnabled", "arg": "$body.properties.volumes[].properties.isDefaultQuotaEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "isLargeVolume", "arg": "$body.properties.volumes[].properties.isLargeVolume"}, {"type": "boolean", "name": "isRestoring", "arg": "$body.properties.volumes[].properties.isRestoring"}, {"type": "string", "name": "keyVaultPrivateEndpointResourceId", "arg": "$body.properties.volumes[].properties.keyVaultPrivateEndpointResourceId"}, {"default": {"value": false}, "type": "boolean", "name": "ldapEnabled", "arg": "$body.properties.volumes[].properties.ldapEnabled"}, {"default": {"value": "Basic"}, "type": "string", "name": "networkFeatures", "arg": "$body.properties.volumes[].properties.networkFeatures", "enum": {"items": [{"value": "Basic"}, {"value": "Basic_Standard"}, {"value": "Standard"}, {"value": "Standard_Basic"}]}}, {"type": "array<@PlacementKeyValuePairs_update>", "name": "placementRules", "arg": "$body.properties.volumes[].properties.placementRules", "item": {"type": "@PlacementKeyValuePairs_update"}, "identifiers": ["key"]}, {"type": "array<string>", "name": "protocolTypes", "arg": "$body.properties.volumes[].properties.protocolTypes", "item": {"type": "string"}}, {"type": "string", "name": "proximityPlacementGroup", "arg": "$body.properties.volumes[].properties.proximityPlacementGroup"}, {"default": {"value": "unix"}, "type": "string", "name": "securityStyle", "arg": "$body.properties.volumes[].properties.securityStyle", "enum": {"items": [{"value": "ntfs"}, {"value": "unix"}]}}, {"default": {"value": "Premium"}, "type": "string", "name": "serviceLevel", "arg": "$body.properties.volumes[].properties.serviceLevel", "enum": {"items": [{"value": "Premium"}, {"value": "Standard"}, {"value": "StandardZRS"}, {"value": "Ultra"}]}}, {"nullable": true, "type": "string", "name": "smbAccessBasedEnumeration", "arg": "$body.properties.volumes[].properties.smbAccessBasedEnumeration", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": false}, "type": "boolean", "name": "smbContinuouslyAvailable", "arg": "$body.properties.volumes[].properties.smbContinuouslyAvailable"}, {"default": {"value": false}, "type": "boolean", "name": "smbEncryption", "arg": "$body.properties.volumes[].properties.smbEncryption"}, {"type": "string", "name": "smbNonBrowsable", "arg": "$body.properties.volumes[].properties.smbNonBrowsable", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": true}, "type": "boolean", "name": "snapshotDirectoryVisible", "arg": "$body.properties.volumes[].properties.snapshotDirectoryVisible"}, {"type": "string", "name": "subnetId", "arg": "$body.properties.volumes[].properties.subnetId", "required": true}, {"nullable": true, "type": "float", "name": "throughputMibps", "arg": "$body.properties.volumes[].properties.throughputMibps"}, {"nullable": true, "type": "string", "name": "unixPermissions", "arg": "$body.properties.volumes[].properties.unixPermissions", "format": {"maxLength": 4, "minLength": 4}}, {"default": {"value": 107374182400}, "type": "integer64", "name": "usageThreshold", "arg": "$body.properties.volumes[].properties.usageThreshold", "required": true, "format": {"maximum": 2638827906662400, "minimum": 107374182400}}, {"type": "string", "name": "volumeSpecName", "arg": "$body.properties.volumes[].properties.volumeSpecName"}, {"type": "string", "name": "volumeType", "arg": "$body.properties.volumes[].properties.volumeType"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$body.properties.volumes[].tags", "additionalProps": {"item": {"type": "string"}}}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VolumeGroups_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "volumeGroupName", "arg": "$Path.volumeGroupName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$", "maxLength": 64, "minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@VolumeGroupDetails_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}