{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}", "version": "2024-04-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="}], "commandGroups": [{"name": "dataprotection backup-vault", "commands": [{"name": "show", "version": "2024-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}", "version": "2024-04-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}], "operations": [{"operationId": "BackupVaults_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-04-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "eTag"}, {"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type"}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"readOnly": true, "type": "string", "name": "bcdrSecurityLevel", "enum": {"items": [{"value": "Excellent"}, {"value": "Fair"}, {"value": "Good"}, {"value": "NotSupported"}, {"value": "Poor"}]}}, {"type": "object", "name": "featureSettings", "props": [{"type": "object", "name": "crossRegionRestoreSettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "crossSubscriptionRestoreSettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "PermanentlyDisabled"}]}}]}]}, {"readOnly": true, "type": "boolean", "name": "isVaultProtectedByResourceGuard"}, {"type": "object", "name": "monitoringSettings", "props": [{"type": "object", "name": "azureMonitorAlertSettings", "props": [{"type": "string", "name": "alertsForAllJobFailures", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Failed"}, {"value": "Provisioning"}, {"value": "Succeeded"}, {"value": "Unknown"}, {"value": "Updating"}]}}, {"type": "array<string>", "name": "replicatedRegions", "item": {"type": "string"}}, {"type": "array<string>", "name": "resourceGuardOperationRequests", "item": {"type": "string"}}, {"type": "object", "name": "resourceMoveDetails", "props": [{"type": "string", "name": "completionTimeUtc"}, {"type": "string", "name": "operationId"}, {"type": "string", "name": "sourceResourcePath"}, {"type": "string", "name": "startTimeUtc"}, {"type": "string", "name": "targetResourcePath"}]}, {"readOnly": true, "type": "string", "name": "resourceMoveState", "enum": {"items": [{"value": "CommitFailed"}, {"value": "CommitTimedout"}, {"value": "CriticalFailure"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "MoveSucceeded"}, {"value": "PartialSuccess"}, {"value": "PrepareFailed"}, {"value": "PrepareTimedout"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "secureScore", "enum": {"items": [{"value": "Adequate"}, {"value": "Maximum"}, {"value": "Minimum"}, {"value": "None"}, {"value": "NotSupported"}]}}, {"type": "object", "name": "securitySettings", "props": [{"type": "object", "name": "encryptionSettings", "props": [{"type": "string", "name": "infrastructureEncryption", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "kekIdentity", "props": [{"type": "string", "name": "identityId"}, {"type": "string", "name": "identityType", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}]}, {"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "keyUri"}]}, {"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "Inconsistent"}]}}]}, {"type": "object", "name": "immutabilitySettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Locked"}, {"value": "Unlocked"}]}}]}, {"type": "object", "name": "softDeleteSettings", "props": [{"type": "float64", "name": "retentionDurationInDays"}, {"type": "string", "name": "state", "enum": {"items": [{"value": "AlwaysOn"}, {"value": "Off"}, {"value": "On"}]}}]}]}, {"type": "array<object>", "name": "storageSettings", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "datastoreType", "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "type", "enum": {"items": [{"value": "GeoRedundant"}, {"value": "LocallyRedundant"}, {"value": "ZoneRedundant"}]}}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}", "version": "2024-04-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "BackupVaults_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-04-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}", "version": "2024-04-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.x-ms-authorization-auxiliary", "options": ["x-ms-authorization-auxiliary"], "hide": true, "group": "", "help": {"short": "."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}, {"name": "CrossRegionRestoreSettings", "args": [{"type": "string", "var": "$parameters.properties.featureSettings.crossRegionRestoreSettings.state", "options": ["crr-state", "cross-region-restore-state"], "group": "CrossRegionRestoreSettings", "help": {"short": "Set the CrossRegionRestore state. Once enabled, it cannot be set to disabled."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"name": "FeatureSettings", "args": [{"type": "string", "var": "$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state", "options": ["csr-state", "cross-subscription-restore-state"], "group": "FeatureSettings", "help": {"short": "CrossSubscriptionRestore state"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}, {"name": "PermanentlyDisabled", "value": "PermanentlyDisabled"}]}}]}, {"name": "Identity", "args": [{"type": "string", "var": "$parameters.identity.type", "options": ["type"], "group": "Identity", "help": {"short": "The identityType which can be either SystemAssigned or None"}}, {"type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "Gets or sets the user assigned identities."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"name": "Monitoring Settings Azure Monitor Alert Settings", "args": [{"type": "string", "var": "$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures", "options": ["job-failure-alerts", "azure-monitor-alerts-for-job-failures"], "group": "Monitoring Settings Azure Monitor Alert Settings", "help": {"short": "Property that specifies whether built-in Azure Monitor alerts should be fired for all failed jobs."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"name": "Parameters", "args": [{"type": "string", "var": "$parameters.eTag", "options": ["e-tag"], "group": "Parameters", "help": {"short": "Optional ETag."}}, {"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "required": true, "group": "Parameters", "help": {"short": "Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."}}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "array<string>", "var": "$parameters.properties.replicatedRegions", "options": ["replicated-regions"], "hide": true, "group": "Properties", "help": {"short": "List of replicated regions for Backup Vault"}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.properties.resourceGuardOperationRequests", "options": ["resource-guard-operation-requests"], "hide": true, "group": "Properties", "help": {"short": "ResourceGuardOperationRequests on which LAC check will be performed"}, "item": {"type": "string"}}, {"type": "array<object>", "var": "$parameters.properties.storageSettings", "options": ["storage-setting"], "required": true, "group": "Properties", "help": {"short": "Storage Settings. Usage: --storage-setting \"[{type:'LocallyRedundant',datastore-type:'VaultStore'}]\"", "lines": ["Multiple actions can be specified by using more than one --storage-setting argument.", "The \"--storage-settings\" parameter exists for backwards compatibility. The updated command is --storage-setting.", "Usage for --storage-settings: --storage-settings type=XX datastore-type=XX."]}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.storageSettings[].datastoreType", "options": ["datastore-type"], "help": {"short": "Gets or sets the type of the datastore."}, "enum": {"items": [{"name": "ArchiveStore", "value": "ArchiveStore"}, {"name": "OperationalStore", "value": "OperationalStore"}, {"name": "VaultStore", "value": "VaultStore"}]}}, {"type": "string", "var": "$parameters.properties.storageSettings[].type", "options": ["type"], "help": {"short": "Gets or sets the type."}, "enum": {"items": [{"name": "GeoRedundant", "value": "GeoRedundant"}, {"name": "LocallyRedundant", "value": "LocallyRedundant"}, {"name": "ZoneRedundant", "value": "ZoneRedundant"}]}}]}, "singularOptions": ["storage-settings"]}]}, {"name": "SecuritySettings", "args": [{"type": "object", "var": "$parameters.properties.securitySettings.encryptionSettings", "options": ["encryption-settings"], "hide": true, "group": "SecuritySettings", "help": {"short": "Customer Managed Key details of the resource."}, "args": [{"type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption", "options": ["infrastructure-encryption"], "help": {"short": "Enabling/Disabling the Double Encryption state"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "object", "var": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity", "options": ["kek-identity"], "help": {"short": "The details of the managed identity used for CMK"}, "args": [{"type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId", "options": ["identity-id"], "help": {"short": "The managed identity to be used which has access permissions to the Key Vault. Provide a value here in case identity types: 'UserAssigned' only."}}, {"type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType", "options": ["identity-type"], "help": {"short": "The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity."}, "enum": {"items": [{"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}]}, {"type": "object", "var": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties", "options": ["key-vault-properties"], "help": {"short": "The properties of the Key Vault which hosts CMK"}, "args": [{"type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri", "options": ["key-uri"], "help": {"short": "The key uri of the Customer Managed Key"}}]}, {"type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.state", "options": ["state"], "help": {"short": "Encryption state of the Backup Vault."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}, {"name": "Inconsistent", "value": "Inconsistent"}]}}]}, {"type": "string", "var": "$parameters.properties.securitySettings.immutabilitySettings.state", "options": ["immutability-state"], "group": "SecuritySettings", "help": {"short": "Immutability state", "lines": ["Use this parameter to configure immutability settings for the vault. Allowed values are Disabled, Unlocked and Locked. By default, immutability is \"Disabled\" for the vault. \"Unlocked\" means that immutability is enabled for the vault and can be reversed. \"Locked\" means that immutability is enabled for the vault and cannot be reversed."]}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Locked", "value": "Locked"}, {"name": "Unlocked", "value": "Unlocked"}]}}]}, {"name": "SoftDeleteSettings", "args": [{"type": "float64", "var": "$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays", "options": ["soft-delete-retention", "retention-duration-in-days"], "group": "SoftDeleteSettings", "help": {"short": "Soft delete retention duration"}, "default": {"value": 14.0}}, {"type": "string", "var": "$parameters.properties.securitySettings.softDeleteSettings.state", "options": ["soft-delete-state"], "group": "SoftDeleteSettings", "help": {"short": "State of soft delete"}, "default": {"value": "On"}, "enum": {"items": [{"name": "AlwaysOn", "value": "AlwaysOn"}, {"name": "Off", "value": "Off"}, {"name": "On", "value": "On"}]}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "BackupVaults_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-04-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "x-ms-authorization-auxiliary", "arg": "$Header.x-ms-authorization-auxiliary"}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "eTag", "arg": "$parameters.eTag"}, {"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type"}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location", "required": true}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "featureSettings", "props": [{"type": "object", "name": "crossRegionRestoreSettings", "props": [{"type": "string", "name": "state", "arg": "$parameters.properties.featureSettings.crossRegionRestoreSettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "crossSubscriptionRestoreSettings", "props": [{"type": "string", "name": "state", "arg": "$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "PermanentlyDisabled"}]}}]}]}, {"type": "object", "name": "monitoringSettings", "props": [{"type": "object", "name": "azureMonitorAlertSettings", "props": [{"type": "string", "name": "alertsForAllJobFailures", "arg": "$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}]}, {"type": "array<string>", "name": "replicatedRegions", "arg": "$parameters.properties.replicatedRegions", "item": {"type": "string"}}, {"type": "array<string>", "name": "resourceGuardOperationRequests", "arg": "$parameters.properties.resourceGuardOperationRequests", "item": {"type": "string"}}, {"type": "object", "name": "securitySettings", "props": [{"type": "object", "name": "encryptionSettings", "arg": "$parameters.properties.securitySettings.encryptionSettings", "props": [{"type": "string", "name": "infrastructureEncryption", "arg": "$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "kekIdentity", "arg": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity", "props": [{"type": "string", "name": "identityId", "arg": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId"}, {"type": "string", "name": "identityType", "arg": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}]}, {"type": "object", "name": "keyVaultProperties", "arg": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties", "props": [{"type": "string", "name": "keyUri", "arg": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri"}]}, {"type": "string", "name": "state", "arg": "$parameters.properties.securitySettings.encryptionSettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "Inconsistent"}]}}]}, {"type": "object", "name": "immutabilitySettings", "props": [{"type": "string", "name": "state", "arg": "$parameters.properties.securitySettings.immutabilitySettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Locked"}, {"value": "Unlocked"}]}}]}, {"type": "object", "name": "softDeleteSettings", "props": [{"type": "float64", "name": "retentionDurationInDays", "arg": "$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays"}, {"type": "string", "name": "state", "arg": "$parameters.properties.securitySettings.softDeleteSettings.state", "enum": {"items": [{"value": "AlwaysOn"}, {"value": "Off"}, {"value": "On"}]}}]}]}, {"type": "array<object>", "name": "storageSettings", "arg": "$parameters.properties.storageSettings", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "datastoreType", "arg": "$parameters.properties.storageSettings[].datastoreType", "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "type", "arg": "$parameters.properties.storageSettings[].type", "enum": {"items": [{"value": "GeoRedundant"}, {"value": "LocallyRedundant"}, {"value": "ZoneRedundant"}]}}]}}]}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "eTag"}, {"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type"}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"readOnly": true, "type": "string", "name": "bcdrSecurityLevel", "enum": {"items": [{"value": "Excellent"}, {"value": "Fair"}, {"value": "Good"}, {"value": "NotSupported"}, {"value": "Poor"}]}}, {"type": "object", "name": "featureSettings", "props": [{"type": "object", "name": "crossRegionRestoreSettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "crossSubscriptionRestoreSettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "PermanentlyDisabled"}]}}]}]}, {"readOnly": true, "type": "boolean", "name": "isVaultProtectedByResourceGuard"}, {"type": "object", "name": "monitoringSettings", "props": [{"type": "object", "name": "azureMonitorAlertSettings", "props": [{"type": "string", "name": "alertsForAllJobFailures", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Failed"}, {"value": "Provisioning"}, {"value": "Succeeded"}, {"value": "Unknown"}, {"value": "Updating"}]}}, {"type": "array<string>", "name": "replicatedRegions", "item": {"type": "string"}}, {"type": "array<string>", "name": "resourceGuardOperationRequests", "item": {"type": "string"}}, {"type": "object", "name": "resourceMoveDetails", "props": [{"type": "string", "name": "completionTimeUtc"}, {"type": "string", "name": "operationId"}, {"type": "string", "name": "sourceResourcePath"}, {"type": "string", "name": "startTimeUtc"}, {"type": "string", "name": "targetResourcePath"}]}, {"readOnly": true, "type": "string", "name": "resourceMoveState", "enum": {"items": [{"value": "CommitFailed"}, {"value": "CommitTimedout"}, {"value": "CriticalFailure"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "MoveSucceeded"}, {"value": "PartialSuccess"}, {"value": "PrepareFailed"}, {"value": "PrepareTimedout"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "secureScore", "enum": {"items": [{"value": "Adequate"}, {"value": "Maximum"}, {"value": "Minimum"}, {"value": "None"}, {"value": "NotSupported"}]}}, {"type": "object", "name": "securitySettings", "props": [{"type": "object", "name": "encryptionSettings", "props": [{"type": "string", "name": "infrastructureEncryption", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "kekIdentity", "props": [{"type": "string", "name": "identityId"}, {"type": "string", "name": "identityType", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}]}, {"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "keyUri"}]}, {"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "Inconsistent"}]}}]}, {"type": "object", "name": "immutabilitySettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Locked"}, {"value": "Unlocked"}]}}]}, {"type": "object", "name": "softDeleteSettings", "props": [{"type": "float64", "name": "retentionDurationInDays"}, {"type": "string", "name": "state", "enum": {"items": [{"value": "AlwaysOn"}, {"value": "Off"}, {"value": "On"}]}}]}]}, {"type": "array<object>", "name": "storageSettings", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "datastoreType", "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "type", "enum": {"items": [{"value": "GeoRedundant"}, {"value": "LocallyRedundant"}, {"value": "ZoneRedundant"}]}}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2024-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}", "version": "2024-04-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.x-ms-authorization-auxiliary", "options": ["x-ms-authorization-auxiliary"], "hide": true, "group": "", "help": {"short": "."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}, {"name": "CrossRegionRestoreSettings", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.featureSettings.crossRegionRestoreSettings.state", "options": ["crr-state", "cross-region-restore-state"], "group": "CrossRegionRestoreSettings", "help": {"short": "Set the CrossRegionRestore state. Once enabled, it cannot be set to disabled."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"name": "FeatureSettings", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state", "options": ["csr-state", "cross-subscription-restore-state"], "group": "FeatureSettings", "help": {"short": "CrossSubscriptionRestore state"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}, {"name": "PermanentlyDisabled", "value": "PermanentlyDisabled"}]}}]}, {"name": "Identity", "args": [{"nullable": true, "type": "string", "var": "$parameters.identity.type", "options": ["type"], "group": "Identity", "help": {"short": "The identityType which can be either SystemAssigned or None"}}, {"nullable": true, "type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "Gets or sets the user assigned identities."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"name": "Monitoring Settings Azure Monitor Alert Settings", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures", "options": ["job-failure-alerts", "azure-monitor-alerts-for-job-failures"], "group": "Monitoring Settings Azure Monitor Alert Settings", "help": {"short": "Property that specifies whether built-in Azure Monitor alerts should be fired for all failed jobs."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "string", "var": "$parameters.eTag", "options": ["e-tag"], "hide": true, "group": "Parameters", "help": {"short": "Optional ETag."}}, {"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "hide": true, "group": "Parameters", "help": {"short": "Resource location."}}, {"nullable": true, "type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.replicatedRegions", "options": ["replicated-regions"], "hide": true, "group": "Properties", "help": {"short": "List of replicated regions for Backup Vault"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.resourceGuardOperationRequests", "options": ["resource-guard-operation-requests"], "group": "Properties", "help": {"short": "Critical operation request which is protected by the resourceGuard"}, "item": {"nullable": true, "type": "string"}, "singularOptions": ["operation-requests"]}, {"type": "array<object>", "var": "$parameters.properties.storageSettings", "options": ["storage-settings"], "hide": true, "group": "Properties", "help": {"short": "Storage Settings"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageSettings[].datastoreType", "options": ["datastore-type"], "help": {"short": "Gets or sets the type of the datastore."}, "enum": {"items": [{"name": "ArchiveStore", "value": "ArchiveStore"}, {"name": "OperationalStore", "value": "OperationalStore"}, {"name": "VaultStore", "value": "VaultStore"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageSettings[].type", "options": ["type"], "help": {"short": "Gets or sets the type."}, "enum": {"items": [{"name": "GeoRedundant", "value": "GeoRedundant"}, {"name": "LocallyRedundant", "value": "LocallyRedundant"}, {"name": "ZoneRedundant", "value": "ZoneRedundant"}]}}]}, "singularOptions": ["storage-settings"]}]}, {"name": "SecuritySettings", "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.securitySettings.encryptionSettings", "options": ["encryption-settings"], "hide": true, "group": "SecuritySettings", "help": {"short": "Customer Managed Key details of the resource."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption", "options": ["infrastructure-encryption"], "help": {"short": "Enabling/Disabling the Double Encryption state"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity", "options": ["kek-identity"], "help": {"short": "The details of the managed identity used for CMK"}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId", "options": ["identity-id"], "help": {"short": "The managed identity to be used which has access permissions to the Key Vault. Provide a value here in case identity types: 'UserAssigned' only."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType", "options": ["identity-type"], "help": {"short": "The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity."}, "enum": {"items": [{"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties", "options": ["key-vault-properties"], "help": {"short": "The properties of the Key Vault which hosts CMK"}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri", "options": ["key-uri"], "help": {"short": "The key uri of the Customer Managed Key"}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.encryptionSettings.state", "options": ["state"], "help": {"short": "Encryption state of the Backup Vault."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}, {"name": "Inconsistent", "value": "Inconsistent"}]}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.immutabilitySettings.state", "options": ["immutability-state"], "group": "SecuritySettings", "help": {"short": "Immutability state", "lines": ["Use this parameter to configure immutability settings for the vault. Allowed values are Disabled, Unlocked and Locked. By default, immutability is \"Disabled\" for the vault. \"Unlocked\" means that immutability is enabled for the vault and can be reversed. \"Locked\" means that immutability is enabled for the vault and cannot be reversed."]}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Locked", "value": "Locked"}, {"name": "Unlocked", "value": "Unlocked"}]}}]}, {"name": "SoftDeleteSettings", "args": [{"nullable": true, "type": "float64", "var": "$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays", "options": ["soft-delete-retention", "retention-duration-in-days"], "group": "SoftDeleteSettings", "help": {"short": "Soft delete retention duration"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.securitySettings.softDeleteSettings.state", "options": ["soft-delete-state"], "group": "SoftDeleteSettings", "help": {"short": "State of soft delete"}, "enum": {"items": [{"name": "AlwaysOn", "value": "AlwaysOn"}, {"name": "Off", "value": "Off"}, {"name": "On", "value": "On"}]}}]}], "operations": [{"operationId": "BackupVaults_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-04-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "eTag"}, {"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type"}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"readOnly": true, "type": "string", "name": "bcdrSecurityLevel", "enum": {"items": [{"value": "Excellent"}, {"value": "Fair"}, {"value": "Good"}, {"value": "NotSupported"}, {"value": "Poor"}]}}, {"type": "object", "name": "featureSettings", "props": [{"type": "object", "name": "crossRegionRestoreSettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "crossSubscriptionRestoreSettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "PermanentlyDisabled"}]}}]}]}, {"readOnly": true, "type": "boolean", "name": "isVaultProtectedByResourceGuard"}, {"type": "object", "name": "monitoringSettings", "props": [{"type": "object", "name": "azureMonitorAlertSettings", "props": [{"type": "string", "name": "alertsForAllJobFailures", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Failed"}, {"value": "Provisioning"}, {"value": "Succeeded"}, {"value": "Unknown"}, {"value": "Updating"}]}}, {"type": "array<string>", "name": "replicatedRegions", "item": {"type": "string"}}, {"type": "array<string>", "name": "resourceGuardOperationRequests", "item": {"type": "string"}}, {"type": "object", "name": "resourceMoveDetails", "props": [{"type": "string", "name": "completionTimeUtc"}, {"type": "string", "name": "operationId"}, {"type": "string", "name": "sourceResourcePath"}, {"type": "string", "name": "startTimeUtc"}, {"type": "string", "name": "targetResourcePath"}]}, {"readOnly": true, "type": "string", "name": "resourceMoveState", "enum": {"items": [{"value": "CommitFailed"}, {"value": "CommitTimedout"}, {"value": "CriticalFailure"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "MoveSucceeded"}, {"value": "PartialSuccess"}, {"value": "PrepareFailed"}, {"value": "PrepareTimedout"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "secureScore", "enum": {"items": [{"value": "Adequate"}, {"value": "Maximum"}, {"value": "Minimum"}, {"value": "None"}, {"value": "NotSupported"}]}}, {"type": "object", "name": "securitySettings", "props": [{"type": "object", "name": "encryptionSettings", "props": [{"type": "string", "name": "infrastructureEncryption", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "kekIdentity", "props": [{"type": "string", "name": "identityId"}, {"type": "string", "name": "identityType", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}]}, {"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "keyUri"}]}, {"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "Inconsistent"}]}}]}, {"type": "object", "name": "immutabilitySettings", "props": [{"type": "string", "name": "state", "enum": {"items": [{"value": "Disabled"}, {"value": "Locked"}, {"value": "Unlocked"}]}}]}, {"type": "object", "name": "softDeleteSettings", "props": [{"type": "float64", "name": "retentionDurationInDays"}, {"type": "string", "name": "state", "enum": {"items": [{"value": "AlwaysOn"}, {"value": "Off"}, {"value": "On"}]}}]}]}, {"type": "array<object>", "name": "storageSettings", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "datastoreType", "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "type", "enum": {"items": [{"value": "GeoRedundant"}, {"value": "LocallyRedundant"}, {"value": "ZoneRedundant"}]}}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "BackupVaultResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "eTag", "arg": "$parameters.eTag"}, {"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type"}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location", "required": true}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "featureSettings", "props": [{"type": "object", "name": "crossRegionRestoreSettings", "props": [{"type": "string", "name": "state", "arg": "$parameters.properties.featureSettings.crossRegionRestoreSettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "crossSubscriptionRestoreSettings", "props": [{"type": "string", "name": "state", "arg": "$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "PermanentlyDisabled"}]}}]}]}, {"type": "object", "name": "monitoringSettings", "props": [{"type": "object", "name": "azureMonitorAlertSettings", "props": [{"type": "string", "name": "alertsForAllJobFailures", "arg": "$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}]}, {"type": "array<string>", "name": "replicatedRegions", "arg": "$parameters.properties.replicatedRegions", "item": {"type": "string"}}, {"type": "array<string>", "name": "resourceGuardOperationRequests", "arg": "$parameters.properties.resourceGuardOperationRequests", "item": {"type": "string"}}, {"type": "object", "name": "securitySettings", "props": [{"type": "object", "name": "encryptionSettings", "arg": "$parameters.properties.securitySettings.encryptionSettings", "props": [{"type": "string", "name": "infrastructureEncryption", "arg": "$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "kekIdentity", "arg": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity", "props": [{"type": "string", "name": "identityId", "arg": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId"}, {"type": "string", "name": "identityType", "arg": "$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}]}, {"type": "object", "name": "keyVaultProperties", "arg": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties", "props": [{"type": "string", "name": "keyUri", "arg": "$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri"}]}, {"type": "string", "name": "state", "arg": "$parameters.properties.securitySettings.encryptionSettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}, {"value": "Inconsistent"}]}}]}, {"type": "object", "name": "immutabilitySettings", "props": [{"type": "string", "name": "state", "arg": "$parameters.properties.securitySettings.immutabilitySettings.state", "enum": {"items": [{"value": "Disabled"}, {"value": "Locked"}, {"value": "Unlocked"}]}}]}, {"type": "object", "name": "softDeleteSettings", "props": [{"type": "float64", "name": "retentionDurationInDays", "arg": "$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays"}, {"type": "string", "name": "state", "arg": "$parameters.properties.securitySettings.softDeleteSettings.state", "enum": {"items": [{"value": "AlwaysOn"}, {"value": "Off"}, {"value": "On"}]}}]}]}, {"type": "array<object>", "name": "storageSettings", "arg": "$parameters.properties.storageSettings", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "datastoreType", "arg": "$parameters.properties.storageSettings[].datastoreType", "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "type", "arg": "$parameters.properties.storageSettings[].type", "enum": {"items": [{"value": "GeoRedundant"}, {"value": "LocallyRedundant"}, {"value": "ZoneRedundant"}]}}]}}]}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "BackupVaults_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-04-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "x-ms-authorization-auxiliary", "arg": "$Header.x-ms-authorization-auxiliary"}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@BackupVaultResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}