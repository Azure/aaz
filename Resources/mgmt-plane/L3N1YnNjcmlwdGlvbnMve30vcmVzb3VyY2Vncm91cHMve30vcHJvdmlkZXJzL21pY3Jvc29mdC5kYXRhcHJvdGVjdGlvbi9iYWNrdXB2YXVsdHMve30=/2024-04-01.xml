<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2024-04-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="/>
  <commandGroup name="dataprotection backup-vault">
    <command name="show" version="2024-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2024-04-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name v" required="True" group="" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type"/>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop readOnly="True" type="string" name="bcdrSecurityLevel">
                      <enum>
                        <item value="&quot;Excellent&quot;"/>
                        <item value="&quot;Fair&quot;"/>
                        <item value="&quot;Good&quot;"/>
                        <item value="&quot;NotSupported&quot;"/>
                        <item value="&quot;Poor&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="featureSettings">
                      <prop type="object" name="crossRegionRestoreSettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="crossSubscriptionRestoreSettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;PermanentlyDisabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="boolean" name="isVaultProtectedByResourceGuard"/>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="replicatedRegions">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="resourceGuardOperationRequests">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceMoveDetails">
                      <prop type="string" name="completionTimeUtc"/>
                      <prop type="string" name="operationId"/>
                      <prop type="string" name="sourceResourcePath"/>
                      <prop type="string" name="startTimeUtc"/>
                      <prop type="string" name="targetResourcePath"/>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceMoveState">
                      <enum>
                        <item value="&quot;CommitFailed&quot;"/>
                        <item value="&quot;CommitTimedout&quot;"/>
                        <item value="&quot;CriticalFailure&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;MoveSucceeded&quot;"/>
                        <item value="&quot;PartialSuccess&quot;"/>
                        <item value="&quot;PrepareFailed&quot;"/>
                        <item value="&quot;PrepareTimedout&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="secureScore">
                      <enum>
                        <item value="&quot;Adequate&quot;"/>
                        <item value="&quot;Maximum&quot;"/>
                        <item value="&quot;Minimum&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSupported&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="securitySettings">
                      <prop type="object" name="encryptionSettings">
                        <prop type="string" name="infrastructureEncryption">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="kekIdentity">
                          <prop type="string" name="identityId"/>
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="keyVaultProperties">
                          <prop type="string" name="keyUri"/>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Inconsistent&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="immutabilitySettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Locked&quot;"/>
                            <item value="&quot;Unlocked&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeleteSettings">
                        <prop type="float64" name="retentionDurationInDays"/>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;AlwaysOn&quot;"/>
                            <item value="&quot;Off&quot;"/>
                            <item value="&quot;On&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2024-04-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name v" required="True" group="" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2024-04-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.x-ms-authorization-auxiliary" options="x-ms-authorization-auxiliary" hide="True" group="">
          <help short="."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name v" required="True" group="" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <argGroup name="CrossRegionRestoreSettings">
        <arg type="string" var="$parameters.properties.featureSettings.crossRegionRestoreSettings.state" options="cross-region-restore-state crr-state" group="CrossRegionRestoreSettings">
          <help short="Set the CrossRegionRestore state. Once enabled, it cannot be set to disabled."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="FeatureSettings">
        <arg type="string" var="$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state" options="cross-subscription-restore-state csr-state" group="FeatureSettings">
          <help short="CrossSubscriptionRestore state"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="PermanentlyDisabled" value="&quot;PermanentlyDisabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$parameters.identity.type" options="type" group="Identity">
          <help short="The identityType which can be either SystemAssigned or None"/>
        </arg>
        <arg type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="Gets or sets the user assigned identities."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Monitoring Settings Azure Monitor Alert Settings">
        <arg type="string" var="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures" options="azure-monitor-alerts-for-job-failures job-failure-alerts" group="Monitoring Settings Azure Monitor Alert Settings">
          <help short="Property that specifies whether built-in Azure Monitor alerts should be fired for all failed jobs."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.eTag" options="e-tag" group="Parameters">
          <help short="Optional ETag."/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$parameters.properties.replicatedRegions" options="replicated-regions" hide="True" group="Properties">
          <help short="List of replicated regions for Backup Vault"/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.resourceGuardOperationRequests" options="resource-guard-operation-requests" hide="True" group="Properties">
          <help short="ResourceGuardOperationRequests on which LAC check will be performed"/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.storageSettings" options="storage-setting" required="True" group="Properties" singularOptions="storage-settings">
          <help short="Storage Settings. Usage: --storage-setting &quot;[{type:'LocallyRedundant',datastore-type:'VaultStore'}]&quot;" lines="&quot;--storage-settings&quot; --storage-settings: --storage-setting. --storage-settings datastore-type=XX. --storage-setting compatibility. specified argument. parameter backwards Multiple actions updated command type=XX exists using Usage more than can one The for The for be by is"/>
          <item type="object">
            <arg type="string" var="$parameters.properties.storageSettings[].datastoreType" options="datastore-type">
              <help short="Gets or sets the type of the datastore."/>
              <enum>
                <item name="ArchiveStore" value="&quot;ArchiveStore&quot;"/>
                <item name="OperationalStore" value="&quot;OperationalStore&quot;"/>
                <item name="VaultStore" value="&quot;VaultStore&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.storageSettings[].type" options="type">
              <help short="Gets or sets the type."/>
              <enum>
                <item name="GeoRedundant" value="&quot;GeoRedundant&quot;"/>
                <item name="LocallyRedundant" value="&quot;LocallyRedundant&quot;"/>
                <item name="ZoneRedundant" value="&quot;ZoneRedundant&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="SecuritySettings">
        <arg type="object" var="$parameters.properties.securitySettings.encryptionSettings" options="encryption-settings" hide="True" group="SecuritySettings">
          <help short="Customer Managed Key details of the resource."/>
          <arg type="string" var="$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption" options="infrastructure-encryption">
            <help short="Enabling/Disabling the Double Encryption state"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.securitySettings.encryptionSettings.kekIdentity" options="kek-identity">
            <help short="The details of the managed identity used for CMK"/>
            <arg type="string" var="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId" options="identity-id">
              <help short="The managed identity to be used which has access permissions to the Key Vault. Provide a value here in case identity types: 'UserAssigned' only."/>
            </arg>
            <arg type="string" var="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType" options="identity-type">
              <help short="The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity."/>
              <enum>
                <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
                <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties" options="key-vault-properties">
            <help short="The properties of the Key Vault which hosts CMK"/>
            <arg type="string" var="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri" options="key-uri">
              <help short="The key uri of the Customer Managed Key"/>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.securitySettings.encryptionSettings.state" options="state">
            <help short="Encryption state of the Backup Vault."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="Inconsistent" value="&quot;Inconsistent&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.securitySettings.immutabilitySettings.state" options="immutability-state" group="SecuritySettings">
          <help short="Immutability state" lines="Use this parameter to configure immutability settings for the vault. Allowed values are Disabled, Unlocked and Locked. By default, immutability is &quot;Disabled&quot; for the vault. &quot;Unlocked&quot; means that immutability is enabled for the vault and can be reversed. &quot;Locked&quot; means that immutability is enabled for the vault and cannot be reversed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Locked" value="&quot;Locked&quot;"/>
            <item name="Unlocked" value="&quot;Unlocked&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="SoftDeleteSettings">
        <arg type="float64" var="$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays" options="retention-duration-in-days soft-delete-retention" group="SoftDeleteSettings">
          <help short="Soft delete retention duration"/>
          <default value="14.0"/>
        </arg>
        <arg type="string" var="$parameters.properties.securitySettings.softDeleteSettings.state" options="soft-delete-state" group="SoftDeleteSettings">
          <help short="State of soft delete"/>
          <default value="&quot;On&quot;"/>
          <enum>
            <item name="AlwaysOn" value="&quot;AlwaysOn&quot;"/>
            <item name="Off" value="&quot;Off&quot;"/>
            <item name="On" value="&quot;On&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header>
              <param type="string" name="x-ms-authorization-auxiliary" arg="$Header.x-ms-authorization-auxiliary"/>
            </header>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="eTag" arg="$parameters.eTag"/>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$parameters.identity.type"/>
                    <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True">
                    <prop type="object" name="featureSettings">
                      <prop type="object" name="crossRegionRestoreSettings">
                        <prop type="string" name="state" arg="$parameters.properties.featureSettings.crossRegionRestoreSettings.state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="crossSubscriptionRestoreSettings">
                        <prop type="string" name="state" arg="$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;PermanentlyDisabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures" arg="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="replicatedRegions" arg="$parameters.properties.replicatedRegions">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="resourceGuardOperationRequests" arg="$parameters.properties.resourceGuardOperationRequests">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="securitySettings">
                      <prop type="object" name="encryptionSettings" arg="$parameters.properties.securitySettings.encryptionSettings">
                        <prop type="string" name="infrastructureEncryption" arg="$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="kekIdentity" arg="$parameters.properties.securitySettings.encryptionSettings.kekIdentity">
                          <prop type="string" name="identityId" arg="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId"/>
                          <prop type="string" name="identityType" arg="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="keyVaultProperties" arg="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties">
                          <prop type="string" name="keyUri" arg="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri"/>
                        </prop>
                        <prop type="string" name="state" arg="$parameters.properties.securitySettings.encryptionSettings.state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Inconsistent&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="immutabilitySettings">
                        <prop type="string" name="state" arg="$parameters.properties.securitySettings.immutabilitySettings.state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Locked&quot;"/>
                            <item value="&quot;Unlocked&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeleteSettings">
                        <prop type="float64" name="retentionDurationInDays" arg="$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays"/>
                        <prop type="string" name="state" arg="$parameters.properties.securitySettings.softDeleteSettings.state">
                          <enum>
                            <item value="&quot;AlwaysOn&quot;"/>
                            <item value="&quot;Off&quot;"/>
                            <item value="&quot;On&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="storageSettings" arg="$parameters.properties.storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType" arg="$parameters.properties.storageSettings[].datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type" arg="$parameters.properties.storageSettings[].type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type"/>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop readOnly="True" type="string" name="bcdrSecurityLevel">
                      <enum>
                        <item value="&quot;Excellent&quot;"/>
                        <item value="&quot;Fair&quot;"/>
                        <item value="&quot;Good&quot;"/>
                        <item value="&quot;NotSupported&quot;"/>
                        <item value="&quot;Poor&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="featureSettings">
                      <prop type="object" name="crossRegionRestoreSettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="crossSubscriptionRestoreSettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;PermanentlyDisabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="boolean" name="isVaultProtectedByResourceGuard"/>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="replicatedRegions">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="resourceGuardOperationRequests">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceMoveDetails">
                      <prop type="string" name="completionTimeUtc"/>
                      <prop type="string" name="operationId"/>
                      <prop type="string" name="sourceResourcePath"/>
                      <prop type="string" name="startTimeUtc"/>
                      <prop type="string" name="targetResourcePath"/>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceMoveState">
                      <enum>
                        <item value="&quot;CommitFailed&quot;"/>
                        <item value="&quot;CommitTimedout&quot;"/>
                        <item value="&quot;CriticalFailure&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;MoveSucceeded&quot;"/>
                        <item value="&quot;PartialSuccess&quot;"/>
                        <item value="&quot;PrepareFailed&quot;"/>
                        <item value="&quot;PrepareTimedout&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="secureScore">
                      <enum>
                        <item value="&quot;Adequate&quot;"/>
                        <item value="&quot;Maximum&quot;"/>
                        <item value="&quot;Minimum&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSupported&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="securitySettings">
                      <prop type="object" name="encryptionSettings">
                        <prop type="string" name="infrastructureEncryption">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="kekIdentity">
                          <prop type="string" name="identityId"/>
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="keyVaultProperties">
                          <prop type="string" name="keyUri"/>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Inconsistent&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="immutabilitySettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Locked&quot;"/>
                            <item value="&quot;Unlocked&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeleteSettings">
                        <prop type="float64" name="retentionDurationInDays"/>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;AlwaysOn&quot;"/>
                            <item value="&quot;Off&quot;"/>
                            <item value="&quot;On&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2024-04-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyNC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.x-ms-authorization-auxiliary" options="x-ms-authorization-auxiliary" hide="True" group="">
          <help short="."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name v" required="True" group="" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <argGroup name="CrossRegionRestoreSettings">
        <arg nullable="True" type="string" var="$parameters.properties.featureSettings.crossRegionRestoreSettings.state" options="cross-region-restore-state crr-state" group="CrossRegionRestoreSettings">
          <help short="Set the CrossRegionRestore state. Once enabled, it cannot be set to disabled."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="FeatureSettings">
        <arg nullable="True" type="string" var="$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state" options="cross-subscription-restore-state csr-state" group="FeatureSettings">
          <help short="CrossSubscriptionRestore state"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="PermanentlyDisabled" value="&quot;PermanentlyDisabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg nullable="True" type="string" var="$parameters.identity.type" options="type" group="Identity">
          <help short="The identityType which can be either SystemAssigned or None"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="Gets or sets the user assigned identities."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Monitoring Settings Azure Monitor Alert Settings">
        <arg nullable="True" type="string" var="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures" options="azure-monitor-alerts-for-job-failures job-failure-alerts" group="Monitoring Settings Azure Monitor Alert Settings">
          <help short="Property that specifies whether built-in Azure Monitor alerts should be fired for all failed jobs."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="string" var="$parameters.eTag" options="e-tag" hide="True" group="Parameters">
          <help short="Optional ETag."/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$parameters.properties.replicatedRegions" options="replicated-regions" hide="True" group="Properties">
          <help short="List of replicated regions for Backup Vault"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.resourceGuardOperationRequests" options="resource-guard-operation-requests" group="Properties" singularOptions="operation-requests">
          <help short="Critical operation request which is protected by the resourceGuard"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.storageSettings" options="storage-settings" hide="True" group="Properties" singularOptions="storage-settings">
          <help short="Storage Settings"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.storageSettings[].datastoreType" options="datastore-type">
              <help short="Gets or sets the type of the datastore."/>
              <enum>
                <item name="ArchiveStore" value="&quot;ArchiveStore&quot;"/>
                <item name="OperationalStore" value="&quot;OperationalStore&quot;"/>
                <item name="VaultStore" value="&quot;VaultStore&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageSettings[].type" options="type">
              <help short="Gets or sets the type."/>
              <enum>
                <item name="GeoRedundant" value="&quot;GeoRedundant&quot;"/>
                <item name="LocallyRedundant" value="&quot;LocallyRedundant&quot;"/>
                <item name="ZoneRedundant" value="&quot;ZoneRedundant&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="SecuritySettings">
        <arg nullable="True" type="object" var="$parameters.properties.securitySettings.encryptionSettings" options="encryption-settings" hide="True" group="SecuritySettings">
          <help short="Customer Managed Key details of the resource."/>
          <arg nullable="True" type="string" var="$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption" options="infrastructure-encryption">
            <help short="Enabling/Disabling the Double Encryption state"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.securitySettings.encryptionSettings.kekIdentity" options="kek-identity">
            <help short="The details of the managed identity used for CMK"/>
            <arg nullable="True" type="string" var="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId" options="identity-id">
              <help short="The managed identity to be used which has access permissions to the Key Vault. Provide a value here in case identity types: 'UserAssigned' only."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType" options="identity-type">
              <help short="The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity."/>
              <enum>
                <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
                <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties" options="key-vault-properties">
            <help short="The properties of the Key Vault which hosts CMK"/>
            <arg nullable="True" type="string" var="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri" options="key-uri">
              <help short="The key uri of the Customer Managed Key"/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.securitySettings.encryptionSettings.state" options="state">
            <help short="Encryption state of the Backup Vault."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="Inconsistent" value="&quot;Inconsistent&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.securitySettings.immutabilitySettings.state" options="immutability-state" group="SecuritySettings">
          <help short="Immutability state" lines="Use this parameter to configure immutability settings for the vault. Allowed values are Disabled, Unlocked and Locked. By default, immutability is &quot;Disabled&quot; for the vault. &quot;Unlocked&quot; means that immutability is enabled for the vault and can be reversed. &quot;Locked&quot; means that immutability is enabled for the vault and cannot be reversed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Locked" value="&quot;Locked&quot;"/>
            <item name="Unlocked" value="&quot;Unlocked&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="SoftDeleteSettings">
        <arg nullable="True" type="float64" var="$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays" options="retention-duration-in-days soft-delete-retention" group="SoftDeleteSettings">
          <help short="Soft delete retention duration"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.securitySettings.softDeleteSettings.state" options="soft-delete-state" group="SoftDeleteSettings">
          <help short="State of soft delete"/>
          <enum>
            <item name="AlwaysOn" value="&quot;AlwaysOn&quot;"/>
            <item name="Off" value="&quot;Off&quot;"/>
            <item name="On" value="&quot;On&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="BackupVaultResource_read">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type"/>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop readOnly="True" type="string" name="bcdrSecurityLevel">
                      <enum>
                        <item value="&quot;Excellent&quot;"/>
                        <item value="&quot;Fair&quot;"/>
                        <item value="&quot;Good&quot;"/>
                        <item value="&quot;NotSupported&quot;"/>
                        <item value="&quot;Poor&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="featureSettings">
                      <prop type="object" name="crossRegionRestoreSettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="crossSubscriptionRestoreSettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;PermanentlyDisabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="boolean" name="isVaultProtectedByResourceGuard"/>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="replicatedRegions">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="resourceGuardOperationRequests">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceMoveDetails">
                      <prop type="string" name="completionTimeUtc"/>
                      <prop type="string" name="operationId"/>
                      <prop type="string" name="sourceResourcePath"/>
                      <prop type="string" name="startTimeUtc"/>
                      <prop type="string" name="targetResourcePath"/>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceMoveState">
                      <enum>
                        <item value="&quot;CommitFailed&quot;"/>
                        <item value="&quot;CommitTimedout&quot;"/>
                        <item value="&quot;CriticalFailure&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;MoveSucceeded&quot;"/>
                        <item value="&quot;PartialSuccess&quot;"/>
                        <item value="&quot;PrepareFailed&quot;"/>
                        <item value="&quot;PrepareTimedout&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="secureScore">
                      <enum>
                        <item value="&quot;Adequate&quot;"/>
                        <item value="&quot;Maximum&quot;"/>
                        <item value="&quot;Minimum&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSupported&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="securitySettings">
                      <prop type="object" name="encryptionSettings">
                        <prop type="string" name="infrastructureEncryption">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="kekIdentity">
                          <prop type="string" name="identityId"/>
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;SystemAssigned&quot;"/>
                              <item value="&quot;UserAssigned&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="keyVaultProperties">
                          <prop type="string" name="keyUri"/>
                        </prop>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Inconsistent&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="immutabilitySettings">
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Locked&quot;"/>
                            <item value="&quot;Unlocked&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeleteSettings">
                        <prop type="float64" name="retentionDurationInDays"/>
                        <prop type="string" name="state">
                          <enum>
                            <item value="&quot;AlwaysOn&quot;"/>
                            <item value="&quot;Off&quot;"/>
                            <item value="&quot;On&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="string" name="eTag" arg="$parameters.eTag"/>
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$parameters.identity.type"/>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="properties" required="True">
                <prop type="object" name="featureSettings">
                  <prop type="object" name="crossRegionRestoreSettings">
                    <prop type="string" name="state" arg="$parameters.properties.featureSettings.crossRegionRestoreSettings.state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="crossSubscriptionRestoreSettings">
                    <prop type="string" name="state" arg="$parameters.properties.featureSettings.crossSubscriptionRestoreSettings.state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;PermanentlyDisabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
                <prop type="object" name="monitoringSettings">
                  <prop type="object" name="azureMonitorAlertSettings">
                    <prop type="string" name="alertsForAllJobFailures" arg="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
                <prop type="array<string>" name="replicatedRegions" arg="$parameters.properties.replicatedRegions">
                  <item type="string"/>
                </prop>
                <prop type="array<string>" name="resourceGuardOperationRequests" arg="$parameters.properties.resourceGuardOperationRequests">
                  <item type="string"/>
                </prop>
                <prop type="object" name="securitySettings">
                  <prop type="object" name="encryptionSettings" arg="$parameters.properties.securitySettings.encryptionSettings">
                    <prop type="string" name="infrastructureEncryption" arg="$parameters.properties.securitySettings.encryptionSettings.infrastructureEncryption">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="kekIdentity" arg="$parameters.properties.securitySettings.encryptionSettings.kekIdentity">
                      <prop type="string" name="identityId" arg="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityId"/>
                      <prop type="string" name="identityType" arg="$parameters.properties.securitySettings.encryptionSettings.kekIdentity.identityType">
                        <enum>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="keyVaultProperties" arg="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties">
                      <prop type="string" name="keyUri" arg="$parameters.properties.securitySettings.encryptionSettings.keyVaultProperties.keyUri"/>
                    </prop>
                    <prop type="string" name="state" arg="$parameters.properties.securitySettings.encryptionSettings.state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Inconsistent&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="immutabilitySettings">
                    <prop type="string" name="state" arg="$parameters.properties.securitySettings.immutabilitySettings.state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Locked&quot;"/>
                        <item value="&quot;Unlocked&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="softDeleteSettings">
                    <prop type="float64" name="retentionDurationInDays" arg="$parameters.properties.securitySettings.softDeleteSettings.retentionDurationInDays"/>
                    <prop type="string" name="state" arg="$parameters.properties.securitySettings.softDeleteSettings.state">
                      <enum>
                        <item value="&quot;AlwaysOn&quot;"/>
                        <item value="&quot;Off&quot;"/>
                        <item value="&quot;On&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
                <prop type="array<object>" name="storageSettings" arg="$parameters.properties.storageSettings" required="True">
                  <item type="object">
                    <prop type="string" name="datastoreType" arg="$parameters.properties.storageSettings[].datastoreType">
                      <enum>
                        <item value="&quot;ArchiveStore&quot;"/>
                        <item value="&quot;OperationalStore&quot;"/>
                        <item value="&quot;VaultStore&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" arg="$parameters.properties.storageSettings[].type">
                      <enum>
                        <item value="&quot;GeoRedundant&quot;"/>
                        <item value="&quot;LocallyRedundant&quot;"/>
                        <item value="&quot;ZoneRedundant&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="BackupVaults_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header>
              <param type="string" name="x-ms-authorization-auxiliary" arg="$Header.x-ms-authorization-auxiliary"/>
            </header>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@BackupVaultResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
