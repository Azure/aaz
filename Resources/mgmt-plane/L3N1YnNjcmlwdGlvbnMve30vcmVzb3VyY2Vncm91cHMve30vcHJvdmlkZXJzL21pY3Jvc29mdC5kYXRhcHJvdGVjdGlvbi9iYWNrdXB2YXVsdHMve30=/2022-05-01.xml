<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2022-05-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyMi0wNS0wMQ=="/>
  <commandGroup name="data-protection backup-vault">
    <command name="show" version="2022-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2022-05-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name name n" required="True" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop readOnly="True" type="boolean" name="isVaultProtectedByResourceGuard"/>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceMoveDetails">
                      <prop type="string" name="completionTimeUtc"/>
                      <prop type="string" name="operationId"/>
                      <prop type="string" name="sourceResourcePath"/>
                      <prop type="string" name="startTimeUtc"/>
                      <prop type="string" name="targetResourcePath"/>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceMoveState">
                      <enum>
                        <item value="&quot;CommitFailed&quot;"/>
                        <item value="&quot;CommitTimedout&quot;"/>
                        <item value="&quot;CriticalFailure&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;MoveSucceeded&quot;"/>
                        <item value="&quot;PartialSuccess&quot;"/>
                        <item value="&quot;PrepareFailed&quot;"/>
                        <item value="&quot;PrepareTimedout&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2022-05-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name name n" required="True" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2022-05-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name name n" required="True" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.eTag" options="e-tag" group="Parameters">
          <help short="Optional ETag."/>
        </arg>
        <arg type="object" var="$parameters.identity" options="identity" group="Parameters">
          <help short="Input Managed Identity Details"/>
          <arg type="string" var="$parameters.identity.type" options="type">
            <help short="The identityType which can be either SystemAssigned or None"/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.monitoringSettings" options="monitoring-settings" group="Properties">
          <help short="Monitoring Settings"/>
          <arg type="object" var="$parameters.properties.monitoringSettings.azureMonitorAlertSettings" options="azure-monitor-alert-settings">
            <help short="Settings for Azure Monitor based alerts"/>
            <arg type="string" var="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures" options="alerts-for-all-job-failures">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.storageSettings" options="storage-settings" required="True" group="Properties">
          <help short="Storage Settings"/>
          <item type="object">
            <arg type="string" var="$parameters.properties.storageSettings[].datastoreType" options="datastore-type">
              <help short="Gets or sets the type of the datastore."/>
              <enum>
                <item name="ArchiveStore" value="&quot;ArchiveStore&quot;"/>
                <item name="OperationalStore" value="&quot;OperationalStore&quot;"/>
                <item name="VaultStore" value="&quot;VaultStore&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.storageSettings[].type" options="type">
              <help short="Gets or sets the type."/>
              <enum>
                <item name="GeoRedundant" value="&quot;GeoRedundant&quot;"/>
                <item name="LocallyRedundant" value="&quot;LocallyRedundant&quot;"/>
                <item name="ZoneRedundant" value="&quot;ZoneRedundant&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="eTag" arg="$parameters.eTag"/>
                  <prop type="object" name="identity" arg="$parameters.identity">
                    <prop type="string" name="type" arg="$parameters.identity.type"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True">
                    <prop type="object" name="monitoringSettings" arg="$parameters.properties.monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings" arg="$parameters.properties.monitoringSettings.azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures" arg="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="storageSettings" arg="$parameters.properties.storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType" arg="$parameters.properties.storageSettings[].datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type" arg="$parameters.properties.storageSettings[].type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop readOnly="True" type="boolean" name="isVaultProtectedByResourceGuard"/>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceMoveDetails">
                      <prop type="string" name="completionTimeUtc"/>
                      <prop type="string" name="operationId"/>
                      <prop type="string" name="sourceResourcePath"/>
                      <prop type="string" name="startTimeUtc"/>
                      <prop type="string" name="targetResourcePath"/>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceMoveState">
                      <enum>
                        <item value="&quot;CommitFailed&quot;"/>
                        <item value="&quot;CommitTimedout&quot;"/>
                        <item value="&quot;CriticalFailure&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;MoveSucceeded&quot;"/>
                        <item value="&quot;PartialSuccess&quot;"/>
                        <item value="&quot;PrepareFailed&quot;"/>
                        <item value="&quot;PrepareTimedout&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}" version="2022-05-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name name n" required="True" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="string" var="$parameters.eTag" options="e-tag" group="Parameters">
          <help short="Optional ETag."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.identity" options="identity" group="Parameters">
          <help short="Input Managed Identity Details"/>
          <arg nullable="True" type="string" var="$parameters.identity.type" options="type">
            <help short="The identityType which can be either SystemAssigned or None"/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$parameters.properties.monitoringSettings" options="monitoring-settings" group="Properties">
          <help short="Monitoring Settings"/>
          <arg nullable="True" type="object" var="$parameters.properties.monitoringSettings.azureMonitorAlertSettings" options="azure-monitor-alert-settings">
            <help short="Settings for Azure Monitor based alerts"/>
            <arg nullable="True" type="string" var="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures" options="alerts-for-all-job-failures">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.storageSettings" options="storage-settings" group="Properties">
          <help short="Storage Settings"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.storageSettings[].datastoreType" options="datastore-type">
              <help short="Gets or sets the type of the datastore."/>
              <enum>
                <item name="ArchiveStore" value="&quot;ArchiveStore&quot;"/>
                <item name="OperationalStore" value="&quot;OperationalStore&quot;"/>
                <item name="VaultStore" value="&quot;VaultStore&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageSettings[].type" options="type">
              <help short="Gets or sets the type."/>
              <enum>
                <item name="GeoRedundant" value="&quot;GeoRedundant&quot;"/>
                <item name="LocallyRedundant" value="&quot;LocallyRedundant&quot;"/>
                <item name="ZoneRedundant" value="&quot;ZoneRedundant&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="BackupVaults_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="BackupVaultResource_read">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True">
                    <prop readOnly="True" type="boolean" name="isVaultProtectedByResourceGuard"/>
                    <prop type="object" name="monitoringSettings">
                      <prop type="object" name="azureMonitorAlertSettings">
                        <prop type="string" name="alertsForAllJobFailures">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceMoveDetails">
                      <prop type="string" name="completionTimeUtc"/>
                      <prop type="string" name="operationId"/>
                      <prop type="string" name="sourceResourcePath"/>
                      <prop type="string" name="startTimeUtc"/>
                      <prop type="string" name="targetResourcePath"/>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceMoveState">
                      <enum>
                        <item value="&quot;CommitFailed&quot;"/>
                        <item value="&quot;CommitTimedout&quot;"/>
                        <item value="&quot;CriticalFailure&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;MoveSucceeded&quot;"/>
                        <item value="&quot;PartialSuccess&quot;"/>
                        <item value="&quot;PrepareFailed&quot;"/>
                        <item value="&quot;PrepareTimedout&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="storageSettings" required="True">
                      <item type="object">
                        <prop type="string" name="datastoreType">
                          <enum>
                            <item value="&quot;ArchiveStore&quot;"/>
                            <item value="&quot;OperationalStore&quot;"/>
                            <item value="&quot;VaultStore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;GeoRedundant&quot;"/>
                            <item value="&quot;LocallyRedundant&quot;"/>
                            <item value="&quot;ZoneRedundant&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="string" name="eTag" arg="$parameters.eTag"/>
              <prop type="object" name="identity" arg="$parameters.identity">
                <prop type="string" name="type" arg="$parameters.identity.type"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="properties" required="True">
                <prop type="object" name="monitoringSettings" arg="$parameters.properties.monitoringSettings">
                  <prop type="object" name="azureMonitorAlertSettings" arg="$parameters.properties.monitoringSettings.azureMonitorAlertSettings">
                    <prop type="string" name="alertsForAllJobFailures" arg="$parameters.properties.monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
                <prop type="array<object>" name="storageSettings" arg="$parameters.properties.storageSettings" required="True">
                  <item type="object">
                    <prop type="string" name="datastoreType" arg="$parameters.properties.storageSettings[].datastoreType">
                      <enum>
                        <item value="&quot;ArchiveStore&quot;"/>
                        <item value="&quot;OperationalStore&quot;"/>
                        <item value="&quot;VaultStore&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" arg="$parameters.properties.storageSettings[].type">
                      <enum>
                        <item value="&quot;GeoRedundant&quot;"/>
                        <item value="&quot;LocallyRedundant&quot;"/>
                        <item value="&quot;ZoneRedundant&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="BackupVaults_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@BackupVaultResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
