<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
  <commandGroup name="networkfabric device">
    <command name="show" version="2025-07-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkDeviceName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Device."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkDevices_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
          <request method="get">
            <path>
              <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;EnabledDegraded&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                        <item value="&quot;UnderMaintenance&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="array<object>" name="certificateRotationStatus" identifiers="certificateType">
                      <item type="object">
                        <prop readOnly="True" type="object" name="certificateArchiveReference">
                          <prop readOnly="True" type="string" name="certificateName"/>
                          <prop readOnly="True" type="string" name="certificateVersion"/>
                          <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="keyVaultUri"/>
                        </prop>
                        <prop readOnly="True" type="string" name="certificateType"/>
                        <prop readOnly="True" type="dateTime" name="expireTime"/>
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="string" name="synchronizationStatus">
                          <enum>
                            <item value="&quot;InSync&quot;"/>
                            <item value="&quot;OutOfSync&quot;"/>
                            <item value="&quot;Synchronizing&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingAdministrativeUpdate&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hostName">
                      <format minLength="1"/>
                    </prop>
                    <prop type="object" name="identitySelector">
                      <prop type="string" name="identityType" required="True">
                        <enum>
                          <item value="&quot;SystemAssignedIdentity&quot;"/>
                          <item value="&quot;UserAssignedIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId"/>
                    </prop>
                    <prop readOnly="True" type="object" name="lastOperation">
                      <prop readOnly="True" type="string" name="details"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managementIpv4Address"/>
                    <prop readOnly="True" type="string" name="managementIpv6Address"/>
                    <prop readOnly="True" type="string" name="networkDeviceRole">
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;Management&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                        <item value="&quot;TS&quot;"/>
                        <item value="&quot;ToR&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkDeviceSku"/>
                    <prop readOnly="True" nullable="True" type="ResourceId" name="networkFabricId"/>
                    <prop readOnly="True" type="string" name="networkRackId"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="rwDeviceConfig"/>
                    <prop readOnly="True" type="array<object>" name="secretRotationStatus" identifiers="secretType">
                      <item type="object">
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="object" name="secretArchiveReference">
                          <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="keyVaultUri"/>
                          <prop readOnly="True" type="string" name="secretName"/>
                          <prop readOnly="True" type="string" name="secretVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="secretType"/>
                        <prop readOnly="True" type="string" name="synchronizationStatus">
                          <enum>
                            <item value="&quot;InSync&quot;"/>
                            <item value="&quot;OutOfSync&quot;"/>
                            <item value="&quot;Synchronizing&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="serialNumber" required="True">
                      <format minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-07-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkDeviceName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Device."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkDevices_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
          <request method="delete">
            <path>
              <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-07-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkDeviceName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Device."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$resource.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$resource.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$resource.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.annotation" options="annotation" group="Properties">
          <help short="Switch configuration description."/>
        </arg>
        <arg type="string" var="$resource.properties.hostName" options="host-name" group="Properties">
          <help short="The host name of the device."/>
          <format minLength="1"/>
        </arg>
        <arg type="object" var="$resource.properties.identitySelector" options="identity-selector" group="Properties">
          <help short="The selection of the managed identity to use with this storage account. The identity type must be either system assigned or user assigned."/>
          <arg type="string" var="$resource.properties.identitySelector.identityType" options="identity-type" required="True">
            <help short="The type of managed identity that is being selected."/>
            <enum>
              <item name="SystemAssignedIdentity" value="&quot;SystemAssignedIdentity&quot;"/>
              <item name="UserAssignedIdentity" value="&quot;UserAssignedIdentity&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="ResourceId" var="$resource.properties.identitySelector.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
            <help short="The user assigned managed identity resource ID to use. Mutually exclusive with a system assigned identity type."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.networkDeviceSku" options="network-device-sku" group="Properties">
          <help short="Network Device SKU name."/>
        </arg>
        <arg type="string" var="$resource.properties.serialNumber" options="serial-number" required="True" group="Properties">
          <help short="Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="NetworkDevices_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
          <request method="put">
            <path>
              <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$resource.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$resource.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$resource.properties.annotation"/>
                    <prop type="string" name="hostName" arg="$resource.properties.hostName">
                      <format minLength="1"/>
                    </prop>
                    <prop type="object" name="identitySelector" arg="$resource.properties.identitySelector">
                      <prop type="string" name="identityType" arg="$resource.properties.identitySelector.identityType" required="True">
                        <enum>
                          <item value="&quot;SystemAssignedIdentity&quot;"/>
                          <item value="&quot;UserAssignedIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId" arg="$resource.properties.identitySelector.userAssignedIdentityResourceId"/>
                    </prop>
                    <prop type="string" name="networkDeviceSku" arg="$resource.properties.networkDeviceSku"/>
                    <prop type="string" name="serialNumber" arg="$resource.properties.serialNumber" required="True">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;EnabledDegraded&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                        <item value="&quot;UnderMaintenance&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="array<object>" name="certificateRotationStatus" identifiers="certificateType">
                      <item type="object">
                        <prop readOnly="True" type="object" name="certificateArchiveReference">
                          <prop readOnly="True" type="string" name="certificateName"/>
                          <prop readOnly="True" type="string" name="certificateVersion"/>
                          <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="keyVaultUri"/>
                        </prop>
                        <prop readOnly="True" type="string" name="certificateType"/>
                        <prop readOnly="True" type="dateTime" name="expireTime"/>
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="string" name="synchronizationStatus">
                          <enum>
                            <item value="&quot;InSync&quot;"/>
                            <item value="&quot;OutOfSync&quot;"/>
                            <item value="&quot;Synchronizing&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingAdministrativeUpdate&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hostName">
                      <format minLength="1"/>
                    </prop>
                    <prop type="object" name="identitySelector">
                      <prop type="string" name="identityType" required="True">
                        <enum>
                          <item value="&quot;SystemAssignedIdentity&quot;"/>
                          <item value="&quot;UserAssignedIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId"/>
                    </prop>
                    <prop readOnly="True" type="object" name="lastOperation">
                      <prop readOnly="True" type="string" name="details"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managementIpv4Address"/>
                    <prop readOnly="True" type="string" name="managementIpv6Address"/>
                    <prop readOnly="True" type="string" name="networkDeviceRole">
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;Management&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                        <item value="&quot;TS&quot;"/>
                        <item value="&quot;ToR&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkDeviceSku"/>
                    <prop readOnly="True" nullable="True" type="ResourceId" name="networkFabricId"/>
                    <prop readOnly="True" type="string" name="networkRackId"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="rwDeviceConfig"/>
                    <prop readOnly="True" type="array<object>" name="secretRotationStatus" identifiers="secretType">
                      <item type="object">
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="object" name="secretArchiveReference">
                          <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="keyVaultUri"/>
                          <prop readOnly="True" type="string" name="secretName"/>
                          <prop readOnly="True" type="string" name="secretVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="secretType"/>
                        <prop readOnly="True" type="string" name="synchronizationStatus">
                          <enum>
                            <item value="&quot;InSync&quot;"/>
                            <item value="&quot;OutOfSync&quot;"/>
                            <item value="&quot;Synchronizing&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="serialNumber" required="True">
                      <format minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-07-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkDeviceName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Device."/>
          <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$properties.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$properties.identity.type" options="type" hide="True" group="Identity">
          <help short="The type of managed identity assigned to this resource."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$properties.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$properties.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The identities assigned to this resource by the user."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$properties.properties.annotation" options="annotation" group="Properties">
          <help short="Switch configuration description."/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.hostName" options="host-name" group="Properties">
          <help short="The host name of the device."/>
          <format minLength="1"/>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.identitySelector" options="identity-selector" group="Properties">
          <help short="The selection of the managed identity to use with this storage account. The identity type must be either system assigned or user assigned."/>
          <arg type="string" var="$properties.properties.identitySelector.identityType" options="identity-type">
            <help short="The type of managed identity that is being selected."/>
            <enum>
              <item name="SystemAssignedIdentity" value="&quot;SystemAssignedIdentity&quot;"/>
              <item name="UserAssignedIdentity" value="&quot;UserAssignedIdentity&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="ResourceId" var="$properties.properties.identitySelector.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
            <help short="The user assigned managed identity resource ID to use. Mutually exclusive with a system assigned identity type."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.serialNumber" options="serial-number" group="Properties">
          <help short="Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber."/>
          <format minLength="1"/>
        </arg>
        <arg type="object" var="$properties.tags" options="tags" group="Properties">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="NetworkDevices_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
          <request method="patch">
            <path>
              <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$properties.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$properties.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$properties.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$properties.identity.systemAssigned"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop nullable="True" type="string" name="annotation" arg="$properties.properties.annotation"/>
                    <prop nullable="True" type="string" name="hostName" arg="$properties.properties.hostName">
                      <format minLength="1"/>
                    </prop>
                    <prop nullable="True" type="object" name="identitySelector" arg="$properties.properties.identitySelector">
                      <prop type="string" name="identityType" arg="$properties.properties.identitySelector.identityType">
                        <enum>
                          <item value="&quot;SystemAssignedIdentity&quot;"/>
                          <item value="&quot;UserAssignedIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId" arg="$properties.properties.identitySelector.userAssignedIdentityResourceId"/>
                    </prop>
                    <prop nullable="True" type="string" name="serialNumber" arg="$properties.properties.serialNumber">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$properties.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;EnabledDegraded&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                        <item value="&quot;UnderMaintenance&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="array<object>" name="certificateRotationStatus" identifiers="certificateType">
                      <item type="object">
                        <prop readOnly="True" type="object" name="certificateArchiveReference">
                          <prop readOnly="True" type="string" name="certificateName"/>
                          <prop readOnly="True" type="string" name="certificateVersion"/>
                          <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="keyVaultUri"/>
                        </prop>
                        <prop readOnly="True" type="string" name="certificateType"/>
                        <prop readOnly="True" type="dateTime" name="expireTime"/>
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="string" name="synchronizationStatus">
                          <enum>
                            <item value="&quot;InSync&quot;"/>
                            <item value="&quot;OutOfSync&quot;"/>
                            <item value="&quot;Synchronizing&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingAdministrativeUpdate&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hostName">
                      <format minLength="1"/>
                    </prop>
                    <prop type="object" name="identitySelector">
                      <prop type="string" name="identityType" required="True">
                        <enum>
                          <item value="&quot;SystemAssignedIdentity&quot;"/>
                          <item value="&quot;UserAssignedIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId"/>
                    </prop>
                    <prop readOnly="True" type="object" name="lastOperation">
                      <prop readOnly="True" type="string" name="details"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managementIpv4Address"/>
                    <prop readOnly="True" type="string" name="managementIpv6Address"/>
                    <prop readOnly="True" type="string" name="networkDeviceRole">
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;Management&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                        <item value="&quot;TS&quot;"/>
                        <item value="&quot;ToR&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkDeviceSku"/>
                    <prop readOnly="True" nullable="True" type="ResourceId" name="networkFabricId"/>
                    <prop readOnly="True" type="string" name="networkRackId"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="rwDeviceConfig"/>
                    <prop readOnly="True" type="array<object>" name="secretRotationStatus" identifiers="secretType">
                      <item type="object">
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="object" name="secretArchiveReference">
                          <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="keyVaultUri"/>
                          <prop readOnly="True" type="string" name="secretName"/>
                          <prop readOnly="True" type="string" name="secretVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="secretType"/>
                        <prop readOnly="True" type="string" name="synchronizationStatus">
                          <enum>
                            <item value="&quot;InSync&quot;"/>
                            <item value="&quot;OutOfSync&quot;"/>
                            <item value="&quot;Synchronizing&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="serialNumber" required="True">
                      <format minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="identity">
      <command name="assign" version="2025-07-15">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" subresource="identity" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkDeviceName" options="network-device-name name n" required="True" idPart="name">
            <help short="Name of the Network Device."/>
            <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Resource.identity">
          <arg type="string" var="$resource.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Resource.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$resource.identity.userAssigned" options="mi-user-assigned user-assigned" group="Resource.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="resource">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkDevices_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
            <request method="get">
              <path>
                <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                  <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2025-07-15&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkDevice_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item nullable="True" type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="string" name="administrativeState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;EnabledDegraded&quot;"/>
                          <item value="&quot;MAT&quot;"/>
                          <item value="&quot;RMA&quot;"/>
                          <item value="&quot;UnderMaintenance&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="annotation"/>
                      <prop readOnly="True" type="array<object>" name="certificateRotationStatus" identifiers="certificateType">
                        <item type="object">
                          <prop readOnly="True" type="object" name="certificateArchiveReference">
                            <prop readOnly="True" type="string" name="certificateName"/>
                            <prop readOnly="True" type="string" name="certificateVersion"/>
                            <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                            <prop readOnly="True" type="string" name="keyVaultUri"/>
                          </prop>
                          <prop readOnly="True" type="string" name="certificateType"/>
                          <prop readOnly="True" type="dateTime" name="expireTime"/>
                          <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                          <prop readOnly="True" type="string" name="synchronizationStatus">
                            <enum>
                              <item value="&quot;InSync&quot;"/>
                              <item value="&quot;OutOfSync&quot;"/>
                              <item value="&quot;Synchronizing&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="configurationState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;DeferredControl&quot;"/>
                          <item value="&quot;Deprovisioned&quot;"/>
                          <item value="&quot;Deprovisioning&quot;"/>
                          <item value="&quot;ErrorDeprovisioning&quot;"/>
                          <item value="&quot;ErrorProvisioning&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;PendingAdministrativeUpdate&quot;"/>
                          <item value="&quot;PendingCommit&quot;"/>
                          <item value="&quot;Provisioned&quot;"/>
                          <item value="&quot;Provisioning&quot;"/>
                          <item value="&quot;Rejected&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="hostName">
                        <format minLength="1"/>
                      </prop>
                      <prop type="object" name="identitySelector">
                        <prop type="string" name="identityType" required="True">
                          <enum>
                            <item value="&quot;SystemAssignedIdentity&quot;"/>
                            <item value="&quot;UserAssignedIdentity&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="lastOperation">
                        <prop readOnly="True" type="string" name="details"/>
                      </prop>
                      <prop readOnly="True" type="string" name="managementIpv4Address"/>
                      <prop readOnly="True" type="string" name="managementIpv6Address"/>
                      <prop readOnly="True" type="string" name="networkDeviceRole">
                        <enum>
                          <item value="&quot;CE&quot;"/>
                          <item value="&quot;Management&quot;"/>
                          <item value="&quot;NPB&quot;"/>
                          <item value="&quot;TS&quot;"/>
                          <item value="&quot;ToR&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkDeviceSku"/>
                      <prop readOnly="True" nullable="True" type="ResourceId" name="networkFabricId"/>
                      <prop readOnly="True" type="string" name="networkRackId"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="rwDeviceConfig"/>
                      <prop readOnly="True" type="array<object>" name="secretRotationStatus" identifiers="secretType">
                        <item type="object">
                          <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                          <prop readOnly="True" type="object" name="secretArchiveReference">
                            <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                            <prop readOnly="True" type="string" name="keyVaultUri"/>
                            <prop readOnly="True" type="string" name="secretName"/>
                            <prop readOnly="True" type="string" name="secretVersion"/>
                          </prop>
                          <prop readOnly="True" type="string" name="secretType"/>
                          <prop readOnly="True" type="string" name="synchronizationStatus">
                            <enum>
                              <item value="&quot;InSync&quot;"/>
                              <item value="&quot;OutOfSync&quot;"/>
                              <item value="&quot;Synchronizing&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="serialNumber" required="True">
                        <format minLength="1"/>
                      </prop>
                      <prop readOnly="True" type="string" name="version"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="assign" type="IdentityObject" name="resource.identity" required="True">
                <userAssigned action="assign" type="array<string>" name="userAssigned" arg="$resource.identity.userAssigned">
                  <item action="assign" type="string"/>
                </userAssigned>
                <systemAssigned action="assign" type="string" name="systemAssigned" arg="$resource.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="NetworkDevices_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
            <request method="put">
              <path>
                <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                  <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2025-07-15&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@NetworkDevice_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2025-07-15">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" subresource="identity" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkDeviceName" options="network-device-name name n" required="True" idPart="name">
            <help short="Name of the Network Device."/>
            <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Resource.identity">
          <arg type="string" var="$resource.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Resource.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$resource.identity.userAssigned" options="mi-user-assigned user-assigned" group="Resource.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="resource">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkDevices_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
            <request method="get">
              <path>
                <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                  <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2025-07-15&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkDevice_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item nullable="True" type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="string" name="administrativeState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;EnabledDegraded&quot;"/>
                          <item value="&quot;MAT&quot;"/>
                          <item value="&quot;RMA&quot;"/>
                          <item value="&quot;UnderMaintenance&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="annotation"/>
                      <prop readOnly="True" type="array<object>" name="certificateRotationStatus" identifiers="certificateType">
                        <item type="object">
                          <prop readOnly="True" type="object" name="certificateArchiveReference">
                            <prop readOnly="True" type="string" name="certificateName"/>
                            <prop readOnly="True" type="string" name="certificateVersion"/>
                            <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                            <prop readOnly="True" type="string" name="keyVaultUri"/>
                          </prop>
                          <prop readOnly="True" type="string" name="certificateType"/>
                          <prop readOnly="True" type="dateTime" name="expireTime"/>
                          <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                          <prop readOnly="True" type="string" name="synchronizationStatus">
                            <enum>
                              <item value="&quot;InSync&quot;"/>
                              <item value="&quot;OutOfSync&quot;"/>
                              <item value="&quot;Synchronizing&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="configurationState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;DeferredControl&quot;"/>
                          <item value="&quot;Deprovisioned&quot;"/>
                          <item value="&quot;Deprovisioning&quot;"/>
                          <item value="&quot;ErrorDeprovisioning&quot;"/>
                          <item value="&quot;ErrorProvisioning&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;PendingAdministrativeUpdate&quot;"/>
                          <item value="&quot;PendingCommit&quot;"/>
                          <item value="&quot;Provisioned&quot;"/>
                          <item value="&quot;Provisioning&quot;"/>
                          <item value="&quot;Rejected&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="hostName">
                        <format minLength="1"/>
                      </prop>
                      <prop type="object" name="identitySelector">
                        <prop type="string" name="identityType" required="True">
                          <enum>
                            <item value="&quot;SystemAssignedIdentity&quot;"/>
                            <item value="&quot;UserAssignedIdentity&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="lastOperation">
                        <prop readOnly="True" type="string" name="details"/>
                      </prop>
                      <prop readOnly="True" type="string" name="managementIpv4Address"/>
                      <prop readOnly="True" type="string" name="managementIpv6Address"/>
                      <prop readOnly="True" type="string" name="networkDeviceRole">
                        <enum>
                          <item value="&quot;CE&quot;"/>
                          <item value="&quot;Management&quot;"/>
                          <item value="&quot;NPB&quot;"/>
                          <item value="&quot;TS&quot;"/>
                          <item value="&quot;ToR&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkDeviceSku"/>
                      <prop readOnly="True" nullable="True" type="ResourceId" name="networkFabricId"/>
                      <prop readOnly="True" type="string" name="networkRackId"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="rwDeviceConfig"/>
                      <prop readOnly="True" type="array<object>" name="secretRotationStatus" identifiers="secretType">
                        <item type="object">
                          <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                          <prop readOnly="True" type="object" name="secretArchiveReference">
                            <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                            <prop readOnly="True" type="string" name="keyVaultUri"/>
                            <prop readOnly="True" type="string" name="secretName"/>
                            <prop readOnly="True" type="string" name="secretVersion"/>
                          </prop>
                          <prop readOnly="True" type="string" name="secretType"/>
                          <prop readOnly="True" type="string" name="synchronizationStatus">
                            <enum>
                              <item value="&quot;InSync&quot;"/>
                              <item value="&quot;OutOfSync&quot;"/>
                              <item value="&quot;Synchronizing&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="serialNumber" required="True">
                        <format minLength="1"/>
                      </prop>
                      <prop readOnly="True" type="string" name="version"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="remove" type="IdentityObject" name="resource.identity" required="True">
                <userAssigned action="remove" type="array<string>" name="userAssigned" arg="$resource.identity.userAssigned">
                  <item action="remove" type="string"/>
                </userAssigned>
                <systemAssigned action="remove" type="string" name="systemAssigned" arg="$resource.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="NetworkDevices_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
            <request method="put">
              <path>
                <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                  <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2025-07-15&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@NetworkDevice_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="show" version="2025-07-15">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkdevices/{}" version="2025-07-15" subresource="identity" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0RldmljZXMve25ldHdvcmtEZXZpY2VOYW1lfQ==/V/MjAyNS0wNy0xNQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.networkDeviceName" options="network-device-name name n" required="True" idPart="name">
            <help short="Name of the Network Device."/>
            <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="resource">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="NetworkDevices_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}">
            <request method="get">
              <path>
                <param type="string" name="networkDeviceName" arg="$Path.networkDeviceName" required="True">
                  <format pattern="^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2025-07-15&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="NetworkDevice_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item nullable="True" type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="string" name="administrativeState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;EnabledDegraded&quot;"/>
                          <item value="&quot;MAT&quot;"/>
                          <item value="&quot;RMA&quot;"/>
                          <item value="&quot;UnderMaintenance&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="annotation"/>
                      <prop readOnly="True" type="array<object>" name="certificateRotationStatus" identifiers="certificateType">
                        <item type="object">
                          <prop readOnly="True" type="object" name="certificateArchiveReference">
                            <prop readOnly="True" type="string" name="certificateName"/>
                            <prop readOnly="True" type="string" name="certificateVersion"/>
                            <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                            <prop readOnly="True" type="string" name="keyVaultUri"/>
                          </prop>
                          <prop readOnly="True" type="string" name="certificateType"/>
                          <prop readOnly="True" type="dateTime" name="expireTime"/>
                          <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                          <prop readOnly="True" type="string" name="synchronizationStatus">
                            <enum>
                              <item value="&quot;InSync&quot;"/>
                              <item value="&quot;OutOfSync&quot;"/>
                              <item value="&quot;Synchronizing&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="configurationState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;DeferredControl&quot;"/>
                          <item value="&quot;Deprovisioned&quot;"/>
                          <item value="&quot;Deprovisioning&quot;"/>
                          <item value="&quot;ErrorDeprovisioning&quot;"/>
                          <item value="&quot;ErrorProvisioning&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;PendingAdministrativeUpdate&quot;"/>
                          <item value="&quot;PendingCommit&quot;"/>
                          <item value="&quot;Provisioned&quot;"/>
                          <item value="&quot;Provisioning&quot;"/>
                          <item value="&quot;Rejected&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="hostName">
                        <format minLength="1"/>
                      </prop>
                      <prop type="object" name="identitySelector">
                        <prop type="string" name="identityType" required="True">
                          <enum>
                            <item value="&quot;SystemAssignedIdentity&quot;"/>
                            <item value="&quot;UserAssignedIdentity&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="ResourceId" name="userAssignedIdentityResourceId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="lastOperation">
                        <prop readOnly="True" type="string" name="details"/>
                      </prop>
                      <prop readOnly="True" type="string" name="managementIpv4Address"/>
                      <prop readOnly="True" type="string" name="managementIpv6Address"/>
                      <prop readOnly="True" type="string" name="networkDeviceRole">
                        <enum>
                          <item value="&quot;CE&quot;"/>
                          <item value="&quot;Management&quot;"/>
                          <item value="&quot;NPB&quot;"/>
                          <item value="&quot;TS&quot;"/>
                          <item value="&quot;ToR&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkDeviceSku"/>
                      <prop readOnly="True" nullable="True" type="ResourceId" name="networkFabricId"/>
                      <prop readOnly="True" type="string" name="networkRackId"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="rwDeviceConfig"/>
                      <prop readOnly="True" type="array<object>" name="secretRotationStatus" identifiers="secretType">
                        <item type="object">
                          <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                          <prop readOnly="True" type="object" name="secretArchiveReference">
                            <prop readOnly="True" nullable="True" type="ResourceId" name="keyVaultId"/>
                            <prop readOnly="True" type="string" name="keyVaultUri"/>
                            <prop readOnly="True" type="string" name="secretName"/>
                            <prop readOnly="True" type="string" name="secretVersion"/>
                          </prop>
                          <prop readOnly="True" type="string" name="secretType"/>
                          <prop readOnly="True" type="string" name="synchronizationStatus">
                            <enum>
                              <item value="&quot;InSync&quot;"/>
                              <item value="&quot;OutOfSync&quot;"/>
                              <item value="&quot;Synchronizing&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="serialNumber" required="True">
                        <format minLength="1"/>
                      </prop>
                      <prop readOnly="True" type="string" name="version"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
