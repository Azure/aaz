<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches" version="2025-06-23-preview" swagger="mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXM=/V/MjAyNS0wNi0yMy1wcmV2aWV3"/>
  <commandGroup name="neon postgres branch">
    <command name="list" version="2025-06-23-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches" version="2025-06-23-preview" swagger="mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXM=/V/MjAyNS0wNi0yMy1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.organizationName" options="organization-name" required="True" group="" idPart="name">
          <help short="Name of the Neon organization."/>
          <prompt msg="Please provide Neon Organization name:"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-id" required="True" group="" idPart="child_name_1">
          <help short="Id of the Neon project"/>
          <format pattern="^\S.{0,62}\S$|^\S$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Branches_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}/branches">
          <request method="get">
            <path>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_\-.: ]*$" maxLength="50" minLength="1"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^\S.{0,62}\S$|^\S$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-23-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Neon.Postgres/organizations/{}/projects/{}/branches/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="array<object>" name="attributes">
                          <item type="object" cls="Attributes_read">
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="value" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="branch">
                          <format pattern="^\S.{0,126}\S$|^\S$"/>
                        </prop>
                        <prop type="string" name="branchId">
                          <format pattern="^[a-z0-9-]{1,60}$"/>
                        </prop>
                        <prop readOnly="True" type="string" name="computeHours"/>
                        <prop readOnly="True" type="string" name="createdAt"/>
                        <prop readOnly="True" type="string" name="dataSize"/>
                        <prop type="string" name="databaseName"/>
                        <prop type="array<object>" name="databases">
                          <item type="object">
                            <prop type="array<@Attributes_read>" name="attributes">
                              <item type="@Attributes_read"/>
                            </prop>
                            <prop type="string" name="branchId"/>
                            <prop readOnly="True" type="string" name="createdAt"/>
                            <prop type="string" name="databaseName">
                              <format pattern="^\S.{0,62}\S$|^\S$"/>
                            </prop>
                            <prop readOnly="True" type="string" name="entityId">
                              <format pattern="^[a-z0-9-]{1,60}$"/>
                            </prop>
                            <prop type="string" name="entityName">
                              <format pattern="^\S.{0,62}\S$|^\S$"/>
                            </prop>
                            <prop readOnly="True" type="string" name="lastUpdated"/>
                            <prop type="string" name="ownerName"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="endpoints">
                          <item type="object">
                            <prop type="array<@Attributes_read>" name="attributes">
                              <item type="@Attributes_read"/>
                            </prop>
                            <prop type="string" name="branchId"/>
                            <prop type="string" name="computeName">
                              <format pattern="^\S.{0,62}\S$|^\S$"/>
                            </prop>
                            <prop readOnly="True" type="string" name="createdAt"/>
                            <prop type="string" name="endpointId">
                              <format pattern="^[a-z0-9-]{1,60}$"/>
                            </prop>
                            <prop type="string" name="endpointType">
                              <enum>
                                <item value="&quot;read_only&quot;"/>
                                <item value="&quot;read_write&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="entityId">
                              <format pattern="^[a-z0-9-]{1,60}$"/>
                            </prop>
                            <prop type="string" name="entityName">
                              <format pattern="^\S.{0,62}\S$|^\S$"/>
                            </prop>
                            <prop readOnly="True" type="string" name="lastActive"/>
                            <prop type="string" name="projectId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="size">
                              <prop type="float32" name="autoscalingLimitMaxCu" required="True"/>
                              <prop type="float32" name="autoscalingLimitMinCu" required="True"/>
                            </prop>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;active&quot;"/>
                                <item value="&quot;idle&quot;"/>
                                <item value="&quot;init&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="entityId">
                          <format pattern="^[a-z0-9-]{1,60}$"/>
                        </prop>
                        <prop type="string" name="entityName">
                          <format pattern="^\S.{0,62}\S$|^\S$"/>
                        </prop>
                        <prop readOnly="True" type="boolean" name="isDefault"/>
                        <prop readOnly="True" type="string" name="lastActive"/>
                        <prop type="string" name="parentId">
                          <format pattern="^[a-z0-9-]{1,60}$"/>
                        </prop>
                        <prop type="string" name="projectId"/>
                        <prop readOnly="True" type="boolean" name="protected"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="roleName"/>
                        <prop type="array<object>" name="roles">
                          <item type="object">
                            <prop type="array<@Attributes_read>" name="attributes">
                              <item type="@Attributes_read"/>
                            </prop>
                            <prop type="string" name="branchId"/>
                            <prop readOnly="True" type="string" name="createdAt"/>
                            <prop readOnly="True" type="string" name="entityId">
                              <format pattern="^[a-z0-9-]{1,60}$"/>
                            </prop>
                            <prop type="string" name="entityName">
                              <format pattern="^\S.{0,62}\S$|^\S$"/>
                            </prop>
                            <prop type="boolean" name="isSuperUser"/>
                            <prop readOnly="True" type="string" name="lastUpdated"/>
                            <prop readOnly="True" type="string" name="owns"/>
                            <prop type="array<string>" name="permissions">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="roleName">
                              <format pattern="^\S.{0,62}\S$|^\S$"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
