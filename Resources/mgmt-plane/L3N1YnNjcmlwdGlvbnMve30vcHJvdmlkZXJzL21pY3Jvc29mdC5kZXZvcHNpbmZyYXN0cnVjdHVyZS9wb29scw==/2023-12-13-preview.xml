<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.devopsinfrastructure/pools" version="2023-12-13-preview" swagger="mgmt-plane/devopsinfrastructure/ResourceProviders/Microsoft.DevOpsInfrastructure/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRldk9wc0luZnJhc3RydWN0dXJlL3Bvb2xz/V/MjAyMy0xMi0xMy1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devopsinfrastructure/pools" version="2023-12-13-preview" swagger="mgmt-plane/devopsinfrastructure/ResourceProviders/Microsoft.DevOpsInfrastructure/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2T3BzSW5mcmFzdHJ1Y3R1cmUvcG9vbHM=/V/MjAyMy0xMi0xMy1wcmV2aWV3"/>
  <commandGroup name="mdp pool">
    <command name="list" version="2023-12-13-preview">
      <resource id="/subscriptions/{}/providers/microsoft.devopsinfrastructure/pools" version="2023-12-13-preview" swagger="mgmt-plane/devopsinfrastructure/ResourceProviders/Microsoft.DevOpsInfrastructure/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRldk9wc0luZnJhc3RydWN0dXJlL3Bvb2xz/V/MjAyMy0xMi0xMy1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devopsinfrastructure/pools" version="2023-12-13-preview" swagger="mgmt-plane/devopsinfrastructure/ResourceProviders/Microsoft.DevOpsInfrastructure/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2T3BzSW5mcmFzdHJ1Y3R1cmUvcG9vbHM=/V/MjAyMy0xMi0xMy1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Pools_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Pools_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Pools_ListByResourceGroup" operationId="Pools_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-13-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevOpsInfrastructure/pools/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="agentProfile" required="True">
                          <prop type="string" name="kind" required="True">
                            <enum>
                              <item value="&quot;Stateful&quot;"/>
                              <item value="&quot;Stateless&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="resourcePredictions"/>
                          <discriminator property="kind" value="Stateful">
                            <prop type="string" name="maxAgentLifetime" required="True"/>
                          </discriminator>
                          <discriminator property="kind" value="Stateless"/>
                        </prop>
                        <prop type="string" name="devCenterProjectResourceId" required="True"/>
                        <prop type="object" name="fabricProfile" required="True">
                          <prop type="string" name="kind" required="True">
                            <enum>
                              <item value="&quot;Vmss&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="kind" value="Vmss">
                            <prop type="array<object>" name="images" required="True">
                              <item type="object">
                                <prop type="array<string>" name="aliases">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="buffer">
                                  <default value="&quot;*&quot;"/>
                                </prop>
                                <prop type="string" name="resourceId" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="networkProfile">
                              <prop type="string" name="subnetId" required="True"/>
                            </prop>
                            <prop type="object" name="osProfile">
                              <prop type="string" name="logonType">
                                <enum>
                                  <item value="&quot;Interactive&quot;"/>
                                  <item value="&quot;Service&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="secretsManagementSettings">
                                <prop type="string" name="certificateStoreLocation"/>
                                <prop type="boolean" name="keyExportable" required="True"/>
                                <prop type="array<string>" name="observedCertificates" required="True">
                                  <item type="string"/>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="object" name="sku" required="True">
                              <prop type="string" name="name" required="True"/>
                            </prop>
                            <prop type="object" name="storageProfile">
                              <prop type="string" name="osDiskStorageAccountType">
                                <enum>
                                  <item value="&quot;Premium&quot;"/>
                                  <item value="&quot;Standard&quot;"/>
                                  <item value="&quot;StandardSSD&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="integer32" name="maximumConcurrency" required="True">
                          <format maximum="10000" minimum="1"/>
                        </prop>
                        <prop type="object" name="organizationProfile" required="True">
                          <prop type="string" name="kind" required="True">
                            <enum>
                              <item value="&quot;AzureDevOps&quot;"/>
                              <item value="&quot;GitHub&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="kind" value="AzureDevOps">
                            <prop type="array<object>" name="organizations" required="True">
                              <item type="object">
                                <prop type="integer32" name="parallelism"/>
                                <prop type="array<string>" name="projects">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="url" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="permissionProfile">
                              <prop type="array<string>" name="groups">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="kind" required="True">
                                <enum>
                                  <item value="&quot;CreatorOnly&quot;"/>
                                  <item value="&quot;Inherit&quot;"/>
                                  <item value="&quot;SpecificAccounts&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="users">
                                <item type="string"/>
                              </prop>
                            </prop>
                          </discriminator>
                          <discriminator property="kind" value="GitHub">
                            <prop type="array<object>" name="organizations" required="True">
                              <item type="object">
                                <prop type="array<string>" name="repositories">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="url" required="True"/>
                              </item>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Pools_ListBySubscription" operationId="Pools_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-13-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevOpsInfrastructure/pools/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="agentProfile" required="True">
                          <prop type="string" name="kind" required="True">
                            <enum>
                              <item value="&quot;Stateful&quot;"/>
                              <item value="&quot;Stateless&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="resourcePredictions"/>
                          <discriminator property="kind" value="Stateful">
                            <prop type="string" name="maxAgentLifetime" required="True"/>
                          </discriminator>
                          <discriminator property="kind" value="Stateless"/>
                        </prop>
                        <prop type="string" name="devCenterProjectResourceId" required="True"/>
                        <prop type="object" name="fabricProfile" required="True">
                          <prop type="string" name="kind" required="True">
                            <enum>
                              <item value="&quot;Vmss&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="kind" value="Vmss">
                            <prop type="array<object>" name="images" required="True">
                              <item type="object">
                                <prop type="array<string>" name="aliases">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="buffer">
                                  <default value="&quot;*&quot;"/>
                                </prop>
                                <prop type="string" name="resourceId" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="networkProfile">
                              <prop type="string" name="subnetId" required="True"/>
                            </prop>
                            <prop type="object" name="osProfile">
                              <prop type="string" name="logonType">
                                <enum>
                                  <item value="&quot;Interactive&quot;"/>
                                  <item value="&quot;Service&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="secretsManagementSettings">
                                <prop type="string" name="certificateStoreLocation"/>
                                <prop type="boolean" name="keyExportable" required="True"/>
                                <prop type="array<string>" name="observedCertificates" required="True">
                                  <item type="string"/>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="object" name="sku" required="True">
                              <prop type="string" name="name" required="True"/>
                            </prop>
                            <prop type="object" name="storageProfile">
                              <prop type="string" name="osDiskStorageAccountType">
                                <enum>
                                  <item value="&quot;Premium&quot;"/>
                                  <item value="&quot;Standard&quot;"/>
                                  <item value="&quot;StandardSSD&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="integer32" name="maximumConcurrency" required="True">
                          <format maximum="10000" minimum="1"/>
                        </prop>
                        <prop type="object" name="organizationProfile" required="True">
                          <prop type="string" name="kind" required="True">
                            <enum>
                              <item value="&quot;AzureDevOps&quot;"/>
                              <item value="&quot;GitHub&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="kind" value="AzureDevOps">
                            <prop type="array<object>" name="organizations" required="True">
                              <item type="object">
                                <prop type="integer32" name="parallelism"/>
                                <prop type="array<string>" name="projects">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="url" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="permissionProfile">
                              <prop type="array<string>" name="groups">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="kind" required="True">
                                <enum>
                                  <item value="&quot;CreatorOnly&quot;"/>
                                  <item value="&quot;Inherit&quot;"/>
                                  <item value="&quot;SpecificAccounts&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="users">
                                <item type="string"/>
                              </prop>
                            </prop>
                          </discriminator>
                          <discriminator property="kind" value="GitHub">
                            <prop type="array<object>" name="organizations" required="True">
                              <item type="object">
                                <prop type="array<string>" name="repositories">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="url" required="True"/>
                              </item>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
