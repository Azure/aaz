<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfQ==/V/MjAyNC0wMy0wMw=="/>
  <commandGroup name="sig in-vm-access-control-profile">
    <command name="show" version="2024-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfQ==/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery from which the in VM access control profiles are to be retrieved."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile to be deleted."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}">
          <request method="get">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/inVMAccessControlProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="applicableHostEndpoint" required="True">
                      <enum>
                        <item value="&quot;IMDS&quot;"/>
                        <item value="&quot;WireServer&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-03-03" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfQ==/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the in VM access control profile resides."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile to be deleted."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfiles_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}">
          <request method="delete">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfQ==/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the in VM access control profile is to be created."/>
          <format pattern="^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters."/>
          <format pattern="^[a-zA-Z0-9]+([-._]?[a-zA-Z0-9]+)*$" maxLength="80"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryInVMAccessControlProfile">
        <arg type="ResourceLocation" var="$galleryInVMAccessControlProfile.location" options="location l" required="True" group="GalleryInVMAccessControlProfile">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$galleryInVMAccessControlProfile.tags" options="tags" hide="True" group="GalleryInVMAccessControlProfile">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$galleryInVMAccessControlProfile.properties.applicableHostEndpoint" options="applicable-host-endpoint" group="Properties">
          <help short="This property allows you to specify the Endpoint type for which this profile is defining the access control for. Possible values are: 'WireServer' or 'IMDS'"/>
          <enum>
            <item name="IMDS" value="&quot;IMDS&quot;"/>
            <item name="WireServer" value="&quot;WireServer&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$galleryInVMAccessControlProfile.properties.description" options="description" group="Properties">
          <help short="The description of this gallery in VM access control profile resources. This property is updatable."/>
        </arg>
        <arg type="string" var="$galleryInVMAccessControlProfile.properties.osType" options="os-type" group="Properties">
          <help short="This property allows you to specify the OS type of the VMs/VMSS for which this profile can be used against. Possible values are: 'Windows' or 'Linux'"/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfiles_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}">
          <request method="put">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True">
                <format pattern="^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"/>
              </param>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True">
                <format pattern="^[a-zA-Z0-9]+([-._]?[a-zA-Z0-9]+)*$" maxLength="80"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="galleryInVMAccessControlProfile" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$galleryInVMAccessControlProfile.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="applicableHostEndpoint" arg="$galleryInVMAccessControlProfile.properties.applicableHostEndpoint" required="True">
                      <enum>
                        <item value="&quot;IMDS&quot;"/>
                        <item value="&quot;WireServer&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$galleryInVMAccessControlProfile.properties.description"/>
                    <prop type="string" name="osType" arg="$galleryInVMAccessControlProfile.properties.osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$galleryInVMAccessControlProfile.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/inVMAccessControlProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="applicableHostEndpoint" required="True">
                      <enum>
                        <item value="&quot;IMDS&quot;"/>
                        <item value="&quot;WireServer&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfQ==/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery from which the in VM access control profiles are to be retrieved."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile to be deleted."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryInVMAccessControlProfile">
        <arg type="ResourceLocation" var="$galleryInVMAccessControlProfile.location" options="location l" hide="True" group="GalleryInVMAccessControlProfile">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$galleryInVMAccessControlProfile.tags" options="tags" hide="True" group="GalleryInVMAccessControlProfile">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$galleryInVMAccessControlProfile.properties.applicableHostEndpoint" options="applicable-host-endpoint" group="Properties">
          <help short="This property allows you to specify the Endpoint type for which this profile is defining the access control for. Possible values are: 'WireServer' or 'IMDS'"/>
          <enum>
            <item name="IMDS" value="&quot;IMDS&quot;"/>
            <item name="WireServer" value="&quot;WireServer&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$galleryInVMAccessControlProfile.properties.description" options="description" group="Properties">
          <help short="The description of this gallery in VM access control profile resources. This property is updatable."/>
        </arg>
        <arg type="string" var="$galleryInVMAccessControlProfile.properties.osType" options="os-type" hide="True" group="Properties">
          <help short="This property allows you to specify the OS type of the VMs/VMSS for which this profile can be used against. Possible values are: 'Windows' or 'Linux'"/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}">
          <request method="get">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryInVMAccessControlProfile_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/inVMAccessControlProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="applicableHostEndpoint" required="True">
                      <enum>
                        <item value="&quot;IMDS&quot;"/>
                        <item value="&quot;WireServer&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="galleryInVMAccessControlProfile" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$galleryInVMAccessControlProfile.location" required="True"/>
              <prop type="object" name="properties">
                <prop type="string" name="applicableHostEndpoint" arg="$galleryInVMAccessControlProfile.properties.applicableHostEndpoint" required="True">
                  <enum>
                    <item value="&quot;IMDS&quot;"/>
                    <item value="&quot;WireServer&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$galleryInVMAccessControlProfile.properties.description"/>
                <prop type="string" name="osType" arg="$galleryInVMAccessControlProfile.properties.osType" required="True">
                  <enum>
                    <item value="&quot;Linux&quot;"/>
                    <item value="&quot;Windows&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$galleryInVMAccessControlProfile.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="GalleryInVMAccessControlProfiles_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}">
          <request method="put">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True">
                <format pattern="^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"/>
              </param>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True">
                <format pattern="^[a-zA-Z0-9]+([-._]?[a-zA-Z0-9]+)*$" maxLength="80"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@GalleryInVMAccessControlProfile_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
