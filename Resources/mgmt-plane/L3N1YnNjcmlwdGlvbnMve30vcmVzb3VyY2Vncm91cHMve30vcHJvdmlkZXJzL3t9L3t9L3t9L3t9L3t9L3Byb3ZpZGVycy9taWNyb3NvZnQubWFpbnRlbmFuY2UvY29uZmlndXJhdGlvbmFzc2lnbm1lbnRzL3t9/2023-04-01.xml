<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/{}/{}/{}/{}/{}/providers/microsoft.maintenance/configurationassignments/{}" version="2023-04-01" swagger="mgmt-plane/maintenance/ResourceProviders/Microsoft.Maintenance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy97cHJvdmlkZXJOYW1lfS97cmVzb3VyY2VQYXJlbnRUeXBlfS97cmVzb3VyY2VQYXJlbnROYW1lfS97cmVzb3VyY2VUeXBlfS97cmVzb3VyY2VOYW1lfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1haW50ZW5hbmNlL2NvbmZpZ3VyYXRpb25Bc3NpZ25tZW50cy97Y29uZmlndXJhdGlvbkFzc2lnbm1lbnROYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
  <commandGroup name="maintenance assignment">
    <command name="create-or-update-parent" version="2023-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/{}/{}/{}/{}/{}/providers/microsoft.maintenance/configurationassignments/{}" version="2023-04-01" swagger="mgmt-plane/maintenance/ResourceProviders/Microsoft.Maintenance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy97cHJvdmlkZXJOYW1lfS97cmVzb3VyY2VQYXJlbnRUeXBlfS97cmVzb3VyY2VQYXJlbnROYW1lfS97cmVzb3VyY2VUeXBlfS97cmVzb3VyY2VOYW1lfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1haW50ZW5hbmNlL2NvbmZpZ3VyYXRpb25Bc3NpZ25tZW50cy97Y29uZmlndXJhdGlvbkFzc2lnbm1lbnROYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationAssignmentName" options="configuration-assignment-name name n" required="True" idPart="child_name_2">
          <help short="Configuration assignment name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" idPart="namespace">
          <help short="Resource provider name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="string" var="$Path.resourceName" options="resource-name" required="True" idPart="child_name_1">
          <help short="Resource identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentName" options="resource-parent-name" required="True" idPart="name">
          <help short="Resource parent identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentType" options="resource-parent-type" required="True" idPart="type">
          <help short="Resource parent type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceType" options="resource-type" required="True" idPart="child_type_1">
          <help short="Resource type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
        <arg type="ResourceLocation" var="$configurationAssignment.location" options="location l" group="">
          <help short="Location. Values from: `az account list-                                                            locations`. You can configure the default                                                            location using `az configure --defaults                                                            location=<location>`."/>
        </arg>
        <arg type="string" var="$configurationAssignment.properties.maintenanceConfigurationId" options="maintenance-configuration-id" group="">
          <help short="The maintenance configuration Id"/>
        </arg>
        <arg type="string" var="$configurationAssignment.properties.resourceId" options="resource-id" group="">
          <help short="The unique resourceId"/>
        </arg>
      </argGroup>
      <argGroup name="Filter">
        <arg type="array<string>" var="$configurationAssignment.properties.filter.locations" options="locations" group="Filter">
          <help short="List of locations to scope the query to."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$configurationAssignment.properties.filter.resourceGroups" options="resource-groups" group="Filter">
          <help short="List of allowed resource groups."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$configurationAssignment.properties.filter.resourceTypes" options="resource-types" group="Filter">
          <help short="List of allowed resources."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$configurationAssignment.properties.filter.tagSettings" options="tag-settings" group="Filter">
          <help short="Tag settings for the VM."/>
          <arg type="string" var="$configurationAssignment.properties.filter.tagSettings.filterOperator" options="filter-operator">
            <help short="Filter VMs by Any or All specified tags."/>
            <enum>
              <item name="All" value="&quot;All&quot;"/>
              <item name="Any" value="&quot;Any&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$configurationAssignment.properties.filter.tagSettings.tags" options="tags">
            <help short="Dictionary of tags with its list of values."/>
            <additionalProp>
              <item type="array<string>">
                <item type="string"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$configurationAssignment.properties.extensionProperties" options="extension-properties" group="Properties">
          <help short="Gets or sets extensionProperties of the configuration assignment"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="ConfigurationAssignments_CreateOrUpdateParent">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}">
          <request method="put">
            <path>
              <param type="string" name="configurationAssignmentName" arg="$Path.configurationAssignmentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="providerName" arg="$Path.providerName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentName" arg="$Path.resourceParentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentType" arg="$Path.resourceParentType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceType" arg="$Path.resourceType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="configurationAssignment" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$configurationAssignment.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="extensionProperties" arg="$configurationAssignment.properties.extensionProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="filter" clientFlatten="True">
                      <prop type="array<string>" name="locations" arg="$configurationAssignment.properties.filter.locations">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups" arg="$configurationAssignment.properties.filter.resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceTypes" arg="$configurationAssignment.properties.filter.resourceTypes">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="tagSettings" arg="$configurationAssignment.properties.filter.tagSettings">
                        <prop type="string" name="filterOperator" arg="$configurationAssignment.properties.filter.tagSettings.filterOperator">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;Any&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags" arg="$configurationAssignment.properties.filter.tagSettings.tags">
                          <additionalProp>
                            <item type="array<string>">
                              <item type="string"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="maintenanceConfigurationId" arg="$configurationAssignment.properties.maintenanceConfigurationId"/>
                    <prop type="string" name="resourceId" arg="$configurationAssignment.properties.resourceId"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="extensionProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="filter" clientFlatten="True">
                      <prop type="array<string>" name="locations">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceTypes">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="tagSettings">
                        <prop type="string" name="filterOperator">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;Any&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="array<string>">
                              <item type="string"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="maintenanceConfigurationId"/>
                    <prop type="string" name="resourceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete-parent" version="2023-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/{}/{}/{}/{}/{}/providers/microsoft.maintenance/configurationassignments/{}" version="2023-04-01" swagger="mgmt-plane/maintenance/ResourceProviders/Microsoft.Maintenance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy97cHJvdmlkZXJOYW1lfS97cmVzb3VyY2VQYXJlbnRUeXBlfS97cmVzb3VyY2VQYXJlbnROYW1lfS97cmVzb3VyY2VUeXBlfS97cmVzb3VyY2VOYW1lfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1haW50ZW5hbmNlL2NvbmZpZ3VyYXRpb25Bc3NpZ25tZW50cy97Y29uZmlndXJhdGlvbkFzc2lnbm1lbnROYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationAssignmentName" options="configuration-assignment-name name n" required="True" idPart="child_name_2">
          <help short="Unique configuration assignment name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" idPart="namespace">
          <help short="Resource provider name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="string" var="$Path.resourceName" options="resource-name" required="True" idPart="child_name_1">
          <help short="Resource identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentName" options="resource-parent-name" required="True" idPart="name">
          <help short="Resource parent identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentType" options="resource-parent-type" required="True" idPart="type">
          <help short="Resource parent type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceType" options="resource-type" required="True" idPart="child_type_1">
          <help short="Resource type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <operation operationId="ConfigurationAssignments_DeleteParent">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}">
          <request method="delete">
            <path>
              <param type="string" name="configurationAssignmentName" arg="$Path.configurationAssignmentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="providerName" arg="$Path.providerName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentName" arg="$Path.resourceParentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentType" arg="$Path.resourceParentType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceType" arg="$Path.resourceType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="extensionProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="filter" clientFlatten="True">
                      <prop type="array<string>" name="locations">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceTypes">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="tagSettings">
                        <prop type="string" name="filterOperator">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;Any&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="array<string>">
                              <item type="string"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="maintenanceConfigurationId"/>
                    <prop type="string" name="resourceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="show-parent" version="2023-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/{}/{}/{}/{}/{}/providers/microsoft.maintenance/configurationassignments/{}" version="2023-04-01" swagger="mgmt-plane/maintenance/ResourceProviders/Microsoft.Maintenance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy97cHJvdmlkZXJOYW1lfS97cmVzb3VyY2VQYXJlbnRUeXBlfS97cmVzb3VyY2VQYXJlbnROYW1lfS97cmVzb3VyY2VUeXBlfS97cmVzb3VyY2VOYW1lfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1haW50ZW5hbmNlL2NvbmZpZ3VyYXRpb25Bc3NpZ25tZW50cy97Y29uZmlndXJhdGlvbkFzc2lnbm1lbnROYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationAssignmentName" options="configuration-assignment-name name n" required="True" idPart="child_name_2">
          <help short="Configuration assignment name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" idPart="namespace">
          <help short="Resource provider name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="string" var="$Path.resourceName" options="resource-name" required="True" idPart="child_name_1">
          <help short="Resource identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentName" options="resource-parent-name" required="True" idPart="name">
          <help short="Resource parent identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentType" options="resource-parent-type" required="True" idPart="type">
          <help short="Resource parent type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceType" options="resource-type" required="True" idPart="child_type_1">
          <help short="Resource type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <operation operationId="ConfigurationAssignments_GetParent">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}">
          <request method="get">
            <path>
              <param type="string" name="configurationAssignmentName" arg="$Path.configurationAssignmentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="providerName" arg="$Path.providerName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentName" arg="$Path.resourceParentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentType" arg="$Path.resourceParentType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceType" arg="$Path.resourceType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="extensionProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="filter" clientFlatten="True">
                      <prop type="array<string>" name="locations">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceTypes">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="tagSettings">
                        <prop type="string" name="filterOperator">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;Any&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="array<string>">
                              <item type="string"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="maintenanceConfigurationId"/>
                    <prop type="string" name="resourceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update-parent" version="2023-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/{}/{}/{}/{}/{}/providers/microsoft.maintenance/configurationassignments/{}" version="2023-04-01" swagger="mgmt-plane/maintenance/ResourceProviders/Microsoft.Maintenance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy97cHJvdmlkZXJOYW1lfS97cmVzb3VyY2VQYXJlbnRUeXBlfS97cmVzb3VyY2VQYXJlbnROYW1lfS97cmVzb3VyY2VUeXBlfS97cmVzb3VyY2VOYW1lfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1haW50ZW5hbmNlL2NvbmZpZ3VyYXRpb25Bc3NpZ25tZW50cy97Y29uZmlndXJhdGlvbkFzc2lnbm1lbnROYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationAssignmentName" options="configuration-assignment-name name n" required="True" idPart="child_name_2">
          <help short="Configuration assignment name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" idPart="namespace">
          <help short="Resource provider name"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="string" var="$Path.resourceName" options="resource-name" required="True" idPart="child_name_1">
          <help short="Resource identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentName" options="resource-parent-name" required="True" idPart="name">
          <help short="Resource parent identifier"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceParentType" options="resource-parent-type" required="True" idPart="type">
          <help short="Resource parent type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="string" var="$Path.resourceType" options="resource-type" required="True" idPart="child_type_1">
          <help short="Resource type"/>
          <format pattern="^.+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$configurationAssignment.location" options="location l" group="">
          <help short="Location of the resource"/>
        </arg>
      </argGroup>
      <argGroup name="Filter">
        <arg nullable="True" type="array<string>" var="$configurationAssignment.properties.filter.locations" options="locations" group="Filter">
          <help short="List of locations to scope the query to."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$configurationAssignment.properties.filter.resourceGroups" options="resource-groups" group="Filter">
          <help short="List of allowed resource groups."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$configurationAssignment.properties.filter.resourceTypes" options="resource-types" group="Filter">
          <help short="List of allowed resources."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="object" var="$configurationAssignment.properties.filter.tagSettings" options="tag-settings" group="Filter">
          <help short="Tag settings for the VM."/>
          <arg nullable="True" type="string" var="$configurationAssignment.properties.filter.tagSettings.filterOperator" options="filter-operator">
            <help short="Filter VMs by Any or All specified tags."/>
            <enum>
              <item name="All" value="&quot;All&quot;"/>
              <item name="Any" value="&quot;Any&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$configurationAssignment.properties.filter.tagSettings.tags" options="tags">
            <help short="Dictionary of tags with its list of values."/>
            <additionalProp>
              <item nullable="True" type="array<string>">
                <item nullable="True" type="string"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$configurationAssignment.properties.extensionProperties" options="extension-properties" group="Properties">
          <help short="Gets or sets extensionProperties of the configuration assignment"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="string" var="$configurationAssignment.properties.maintenanceConfigurationId" options="maintenance-configuration-id" group="Properties">
          <help short="The maintenance configuration Id"/>
        </arg>
        <arg nullable="True" type="string" var="$configurationAssignment.properties.resourceId" options="resource-id" group="Properties">
          <help short="The unique resourceId"/>
        </arg>
      </argGroup>
      <operation operationId="ConfigurationAssignments_GetParent">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}">
          <request method="get">
            <path>
              <param type="string" name="configurationAssignmentName" arg="$Path.configurationAssignmentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="providerName" arg="$Path.providerName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentName" arg="$Path.resourceParentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentType" arg="$Path.resourceParentType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceType" arg="$Path.resourceType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ConfigurationAssignment_read">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="extensionProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="filter" clientFlatten="True">
                      <prop type="array<string>" name="locations">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceTypes">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="tagSettings">
                        <prop type="string" name="filterOperator">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;Any&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="array<string>">
                              <item type="string"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="maintenanceConfigurationId"/>
                    <prop type="string" name="resourceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="configurationAssignment" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$configurationAssignment.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="extensionProperties" arg="$configurationAssignment.properties.extensionProperties">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
                <prop type="object" name="filter" clientFlatten="True">
                  <prop type="array<string>" name="locations" arg="$configurationAssignment.properties.filter.locations">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="resourceGroups" arg="$configurationAssignment.properties.filter.resourceGroups">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="resourceTypes" arg="$configurationAssignment.properties.filter.resourceTypes">
                    <item type="string"/>
                  </prop>
                  <prop type="object" name="tagSettings" arg="$configurationAssignment.properties.filter.tagSettings">
                    <prop type="string" name="filterOperator" arg="$configurationAssignment.properties.filter.tagSettings.filterOperator">
                      <enum>
                        <item value="&quot;All&quot;"/>
                        <item value="&quot;Any&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="tags" arg="$configurationAssignment.properties.filter.tagSettings.tags">
                      <additionalProp>
                        <item type="array<string>">
                          <item type="string"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                </prop>
                <prop type="string" name="maintenanceConfigurationId" arg="$configurationAssignment.properties.maintenanceConfigurationId"/>
                <prop type="string" name="resourceId" arg="$configurationAssignment.properties.resourceId"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ConfigurationAssignments_CreateOrUpdateParent">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}">
          <request method="put">
            <path>
              <param type="string" name="configurationAssignmentName" arg="$Path.configurationAssignmentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="providerName" arg="$Path.providerName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentName" arg="$Path.resourceParentName" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceParentType" arg="$Path.resourceParentType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="resourceType" arg="$Path.resourceType" required="True">
                <format pattern="^.+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@ConfigurationAssignment_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
