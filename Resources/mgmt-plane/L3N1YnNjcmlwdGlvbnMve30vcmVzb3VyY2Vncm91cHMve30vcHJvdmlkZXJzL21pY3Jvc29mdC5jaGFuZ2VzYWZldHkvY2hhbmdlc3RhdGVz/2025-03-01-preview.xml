<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.changesafety/changestates" version="2025-03-01-preview" swagger="mgmt-plane/changesafety/ResourceProviders/Microsoft.ChangeSafety/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2hhbmdlU2FmZXR5L2NoYW5nZVN0YXRlcw==/V/MjAyNS0wMy0wMS1wcmV2aWV3"/>
  <commandGroup name="change-safety change-state">
    <command name="list" version="2025-03-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.changesafety/changestates" version="2025-03-01-preview" swagger="mgmt-plane/changesafety/ResourceProviders/Microsoft.ChangeSafety/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2hhbmdlU2FmZXR5L2NoYW5nZVN0YXRlcw==/V/MjAyNS0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ChangeStates_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ChangeSafety/changeStates">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="object" name="changeArtifact" required="True">
                          <prop type="string" name="artifactType" required="True">
                            <enum>
                              <item value="&quot;ArmOperation&quot;"/>
                              <item value="&quot;ExternalArmTemplate&quot;"/>
                              <item value="&quot;ExternalBicep&quot;"/>
                              <item value="&quot;InlineArmTemplate&quot;"/>
                              <item value="&quot;InlineBicep&quot;"/>
                              <item value="&quot;TemplateSpec&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name" required="True"/>
                          <discriminator property="artifactType" value="ArmOperation">
                            <prop type="object" name="artifactPayload" required="True">
                              <prop type="array<object>" name="operations" required="True" identifiers="uri">
                                <item type="object">
                                  <prop type="object" name="content">
                                    <prop type="string" name="location"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" required="True"/>
                                  </prop>
                                  <prop type="string" name="httpMethod" required="True">
                                    <enum>
                                      <item value="&quot;DELETE&quot;"/>
                                      <item value="&quot;PATCH&quot;"/>
                                      <item value="&quot;PUT&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="uri" required="True"/>
                                </item>
                              </prop>
                            </prop>
                          </discriminator>
                          <discriminator property="artifactType" value="ExternalArmTemplate">
                            <prop type="object" name="artifactPayload" required="True">
                              <prop type="string" name="externalArtifactUri" required="True"/>
                            </prop>
                          </discriminator>
                          <discriminator property="artifactType" value="ExternalBicep">
                            <prop type="object" name="artifactPayload" required="True">
                              <prop type="string" name="externalArtifactUri" required="True"/>
                            </prop>
                          </discriminator>
                          <discriminator property="artifactType" value="InlineArmTemplate">
                            <prop type="object" name="artifactPayload" required="True">
                              <prop type="string" name="inlineScript" required="True"/>
                            </prop>
                          </discriminator>
                          <discriminator property="artifactType" value="InlineBicep">
                            <prop type="object" name="artifactPayload" required="True">
                              <prop type="string" name="inlineScript" required="True"/>
                            </prop>
                          </discriminator>
                          <discriminator property="artifactType" value="TemplateSpec">
                            <prop type="object" name="artifactPayload" required="True">
                              <prop type="ResourceId" name="artifactResourceId" required="True"/>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="string" name="changeType" required="True">
                          <enum>
                            <item value="&quot;Breakglass&quot;"/>
                            <item value="&quot;Emergency&quot;"/>
                            <item value="&quot;Normal&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="comments">
                          <format maxLength="2000"/>
                        </prop>
                        <prop type="string" name="description">
                          <format maxLength="2000"/>
                        </prop>
                        <prop type="dateTime" name="expirationDate" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="serviceCatalogReference"/>
                        <prop type="ResourceId" name="stageMapResourceId" required="True"/>
                        <prop readOnly="True" type="array<any>" name="stageMapSnapshot">
                          <item type="any"/>
                        </prop>
                        <prop type="object" name="stageParameters" required="True">
                          <additionalProp>
                            <item type="object">
                              <prop type="object" name="metadata">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;number&quot;"/>
                                  <item value="&quot;string&quot;"/>
                                </enum>
                              </prop>
                              <discriminator property="type" value="number">
                                <prop type="array<integer32>" name="allowedValues" required="True">
                                  <item type="integer32"/>
                                </prop>
                                <prop type="integer32" name="defaultValue"/>
                              </discriminator>
                              <discriminator property="type" value="string">
                                <prop type="array<string>" name="allowedValues" required="True">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="defaultValue"/>
                              </discriminator>
                            </item>
                          </additionalProp>
                        </prop>
                        <prop type="string" name="state" required="True">
                          <enum>
                            <item value="&quot;Abandoned&quot;"/>
                            <item value="&quot;Completed&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Initialized&quot;"/>
                            <item value="&quot;Paused&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="workItemReference"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
