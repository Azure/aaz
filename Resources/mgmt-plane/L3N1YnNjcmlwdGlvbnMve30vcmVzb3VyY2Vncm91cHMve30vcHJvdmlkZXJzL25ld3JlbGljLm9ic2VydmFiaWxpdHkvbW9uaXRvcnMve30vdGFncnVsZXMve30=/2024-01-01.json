{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/tagrules/{}", "version": "2024-01-01", "swagger": "mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vdGFnUnVsZXMve3J1bGVTZXROYW1lfQ==/V/MjAyNC0wMS0wMQ=="}], "commandGroups": [{"name": "new-relic monitor tag-rule", "commands": [{"name": "show", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/tagrules/{}", "version": "2024-01-01", "swagger": "mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vdGFnUnVsZXMve3J1bGVTZXROYW1lfQ==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.monitorName", "options": ["monitor-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Monitoring resource"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of resource group. You can configure the default group using az configure --defaults group=<name>."}}, {"type": "string", "var": "$Path.ruleSetName", "options": ["name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the TagRule"}, "default": {"value": "default"}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."}}]}], "operations": [{"operationId": "TagRules_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "monitorName", "arg": "$Path.monitorName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "ruleSetName", "arg": "$Path.ruleSetName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}/tagRules/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "logRules", "props": [{"type": "array<object>", "name": "filteringTags", "item": {"type": "object", "props": [{"type": "string", "name": "action", "enum": {"items": [{"value": "Exclude"}, {"value": "Include"}]}}, {"type": "string", "name": "name"}, {"type": "string", "name": "value"}], "cls": "FilteringTag_read"}}, {"type": "string", "name": "sendAadLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendActivityLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendSubscriptionLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "metricRules", "props": [{"type": "array<@FilteringTag_read>", "name": "filteringTags", "item": {"type": "@FilteringTag_read"}}, {"type": "string", "name": "sendMetrics", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "userEmail", "format": {"pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}, {"type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "NotSpecified"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/tagrules/{}", "version": "2024-01-01", "swagger": "mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vdGFnUnVsZXMve3J1bGVTZXROYW1lfQ==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.monitorName", "options": ["monitor-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Monitoring resource"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of resource group. You can configure the default group using az configure --defaults group=<name>."}}, {"type": "string", "var": "$Path.ruleSetName", "options": ["name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the TagRule"}, "default": {"value": "default"}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "TagRules_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "monitorName", "arg": "$Path.monitorName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "ruleSetName", "arg": "$Path.ruleSetName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Retry-After"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/tagrules/{}", "version": "2024-01-01", "swagger": "mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vdGFnUnVsZXMve3J1bGVTZXROYW1lfQ==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.monitorName", "options": ["monitor-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Monitoring resource"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of resource group. You can configure the default group using az configure --defaults group=<name>."}}, {"type": "string", "var": "$Path.ruleSetName", "options": ["name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the TagRule"}, "default": {"value": "default"}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$resource.properties.logRules", "options": ["log-rules"], "group": "Properties", "help": {"short": "Set of rules for sending logs for the Monitor resource. Support shorthand-syntax, json-file and yaml-file. Try \"??\" to show more."}, "args": [{"type": "array<object>", "var": "$resource.properties.logRules.filteringTags", "options": ["filtering-tags"], "help": {"short": "List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."}, "item": {"type": "object", "args": [{"type": "string", "var": "@FilteringTag_create.action", "options": ["action"], "help": {"short": "Valid actions for a filtering tag. Exclusion takes priority over inclusion."}, "enum": {"items": [{"name": "Exclude", "value": "Exclude"}, {"name": "Include", "value": "Include"}]}}, {"type": "string", "var": "@FilteringTag_create.name", "options": ["name"], "help": {"short": "The name (also known as the key) of the tag."}}, {"type": "string", "var": "@FilteringTag_create.value", "options": ["value"], "help": {"short": "The value of the tag."}}], "cls": "FilteringTag_create"}}, {"type": "string", "var": "$resource.properties.logRules.sendAadLogs", "options": ["send-aad-logs"], "help": {"short": "Flag specifying if AAD logs should be sent for the Monitor resource."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$resource.properties.logRules.sendActivityLogs", "options": ["send-activity-logs"], "help": {"short": "Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$resource.properties.logRules.sendSubscriptionLogs", "options": ["send-subscription-logs"], "help": {"short": "Flag specifying if subscription logs should be sent for the Monitor resource."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"type": "object", "var": "$resource.properties.metricRules", "options": ["metric-rules"], "group": "Properties", "help": {"short": "Set of rules for sending metrics for the Monitor resource. Support shorthand-syntax, json-file and yaml-file. Try \"??\" to show more."}, "args": [{"type": "array<@FilteringTag_create>", "var": "$resource.properties.metricRules.filteringTags", "options": ["filtering-tags"], "help": {"short": "List of filtering tags to be used for capturing metrics."}, "item": {"type": "@FilteringTag_create"}}, {"type": "string", "var": "$resource.properties.metricRules.sendMetrics", "options": ["send-metrics"], "help": {"short": "Flag specifying if metrics should be sent for the Monitor resource."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$resource.properties.metricRules.userEmail", "options": ["user-email"], "help": {"short": "User Email"}, "format": {"pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "TagRules_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "monitorName", "arg": "$Path.monitorName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "ruleSetName", "arg": "$Path.ruleSetName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "logRules", "arg": "$resource.properties.logRules", "props": [{"type": "array<object>", "name": "filteringTags", "arg": "$resource.properties.logRules.filteringTags", "item": {"type": "object", "props": [{"type": "string", "name": "action", "arg": "@FilteringTag_create.action", "enum": {"items": [{"value": "Exclude"}, {"value": "Include"}]}}, {"type": "string", "name": "name", "arg": "@FilteringTag_create.name"}, {"type": "string", "name": "value", "arg": "@FilteringTag_create.value"}], "cls": "FilteringTag_create"}}, {"type": "string", "name": "sendAadLogs", "arg": "$resource.properties.logRules.sendAadLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendActivityLogs", "arg": "$resource.properties.logRules.sendActivityLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendSubscriptionLogs", "arg": "$resource.properties.logRules.sendSubscriptionLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "metricRules", "arg": "$resource.properties.metricRules", "props": [{"type": "array<@FilteringTag_create>", "name": "filteringTags", "arg": "$resource.properties.metricRules.filteringTags", "item": {"type": "@FilteringTag_create"}}, {"type": "string", "name": "sendMetrics", "arg": "$resource.properties.metricRules.sendMetrics", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "userEmail", "arg": "$resource.properties.metricRules.userEmail", "format": {"pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}/tagRules/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "logRules", "props": [{"type": "array<object>", "name": "filteringTags", "item": {"type": "object", "props": [{"type": "string", "name": "action", "enum": {"items": [{"value": "Exclude"}, {"value": "Include"}]}}, {"type": "string", "name": "name"}, {"type": "string", "name": "value"}], "cls": "FilteringTag_read"}}, {"type": "string", "name": "sendAadLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendActivityLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendSubscriptionLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "metricRules", "props": [{"type": "array<@FilteringTag_read>", "name": "filteringTags", "item": {"type": "@FilteringTag_read"}}, {"type": "string", "name": "sendMetrics", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "userEmail", "format": {"pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}, {"type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "NotSpecified"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/tagrules/{}", "version": "2024-01-01", "swagger": "mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vdGFnUnVsZXMve3J1bGVTZXROYW1lfQ==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.monitorName", "options": ["monitor-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Monitoring resource"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of resource group. You can configure the default group using az configure --defaults group=<name>."}}, {"type": "string", "var": "$Path.ruleSetName", "options": ["name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the TagRule"}, "default": {"value": "default"}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."}}]}], "operations": [{"operationId": "TagRules_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "monitorName", "arg": "$Path.monitorName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "ruleSetName", "arg": "$Path.ruleSetName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}/tagRules/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "logRules", "props": [{"type": "array<object>", "name": "filteringTags", "item": {"type": "object", "props": [{"type": "string", "name": "action", "enum": {"items": [{"value": "Exclude"}, {"value": "Include"}]}}, {"type": "string", "name": "name"}, {"type": "string", "name": "value"}], "cls": "FilteringTag_read"}}, {"type": "string", "name": "sendAadLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendActivityLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "sendSubscriptionLogs", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "object", "name": "metricRules", "props": [{"type": "array<@FilteringTag_read>", "name": "filteringTags", "item": {"type": "@FilteringTag_read"}}, {"type": "string", "name": "sendMetrics", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "userEmail", "format": {"pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}, {"type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "NotSpecified"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "TagRule_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "resource", "required": true, "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "TagRules_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "monitorName", "arg": "$Path.monitorName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "ruleSetName", "arg": "$Path.ruleSetName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@TagRule_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}