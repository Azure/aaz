<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
  <commandGroup name="cosmosdb postgres cluster">
    <command name="show" version="2022-11-08">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name name n" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Clusters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administratorLogin"/>
                    <prop type="string" name="citusVersion"/>
                    <prop type="boolean" name="coordinatorEnablePublicIpAccess"/>
                    <prop type="string" name="coordinatorServerEdition"/>
                    <prop type="integer32" name="coordinatorStorageQuotaInMb"/>
                    <prop type="integer32" name="coordinatorVCores"/>
                    <prop readOnly="True" type="dateTime" name="earliestRestoreTime"/>
                    <prop type="boolean" name="enableHa"/>
                    <prop type="boolean" name="enableShardsOnCoordinator"/>
                    <prop type="object" name="maintenanceWindow">
                      <prop type="string" name="customWindow"/>
                      <prop type="integer32" name="dayOfWeek"/>
                      <prop type="integer32" name="startHour"/>
                      <prop type="integer32" name="startMinute"/>
                    </prop>
                    <prop type="integer32" name="nodeCount"/>
                    <prop type="boolean" name="nodeEnablePublicIpAccess"/>
                    <prop type="string" name="nodeServerEdition"/>
                    <prop type="integer32" name="nodeStorageQuotaInMb"/>
                    <prop type="integer32" name="nodeVCores"/>
                    <prop type="dateTime" name="pointInTimeUTC"/>
                    <prop type="string" name="postgresqlVersion"/>
                    <prop type="string" name="preferredPrimaryZone"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="array<string>" name="readReplicas">
                      <format unique="True"/>
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="serverNames" identifiers="name">
                      <format unique="True"/>
                      <item type="object">
                        <prop readOnly="True" type="string" name="fullyQualifiedDomainName"/>
                        <prop type="string" name="name"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourceLocation"/>
                    <prop type="string" name="sourceResourceId"/>
                    <prop readOnly="True" type="string" name="state"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-11-08" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name name n" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Clusters_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}">
          <request method="delete">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="azure-async-operation"/>
              <item name="location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-11-08">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name name n" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="password" var="$parameters.properties.administratorLoginPassword" options="administrator-login-password login-password" group="Properties">
          <help short="The password of the administrator login. Required for creation."/>
          <prompt msg="Password:"/>
        </arg>
        <arg type="string" var="$parameters.properties.citusVersion" options="citus-version" group="Properties">
          <help short="The Citus extension version on all cluster servers."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.coordinatorEnablePublicIpAccess" options="coordinator-enable-public-ip-access coord-public-ip-access" group="Properties">
          <help short="If public access is enabled on coordinator."/>
        </arg>
        <arg type="string" var="$parameters.properties.coordinatorServerEdition" options="coordinator-server-edition coord-server-edition" group="Properties">
          <help short="The edition of a coordinator server (default: GeneralPurpose). Required for creation."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.coordinatorStorageQuotaInMb" options="coordinator-storage-quota-in-mb coordinator-storage" group="Properties">
          <help short="The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.coordinatorVCores" options="coordinator-v-cores" group="Properties">
          <help short="The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableHa" options="enable-ha" group="Properties">
          <help short="If high availability (HA) is enabled or not for the cluster."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableShardsOnCoordinator" options="enable-shards-on-coordinator enable-shards-on-coord" group="Properties">
          <help short="If shards on coordinator is enabled or not for the cluster."/>
        </arg>
        <arg type="object" var="$parameters.properties.maintenanceWindow" options="maintenance-window" group="Properties">
          <help short="Maintenance window of a cluster."/>
          <arg type="string" var="$parameters.properties.maintenanceWindow.customWindow" options="custom-window">
            <help short="Indicates whether custom maintenance window is enabled or not."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.maintenanceWindow.dayOfWeek" options="day-of-week">
            <help short="Preferred day of the week for maintenance window."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.maintenanceWindow.startHour" options="start-hour">
            <help short="Start hour within preferred day of the week for maintenance window."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.maintenanceWindow.startMinute" options="start-minute">
            <help short="Start minute within the start hour for maintenance window."/>
          </arg>
        </arg>
        <arg type="integer32" var="$parameters.properties.nodeCount" options="node-count" group="Properties">
          <help short="Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1. Required for creation."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.nodeEnablePublicIpAccess" options="node-enable-public-ip-access node-public-ip-access" group="Properties">
          <help short="If public access is enabled on worker nodes."/>
        </arg>
        <arg type="string" var="$parameters.properties.nodeServerEdition" options="node-server-edition" group="Properties">
          <help short="The edition of a node server (default: MemoryOptimized)."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.nodeStorageQuotaInMb" options="node-storage-quota-in-mb node-storage" group="Properties">
          <help short="The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.nodeVCores" options="node-v-cores" group="Properties">
          <help short="The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."/>
        </arg>
        <arg type="dateTime" var="$parameters.properties.pointInTimeUTC" options="point-in-time-utc" group="Properties">
          <help short="Date and time in UTC (ISO8601 format) for cluster restore."/>
        </arg>
        <arg type="string" var="$parameters.properties.postgresqlVersion" options="postgresql-version" group="Properties">
          <help short="The major PostgreSQL version on all cluster servers."/>
        </arg>
        <arg type="string" var="$parameters.properties.preferredPrimaryZone" options="preferred-primary-zone" group="Properties">
          <help short="Preferred primary availability zone (AZ) for all cluster servers."/>
        </arg>
        <arg type="string" var="$parameters.properties.sourceLocation" options="source-location" group="Properties">
          <help short="The Azure region of source cluster for read replica clusters."/>
        </arg>
        <arg type="string" var="$parameters.properties.sourceResourceId" options="source-resource-id" group="Properties">
          <help short="The resource id of source cluster for read replica clusters."/>
        </arg>
      </argGroup>
      <operation operationId="Clusters_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="password" name="administratorLoginPassword" arg="$parameters.properties.administratorLoginPassword" secret="True"/>
                    <prop type="string" name="citusVersion" arg="$parameters.properties.citusVersion"/>
                    <prop type="boolean" name="coordinatorEnablePublicIpAccess" arg="$parameters.properties.coordinatorEnablePublicIpAccess"/>
                    <prop type="string" name="coordinatorServerEdition" arg="$parameters.properties.coordinatorServerEdition"/>
                    <prop type="integer32" name="coordinatorStorageQuotaInMb" arg="$parameters.properties.coordinatorStorageQuotaInMb"/>
                    <prop type="integer32" name="coordinatorVCores" arg="$parameters.properties.coordinatorVCores"/>
                    <prop type="boolean" name="enableHa" arg="$parameters.properties.enableHa"/>
                    <prop type="boolean" name="enableShardsOnCoordinator" arg="$parameters.properties.enableShardsOnCoordinator"/>
                    <prop type="object" name="maintenanceWindow" arg="$parameters.properties.maintenanceWindow">
                      <prop type="string" name="customWindow" arg="$parameters.properties.maintenanceWindow.customWindow"/>
                      <prop type="integer32" name="dayOfWeek" arg="$parameters.properties.maintenanceWindow.dayOfWeek"/>
                      <prop type="integer32" name="startHour" arg="$parameters.properties.maintenanceWindow.startHour"/>
                      <prop type="integer32" name="startMinute" arg="$parameters.properties.maintenanceWindow.startMinute"/>
                    </prop>
                    <prop type="integer32" name="nodeCount" arg="$parameters.properties.nodeCount"/>
                    <prop type="boolean" name="nodeEnablePublicIpAccess" arg="$parameters.properties.nodeEnablePublicIpAccess"/>
                    <prop type="string" name="nodeServerEdition" arg="$parameters.properties.nodeServerEdition"/>
                    <prop type="integer32" name="nodeStorageQuotaInMb" arg="$parameters.properties.nodeStorageQuotaInMb"/>
                    <prop type="integer32" name="nodeVCores" arg="$parameters.properties.nodeVCores"/>
                    <prop type="dateTime" name="pointInTimeUTC" arg="$parameters.properties.pointInTimeUTC"/>
                    <prop type="string" name="postgresqlVersion" arg="$parameters.properties.postgresqlVersion"/>
                    <prop type="string" name="preferredPrimaryZone" arg="$parameters.properties.preferredPrimaryZone"/>
                    <prop type="string" name="sourceLocation" arg="$parameters.properties.sourceLocation"/>
                    <prop type="string" name="sourceResourceId" arg="$parameters.properties.sourceResourceId"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administratorLogin"/>
                    <prop type="string" name="citusVersion"/>
                    <prop type="boolean" name="coordinatorEnablePublicIpAccess"/>
                    <prop type="string" name="coordinatorServerEdition"/>
                    <prop type="integer32" name="coordinatorStorageQuotaInMb"/>
                    <prop type="integer32" name="coordinatorVCores"/>
                    <prop readOnly="True" type="dateTime" name="earliestRestoreTime"/>
                    <prop type="boolean" name="enableHa"/>
                    <prop type="boolean" name="enableShardsOnCoordinator"/>
                    <prop type="object" name="maintenanceWindow">
                      <prop type="string" name="customWindow"/>
                      <prop type="integer32" name="dayOfWeek"/>
                      <prop type="integer32" name="startHour"/>
                      <prop type="integer32" name="startMinute"/>
                    </prop>
                    <prop type="integer32" name="nodeCount"/>
                    <prop type="boolean" name="nodeEnablePublicIpAccess"/>
                    <prop type="string" name="nodeServerEdition"/>
                    <prop type="integer32" name="nodeStorageQuotaInMb"/>
                    <prop type="integer32" name="nodeVCores"/>
                    <prop type="dateTime" name="pointInTimeUTC"/>
                    <prop type="string" name="postgresqlVersion"/>
                    <prop type="string" name="preferredPrimaryZone"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="array<string>" name="readReplicas">
                      <format unique="True"/>
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="serverNames" identifiers="name">
                      <format unique="True"/>
                      <item type="object">
                        <prop readOnly="True" type="string" name="fullyQualifiedDomainName"/>
                        <prop type="string" name="name"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourceLocation"/>
                    <prop type="string" name="sourceResourceId"/>
                    <prop readOnly="True" type="string" name="state"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-11-08">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name name n" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Application-specific metadata in the form of key-value pairs."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="password" var="$parameters.properties.administratorLoginPassword" options="administrator-login-password login-password" group="Properties">
          <help short="The password of the administrator login. Required for creation."/>
          <prompt msg="Password:"/>
        </arg>
        <arg type="string" var="$parameters.properties.citusVersion" options="citus-version" group="Properties">
          <help short="The Citus extension version on all cluster servers."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.coordinatorEnablePublicIpAccess" options="coordinator-enable-public-ip-access coord-public-ip-access" group="Properties">
          <help short="If public access is enabled on coordinator."/>
        </arg>
        <arg type="string" var="$parameters.properties.coordinatorServerEdition" options="coordinator-server-edition coord-server-edition" group="Properties">
          <help short="The edition of a coordinator server (default: GeneralPurpose). Required for creation."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.coordinatorStorageQuotaInMb" options="coordinator-storage-quota-in-mb coordinator-storage" group="Properties">
          <help short="The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.coordinatorVCores" options="coordinator-v-cores" group="Properties">
          <help short="The vCores count of the coordinator (max: 96)."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableHa" options="enable-ha" group="Properties">
          <help short="If high availability (HA) is enabled or not for the cluster."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableShardsOnCoordinator" options="enable-shards-on-coordinator enable-shards-on-coord" group="Properties">
          <help short="If shards on coordinator is enabled or not for the cluster."/>
        </arg>
        <arg type="object" var="$parameters.properties.maintenanceWindow" options="maintenance-window" group="Properties">
          <help short="Maintenance window of a cluster."/>
          <arg type="string" var="$parameters.properties.maintenanceWindow.customWindow" options="custom-window">
            <help short="Indicates whether custom maintenance window is enabled or not."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.maintenanceWindow.dayOfWeek" options="day-of-week">
            <help short="Preferred day of the week for maintenance window."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.maintenanceWindow.startHour" options="start-hour">
            <help short="Start hour within preferred day of the week for maintenance window."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.maintenanceWindow.startMinute" options="start-minute">
            <help short="Start minute within the start hour for maintenance window."/>
          </arg>
        </arg>
        <arg type="integer32" var="$parameters.properties.nodeCount" options="node-count" group="Properties">
          <help short="Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1."/>
        </arg>
        <arg type="string" var="$parameters.properties.nodeServerEdition" options="node-server-edition" group="Properties">
          <help short="The edition of a node (default: MemoryOptimized)."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.nodeStorageQuotaInMb" options="node-storage-quota-in-mb node-storage" group="Properties">
          <help short="The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.nodeVCores" options="node-v-cores" group="Properties">
          <help short="The compute in vCores on each worker node (max: 104)."/>
        </arg>
        <arg type="string" var="$parameters.properties.postgresqlVersion" options="postgresql-version" group="Properties">
          <help short="The major PostgreSQL version on all cluster servers."/>
        </arg>
        <arg type="string" var="$parameters.properties.preferredPrimaryZone" options="preferred-primary-zone" group="Properties">
          <help short="Preferred primary availability zone (AZ) for all cluster servers."/>
        </arg>
      </argGroup>
      <operation operationId="Clusters_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}">
          <request method="patch">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="password" name="administratorLoginPassword" arg="$parameters.properties.administratorLoginPassword" secret="True"/>
                    <prop type="string" name="citusVersion" arg="$parameters.properties.citusVersion"/>
                    <prop type="boolean" name="coordinatorEnablePublicIpAccess" arg="$parameters.properties.coordinatorEnablePublicIpAccess"/>
                    <prop type="string" name="coordinatorServerEdition" arg="$parameters.properties.coordinatorServerEdition"/>
                    <prop type="integer32" name="coordinatorStorageQuotaInMb" arg="$parameters.properties.coordinatorStorageQuotaInMb"/>
                    <prop type="integer32" name="coordinatorVCores" arg="$parameters.properties.coordinatorVCores"/>
                    <prop type="boolean" name="enableHa" arg="$parameters.properties.enableHa"/>
                    <prop type="boolean" name="enableShardsOnCoordinator" arg="$parameters.properties.enableShardsOnCoordinator"/>
                    <prop type="object" name="maintenanceWindow" arg="$parameters.properties.maintenanceWindow">
                      <prop type="string" name="customWindow" arg="$parameters.properties.maintenanceWindow.customWindow"/>
                      <prop type="integer32" name="dayOfWeek" arg="$parameters.properties.maintenanceWindow.dayOfWeek"/>
                      <prop type="integer32" name="startHour" arg="$parameters.properties.maintenanceWindow.startHour"/>
                      <prop type="integer32" name="startMinute" arg="$parameters.properties.maintenanceWindow.startMinute"/>
                    </prop>
                    <prop type="integer32" name="nodeCount" arg="$parameters.properties.nodeCount"/>
                    <prop type="string" name="nodeServerEdition" arg="$parameters.properties.nodeServerEdition"/>
                    <prop type="integer32" name="nodeStorageQuotaInMb" arg="$parameters.properties.nodeStorageQuotaInMb"/>
                    <prop type="integer32" name="nodeVCores" arg="$parameters.properties.nodeVCores"/>
                    <prop type="string" name="postgresqlVersion" arg="$parameters.properties.postgresqlVersion"/>
                    <prop type="string" name="preferredPrimaryZone" arg="$parameters.properties.preferredPrimaryZone"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Cluster_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administratorLogin"/>
                    <prop type="string" name="citusVersion"/>
                    <prop type="boolean" name="coordinatorEnablePublicIpAccess"/>
                    <prop type="string" name="coordinatorServerEdition"/>
                    <prop type="integer32" name="coordinatorStorageQuotaInMb"/>
                    <prop type="integer32" name="coordinatorVCores"/>
                    <prop readOnly="True" type="dateTime" name="earliestRestoreTime"/>
                    <prop type="boolean" name="enableHa"/>
                    <prop type="boolean" name="enableShardsOnCoordinator"/>
                    <prop type="object" name="maintenanceWindow">
                      <prop type="string" name="customWindow"/>
                      <prop type="integer32" name="dayOfWeek"/>
                      <prop type="integer32" name="startHour"/>
                      <prop type="integer32" name="startMinute"/>
                    </prop>
                    <prop type="integer32" name="nodeCount"/>
                    <prop type="boolean" name="nodeEnablePublicIpAccess"/>
                    <prop type="string" name="nodeServerEdition"/>
                    <prop type="integer32" name="nodeStorageQuotaInMb"/>
                    <prop type="integer32" name="nodeVCores"/>
                    <prop type="dateTime" name="pointInTimeUTC"/>
                    <prop type="string" name="postgresqlVersion"/>
                    <prop type="string" name="preferredPrimaryZone"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="array<string>" name="readReplicas">
                      <format unique="True"/>
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="serverNames" identifiers="name">
                      <format unique="True"/>
                      <item type="object">
                        <prop readOnly="True" type="string" name="fullyQualifiedDomainName"/>
                        <prop type="string" name="name"/>
                      </item>
                    </prop>
                    <prop type="string" name="sourceLocation"/>
                    <prop type="string" name="sourceResourceId"/>
                    <prop readOnly="True" type="string" name="state"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="azure-async-operation"/>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Cluster_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
