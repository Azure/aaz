{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}", "version": "2022-11-08", "swagger": "mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="}], "commandGroups": [{"name": "cosmosdb postgres cluster", "commands": [{"name": "show", "version": "2022-11-08", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}", "version": "2022-11-08", "swagger": "mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["n", "name", "cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the cluster."}, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Clusters_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-11-08"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "administratorLogin"}, {"type": "string", "name": "citusVersion"}, {"type": "boolean", "name": "coordinatorEnablePublicIpAccess"}, {"type": "string", "name": "coordinatorServerEdition"}, {"type": "integer32", "name": "coordinatorStorageQuotaInMb"}, {"type": "integer32", "name": "coordinatorVCores"}, {"readOnly": true, "type": "dateTime", "name": "earliestRestoreTime"}, {"type": "boolean", "name": "enableHa"}, {"type": "boolean", "name": "enableShardsOnCoordinator"}, {"type": "object", "name": "maintenanceWindow", "props": [{"type": "string", "name": "customWindow"}, {"type": "integer32", "name": "dayOfWeek"}, {"type": "integer32", "name": "startHour"}, {"type": "integer32", "name": "startMinute"}]}, {"type": "integer32", "name": "nodeCount"}, {"type": "boolean", "name": "nodeEnablePublicIpAccess"}, {"type": "string", "name": "nodeServerEdition"}, {"type": "integer32", "name": "nodeStorageQuotaInMb"}, {"type": "integer32", "name": "nodeVCores"}, {"type": "dateTime", "name": "pointInTimeUTC"}, {"type": "string", "name": "postgresqlVersion"}, {"type": "string", "name": "preferredPrimaryZone"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "groupIds", "item": {"type": "string"}}, {"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "array<string>", "name": "readReplicas", "format": {"unique": true}, "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "serverNames", "format": {"unique": true}, "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "fullyQualifiedDomainName"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "string", "name": "sourceLocation"}, {"type": "string", "name": "sourceResourceId"}, {"readOnly": true, "type": "string", "name": "state"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2022-11-08", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}", "version": "2022-11-08", "swagger": "mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["n", "name", "cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the cluster."}, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "Clusters_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-11-08"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "azure-async-operation"}, {"name": "location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2022-11-08", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}", "version": "2022-11-08", "swagger": "mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["n", "name", "cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the cluster."}, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "required": true, "group": "Parameters", "help": {"short": "The geo-location where the resource lives"}}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "password", "var": "$parameters.properties.administratorLoginPassword", "options": ["login-password", "administrator-login-password"], "group": "Properties", "help": {"short": "The password of the administrator login. Required for creation."}, "prompt": {"msg": "Password:"}}, {"type": "string", "var": "$parameters.properties.citusVersion", "options": ["citus-version"], "group": "Properties", "help": {"short": "The Citus extension version on all cluster servers."}}, {"type": "boolean", "var": "$parameters.properties.coordinatorEnablePublicIpAccess", "options": ["coord-public-ip-access", "coordinator-enable-public-ip-access"], "group": "Properties", "help": {"short": "If public access is enabled on coordinator."}}, {"type": "string", "var": "$parameters.properties.coordinatorServerEdition", "options": ["coord-server-edition", "coordinator-server-edition"], "group": "Properties", "help": {"short": "The edition of a coordinator server (default: GeneralPurpose). Required for creation."}}, {"type": "integer32", "var": "$parameters.properties.coordinatorStorageQuotaInMb", "options": ["coordinator-storage", "coordinator-storage-quota-in-mb"], "group": "Properties", "help": {"short": "The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."}}, {"type": "integer32", "var": "$parameters.properties.coordinatorVCores", "options": ["coordinator-v-cores"], "group": "Properties", "help": {"short": "The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."}}, {"type": "boolean", "var": "$parameters.properties.enableHa", "options": ["enable-ha"], "group": "Properties", "help": {"short": "If high availability (HA) is enabled or not for the cluster."}}, {"type": "boolean", "var": "$parameters.properties.enableShardsOnCoordinator", "options": ["enable-shards-on-coord", "enable-shards-on-coordinator"], "group": "Properties", "help": {"short": "If shards on coordinator is enabled or not for the cluster."}}, {"type": "object", "var": "$parameters.properties.maintenanceWindow", "options": ["maintenance-window"], "group": "Properties", "help": {"short": "Maintenance window of a cluster."}, "args": [{"type": "string", "var": "$parameters.properties.maintenanceWindow.customWindow", "options": ["custom-window"], "help": {"short": "Indicates whether custom maintenance window is enabled or not."}}, {"type": "integer32", "var": "$parameters.properties.maintenanceWindow.dayOfWeek", "options": ["day-of-week"], "help": {"short": "Preferred day of the week for maintenance window."}}, {"type": "integer32", "var": "$parameters.properties.maintenanceWindow.startHour", "options": ["start-hour"], "help": {"short": "Start hour within preferred day of the week for maintenance window."}}, {"type": "integer32", "var": "$parameters.properties.maintenanceWindow.startMinute", "options": ["start-minute"], "help": {"short": "Start minute within the start hour for maintenance window."}}]}, {"type": "integer32", "var": "$parameters.properties.nodeCount", "options": ["node-count"], "group": "Properties", "help": {"short": "Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1. Required for creation."}}, {"type": "boolean", "var": "$parameters.properties.nodeEnablePublicIpAccess", "options": ["node-public-ip-access", "node-enable-public-ip-access"], "group": "Properties", "help": {"short": "If public access is enabled on worker nodes."}}, {"type": "string", "var": "$parameters.properties.nodeServerEdition", "options": ["node-server-edition"], "group": "Properties", "help": {"short": "The edition of a node server (default: MemoryOptimized)."}}, {"type": "integer32", "var": "$parameters.properties.nodeStorageQuotaInMb", "options": ["node-storage", "node-storage-quota-in-mb"], "group": "Properties", "help": {"short": "The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."}}, {"type": "integer32", "var": "$parameters.properties.nodeVCores", "options": ["node-v-cores"], "group": "Properties", "help": {"short": "The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."}}, {"type": "dateTime", "var": "$parameters.properties.pointInTimeUTC", "options": ["point-in-time-utc"], "group": "Properties", "help": {"short": "Date and time in UTC (ISO8601 format) for cluster restore."}}, {"type": "string", "var": "$parameters.properties.postgresqlVersion", "options": ["postgresql-version"], "group": "Properties", "help": {"short": "The major PostgreSQL version on all cluster servers."}}, {"type": "string", "var": "$parameters.properties.preferredPrimaryZone", "options": ["preferred-primary-zone"], "group": "Properties", "help": {"short": "Preferred primary availability zone (AZ) for all cluster servers."}}, {"type": "string", "var": "$parameters.properties.sourceLocation", "options": ["source-location"], "group": "Properties", "help": {"short": "The Azure region of source cluster for read replica clusters."}}, {"type": "string", "var": "$parameters.properties.sourceResourceId", "options": ["source-resource-id"], "group": "Properties", "help": {"short": "The resource id of source cluster for read replica clusters."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Clusters_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-11-08"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "ResourceLocation", "name": "location", "arg": "$parameters.location", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "password", "name": "administratorLoginPassword", "arg": "$parameters.properties.administratorLoginPassword", "secret": true}, {"type": "string", "name": "citusVersion", "arg": "$parameters.properties.citusVersion"}, {"type": "boolean", "name": "coordinatorEnablePublicIpAccess", "arg": "$parameters.properties.coordinatorEnablePublicIpAccess"}, {"type": "string", "name": "coordinatorServerEdition", "arg": "$parameters.properties.coordinatorServerEdition"}, {"type": "integer32", "name": "coordinatorStorageQuotaInMb", "arg": "$parameters.properties.coordinatorStorageQuotaInMb"}, {"type": "integer32", "name": "coordinatorVCores", "arg": "$parameters.properties.coordinatorVCores"}, {"type": "boolean", "name": "enableHa", "arg": "$parameters.properties.enableHa"}, {"type": "boolean", "name": "enableShardsOnCoordinator", "arg": "$parameters.properties.enableShardsOnCoordinator"}, {"type": "object", "name": "maintenanceWindow", "arg": "$parameters.properties.maintenanceWindow", "props": [{"type": "string", "name": "customWindow", "arg": "$parameters.properties.maintenanceWindow.customWindow"}, {"type": "integer32", "name": "dayOfWeek", "arg": "$parameters.properties.maintenanceWindow.dayOfWeek"}, {"type": "integer32", "name": "startHour", "arg": "$parameters.properties.maintenanceWindow.startHour"}, {"type": "integer32", "name": "startMinute", "arg": "$parameters.properties.maintenanceWindow.startMinute"}]}, {"type": "integer32", "name": "nodeCount", "arg": "$parameters.properties.nodeCount"}, {"type": "boolean", "name": "nodeEnablePublicIpAccess", "arg": "$parameters.properties.nodeEnablePublicIpAccess"}, {"type": "string", "name": "nodeServerEdition", "arg": "$parameters.properties.nodeServerEdition"}, {"type": "integer32", "name": "nodeStorageQuotaInMb", "arg": "$parameters.properties.nodeStorageQuotaInMb"}, {"type": "integer32", "name": "nodeVCores", "arg": "$parameters.properties.nodeVCores"}, {"type": "dateTime", "name": "pointInTimeUTC", "arg": "$parameters.properties.pointInTimeUTC"}, {"type": "string", "name": "postgresqlVersion", "arg": "$parameters.properties.postgresqlVersion"}, {"type": "string", "name": "preferredPrimaryZone", "arg": "$parameters.properties.preferredPrimaryZone"}, {"type": "string", "name": "sourceLocation", "arg": "$parameters.properties.sourceLocation"}, {"type": "string", "name": "sourceResourceId", "arg": "$parameters.properties.sourceResourceId"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "administratorLogin"}, {"type": "string", "name": "citusVersion"}, {"type": "boolean", "name": "coordinatorEnablePublicIpAccess"}, {"type": "string", "name": "coordinatorServerEdition"}, {"type": "integer32", "name": "coordinatorStorageQuotaInMb"}, {"type": "integer32", "name": "coordinatorVCores"}, {"readOnly": true, "type": "dateTime", "name": "earliestRestoreTime"}, {"type": "boolean", "name": "enableHa"}, {"type": "boolean", "name": "enableShardsOnCoordinator"}, {"type": "object", "name": "maintenanceWindow", "props": [{"type": "string", "name": "customWindow"}, {"type": "integer32", "name": "dayOfWeek"}, {"type": "integer32", "name": "startHour"}, {"type": "integer32", "name": "startMinute"}]}, {"type": "integer32", "name": "nodeCount"}, {"type": "boolean", "name": "nodeEnablePublicIpAccess"}, {"type": "string", "name": "nodeServerEdition"}, {"type": "integer32", "name": "nodeStorageQuotaInMb"}, {"type": "integer32", "name": "nodeVCores"}, {"type": "dateTime", "name": "pointInTimeUTC"}, {"type": "string", "name": "postgresqlVersion"}, {"type": "string", "name": "preferredPrimaryZone"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "groupIds", "item": {"type": "string"}}, {"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "array<string>", "name": "readReplicas", "format": {"unique": true}, "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "serverNames", "format": {"unique": true}, "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "fullyQualifiedDomainName"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "string", "name": "sourceLocation"}, {"type": "string", "name": "sourceResourceId"}, {"readOnly": true, "type": "string", "name": "state"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2022-11-08", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}", "version": "2022-11-08", "swagger": "mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0=/V/MjAyMi0xMS0wOA=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["n", "name", "cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the cluster."}, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Application-specific metadata in the form of key-value pairs."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "password", "var": "$parameters.properties.administratorLoginPassword", "options": ["login-password", "administrator-login-password"], "group": "Properties", "help": {"short": "The password of the administrator login. Required for creation."}, "prompt": {"msg": "Password:"}}, {"type": "string", "var": "$parameters.properties.citusVersion", "options": ["citus-version"], "group": "Properties", "help": {"short": "The Citus extension version on all cluster servers."}}, {"type": "boolean", "var": "$parameters.properties.coordinatorEnablePublicIpAccess", "options": ["coord-public-ip-access", "coordinator-enable-public-ip-access"], "group": "Properties", "help": {"short": "If public access is enabled on coordinator."}}, {"type": "string", "var": "$parameters.properties.coordinatorServerEdition", "options": ["coord-server-edition", "coordinator-server-edition"], "group": "Properties", "help": {"short": "The edition of a coordinator server (default: GeneralPurpose). Required for creation."}}, {"type": "integer32", "var": "$parameters.properties.coordinatorStorageQuotaInMb", "options": ["coordinator-storage", "coordinator-storage-quota-in-mb"], "group": "Properties", "help": {"short": "The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."}}, {"type": "integer32", "var": "$parameters.properties.coordinatorVCores", "options": ["coordinator-v-cores"], "group": "Properties", "help": {"short": "The vCores count of the coordinator (max: 96)."}}, {"type": "boolean", "var": "$parameters.properties.enableHa", "options": ["enable-ha"], "group": "Properties", "help": {"short": "If high availability (HA) is enabled or not for the cluster."}}, {"type": "boolean", "var": "$parameters.properties.enableShardsOnCoordinator", "options": ["enable-shards-on-coord", "enable-shards-on-coordinator"], "group": "Properties", "help": {"short": "If shards on coordinator is enabled or not for the cluster."}}, {"type": "object", "var": "$parameters.properties.maintenanceWindow", "options": ["maintenance-window"], "group": "Properties", "help": {"short": "Maintenance window of a cluster."}, "args": [{"type": "string", "var": "$parameters.properties.maintenanceWindow.customWindow", "options": ["custom-window"], "help": {"short": "Indicates whether custom maintenance window is enabled or not."}}, {"type": "integer32", "var": "$parameters.properties.maintenanceWindow.dayOfWeek", "options": ["day-of-week"], "help": {"short": "Preferred day of the week for maintenance window."}}, {"type": "integer32", "var": "$parameters.properties.maintenanceWindow.startHour", "options": ["start-hour"], "help": {"short": "Start hour within preferred day of the week for maintenance window."}}, {"type": "integer32", "var": "$parameters.properties.maintenanceWindow.startMinute", "options": ["start-minute"], "help": {"short": "Start minute within the start hour for maintenance window."}}]}, {"type": "integer32", "var": "$parameters.properties.nodeCount", "options": ["node-count"], "group": "Properties", "help": {"short": "Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1."}}, {"type": "string", "var": "$parameters.properties.nodeServerEdition", "options": ["node-server-edition"], "group": "Properties", "help": {"short": "The edition of a node (default: MemoryOptimized)."}}, {"type": "integer32", "var": "$parameters.properties.nodeStorageQuotaInMb", "options": ["node-storage", "node-storage-quota-in-mb"], "group": "Properties", "help": {"short": "The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information."}}, {"type": "integer32", "var": "$parameters.properties.nodeVCores", "options": ["node-v-cores"], "group": "Properties", "help": {"short": "The compute in vCores on each worker node (max: 104)."}}, {"type": "string", "var": "$parameters.properties.postgresqlVersion", "options": ["postgresql-version"], "group": "Properties", "help": {"short": "The major PostgreSQL version on all cluster servers."}}, {"type": "string", "var": "$parameters.properties.preferredPrimaryZone", "options": ["preferred-primary-zone"], "group": "Properties", "help": {"short": "Preferred primary availability zone (AZ) for all cluster servers."}}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "Clusters_Update", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}", "request": {"method": "patch", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$", "maxLength": 40, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-11-08"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "password", "name": "administratorLoginPassword", "arg": "$parameters.properties.administratorLoginPassword", "secret": true}, {"type": "string", "name": "citusVersion", "arg": "$parameters.properties.citusVersion"}, {"type": "boolean", "name": "coordinatorEnablePublicIpAccess", "arg": "$parameters.properties.coordinatorEnablePublicIpAccess"}, {"type": "string", "name": "coordinatorServerEdition", "arg": "$parameters.properties.coordinatorServerEdition"}, {"type": "integer32", "name": "coordinatorStorageQuotaInMb", "arg": "$parameters.properties.coordinatorStorageQuotaInMb"}, {"type": "integer32", "name": "coordinatorVCores", "arg": "$parameters.properties.coordinatorVCores"}, {"type": "boolean", "name": "enableHa", "arg": "$parameters.properties.enableHa"}, {"type": "boolean", "name": "enableShardsOnCoordinator", "arg": "$parameters.properties.enableShardsOnCoordinator"}, {"type": "object", "name": "maintenanceWindow", "arg": "$parameters.properties.maintenanceWindow", "props": [{"type": "string", "name": "customWindow", "arg": "$parameters.properties.maintenanceWindow.customWindow"}, {"type": "integer32", "name": "dayOfWeek", "arg": "$parameters.properties.maintenanceWindow.dayOfWeek"}, {"type": "integer32", "name": "startHour", "arg": "$parameters.properties.maintenanceWindow.startHour"}, {"type": "integer32", "name": "startMinute", "arg": "$parameters.properties.maintenanceWindow.startMinute"}]}, {"type": "integer32", "name": "nodeCount", "arg": "$parameters.properties.nodeCount"}, {"type": "string", "name": "nodeServerEdition", "arg": "$parameters.properties.nodeServerEdition"}, {"type": "integer32", "name": "nodeStorageQuotaInMb", "arg": "$parameters.properties.nodeStorageQuotaInMb"}, {"type": "integer32", "name": "nodeVCores", "arg": "$parameters.properties.nodeVCores"}, {"type": "string", "name": "postgresqlVersion", "arg": "$parameters.properties.postgresqlVersion"}, {"type": "string", "name": "preferredPrimaryZone", "arg": "$parameters.properties.preferredPrimaryZone"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "administratorLogin"}, {"type": "string", "name": "citusVersion"}, {"type": "boolean", "name": "coordinatorEnablePublicIpAccess"}, {"type": "string", "name": "coordinatorServerEdition"}, {"type": "integer32", "name": "coordinatorStorageQuotaInMb"}, {"type": "integer32", "name": "coordinatorVCores"}, {"readOnly": true, "type": "dateTime", "name": "earliestRestoreTime"}, {"type": "boolean", "name": "enableHa"}, {"type": "boolean", "name": "enableShardsOnCoordinator"}, {"type": "object", "name": "maintenanceWindow", "props": [{"type": "string", "name": "customWindow"}, {"type": "integer32", "name": "dayOfWeek"}, {"type": "integer32", "name": "startHour"}, {"type": "integer32", "name": "startMinute"}]}, {"type": "integer32", "name": "nodeCount"}, {"type": "boolean", "name": "nodeEnablePublicIpAccess"}, {"type": "string", "name": "nodeServerEdition"}, {"type": "integer32", "name": "nodeStorageQuotaInMb"}, {"type": "integer32", "name": "nodeVCores"}, {"type": "dateTime", "name": "pointInTimeUTC"}, {"type": "string", "name": "postgresqlVersion"}, {"type": "string", "name": "preferredPrimaryZone"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "groupIds", "item": {"type": "string"}}, {"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "array<string>", "name": "readReplicas", "format": {"unique": true}, "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "serverNames", "format": {"unique": true}, "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "fullyQualifiedDomainName"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "string", "name": "sourceLocation"}, {"type": "string", "name": "sourceResourceId"}, {"readOnly": true, "type": "string", "name": "state"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Cluster_read"}}}}, {"statusCode": [202], "header": {"items": [{"name": "azure-async-operation"}, {"name": "location"}]}, "body": {"json": {"var": "$Instance", "schema": {"type": "@Cluster_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}