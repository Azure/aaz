<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/networksecurityperimeterconfigurations" version="2025-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9uZXR3b3JrU2VjdXJpdHlQZXJpbWV0ZXJDb25maWd1cmF0aW9ucw==/V/MjAyNS0wMS0wMQ=="/>
  <commandGroup name="storage account network-security-perimeter-configuration">
    <command name="list" version="2025-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/networksecurityperimeterconfigurations" version="2025-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9uZXR3b3JrU2VjdXJpdHlQZXJpbWV0ZXJDb25maWd1cmF0aW9ucw==/V/MjAyNS0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkSecurityPerimeterConfigurations_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/networkSecurityPerimeterConfigurations">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item readOnly="True" type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/networkSecurityPerimeterConfigurations/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop readOnly="True" type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="object" name="networkSecurityPerimeter" cls="NetworkSecurityPerimeter_read">
                          <prop type="string" name="id"/>
                          <prop type="string" name="location"/>
                          <prop type="string" name="perimeterGuid"/>
                        </prop>
                        <prop readOnly="True" type="object" name="profile">
                          <prop type="array<object>" name="accessRules" identifiers="name">
                            <item readOnly="True" type="object">
                              <prop type="string" name="name"/>
                              <prop readOnly="True" type="object" name="properties">
                                <prop type="array<string>" name="addressPrefixes">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="direction">
                                  <enum>
                                    <item value="&quot;Inbound&quot;"/>
                                    <item value="&quot;Outbound&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="array<string>" name="fullyQualifiedDomainNames">
                                  <item type="string"/>
                                </prop>
                                <prop readOnly="True" type="array<@NetworkSecurityPerimeter_read>" name="networkSecurityPerimeters">
                                  <item readOnly="True" type="@NetworkSecurityPerimeter_read"/>
                                </prop>
                                <prop type="array<object>" name="subscriptions">
                                  <item readOnly="True" type="object">
                                    <prop type="string" name="id"/>
                                  </item>
                                </prop>
                              </prop>
                            </item>
                          </prop>
                          <prop type="float" name="accessRulesVersion"/>
                          <prop type="float" name="diagnosticSettingsVersion"/>
                          <prop type="array<string>" name="enabledLogCategories">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="provisioningIssues" identifiers="name">
                          <item readOnly="True" type="object">
                            <prop type="string" name="name"/>
                            <prop readOnly="True" type="object" name="properties">
                              <prop type="string" name="description"/>
                              <prop type="string" name="issueType">
                                <enum>
                                  <item value="&quot;ConfigurationPropagationFailure&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="severity">
                                <enum>
                                  <item value="&quot;Error&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="resourceAssociation">
                          <prop type="string" name="accessMode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforced&quot;"/>
                              <item value="&quot;Learning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
