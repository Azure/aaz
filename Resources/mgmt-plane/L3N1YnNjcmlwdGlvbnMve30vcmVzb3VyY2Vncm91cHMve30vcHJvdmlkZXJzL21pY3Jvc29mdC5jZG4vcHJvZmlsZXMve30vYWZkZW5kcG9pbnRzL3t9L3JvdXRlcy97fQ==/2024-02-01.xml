<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/afdendpoints/{}/routes/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vYWZkRW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L3JvdXRlcy97cm91dGVOYW1lfQ==/V/MjAyNC0wMi0wMQ=="/>
  <commandGroup name="afd route">
    <command name="show" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/afdendpoints/{}/routes/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vYWZkRW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L3JvdXRlcy97cm91dGVOYW1lfQ==/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.endpointName" options="endpoint-name" required="True" idPart="child_name_1">
          <help short="Name of the endpoint under the profile which is unique globally."/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeName" options="route-name name n" required="True" idPart="child_name_2">
          <help short="Name of the routing rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Routes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}">
          <request method="get">
            <path>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="routeName" arg="$Path.routeName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/afdEndpoints/{}/routes/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="cacheConfiguration">
                      <prop type="object" name="compressionSettings">
                        <prop type="array<string>" name="contentTypesToCompress">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="isCompressionEnabled"/>
                      </prop>
                      <prop type="string" name="queryParameters"/>
                      <prop type="string" name="queryStringCachingBehavior">
                        <enum>
                          <item value="&quot;IgnoreQueryString&quot;"/>
                          <item value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;UseQueryString&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="customDomains">
                      <item type="object">
                        <prop type="string" name="id"/>
                        <prop readOnly="True" type="boolean" name="isActive"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="deploymentStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enabledState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="endpointName"/>
                    <prop type="string" name="forwardingProtocol">
                      <default value="&quot;MatchRequest&quot;"/>
                      <enum>
                        <item value="&quot;HttpOnly&quot;"/>
                        <item value="&quot;HttpsOnly&quot;"/>
                        <item value="&quot;MatchRequest&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="httpsRedirect">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="linkToDefaultDomain">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="originGroup" required="True" cls="ResourceReference_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="originPath"/>
                    <prop type="array<string>" name="patternsToMatch">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@ResourceReference_read>" name="ruleSets">
                      <item type="@ResourceReference_read"/>
                    </prop>
                    <prop type="array<string>" name="supportedProtocols">
                      <default value="[&quot;Http&quot;,&quot;Https&quot;]"/>
                      <item type="string">
                        <enum>
                          <item value="&quot;Http&quot;"/>
                          <item value="&quot;Https&quot;"/>
                        </enum>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-02-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/afdendpoints/{}/routes/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vYWZkRW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L3JvdXRlcy97cm91dGVOYW1lfQ==/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.endpointName" options="endpoint-name" required="True" idPart="child_name_1">
          <help short="Name of the endpoint under the profile which is unique globally."/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeName" options="route-name name n" required="True" idPart="child_name_2">
          <help short="Name of the routing rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Routes_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}">
          <request method="delete">
            <path>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="routeName" arg="$Path.routeName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-02-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/afdendpoints/{}/routes/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vYWZkRW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L3JvdXRlcy97cm91dGVOYW1lfQ==/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.endpointName" options="endpoint-name" required="True" idPart="child_name_1">
          <help short="Name of the endpoint under the profile which is unique globally."/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeName" options="route-name name n" required="True" idPart="child_name_2">
          <help short="Name of the routing rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="OriginGroup">
        <arg type="string" var="$route.properties.originGroup.id" options="origin-group" group="OriginGroup">
          <help short="Name or ID of the origin group to be associated with."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$route.properties.cacheConfiguration" options="cache-configuration" group="Properties">
          <help short="The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."/>
          <arg type="object" var="$route.properties.cacheConfiguration.compressionSettings" options="compression-settings">
            <help short="compression settings."/>
            <arg type="array<string>" var="$route.properties.cacheConfiguration.compressionSettings.contentTypesToCompress" options="content-types-to-compress">
              <help short="List of content types on which compression applies. The value should be a valid MIME type."/>
              <item type="string"/>
            </arg>
            <arg type="boolean" var="$route.properties.cacheConfiguration.compressionSettings.isCompressionEnabled" options="is-compression-enabled">
              <help short="Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB."/>
            </arg>
          </arg>
          <arg type="string" var="$route.properties.cacheConfiguration.queryParameters" options="query-parameters">
            <help short="query parameters to include or exclude (comma separated)."/>
          </arg>
          <arg type="string" var="$route.properties.cacheConfiguration.queryStringCachingBehavior" options="query-string-caching-behavior">
            <help short="Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings."/>
            <enum>
              <item name="IgnoreQueryString" value="&quot;IgnoreQueryString&quot;"/>
              <item name="IgnoreSpecifiedQueryStrings" value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
              <item name="IncludeSpecifiedQueryStrings" value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
              <item name="UseQueryString" value="&quot;UseQueryString&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="array<object>" var="$route.properties.customDomains" options="formatted-custom-domains" group="Properties">
          <help short="Domains referenced by this endpoint."/>
          <item type="object">
            <arg type="string" var="$route.properties.customDomains[].id" options="id">
              <help short="Resource ID."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$route.properties.enabledState" options="enabled-state" group="Properties">
          <help short="Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$route.properties.forwardingProtocol" options="forwarding-protocol" group="Properties">
          <help short="Protocol this rule will use when forwarding traffic to backends."/>
          <default value="&quot;MatchRequest&quot;"/>
          <enum>
            <item name="HttpOnly" value="&quot;HttpOnly&quot;"/>
            <item name="HttpsOnly" value="&quot;HttpsOnly&quot;"/>
            <item name="MatchRequest" value="&quot;MatchRequest&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$route.properties.httpsRedirect" options="https-redirect" group="Properties">
          <help short="Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed."/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$route.properties.linkToDefaultDomain" options="link-to-default-domain" group="Properties">
          <help short="whether this route will be linked to the default endpoint domain."/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$route.properties.originPath" options="origin-path" group="Properties">
          <help short="A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."/>
        </arg>
        <arg type="array<string>" var="$route.properties.patternsToMatch" options="patterns-to-match" group="Properties">
          <help short="The route patterns of the rule."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$route.properties.ruleSets" options="formatted-rule-sets" group="Properties">
          <help short="rule sets referenced by this endpoint."/>
          <item type="object" cls="ResourceReference_create">
            <arg type="string" var="@ResourceReference_create.id" options="id">
              <help short="Resource ID."/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$route.properties.supportedProtocols" options="supported-protocols" group="Properties">
          <help short="List of supported protocols for this route."/>
          <default value="[&quot;Http&quot;,&quot;Https&quot;]"/>
          <item type="string">
            <enum>
              <item name="Http" value="&quot;Http&quot;"/>
              <item name="Https" value="&quot;Https&quot;"/>
            </enum>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Routes_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}">
          <request method="put">
            <path>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="routeName" arg="$Path.routeName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="route" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="cacheConfiguration" arg="$route.properties.cacheConfiguration">
                      <prop type="object" name="compressionSettings" arg="$route.properties.cacheConfiguration.compressionSettings">
                        <prop type="array<string>" name="contentTypesToCompress" arg="$route.properties.cacheConfiguration.compressionSettings.contentTypesToCompress">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="isCompressionEnabled" arg="$route.properties.cacheConfiguration.compressionSettings.isCompressionEnabled"/>
                      </prop>
                      <prop type="string" name="queryParameters" arg="$route.properties.cacheConfiguration.queryParameters"/>
                      <prop type="string" name="queryStringCachingBehavior" arg="$route.properties.cacheConfiguration.queryStringCachingBehavior">
                        <enum>
                          <item value="&quot;IgnoreQueryString&quot;"/>
                          <item value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;UseQueryString&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="customDomains" arg="$route.properties.customDomains">
                      <item type="object">
                        <prop type="string" name="id" arg="$route.properties.customDomains[].id"/>
                      </item>
                    </prop>
                    <prop type="string" name="enabledState" arg="$route.properties.enabledState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="forwardingProtocol" arg="$route.properties.forwardingProtocol">
                      <default value="&quot;MatchRequest&quot;"/>
                      <enum>
                        <item value="&quot;HttpOnly&quot;"/>
                        <item value="&quot;HttpsOnly&quot;"/>
                        <item value="&quot;MatchRequest&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="httpsRedirect" arg="$route.properties.httpsRedirect">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="linkToDefaultDomain" arg="$route.properties.linkToDefaultDomain">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="originGroup" required="True">
                      <prop type="string" name="id" arg="$route.properties.originGroup.id"/>
                    </prop>
                    <prop type="string" name="originPath" arg="$route.properties.originPath"/>
                    <prop type="array<string>" name="patternsToMatch" arg="$route.properties.patternsToMatch">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="ruleSets" arg="$route.properties.ruleSets">
                      <item type="object" cls="ResourceReference_create">
                        <prop type="string" name="id" arg="@ResourceReference_create.id"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="supportedProtocols" arg="$route.properties.supportedProtocols">
                      <default value="[&quot;Http&quot;,&quot;Https&quot;]"/>
                      <item type="string">
                        <enum>
                          <item value="&quot;Http&quot;"/>
                          <item value="&quot;Https&quot;"/>
                        </enum>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Route_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/afdEndpoints/{}/routes/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="cacheConfiguration">
                      <prop type="object" name="compressionSettings">
                        <prop type="array<string>" name="contentTypesToCompress">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="isCompressionEnabled"/>
                      </prop>
                      <prop type="string" name="queryParameters"/>
                      <prop type="string" name="queryStringCachingBehavior">
                        <enum>
                          <item value="&quot;IgnoreQueryString&quot;"/>
                          <item value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;UseQueryString&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="customDomains">
                      <item type="object">
                        <prop type="string" name="id"/>
                        <prop readOnly="True" type="boolean" name="isActive"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="deploymentStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enabledState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="endpointName"/>
                    <prop type="string" name="forwardingProtocol">
                      <default value="&quot;MatchRequest&quot;"/>
                      <enum>
                        <item value="&quot;HttpOnly&quot;"/>
                        <item value="&quot;HttpsOnly&quot;"/>
                        <item value="&quot;MatchRequest&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="httpsRedirect">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="linkToDefaultDomain">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="originGroup" required="True" cls="ResourceReference_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="originPath"/>
                    <prop type="array<string>" name="patternsToMatch">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@ResourceReference_read>" name="ruleSets">
                      <item type="@ResourceReference_read"/>
                    </prop>
                    <prop type="array<string>" name="supportedProtocols">
                      <default value="[&quot;Http&quot;,&quot;Https&quot;]"/>
                      <item type="string">
                        <enum>
                          <item value="&quot;Http&quot;"/>
                          <item value="&quot;Https&quot;"/>
                        </enum>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Route_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/afdendpoints/{}/routes/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vYWZkRW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L3JvdXRlcy97cm91dGVOYW1lfQ==/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.endpointName" options="endpoint-name" required="True" idPart="child_name_1">
          <help short="Name of the endpoint under the profile which is unique globally."/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeName" options="route-name name n" required="True" idPart="child_name_2">
          <help short="Name of the routing rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="OriginGroup">
        <arg nullable="True" type="string" var="$route.properties.originGroup.id" options="origin-group" group="OriginGroup">
          <help short="Name or ID of the origin group to be associated with."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$route.properties.cacheConfiguration" options="cache-configuration" group="Properties">
          <help short="The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."/>
          <arg nullable="True" type="object" var="$route.properties.cacheConfiguration.compressionSettings" options="compression-settings">
            <help short="compression settings."/>
            <arg nullable="True" type="array<string>" var="$route.properties.cacheConfiguration.compressionSettings.contentTypesToCompress" options="content-types-to-compress">
              <help short="List of content types on which compression applies. The value should be a valid MIME type."/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="boolean" var="$route.properties.cacheConfiguration.compressionSettings.isCompressionEnabled" options="is-compression-enabled">
              <help short="Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB."/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$route.properties.cacheConfiguration.queryParameters" options="query-parameters">
            <help short="query parameters to include or exclude (comma separated)."/>
          </arg>
          <arg nullable="True" type="string" var="$route.properties.cacheConfiguration.queryStringCachingBehavior" options="query-string-caching-behavior">
            <help short="Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings."/>
            <enum>
              <item name="IgnoreQueryString" value="&quot;IgnoreQueryString&quot;"/>
              <item name="IgnoreSpecifiedQueryStrings" value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
              <item name="IncludeSpecifiedQueryStrings" value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
              <item name="UseQueryString" value="&quot;UseQueryString&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$route.properties.customDomains" options="formatted-custom-domains" group="Properties">
          <help short="Domains referenced by this endpoint."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$route.properties.customDomains[].id" options="id">
              <help short="Resource ID."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$route.properties.enabledState" options="enabled-state" group="Properties">
          <help short="Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$route.properties.forwardingProtocol" options="forwarding-protocol" group="Properties">
          <help short="Protocol this rule will use when forwarding traffic to backends."/>
          <enum>
            <item name="HttpOnly" value="&quot;HttpOnly&quot;"/>
            <item name="HttpsOnly" value="&quot;HttpsOnly&quot;"/>
            <item name="MatchRequest" value="&quot;MatchRequest&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$route.properties.httpsRedirect" options="https-redirect" group="Properties">
          <help short="Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$route.properties.linkToDefaultDomain" options="link-to-default-domain" group="Properties">
          <help short="whether this route will be linked to the default endpoint domain."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$route.properties.originPath" options="origin-path" group="Properties">
          <help short="A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$route.properties.patternsToMatch" options="patterns-to-match" group="Properties">
          <help short="The route patterns of the rule."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$route.properties.ruleSets" options="formatted-rule-sets" group="Properties">
          <help short="rule sets referenced by this endpoint."/>
          <item nullable="True" type="object" cls="ResourceReference_update">
            <arg nullable="True" type="string" var="@ResourceReference_update.id" options="id">
              <help short="Resource ID."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$route.properties.supportedProtocols" options="supported-protocols" group="Properties">
          <help short="List of supported protocols for this route."/>
          <item nullable="True" type="string">
            <enum>
              <item name="Http" value="&quot;Http&quot;"/>
              <item name="Https" value="&quot;Https&quot;"/>
            </enum>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Routes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}">
          <request method="get">
            <path>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="routeName" arg="$Path.routeName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Route_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/afdEndpoints/{}/routes/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="cacheConfiguration">
                      <prop type="object" name="compressionSettings">
                        <prop type="array<string>" name="contentTypesToCompress">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="isCompressionEnabled"/>
                      </prop>
                      <prop type="string" name="queryParameters"/>
                      <prop type="string" name="queryStringCachingBehavior">
                        <enum>
                          <item value="&quot;IgnoreQueryString&quot;"/>
                          <item value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
                          <item value="&quot;UseQueryString&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="customDomains">
                      <item type="object">
                        <prop type="string" name="id"/>
                        <prop readOnly="True" type="boolean" name="isActive"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="deploymentStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enabledState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="endpointName"/>
                    <prop type="string" name="forwardingProtocol">
                      <default value="&quot;MatchRequest&quot;"/>
                      <enum>
                        <item value="&quot;HttpOnly&quot;"/>
                        <item value="&quot;HttpsOnly&quot;"/>
                        <item value="&quot;MatchRequest&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="httpsRedirect">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="linkToDefaultDomain">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="originGroup" required="True" cls="ResourceReference_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="originPath"/>
                    <prop type="array<string>" name="patternsToMatch">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@ResourceReference_read>" name="ruleSets">
                      <item type="@ResourceReference_read"/>
                    </prop>
                    <prop type="array<string>" name="supportedProtocols">
                      <default value="[&quot;Http&quot;,&quot;Https&quot;]"/>
                      <item type="string">
                        <enum>
                          <item value="&quot;Http&quot;"/>
                          <item value="&quot;Https&quot;"/>
                        </enum>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="route" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="cacheConfiguration" arg="$route.properties.cacheConfiguration">
                  <prop type="object" name="compressionSettings" arg="$route.properties.cacheConfiguration.compressionSettings">
                    <prop type="array<string>" name="contentTypesToCompress" arg="$route.properties.cacheConfiguration.compressionSettings.contentTypesToCompress">
                      <item type="string"/>
                    </prop>
                    <prop type="boolean" name="isCompressionEnabled" arg="$route.properties.cacheConfiguration.compressionSettings.isCompressionEnabled"/>
                  </prop>
                  <prop type="string" name="queryParameters" arg="$route.properties.cacheConfiguration.queryParameters"/>
                  <prop type="string" name="queryStringCachingBehavior" arg="$route.properties.cacheConfiguration.queryStringCachingBehavior">
                    <enum>
                      <item value="&quot;IgnoreQueryString&quot;"/>
                      <item value="&quot;IgnoreSpecifiedQueryStrings&quot;"/>
                      <item value="&quot;IncludeSpecifiedQueryStrings&quot;"/>
                      <item value="&quot;UseQueryString&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<object>" name="customDomains" arg="$route.properties.customDomains">
                  <item type="object">
                    <prop type="string" name="id" arg="$route.properties.customDomains[].id"/>
                  </item>
                </prop>
                <prop type="string" name="enabledState" arg="$route.properties.enabledState">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="forwardingProtocol" arg="$route.properties.forwardingProtocol">
                  <default value="&quot;MatchRequest&quot;"/>
                  <enum>
                    <item value="&quot;HttpOnly&quot;"/>
                    <item value="&quot;HttpsOnly&quot;"/>
                    <item value="&quot;MatchRequest&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="httpsRedirect" arg="$route.properties.httpsRedirect">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="linkToDefaultDomain" arg="$route.properties.linkToDefaultDomain">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="originGroup" required="True">
                  <prop type="string" name="id" arg="$route.properties.originGroup.id"/>
                </prop>
                <prop type="string" name="originPath" arg="$route.properties.originPath"/>
                <prop type="array<string>" name="patternsToMatch" arg="$route.properties.patternsToMatch">
                  <item type="string"/>
                </prop>
                <prop type="array<object>" name="ruleSets" arg="$route.properties.ruleSets">
                  <item type="object" cls="ResourceReference_update">
                    <prop type="string" name="id" arg="@ResourceReference_update.id"/>
                  </item>
                </prop>
                <prop type="array<string>" name="supportedProtocols" arg="$route.properties.supportedProtocols">
                  <default value="[&quot;Http&quot;,&quot;Https&quot;]"/>
                  <item type="string">
                    <enum>
                      <item value="&quot;Http&quot;"/>
                      <item value="&quot;Https&quot;"/>
                    </enum>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Routes_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}">
          <request method="put">
            <path>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="routeName" arg="$Path.routeName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Route_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Route_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
