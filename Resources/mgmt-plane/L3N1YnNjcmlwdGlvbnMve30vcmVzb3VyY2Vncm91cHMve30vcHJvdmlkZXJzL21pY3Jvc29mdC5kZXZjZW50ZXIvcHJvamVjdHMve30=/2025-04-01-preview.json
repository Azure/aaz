{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}", "version": "2025-04-01-preview", "swagger": "mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "devcenter admin project", "commands": [{"name": "show", "version": "2025-04-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}", "version": "2025-04-01-preview", "swagger": "mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.projectName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the project."}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Projects_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-04-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "azureAiServicesSettings", "props": [{"type": "string", "name": "azureAiServicesMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "catalogSettings", "props": [{"type": "array<string>", "name": "catalogItemSyncTypes", "item": {"type": "string", "enum": {"items": [{"value": "EnvironmentDefinition"}, {"value": "ImageDefinition"}]}}}]}, {"type": "object", "name": "customizationSettings", "props": [{"type": "array<object>", "name": "identities", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "identityResourceId"}, {"type": "string", "name": "identityType", "enum": {"items": [{"value": "systemAssignedIdentity"}, {"value": "userAssignedIdentity"}]}}]}}, {"type": "string", "name": "userCustomizationsEnableStatus", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "string", "name": "description"}, {"type": "object", "name": "devBoxAutoDeleteSettings", "props": [{"type": "string", "name": "deleteMode", "enum": {"items": [{"value": "Auto"}, {"value": "Manual"}]}}, {"type": "string", "name": "gracePeriod"}, {"type": "string", "name": "inactiveThreshold"}]}, {"type": "string", "name": "devCenterId"}, {"readOnly": true, "type": "string", "name": "devCenterUri"}, {"type": "string", "name": "displayName"}, {"type": "integer32", "name": "maxDevBoxesPerUser", "format": {"minimum": 0}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Created"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "MovingResources"}, {"value": "NotSpecified"}, {"value": "RolloutInProgress"}, {"value": "Running"}, {"value": "StorageProvisioningFailed"}, {"value": "Succeeded"}, {"value": "TransientFailure"}, {"value": "Updated"}, {"value": "Updating"}]}}, {"type": "object", "name": "serverlessGpuSessionsSettings", "props": [{"type": "integer32", "name": "maxConcurrentSessionsPerProject", "format": {"minimum": 1}}, {"type": "string", "name": "serverlessGpuSessionsMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "workspaceStorageSettings", "props": [{"type": "string", "name": "workspaceStorageMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2025-04-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}", "version": "2025-04-01-preview", "swagger": "mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.projectName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the project."}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Projects_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-04-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"statusCode": [204]}, {"statusCode": [200, 201]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2025-04-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}", "version": "2025-04-01-preview", "swagger": "mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.projectName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the project."}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Body", "args": [{"type": "ResourceLocation", "var": "$body.location", "options": ["l", "location"], "required": true, "group": "Body", "help": {"short": "The geo-location where the resource lives. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."}}, {"type": "object", "var": "$body.tags", "options": ["tags"], "group": "Body", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "CatalogSettings", "args": [{"type": "array<string>", "var": "$body.properties.catalogSettings.catalogItemSyncTypes", "options": ["c", "catalog-item-sync-types"], "group": "CatalogSettings", "help": {"short": "Indicates catalog item types that can be synced. Allowed values are \"EnvironmentDefinition\" and \"ImageDefinition\"."}, "item": {"type": "string", "enum": {"items": [{"name": "EnvironmentDefinition", "value": "EnvironmentDefinition"}, {"name": "ImageDefinition", "value": "ImageDefinition"}]}}}]}, {"name": "Identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$body.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "hide": true, "group": "Identity", "help": {"short": "Set the system managed identity."}}, {"type": "string", "var": "$body.identity.type", "options": ["identity-type"], "group": "Identity", "help": {"short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"blank": {"value": []}, "type": "array<string>", "var": "$body.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "hide": true, "group": "Identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}, {"type": "object", "var": "$body.identity.userAssignedIdentities", "options": ["u", "user-assigned-identities"], "group": "Identity", "help": {"short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$body.properties.azureAiServicesSettings", "options": ["a", "azure-ai-services-settings"], "group": "Properties", "help": {"short": "Indicates whether Azure AI services are enabled for a project."}, "args": [{"type": "string", "var": "$body.properties.azureAiServicesSettings.azureAiServicesMode", "options": ["azure-ai-services-mode"], "help": {"short": "The property indicates whether Azure AI services is enabled."}, "enum": {"items": [{"name": "AutoDeploy", "value": "AutoDeploy"}, {"name": "Disabled", "value": "Disabled"}]}}]}, {"type": "object", "var": "$body.properties.customizationSettings", "options": ["customization-settings"], "group": "Properties", "help": {"short": "Settings to be used for customizations."}, "args": [{"type": "array<object>", "var": "$body.properties.customizationSettings.identities", "options": ["identities"], "help": {"short": "The identities that can to be used in customization scenarios; e.g., to clone a repository."}, "item": {"type": "object", "args": [{"type": "ResourceId", "var": "$body.properties.customizationSettings.identities[].identityResourceId", "options": ["identity-resource-id"], "help": {"short": "Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."}}, {"type": "string", "var": "$body.properties.customizationSettings.identities[].identityType", "options": ["identity-type"], "help": {"short": "Values can be systemAssignedIdentity or userAssignedIdentity"}, "enum": {"items": [{"name": "systemAssignedIdentity", "value": "systemAssignedIdentity"}, {"name": "userAssignedIdentity", "value": "userAssignedIdentity"}]}}]}}, {"type": "string", "var": "$body.properties.customizationSettings.userCustomizationsEnableStatus", "options": ["user-customizations-enable-status"], "help": {"short": "Indicates whether user customizations are enabled."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"type": "string", "var": "$body.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "Description of the project."}}, {"type": "object", "var": "$body.properties.devBoxAutoDeleteSettings", "options": ["d", "dev-box-auto-delete-settings"], "group": "Properties", "help": {"short": "Dev Box Auto Delete settings."}, "args": [{"type": "string", "var": "$body.properties.devBoxAutoDeleteSettings.deleteMode", "options": ["delete-mode"], "help": {"short": "Indicates the delete mode for Dev Boxes within this project."}, "enum": {"items": [{"name": "Auto", "value": "Auto"}, {"name": "Manual", "value": "Manual"}]}}, {"type": "string", "var": "$body.properties.devBoxAutoDeleteSettings.gracePeriod", "options": ["grace-period"], "help": {"short": "ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted. ISO8601 format PT[n]H[n]M[n]S."}}, {"type": "string", "var": "$body.properties.devBoxAutoDeleteSettings.inactiveThreshold", "options": ["inactive-threshold"], "help": {"short": "ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion.  ISO8601 format PT[n]H[n]M[n]S."}}]}, {"type": "string", "var": "$body.properties.devCenterId", "options": ["dev-center-id"], "group": "Properties", "help": {"short": "Resource ID of an associated dev center."}}, {"type": "string", "var": "$body.properties.displayName", "options": ["display-name"], "group": "Properties", "help": {"short": "The display name of the project."}}, {"type": "integer32", "var": "$body.properties.maxDevBoxesPerUser", "options": ["max-dev-boxes-per-user"], "group": "Properties", "help": {"short": "When specified, limits the maximum number of dev boxes a single user can create across all pools in the project. This will have no effect on existing dev boxes when reduced."}, "format": {"minimum": 0}}, {"type": "object", "var": "$body.properties.serverlessGpuSessionsSettings", "options": ["s", "serverless-gpu-sessions-settings"], "group": "Properties", "help": {"short": "Settings to be used for serverless GPU."}, "args": [{"type": "integer32", "var": "$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject", "options": ["max-concurrent-sessions-per-project"], "help": {"short": "When specified, limits the maximum number of concurrent sessions across all pools in the project."}, "format": {"minimum": 1}}, {"type": "string", "var": "$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode", "options": ["serverless-gpu-sessions-mode"], "help": {"short": "The property indicates whether serverless GPU access is enabled on the project."}, "enum": {"items": [{"name": "AutoDeploy", "value": "AutoDeploy"}, {"name": "Disabled", "value": "Disabled"}]}}]}, {"type": "object", "var": "$body.properties.workspaceStorageSettings", "options": ["w", "workspace-storage-settings"], "group": "Properties", "help": {"short": "Settings to be used for workspace storage."}, "args": [{"type": "string", "var": "$body.properties.workspaceStorageSettings.workspaceStorageMode", "options": ["workspace-storage-mode"], "help": {"short": "Indicates whether workspace storage is enabled."}, "enum": {"items": [{"name": "AutoDeploy", "value": "AutoDeploy"}, {"name": "Disabled", "value": "Disabled"}]}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Projects_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-04-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$body.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$body.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}], "userAssigned": {"action": "create", "type": "array<string>", "name": "userAssigned", "arg": "$body.identity.userAssigned", "item": {"action": "create", "type": "string"}}, "systemAssigned": {"action": "create", "type": "string", "name": "systemAssigned", "arg": "$body.identity.systemAssigned"}}, {"type": "ResourceLocation", "name": "location", "arg": "$body.location", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "azureAiServicesSettings", "arg": "$body.properties.azureAiServicesSettings", "props": [{"type": "string", "name": "azureAiServicesMode", "arg": "$body.properties.azureAiServicesSettings.azureAiServicesMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "catalogSettings", "props": [{"type": "array<string>", "name": "catalogItemSyncTypes", "arg": "$body.properties.catalogSettings.catalogItemSyncTypes", "item": {"type": "string", "enum": {"items": [{"value": "EnvironmentDefinition"}, {"value": "ImageDefinition"}]}}}]}, {"type": "object", "name": "customizationSettings", "arg": "$body.properties.customizationSettings", "props": [{"type": "array<object>", "name": "identities", "arg": "$body.properties.customizationSettings.identities", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "identityResourceId", "arg": "$body.properties.customizationSettings.identities[].identityResourceId"}, {"type": "string", "name": "identityType", "arg": "$body.properties.customizationSettings.identities[].identityType", "enum": {"items": [{"value": "systemAssignedIdentity"}, {"value": "userAssignedIdentity"}]}}]}}, {"type": "string", "name": "userCustomizationsEnableStatus", "arg": "$body.properties.customizationSettings.userCustomizationsEnableStatus", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "string", "name": "description", "arg": "$body.properties.description"}, {"type": "object", "name": "devBoxAutoDeleteSettings", "arg": "$body.properties.devBoxAutoDeleteSettings", "props": [{"type": "string", "name": "deleteMode", "arg": "$body.properties.devBoxAutoDeleteSettings.deleteMode", "enum": {"items": [{"value": "Auto"}, {"value": "Manual"}]}}, {"type": "string", "name": "gracePeriod", "arg": "$body.properties.devBoxAutoDeleteSettings.gracePeriod"}, {"type": "string", "name": "inactiveThreshold", "arg": "$body.properties.devBoxAutoDeleteSettings.inactiveThreshold"}]}, {"type": "string", "name": "devCenterId", "arg": "$body.properties.devCenterId"}, {"type": "string", "name": "displayName", "arg": "$body.properties.displayName"}, {"type": "integer32", "name": "maxDevBoxesPerUser", "arg": "$body.properties.maxDevBoxesPerUser", "format": {"minimum": 0}}, {"type": "object", "name": "serverlessGpuSessionsSettings", "arg": "$body.properties.serverlessGpuSessionsSettings", "props": [{"type": "integer32", "name": "maxConcurrentSessionsPerProject", "arg": "$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject", "format": {"minimum": 1}}, {"type": "string", "name": "serverlessGpuSessionsMode", "arg": "$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "workspaceStorageSettings", "arg": "$body.properties.workspaceStorageSettings", "props": [{"type": "string", "name": "workspaceStorageMode", "arg": "$body.properties.workspaceStorageSettings.workspaceStorageMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$body.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "azureAiServicesSettings", "props": [{"type": "string", "name": "azureAiServicesMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "catalogSettings", "props": [{"type": "array<string>", "name": "catalogItemSyncTypes", "item": {"type": "string", "enum": {"items": [{"value": "EnvironmentDefinition"}, {"value": "ImageDefinition"}]}}}]}, {"type": "object", "name": "customizationSettings", "props": [{"type": "array<object>", "name": "identities", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "identityResourceId"}, {"type": "string", "name": "identityType", "enum": {"items": [{"value": "systemAssignedIdentity"}, {"value": "userAssignedIdentity"}]}}]}}, {"type": "string", "name": "userCustomizationsEnableStatus", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "string", "name": "description"}, {"type": "object", "name": "devBoxAutoDeleteSettings", "props": [{"type": "string", "name": "deleteMode", "enum": {"items": [{"value": "Auto"}, {"value": "Manual"}]}}, {"type": "string", "name": "gracePeriod"}, {"type": "string", "name": "inactiveThreshold"}]}, {"type": "string", "name": "devCenterId"}, {"readOnly": true, "type": "string", "name": "devCenterUri"}, {"type": "string", "name": "displayName"}, {"type": "integer32", "name": "maxDevBoxesPerUser", "format": {"minimum": 0}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Created"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "MovingResources"}, {"value": "NotSpecified"}, {"value": "RolloutInProgress"}, {"value": "Running"}, {"value": "StorageProvisioningFailed"}, {"value": "Succeeded"}, {"value": "TransientFailure"}, {"value": "Updated"}, {"value": "Updating"}]}}, {"type": "object", "name": "serverlessGpuSessionsSettings", "props": [{"type": "integer32", "name": "maxConcurrentSessionsPerProject", "format": {"minimum": 1}}, {"type": "string", "name": "serverlessGpuSessionsMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "workspaceStorageSettings", "props": [{"type": "string", "name": "workspaceStorageMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2025-04-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}", "version": "2025-04-01-preview", "swagger": "mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.projectName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the project."}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Body", "args": [{"nullable": true, "type": "object", "var": "$body.tags", "options": ["tags"], "group": "Body", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "CatalogSettings", "args": [{"nullable": true, "type": "array<string>", "var": "$body.properties.catalogSettings.catalogItemSyncTypes", "options": ["c", "catalog-item-sync-types"], "group": "CatalogSettings", "help": {"short": "Indicates catalog item types that can be synced. Allowed values are \"EnvironmentDefinition\" and \"ImageDefinition\"."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "EnvironmentDefinition", "value": "EnvironmentDefinition"}, {"name": "ImageDefinition", "value": "ImageDefinition"}]}}}]}, {"name": "Identity", "args": [{"type": "string", "var": "$body.identity.type", "options": ["identity-type"], "group": "Identity", "help": {"short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$body.identity.userAssignedIdentities", "options": ["u", "user-assigned-identities"], "group": "Identity", "help": {"short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "object", "var": "$body.properties.azureAiServicesSettings", "options": ["a", "azure-ai-services-settings"], "group": "Properties", "help": {"short": "Indicates whether Azure AI services are enabled for a project."}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.azureAiServicesSettings.azureAiServicesMode", "options": ["azure-ai-services-mode"], "help": {"short": "The property indicates whether Azure AI services is enabled."}, "enum": {"items": [{"name": "AutoDeploy", "value": "AutoDeploy"}, {"name": "Disabled", "value": "Disabled"}]}}]}, {"nullable": true, "type": "object", "var": "$body.properties.customizationSettings", "options": ["customization-settings"], "group": "Properties", "help": {"short": "Settings to be used for customizations."}, "args": [{"nullable": true, "type": "array<object>", "var": "$body.properties.customizationSettings.identities", "options": ["identities"], "help": {"short": "The identities that can to be used in customization scenarios; e.g., to clone a repository."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "ResourceId", "var": "$body.properties.customizationSettings.identities[].identityResourceId", "options": ["identity-resource-id"], "help": {"short": "Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."}}, {"nullable": true, "type": "string", "var": "$body.properties.customizationSettings.identities[].identityType", "options": ["identity-type"], "help": {"short": "Values can be systemAssignedIdentity or userAssignedIdentity"}, "enum": {"items": [{"name": "systemAssignedIdentity", "value": "systemAssignedIdentity"}, {"name": "userAssignedIdentity", "value": "userAssignedIdentity"}]}}]}}, {"nullable": true, "type": "string", "var": "$body.properties.customizationSettings.userCustomizationsEnableStatus", "options": ["user-customizations-enable-status"], "help": {"short": "Indicates whether user customizations are enabled."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"nullable": true, "type": "string", "var": "$body.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "Description of the project."}}, {"nullable": true, "type": "object", "var": "$body.properties.devBoxAutoDeleteSettings", "options": ["d", "dev-box-auto-delete-settings"], "group": "Properties", "help": {"short": "Dev Box Auto Delete settings."}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.devBoxAutoDeleteSettings.deleteMode", "options": ["delete-mode"], "help": {"short": "Indicates the delete mode for Dev Boxes within this project."}, "enum": {"items": [{"name": "Auto", "value": "Auto"}, {"name": "Manual", "value": "Manual"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.devBoxAutoDeleteSettings.gracePeriod", "options": ["grace-period"], "help": {"short": "ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted. ISO8601 format PT[n]H[n]M[n]S."}}, {"nullable": true, "type": "string", "var": "$body.properties.devBoxAutoDeleteSettings.inactiveThreshold", "options": ["inactive-threshold"], "help": {"short": "ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion.  ISO8601 format PT[n]H[n]M[n]S."}}]}, {"nullable": true, "type": "string", "var": "$body.properties.devCenterId", "options": ["dev-center-id"], "hide": true, "group": "Properties", "help": {"short": "Resource ID of an associated dev center."}}, {"nullable": true, "type": "string", "var": "$body.properties.displayName", "options": ["display-name"], "group": "Properties", "help": {"short": "The display name of the project."}}, {"nullable": true, "type": "integer32", "var": "$body.properties.maxDevBoxesPerUser", "options": ["max-dev-boxes-per-user"], "group": "Properties", "help": {"short": "When specified, limits the maximum number of dev boxes a single user can create across all pools in the project. This will have no effect on existing dev boxes when reduced."}, "format": {"minimum": 0}}, {"nullable": true, "type": "object", "var": "$body.properties.serverlessGpuSessionsSettings", "options": ["s", "serverless-gpu-sessions-settings"], "group": "Properties", "help": {"short": "Settings to be used for serverless GPU."}, "args": [{"nullable": true, "type": "integer32", "var": "$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject", "options": ["max-concurrent-sessions-per-project"], "help": {"short": "When specified, limits the maximum number of concurrent sessions across all pools in the project."}, "format": {"minimum": 1}}, {"nullable": true, "type": "string", "var": "$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode", "options": ["serverless-gpu-sessions-mode"], "help": {"short": "The property indicates whether serverless GPU access is enabled on the project."}, "enum": {"items": [{"name": "AutoDeploy", "value": "AutoDeploy"}, {"name": "Disabled", "value": "Disabled"}]}}]}, {"nullable": true, "type": "object", "var": "$body.properties.workspaceStorageSettings", "options": ["w", "workspace-storage-settings"], "group": "Properties", "help": {"short": "Settings to be used for workspace storage."}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.workspaceStorageSettings.workspaceStorageMode", "options": ["workspace-storage-mode"], "help": {"short": "Indicates whether workspace storage is enabled."}, "enum": {"items": [{"name": "AutoDeploy", "value": "AutoDeploy"}, {"name": "Disabled", "value": "Disabled"}]}}]}]}], "operations": [{"operationId": "Projects_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-04-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "azureAiServicesSettings", "props": [{"type": "string", "name": "azureAiServicesMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "catalogSettings", "props": [{"type": "array<string>", "name": "catalogItemSyncTypes", "item": {"type": "string", "enum": {"items": [{"value": "EnvironmentDefinition"}, {"value": "ImageDefinition"}]}}}]}, {"type": "object", "name": "customizationSettings", "props": [{"type": "array<object>", "name": "identities", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "identityResourceId"}, {"type": "string", "name": "identityType", "enum": {"items": [{"value": "systemAssignedIdentity"}, {"value": "userAssignedIdentity"}]}}]}}, {"type": "string", "name": "userCustomizationsEnableStatus", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "string", "name": "description"}, {"type": "object", "name": "devBoxAutoDeleteSettings", "props": [{"type": "string", "name": "deleteMode", "enum": {"items": [{"value": "Auto"}, {"value": "Manual"}]}}, {"type": "string", "name": "gracePeriod"}, {"type": "string", "name": "inactiveThreshold"}]}, {"type": "string", "name": "devCenterId"}, {"readOnly": true, "type": "string", "name": "devCenterUri"}, {"type": "string", "name": "displayName"}, {"type": "integer32", "name": "maxDevBoxesPerUser", "format": {"minimum": 0}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Created"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "MovingResources"}, {"value": "NotSpecified"}, {"value": "RolloutInProgress"}, {"value": "Running"}, {"value": "StorageProvisioningFailed"}, {"value": "Succeeded"}, {"value": "TransientFailure"}, {"value": "Updated"}, {"value": "Updating"}]}}, {"type": "object", "name": "serverlessGpuSessionsSettings", "props": [{"type": "integer32", "name": "maxConcurrentSessionsPerProject", "format": {"minimum": 1}}, {"type": "string", "name": "serverlessGpuSessionsMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "workspaceStorageSettings", "props": [{"type": "string", "name": "workspaceStorageMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Project_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "body", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$body.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$body.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "azureAiServicesSettings", "arg": "$body.properties.azureAiServicesSettings", "props": [{"type": "string", "name": "azureAiServicesMode", "arg": "$body.properties.azureAiServicesSettings.azureAiServicesMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "catalogSettings", "props": [{"type": "array<string>", "name": "catalogItemSyncTypes", "arg": "$body.properties.catalogSettings.catalogItemSyncTypes", "item": {"type": "string", "enum": {"items": [{"value": "EnvironmentDefinition"}, {"value": "ImageDefinition"}]}}}]}, {"type": "object", "name": "customizationSettings", "arg": "$body.properties.customizationSettings", "props": [{"type": "array<object>", "name": "identities", "arg": "$body.properties.customizationSettings.identities", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "identityResourceId", "arg": "$body.properties.customizationSettings.identities[].identityResourceId"}, {"type": "string", "name": "identityType", "arg": "$body.properties.customizationSettings.identities[].identityType", "enum": {"items": [{"value": "systemAssignedIdentity"}, {"value": "userAssignedIdentity"}]}}]}}, {"type": "string", "name": "userCustomizationsEnableStatus", "arg": "$body.properties.customizationSettings.userCustomizationsEnableStatus", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}]}, {"type": "string", "name": "description", "arg": "$body.properties.description"}, {"type": "object", "name": "devBoxAutoDeleteSettings", "arg": "$body.properties.devBoxAutoDeleteSettings", "props": [{"type": "string", "name": "deleteMode", "arg": "$body.properties.devBoxAutoDeleteSettings.deleteMode", "enum": {"items": [{"value": "Auto"}, {"value": "Manual"}]}}, {"type": "string", "name": "gracePeriod", "arg": "$body.properties.devBoxAutoDeleteSettings.gracePeriod"}, {"type": "string", "name": "inactiveThreshold", "arg": "$body.properties.devBoxAutoDeleteSettings.inactiveThreshold"}]}, {"type": "string", "name": "devCenterId", "arg": "$body.properties.devCenterId"}, {"type": "string", "name": "displayName", "arg": "$body.properties.displayName"}, {"type": "integer32", "name": "maxDevBoxesPerUser", "arg": "$body.properties.maxDevBoxesPerUser", "format": {"minimum": 0}}, {"type": "object", "name": "serverlessGpuSessionsSettings", "arg": "$body.properties.serverlessGpuSessionsSettings", "props": [{"type": "integer32", "name": "maxConcurrentSessionsPerProject", "arg": "$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject", "format": {"minimum": 1}}, {"type": "string", "name": "serverlessGpuSessionsMode", "arg": "$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}, {"type": "object", "name": "workspaceStorageSettings", "arg": "$body.properties.workspaceStorageSettings", "props": [{"type": "string", "name": "workspaceStorageMode", "arg": "$body.properties.workspaceStorageSettings.workspaceStorageMode", "enum": {"items": [{"value": "AutoDeploy"}, {"value": "Disabled"}]}}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$body.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Projects_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$", "maxLength": 63, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-04-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Project_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}