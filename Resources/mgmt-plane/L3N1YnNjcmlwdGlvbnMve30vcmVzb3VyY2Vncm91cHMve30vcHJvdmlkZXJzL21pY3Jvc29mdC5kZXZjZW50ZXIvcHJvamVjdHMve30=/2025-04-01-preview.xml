<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}" version="2025-04-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin project">
    <command name="show" version="2025-04-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}" version="2025-04-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.projectName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the project."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Projects_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}">
          <request method="get">
            <path>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="azureAiServicesSettings">
                      <prop type="string" name="azureAiServicesMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="catalogSettings">
                      <prop type="array<string>" name="catalogItemSyncTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                            <item value="&quot;ImageDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="customizationSettings">
                      <prop type="array<object>" name="identities">
                        <item type="object">
                          <prop type="ResourceId" name="identityResourceId"/>
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;systemAssignedIdentity&quot;"/>
                              <item value="&quot;userAssignedIdentity&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="userCustomizationsEnableStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="devBoxAutoDeleteSettings">
                      <prop type="string" name="deleteMode">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="gracePeriod"/>
                      <prop type="string" name="inactiveThreshold"/>
                    </prop>
                    <prop type="string" name="devCenterId"/>
                    <prop readOnly="True" type="string" name="devCenterUri"/>
                    <prop type="string" name="displayName"/>
                    <prop type="integer32" name="maxDevBoxesPerUser">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="serverlessGpuSessionsSettings">
                      <prop type="integer32" name="maxConcurrentSessionsPerProject">
                        <format minimum="1"/>
                      </prop>
                      <prop type="string" name="serverlessGpuSessionsMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="workspaceStorageSettings">
                      <prop type="string" name="workspaceStorageMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-04-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}" version="2025-04-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.projectName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the project."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Projects_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}">
          <request method="delete">
            <path>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-04-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}" version="2025-04-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.projectName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the project."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="The geo-location where the resource lives. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="CatalogSettings">
        <arg type="array<string>" var="$body.properties.catalogSettings.catalogItemSyncTypes" options="catalog-item-sync-types c" group="CatalogSettings">
          <help short="Indicates catalog item types that can be synced. Allowed values are &quot;EnvironmentDefinition&quot; and &quot;ImageDefinition&quot;."/>
          <item type="string">
            <enum>
              <item name="EnvironmentDefinition" value="&quot;EnvironmentDefinition&quot;"/>
              <item name="ImageDefinition" value="&quot;ImageDefinition&quot;"/>
            </enum>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$body.identity.systemAssigned" options="mi-system-assigned system-assigned" hide="True" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$body.identity.type" options="identity-type" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$body.identity.userAssigned" options="mi-user-assigned user-assigned" hide="True" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities u" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$body.properties.azureAiServicesSettings" options="azure-ai-services-settings a" group="Properties">
          <help short="Indicates whether Azure AI services are enabled for a project."/>
          <arg type="string" var="$body.properties.azureAiServicesSettings.azureAiServicesMode" options="azure-ai-services-mode">
            <help short="The property indicates whether Azure AI services is enabled."/>
            <enum>
              <item name="AutoDeploy" value="&quot;AutoDeploy&quot;"/>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.customizationSettings" options="customization-settings" group="Properties">
          <help short="Settings to be used for customizations."/>
          <arg type="array<object>" var="$body.properties.customizationSettings.identities" options="identities">
            <help short="The identities that can to be used in customization scenarios; e.g., to clone a repository."/>
            <item type="object">
              <arg type="ResourceId" var="$body.properties.customizationSettings.identities[].identityResourceId" options="identity-resource-id">
                <help short="Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."/>
              </arg>
              <arg type="string" var="$body.properties.customizationSettings.identities[].identityType" options="identity-type">
                <help short="Values can be systemAssignedIdentity or userAssignedIdentity"/>
                <enum>
                  <item name="systemAssignedIdentity" value="&quot;systemAssignedIdentity&quot;"/>
                  <item name="userAssignedIdentity" value="&quot;userAssignedIdentity&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$body.properties.customizationSettings.userCustomizationsEnableStatus" options="user-customizations-enable-status">
            <help short="Indicates whether user customizations are enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.description" options="description" group="Properties">
          <help short="Description of the project."/>
        </arg>
        <arg type="object" var="$body.properties.devBoxAutoDeleteSettings" options="dev-box-auto-delete-settings d" group="Properties">
          <help short="Dev Box Auto Delete settings."/>
          <arg type="string" var="$body.properties.devBoxAutoDeleteSettings.deleteMode" options="delete-mode">
            <help short="Indicates the delete mode for Dev Boxes within this project."/>
            <enum>
              <item name="Auto" value="&quot;Auto&quot;"/>
              <item name="Manual" value="&quot;Manual&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$body.properties.devBoxAutoDeleteSettings.gracePeriod" options="grace-period">
            <help short="ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted. ISO8601 format PT[n]H[n]M[n]S."/>
          </arg>
          <arg type="string" var="$body.properties.devBoxAutoDeleteSettings.inactiveThreshold" options="inactive-threshold">
            <help short="ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion.  ISO8601 format PT[n]H[n]M[n]S."/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.devCenterId" options="dev-center-id" group="Properties">
          <help short="Resource ID of an associated dev center."/>
        </arg>
        <arg type="string" var="$body.properties.displayName" options="display-name" group="Properties">
          <help short="The display name of the project."/>
        </arg>
        <arg type="integer32" var="$body.properties.maxDevBoxesPerUser" options="max-dev-boxes-per-user" group="Properties">
          <help short="When specified, limits the maximum number of dev boxes a single user can create across all pools in the project. This will have no effect on existing dev boxes when reduced."/>
          <format minimum="0"/>
        </arg>
        <arg type="object" var="$body.properties.serverlessGpuSessionsSettings" options="serverless-gpu-sessions-settings s" group="Properties">
          <help short="Settings to be used for serverless GPU."/>
          <arg type="integer32" var="$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject" options="max-concurrent-sessions-per-project">
            <help short="When specified, limits the maximum number of concurrent sessions across all pools in the project."/>
            <format minimum="1"/>
          </arg>
          <arg type="string" var="$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode" options="serverless-gpu-sessions-mode">
            <help short="The property indicates whether serverless GPU access is enabled on the project."/>
            <enum>
              <item name="AutoDeploy" value="&quot;AutoDeploy&quot;"/>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.workspaceStorageSettings" options="workspace-storage-settings w" group="Properties">
          <help short="Settings to be used for workspace storage."/>
          <arg type="string" var="$body.properties.workspaceStorageSettings.workspaceStorageMode" options="workspace-storage-mode">
            <help short="Indicates whether workspace storage is enabled."/>
            <enum>
              <item name="AutoDeploy" value="&quot;AutoDeploy&quot;"/>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Projects_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}">
          <request method="put">
            <path>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$body.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$body.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$body.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="azureAiServicesSettings" arg="$body.properties.azureAiServicesSettings">
                      <prop type="string" name="azureAiServicesMode" arg="$body.properties.azureAiServicesSettings.azureAiServicesMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="catalogSettings">
                      <prop type="array<string>" name="catalogItemSyncTypes" arg="$body.properties.catalogSettings.catalogItemSyncTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                            <item value="&quot;ImageDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="customizationSettings" arg="$body.properties.customizationSettings">
                      <prop type="array<object>" name="identities" arg="$body.properties.customizationSettings.identities">
                        <item type="object">
                          <prop type="ResourceId" name="identityResourceId" arg="$body.properties.customizationSettings.identities[].identityResourceId"/>
                          <prop type="string" name="identityType" arg="$body.properties.customizationSettings.identities[].identityType">
                            <enum>
                              <item value="&quot;systemAssignedIdentity&quot;"/>
                              <item value="&quot;userAssignedIdentity&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="userCustomizationsEnableStatus" arg="$body.properties.customizationSettings.userCustomizationsEnableStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="description" arg="$body.properties.description"/>
                    <prop type="object" name="devBoxAutoDeleteSettings" arg="$body.properties.devBoxAutoDeleteSettings">
                      <prop type="string" name="deleteMode" arg="$body.properties.devBoxAutoDeleteSettings.deleteMode">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="gracePeriod" arg="$body.properties.devBoxAutoDeleteSettings.gracePeriod"/>
                      <prop type="string" name="inactiveThreshold" arg="$body.properties.devBoxAutoDeleteSettings.inactiveThreshold"/>
                    </prop>
                    <prop type="string" name="devCenterId" arg="$body.properties.devCenterId"/>
                    <prop type="string" name="displayName" arg="$body.properties.displayName"/>
                    <prop type="integer32" name="maxDevBoxesPerUser" arg="$body.properties.maxDevBoxesPerUser">
                      <format minimum="0"/>
                    </prop>
                    <prop type="object" name="serverlessGpuSessionsSettings" arg="$body.properties.serverlessGpuSessionsSettings">
                      <prop type="integer32" name="maxConcurrentSessionsPerProject" arg="$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject">
                        <format minimum="1"/>
                      </prop>
                      <prop type="string" name="serverlessGpuSessionsMode" arg="$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="workspaceStorageSettings" arg="$body.properties.workspaceStorageSettings">
                      <prop type="string" name="workspaceStorageMode" arg="$body.properties.workspaceStorageSettings.workspaceStorageMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="azureAiServicesSettings">
                      <prop type="string" name="azureAiServicesMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="catalogSettings">
                      <prop type="array<string>" name="catalogItemSyncTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                            <item value="&quot;ImageDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="customizationSettings">
                      <prop type="array<object>" name="identities">
                        <item type="object">
                          <prop type="ResourceId" name="identityResourceId"/>
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;systemAssignedIdentity&quot;"/>
                              <item value="&quot;userAssignedIdentity&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="userCustomizationsEnableStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="devBoxAutoDeleteSettings">
                      <prop type="string" name="deleteMode">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="gracePeriod"/>
                      <prop type="string" name="inactiveThreshold"/>
                    </prop>
                    <prop type="string" name="devCenterId"/>
                    <prop readOnly="True" type="string" name="devCenterUri"/>
                    <prop type="string" name="displayName"/>
                    <prop type="integer32" name="maxDevBoxesPerUser">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="serverlessGpuSessionsSettings">
                      <prop type="integer32" name="maxConcurrentSessionsPerProject">
                        <format minimum="1"/>
                      </prop>
                      <prop type="string" name="serverlessGpuSessionsMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="workspaceStorageSettings">
                      <prop type="string" name="workspaceStorageMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-04-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}" version="2025-04-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0=/V/MjAyNS0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.projectName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the project."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="CatalogSettings">
        <arg nullable="True" type="array<string>" var="$body.properties.catalogSettings.catalogItemSyncTypes" options="catalog-item-sync-types c" group="CatalogSettings">
          <help short="Indicates catalog item types that can be synced. Allowed values are &quot;EnvironmentDefinition&quot; and &quot;ImageDefinition&quot;."/>
          <item nullable="True" type="string">
            <enum>
              <item name="EnvironmentDefinition" value="&quot;EnvironmentDefinition&quot;"/>
              <item name="ImageDefinition" value="&quot;ImageDefinition&quot;"/>
            </enum>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$body.identity.type" options="identity-type" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities u" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$body.properties.azureAiServicesSettings" options="azure-ai-services-settings a" group="Properties">
          <help short="Indicates whether Azure AI services are enabled for a project."/>
          <arg nullable="True" type="string" var="$body.properties.azureAiServicesSettings.azureAiServicesMode" options="azure-ai-services-mode">
            <help short="The property indicates whether Azure AI services is enabled."/>
            <enum>
              <item name="AutoDeploy" value="&quot;AutoDeploy&quot;"/>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.customizationSettings" options="customization-settings" group="Properties">
          <help short="Settings to be used for customizations."/>
          <arg nullable="True" type="array<object>" var="$body.properties.customizationSettings.identities" options="identities">
            <help short="The identities that can to be used in customization scenarios; e.g., to clone a repository."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="ResourceId" var="$body.properties.customizationSettings.identities[].identityResourceId" options="identity-resource-id">
                <help short="Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.customizationSettings.identities[].identityType" options="identity-type">
                <help short="Values can be systemAssignedIdentity or userAssignedIdentity"/>
                <enum>
                  <item name="systemAssignedIdentity" value="&quot;systemAssignedIdentity&quot;"/>
                  <item name="userAssignedIdentity" value="&quot;userAssignedIdentity&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.customizationSettings.userCustomizationsEnableStatus" options="user-customizations-enable-status">
            <help short="Indicates whether user customizations are enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.description" options="description" group="Properties">
          <help short="Description of the project."/>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.devBoxAutoDeleteSettings" options="dev-box-auto-delete-settings d" group="Properties">
          <help short="Dev Box Auto Delete settings."/>
          <arg nullable="True" type="string" var="$body.properties.devBoxAutoDeleteSettings.deleteMode" options="delete-mode">
            <help short="Indicates the delete mode for Dev Boxes within this project."/>
            <enum>
              <item name="Auto" value="&quot;Auto&quot;"/>
              <item name="Manual" value="&quot;Manual&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.devBoxAutoDeleteSettings.gracePeriod" options="grace-period">
            <help short="ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted. ISO8601 format PT[n]H[n]M[n]S."/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.devBoxAutoDeleteSettings.inactiveThreshold" options="inactive-threshold">
            <help short="ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion.  ISO8601 format PT[n]H[n]M[n]S."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.devCenterId" options="dev-center-id" hide="True" group="Properties">
          <help short="Resource ID of an associated dev center."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.displayName" options="display-name" group="Properties">
          <help short="The display name of the project."/>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.maxDevBoxesPerUser" options="max-dev-boxes-per-user" group="Properties">
          <help short="When specified, limits the maximum number of dev boxes a single user can create across all pools in the project. This will have no effect on existing dev boxes when reduced."/>
          <format minimum="0"/>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.serverlessGpuSessionsSettings" options="serverless-gpu-sessions-settings s" group="Properties">
          <help short="Settings to be used for serverless GPU."/>
          <arg nullable="True" type="integer32" var="$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject" options="max-concurrent-sessions-per-project">
            <help short="When specified, limits the maximum number of concurrent sessions across all pools in the project."/>
            <format minimum="1"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode" options="serverless-gpu-sessions-mode">
            <help short="The property indicates whether serverless GPU access is enabled on the project."/>
            <enum>
              <item name="AutoDeploy" value="&quot;AutoDeploy&quot;"/>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.workspaceStorageSettings" options="workspace-storage-settings w" group="Properties">
          <help short="Settings to be used for workspace storage."/>
          <arg nullable="True" type="string" var="$body.properties.workspaceStorageSettings.workspaceStorageMode" options="workspace-storage-mode">
            <help short="Indicates whether workspace storage is enabled."/>
            <enum>
              <item name="AutoDeploy" value="&quot;AutoDeploy&quot;"/>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Projects_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}">
          <request method="get">
            <path>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Project_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="azureAiServicesSettings">
                      <prop type="string" name="azureAiServicesMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="catalogSettings">
                      <prop type="array<string>" name="catalogItemSyncTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;EnvironmentDefinition&quot;"/>
                            <item value="&quot;ImageDefinition&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="customizationSettings">
                      <prop type="array<object>" name="identities">
                        <item type="object">
                          <prop type="ResourceId" name="identityResourceId"/>
                          <prop type="string" name="identityType">
                            <enum>
                              <item value="&quot;systemAssignedIdentity&quot;"/>
                              <item value="&quot;userAssignedIdentity&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="userCustomizationsEnableStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="devBoxAutoDeleteSettings">
                      <prop type="string" name="deleteMode">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="gracePeriod"/>
                      <prop type="string" name="inactiveThreshold"/>
                    </prop>
                    <prop type="string" name="devCenterId"/>
                    <prop readOnly="True" type="string" name="devCenterUri"/>
                    <prop type="string" name="displayName"/>
                    <prop type="integer32" name="maxDevBoxesPerUser">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="serverlessGpuSessionsSettings">
                      <prop type="integer32" name="maxConcurrentSessionsPerProject">
                        <format minimum="1"/>
                      </prop>
                      <prop type="string" name="serverlessGpuSessionsMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="workspaceStorageSettings">
                      <prop type="string" name="workspaceStorageMode">
                        <enum>
                          <item value="&quot;AutoDeploy&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$body.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="azureAiServicesSettings" arg="$body.properties.azureAiServicesSettings">
                  <prop type="string" name="azureAiServicesMode" arg="$body.properties.azureAiServicesSettings.azureAiServicesMode">
                    <enum>
                      <item value="&quot;AutoDeploy&quot;"/>
                      <item value="&quot;Disabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="catalogSettings">
                  <prop type="array<string>" name="catalogItemSyncTypes" arg="$body.properties.catalogSettings.catalogItemSyncTypes">
                    <item type="string">
                      <enum>
                        <item value="&quot;EnvironmentDefinition&quot;"/>
                        <item value="&quot;ImageDefinition&quot;"/>
                      </enum>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="customizationSettings" arg="$body.properties.customizationSettings">
                  <prop type="array<object>" name="identities" arg="$body.properties.customizationSettings.identities">
                    <item type="object">
                      <prop type="ResourceId" name="identityResourceId" arg="$body.properties.customizationSettings.identities[].identityResourceId"/>
                      <prop type="string" name="identityType" arg="$body.properties.customizationSettings.identities[].identityType">
                        <enum>
                          <item value="&quot;systemAssignedIdentity&quot;"/>
                          <item value="&quot;userAssignedIdentity&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="userCustomizationsEnableStatus" arg="$body.properties.customizationSettings.userCustomizationsEnableStatus">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="description" arg="$body.properties.description"/>
                <prop type="object" name="devBoxAutoDeleteSettings" arg="$body.properties.devBoxAutoDeleteSettings">
                  <prop type="string" name="deleteMode" arg="$body.properties.devBoxAutoDeleteSettings.deleteMode">
                    <enum>
                      <item value="&quot;Auto&quot;"/>
                      <item value="&quot;Manual&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="gracePeriod" arg="$body.properties.devBoxAutoDeleteSettings.gracePeriod"/>
                  <prop type="string" name="inactiveThreshold" arg="$body.properties.devBoxAutoDeleteSettings.inactiveThreshold"/>
                </prop>
                <prop type="string" name="devCenterId" arg="$body.properties.devCenterId"/>
                <prop type="string" name="displayName" arg="$body.properties.displayName"/>
                <prop type="integer32" name="maxDevBoxesPerUser" arg="$body.properties.maxDevBoxesPerUser">
                  <format minimum="0"/>
                </prop>
                <prop type="object" name="serverlessGpuSessionsSettings" arg="$body.properties.serverlessGpuSessionsSettings">
                  <prop type="integer32" name="maxConcurrentSessionsPerProject" arg="$body.properties.serverlessGpuSessionsSettings.maxConcurrentSessionsPerProject">
                    <format minimum="1"/>
                  </prop>
                  <prop type="string" name="serverlessGpuSessionsMode" arg="$body.properties.serverlessGpuSessionsSettings.serverlessGpuSessionsMode">
                    <enum>
                      <item value="&quot;AutoDeploy&quot;"/>
                      <item value="&quot;Disabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="workspaceStorageSettings" arg="$body.properties.workspaceStorageSettings">
                  <prop type="string" name="workspaceStorageMode" arg="$body.properties.workspaceStorageSettings.workspaceStorageMode">
                    <enum>
                      <item value="&quot;AutoDeploy&quot;"/>
                      <item value="&quot;Disabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Projects_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}">
          <request method="put">
            <path>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Project_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
