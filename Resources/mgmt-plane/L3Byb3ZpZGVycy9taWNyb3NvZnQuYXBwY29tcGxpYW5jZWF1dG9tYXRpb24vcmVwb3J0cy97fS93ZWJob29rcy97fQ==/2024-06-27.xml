<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/providers/microsoft.appcomplianceautomation/reports/{}/webhooks/{}" version="2024-06-27" swagger="mgmt-plane/appcomplianceautomation/ResourceProviders/Microsoft.AppComplianceAutomation/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBwQ29tcGxpYW5jZUF1dG9tYXRpb24vcmVwb3J0cy97cmVwb3J0TmFtZX0vd2ViaG9va3Mve3dlYmhvb2tOYW1lfQ==/V/MjAyNC0wNi0yNw=="/>
  <commandGroup name="acat report webhook">
    <command name="show" version="2024-06-27">
      <resource id="/providers/microsoft.appcomplianceautomation/reports/{}/webhooks/{}" version="2024-06-27" swagger="mgmt-plane/appcomplianceautomation/ResourceProviders/Microsoft.AppComplianceAutomation/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBwQ29tcGxpYW5jZUF1dG9tYXRpb24vcmVwb3J0cy97cmVwb3J0TmFtZX0vd2ViaG9va3Mve3dlYmhvb2tOYW1lfQ==/V/MjAyNC0wNi0yNw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.reportName" options="report-name" required="True">
          <help short="Report Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
        <arg type="string" var="$Path.webhookName" options="webhook-name" required="True">
          <help short="Webhook Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
      </argGroup>
      <operation operationId="Webhook_Get">
        <http path="/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}">
          <request method="get">
            <path>
              <param type="string" name="reportName" arg="$Path.reportName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
              <param type="string" name="webhookName" arg="$Path.webhookName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-27&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/providers/Microsoft.AppComplianceAutomation/reports/{}/webhooks/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="contentType">
                      <enum>
                        <item value="&quot;application/json&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="deliveryStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enableSslVerification">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="events">
                      <item type="string">
                        <enum>
                          <item value="&quot;assessment_failure&quot;"/>
                          <item value="&quot;generate_snapshot_failed&quot;"/>
                          <item value="&quot;generate_snapshot_success&quot;"/>
                          <item value="&quot;report_configuration_changes&quot;"/>
                          <item value="&quot;report_deletion&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="payloadUrl">
                      <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Fixing&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                        <item value="&quot;Verifying&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sendAllEvents">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="updateWebhookKey">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="webhookId"/>
                    <prop type="string" name="webhookKey">
                      <format pattern="^.{0,2048}$"/>
                    </prop>
                    <prop readOnly="True" type="string" name="webhookKeyEnabled">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-06-27" confirmation="Are you sure you want to perform this operation?">
      <resource id="/providers/microsoft.appcomplianceautomation/reports/{}/webhooks/{}" version="2024-06-27" swagger="mgmt-plane/appcomplianceautomation/ResourceProviders/Microsoft.AppComplianceAutomation/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBwQ29tcGxpYW5jZUF1dG9tYXRpb24vcmVwb3J0cy97cmVwb3J0TmFtZX0vd2ViaG9va3Mve3dlYmhvb2tOYW1lfQ==/V/MjAyNC0wNi0yNw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.reportName" options="report-name" required="True">
          <help short="Report Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
        <arg type="string" var="$Path.webhookName" options="webhook-name" required="True">
          <help short="Webhook Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
      </argGroup>
      <operation operationId="Webhook_Delete">
        <http path="/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}">
          <request method="delete">
            <path>
              <param type="string" name="reportName" arg="$Path.reportName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
              <param type="string" name="webhookName" arg="$Path.webhookName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-27&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-06-27">
      <resource id="/providers/microsoft.appcomplianceautomation/reports/{}/webhooks/{}" version="2024-06-27" swagger="mgmt-plane/appcomplianceautomation/ResourceProviders/Microsoft.AppComplianceAutomation/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBwQ29tcGxpYW5jZUF1dG9tYXRpb24vcmVwb3J0cy97cmVwb3J0TmFtZX0vd2ViaG9va3Mve3dlYmhvb2tOYW1lfQ==/V/MjAyNC0wNi0yNw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.reportName" options="report-name" required="True">
          <help short="Report Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
        <arg type="string" var="$Path.webhookName" options="webhook-name" required="True">
          <help short="Webhook Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.contentType" options="content-type" group="Properties">
          <help short="content type"/>
          <default value="&quot;application/json&quot;"/>
          <enum>
            <item name="application/json" value="&quot;application/json&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.enableSslVerification" options="enable-ssl" group="Properties">
          <help short="whether to enable ssl verification"/>
          <default value="&quot;true&quot;"/>
          <enum>
            <item name="false" value="&quot;false&quot;"/>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$parameters.properties.events" options="events" group="Properties">
          <help short="under which event notification should be sent."/>
          <default value="[]"/>
          <item type="string">
            <enum>
              <item name="assessment_failure" value="&quot;assessment_failure&quot;"/>
              <item name="generate_snapshot_failed" value="&quot;generate_snapshot_failed&quot;"/>
              <item name="generate_snapshot_success" value="&quot;generate_snapshot_success&quot;"/>
              <item name="report_configuration_changes" value="&quot;report_configuration_changes&quot;"/>
              <item name="report_deletion" value="&quot;report_deletion&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.payloadUrl" options="payload-url" group="Properties">
          <help short="webhook payload url"/>
          <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
        </arg>
        <arg type="string" var="$parameters.properties.sendAllEvents" options="send-all-events" group="Properties">
          <help short="whether to send notification under any event."/>
          <enum>
            <item name="false" value="&quot;false&quot;"/>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.status" options="status" group="Properties">
          <help short="Webhook status."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.updateWebhookKey" options="update-webhook-key" group="Properties">
          <help short="whether to update webhookKey."/>
          <enum>
            <item name="false" value="&quot;false&quot;"/>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.webhookKey" options="secret" group="Properties">
          <help short="webhook secret token. If not set, this field value is null; otherwise, please set a string value."/>
          <format pattern="^.{0,2048}$"/>
        </arg>
      </argGroup>
      <operation operationId="Webhook_CreateOrUpdate">
        <http path="/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}">
          <request method="put">
            <path>
              <param type="string" name="reportName" arg="$Path.reportName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
              <param type="string" name="webhookName" arg="$Path.webhookName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-27&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="contentType" arg="$parameters.properties.contentType">
                      <enum>
                        <item value="&quot;application/json&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enableSslVerification" arg="$parameters.properties.enableSslVerification">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="events" arg="$parameters.properties.events">
                      <item type="string">
                        <enum>
                          <item value="&quot;assessment_failure&quot;"/>
                          <item value="&quot;generate_snapshot_failed&quot;"/>
                          <item value="&quot;generate_snapshot_success&quot;"/>
                          <item value="&quot;report_configuration_changes&quot;"/>
                          <item value="&quot;report_deletion&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="payloadUrl" arg="$parameters.properties.payloadUrl">
                      <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
                    </prop>
                    <prop type="string" name="sendAllEvents" arg="$parameters.properties.sendAllEvents">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status" arg="$parameters.properties.status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="updateWebhookKey" arg="$parameters.properties.updateWebhookKey">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="webhookKey" arg="$parameters.properties.webhookKey">
                      <format pattern="^.{0,2048}$"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/providers/Microsoft.AppComplianceAutomation/reports/{}/webhooks/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="contentType">
                      <enum>
                        <item value="&quot;application/json&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="deliveryStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enableSslVerification">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="events">
                      <item type="string">
                        <enum>
                          <item value="&quot;assessment_failure&quot;"/>
                          <item value="&quot;generate_snapshot_failed&quot;"/>
                          <item value="&quot;generate_snapshot_success&quot;"/>
                          <item value="&quot;report_configuration_changes&quot;"/>
                          <item value="&quot;report_deletion&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="payloadUrl">
                      <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Fixing&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                        <item value="&quot;Verifying&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sendAllEvents">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="updateWebhookKey">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="webhookId"/>
                    <prop type="string" name="webhookKey">
                      <format pattern="^.{0,2048}$"/>
                    </prop>
                    <prop readOnly="True" type="string" name="webhookKeyEnabled">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-06-27">
      <resource id="/providers/microsoft.appcomplianceautomation/reports/{}/webhooks/{}" version="2024-06-27" swagger="mgmt-plane/appcomplianceautomation/ResourceProviders/Microsoft.AppComplianceAutomation/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBwQ29tcGxpYW5jZUF1dG9tYXRpb24vcmVwb3J0cy97cmVwb3J0TmFtZX0vd2ViaG9va3Mve3dlYmhvb2tOYW1lfQ==/V/MjAyNC0wNi0yNw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.reportName" options="report-name" required="True">
          <help short="Report Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
        <arg type="string" var="$Path.webhookName" options="webhook-name" required="True">
          <help short="Webhook Name."/>
          <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.contentType" options="content-type" group="Properties">
          <help short="content type"/>
          <enum>
            <item name="application/json" value="&quot;application/json&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.enableSslVerification" options="enable-ssl" group="Properties">
          <help short="whether to enable ssl verification"/>
          <enum>
            <item name="false" value="&quot;false&quot;"/>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$parameters.properties.events" options="events" group="Properties">
          <help short="under which event notification should be sent."/>
          <item type="string">
            <enum>
              <item name="assessment_failure" value="&quot;assessment_failure&quot;"/>
              <item name="generate_snapshot_failed" value="&quot;generate_snapshot_failed&quot;"/>
              <item name="generate_snapshot_success" value="&quot;generate_snapshot_success&quot;"/>
              <item name="report_configuration_changes" value="&quot;report_configuration_changes&quot;"/>
              <item name="report_deletion" value="&quot;report_deletion&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.payloadUrl" options="payload-url" group="Properties">
          <help short="webhook payload url"/>
          <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
        </arg>
        <arg type="string" var="$parameters.properties.sendAllEvents" options="send-all-events" group="Properties">
          <help short="whether to send notification under any event."/>
          <enum>
            <item name="false" value="&quot;false&quot;"/>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.status" options="status" group="Properties">
          <help short="Webhook status."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.updateWebhookKey" options="update-webhook-key" group="Properties">
          <help short="whether to update webhookKey."/>
          <enum>
            <item name="false" value="&quot;false&quot;"/>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.webhookKey" options="secret" group="Properties">
          <help short="webhook secret token. If not set, this field value is null; otherwise, please set a string value."/>
          <format pattern="^.{0,2048}$"/>
        </arg>
      </argGroup>
      <operation operationId="Webhook_Update">
        <http path="/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}">
          <request method="patch">
            <path>
              <param type="string" name="reportName" arg="$Path.reportName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
              <param type="string" name="webhookName" arg="$Path.webhookName" required="True">
                <format pattern="^[-a-zA-Z0-9_]{1,50}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-27&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="string" name="contentType" arg="$parameters.properties.contentType">
                      <enum>
                        <item value="&quot;application/json&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enableSslVerification" arg="$parameters.properties.enableSslVerification">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="events" arg="$parameters.properties.events">
                      <item type="string">
                        <enum>
                          <item value="&quot;assessment_failure&quot;"/>
                          <item value="&quot;generate_snapshot_failed&quot;"/>
                          <item value="&quot;generate_snapshot_success&quot;"/>
                          <item value="&quot;report_configuration_changes&quot;"/>
                          <item value="&quot;report_deletion&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="payloadUrl" arg="$parameters.properties.payloadUrl">
                      <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
                    </prop>
                    <prop type="string" name="sendAllEvents" arg="$parameters.properties.sendAllEvents">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status" arg="$parameters.properties.status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="updateWebhookKey" arg="$parameters.properties.updateWebhookKey">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="webhookKey" arg="$parameters.properties.webhookKey">
                      <format pattern="^.{0,2048}$"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/providers/Microsoft.AppComplianceAutomation/reports/{}/webhooks/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="contentType">
                      <enum>
                        <item value="&quot;application/json&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="deliveryStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="enableSslVerification">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="events">
                      <item type="string">
                        <enum>
                          <item value="&quot;assessment_failure&quot;"/>
                          <item value="&quot;generate_snapshot_failed&quot;"/>
                          <item value="&quot;generate_snapshot_success&quot;"/>
                          <item value="&quot;report_configuration_changes&quot;"/>
                          <item value="&quot;report_deletion&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="payloadUrl">
                      <format pattern="^(http(s)?://)[\S]{0,64994}$"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Fixing&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                        <item value="&quot;Verifying&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sendAllEvents">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="updateWebhookKey">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="webhookId"/>
                    <prop type="string" name="webhookKey">
                      <format pattern="^.{0,2048}$"/>
                    </prop>
                    <prop readOnly="True" type="string" name="webhookKeyEnabled">
                      <enum>
                        <item value="&quot;false&quot;"/>
                        <item value="&quot;true&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
