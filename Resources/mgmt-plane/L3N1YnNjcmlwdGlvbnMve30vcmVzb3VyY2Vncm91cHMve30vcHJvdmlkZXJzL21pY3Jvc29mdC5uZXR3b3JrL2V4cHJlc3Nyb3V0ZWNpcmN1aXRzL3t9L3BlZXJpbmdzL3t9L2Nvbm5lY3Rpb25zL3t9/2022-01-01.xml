<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network express-route peering connection">
    <command name="show" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_2">
          <help short="Name of the peering connection."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
          <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCircuitConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="addressPrefix"/>
                    <prop type="string" name="authorizationKey"/>
                    <prop readOnly="True" type="string" name="circuitConnectionStatus">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Connecting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="ipv6CircuitConnectionConfig">
                      <prop type="string" name="addressPrefix"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_2">
          <help short="Name of the peering connection."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
          <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCircuitConnections_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
          <request method="delete">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_2">
          <help short="Name of the peering connection."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
          <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$expressRouteCircuitConnectionParameters.properties.addressPrefix" options="address-prefix" group="">
          <help short="/29 IP address space to carve out customer addresses for tunnels."/>
        </arg>
        <arg type="string" var="$expressRouteCircuitConnectionParameters.properties.authorizationKey" options="authorization-key" group="">
          <help short="The authorization key used when the peer circuit is in another subscription."/>
        </arg>
      </argGroup>
      <argGroup name="ExpressRouteCircuitConnectionParameters">
        <arg type="ResourceId" var="$expressRouteCircuitConnectionParameters.id" options="id" hide="True" group="ExpressRouteCircuitConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$expressRouteCircuitConnectionParameters.properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties" cls="SubResource_create">
          <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
          <arg type="string" var="@SubResource_create.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg type="object" var="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig" options="ipv6-circuit-connection-config" hide="True" group="Properties">
          <help short="IPv6 Address PrefixProperties of the express route circuit connection."/>
          <arg type="string" var="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix">
            <help short="/125 IP address space to carve out customer addresses for global reach."/>
          </arg>
        </arg>
        <arg type="@SubResource_create" var="$expressRouteCircuitConnectionParameters.properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
          <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCircuitConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="expressRouteCircuitConnectionParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$expressRouteCircuitConnectionParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$Path.connectionName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="addressPrefix" arg="$expressRouteCircuitConnectionParameters.properties.addressPrefix"/>
                    <prop type="string" name="authorizationKey" arg="$expressRouteCircuitConnectionParameters.properties.authorizationKey"/>
                    <prop type="object" name="expressRouteCircuitPeering" arg="$expressRouteCircuitConnectionParameters.properties.expressRouteCircuitPeering" cls="SubResource_create">
                      <prop type="string" name="id" arg="@SubResource_create.id"/>
                    </prop>
                    <prop type="object" name="ipv6CircuitConnectionConfig" arg="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig">
                      <prop type="string" name="addressPrefix" arg="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix"/>
                    </prop>
                    <prop type="@SubResource_create" name="peerExpressRouteCircuitPeering" arg="$expressRouteCircuitConnectionParameters.properties.peerExpressRouteCircuitPeering"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="addressPrefix"/>
                    <prop type="string" name="authorizationKey"/>
                    <prop readOnly="True" type="string" name="circuitConnectionStatus">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Connecting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="ipv6CircuitConnectionConfig">
                      <prop type="string" name="addressPrefix"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_2">
          <help short="Name of the peering connection."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
          <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="string" var="$expressRouteCircuitConnectionParameters.properties.addressPrefix" options="address-prefix" group="">
          <help short="/29 IP address space to carve out customer addresses for tunnels."/>
        </arg>
        <arg nullable="True" type="string" var="$expressRouteCircuitConnectionParameters.properties.authorizationKey" options="authorization-key" group="">
          <help short="The authorization key used when the peer circuit is in another subscription."/>
        </arg>
      </argGroup>
      <argGroup name="ExpressRouteCircuitConnectionParameters">
        <arg nullable="True" type="ResourceId" var="$expressRouteCircuitConnectionParameters.id" options="id" hide="True" group="ExpressRouteCircuitConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$expressRouteCircuitConnectionParameters.properties.expressRouteCircuitPeering" options="express-route-circuit-peering" hide="True" group="Properties" cls="SubResource_update">
          <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig" options="ipv6-circuit-connection-config" group="Properties">
          <help short="IPv6 Address PrefixProperties of the express route circuit connection."/>
          <arg nullable="True" type="string" var="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix">
            <help short="/125 IP address space to carve out customer addresses for global reach."/>
          </arg>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$expressRouteCircuitConnectionParameters.properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" hide="True" group="Properties">
          <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCircuitConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRouteCircuitConnection_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="addressPrefix"/>
                    <prop type="string" name="authorizationKey"/>
                    <prop readOnly="True" type="string" name="circuitConnectionStatus">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Connecting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="ipv6CircuitConnectionConfig">
                      <prop type="string" name="addressPrefix"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="expressRouteCircuitConnectionParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$expressRouteCircuitConnectionParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
              </prop>
              <prop type="string" name="name" arg="$Path.connectionName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="addressPrefix" arg="$expressRouteCircuitConnectionParameters.properties.addressPrefix"/>
                <prop type="string" name="authorizationKey" arg="$expressRouteCircuitConnectionParameters.properties.authorizationKey"/>
                <prop type="object" name="expressRouteCircuitPeering" arg="$expressRouteCircuitConnectionParameters.properties.expressRouteCircuitPeering" cls="SubResource_update">
                  <prop type="string" name="id" arg="@SubResource_update.id"/>
                </prop>
                <prop type="object" name="ipv6CircuitConnectionConfig" arg="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig">
                  <prop type="string" name="addressPrefix" arg="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix"/>
                </prop>
                <prop type="@SubResource_update" name="peerExpressRouteCircuitPeering" arg="$expressRouteCircuitConnectionParameters.properties.peerExpressRouteCircuitPeering"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRouteCircuitConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRouteCircuitConnection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="ipv6-config">
      <command name="update" version="2022-01-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" subresource="properties.ipv6CircuitConnectionConfig" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
            <help short="ExpressRoute circuit name."/>
          </arg>
          <arg type="string" var="$Path.connectionName" options="name" required="True" group="" idPart="child_name_2">
            <help short="Name of the peering connection."/>
          </arg>
          <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
            <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="ExpressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig">
          <arg nullable="True" type="string" var="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix" group="ExpressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig">
            <help short="/125 IP address space to carve out customer addresses for global reach."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="expressRouteCircuitConnectionParameters">
            <prop type="object" name="properties.ipv6CircuitConnectionConfig"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRouteCircuitConnections_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="get">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRouteCircuitConnection_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix"/>
                      <prop type="string" name="authorizationKey"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="ipv6CircuitConnectionConfig">
                        <prop type="string" name="addressPrefix"/>
                        <prop readOnly="True" type="string" name="circuitConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Connecting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig" required="True">
                <prop type="string" name="addressPrefix" arg="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="ExpressRouteCircuitConnections_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="put">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRouteCircuitConnection_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="show" version="2022-01-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" subresource="properties.ipv6CircuitConnectionConfig" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
            <help short="ExpressRoute circuit name."/>
          </arg>
          <arg type="string" var="$Path.connectionName" options="name" required="True" group="" idPart="child_name_2">
            <help short="Name of the peering connection."/>
          </arg>
          <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
            <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="expressRouteCircuitConnectionParameters">
            <prop type="object" name="properties.ipv6CircuitConnectionConfig"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRouteCircuitConnections_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="get">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRouteCircuitConnection_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix"/>
                      <prop type="string" name="authorizationKey"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="ipv6CircuitConnectionConfig">
                        <prop type="string" name="addressPrefix"/>
                        <prop readOnly="True" type="string" name="circuitConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Connecting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="set" version="2022-01-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" subresource="properties.ipv6CircuitConnectionConfig" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
            <help short="ExpressRoute circuit name."/>
          </arg>
          <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_2">
            <help short="Name of the peering connection."/>
          </arg>
          <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
            <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix" group="">
            <help short="/125 IP address space to carve out customer addresses for global reach."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="expressRouteCircuitConnectionParameters">
            <prop type="object" name="properties.ipv6CircuitConnectionConfig"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRouteCircuitConnections_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="get">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRouteCircuitConnection_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix"/>
                      <prop type="string" name="authorizationKey"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="ipv6CircuitConnectionConfig">
                        <prop type="string" name="addressPrefix"/>
                        <prop readOnly="True" type="string" name="circuitConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Connecting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig" required="True">
                <prop type="string" name="addressPrefix" arg="$expressRouteCircuitConnectionParameters.properties.ipv6CircuitConnectionConfig.addressPrefix"/>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="ExpressRouteCircuitConnections_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="put">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRouteCircuitConnection_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2022-01-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}/connections/{}" version="2022-01-01" subresource="properties.ipv6CircuitConnectionConfig" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0vY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
            <help short="ExpressRoute circuit name."/>
          </arg>
          <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_2">
            <help short="Name of the peering connection."/>
          </arg>
          <arg type="string" var="$Path.peeringName" options="peering-name" required="True" group="" idPart="child_name_1">
            <help short="Name of BGP peering (i.e. AzurePrivatePeering)."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="expressRouteCircuitConnectionParameters">
            <prop type="object" name="properties.ipv6CircuitConnectionConfig"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRouteCircuitConnections_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="get">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRouteCircuitConnection_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix"/>
                      <prop type="string" name="authorizationKey"/>
                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                        <enum>
                          <item value="&quot;Connected&quot;"/>
                          <item value="&quot;Connecting&quot;"/>
                          <item value="&quot;Disconnected&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="ipv6CircuitConnectionConfig">
                        <prop type="string" name="addressPrefix"/>
                        <prop readOnly="True" type="string" name="circuitConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Connecting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="ExpressRouteCircuitConnections_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}">
            <request method="put">
              <path>
                <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
                <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
                <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-01-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRouteCircuitConnection_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
