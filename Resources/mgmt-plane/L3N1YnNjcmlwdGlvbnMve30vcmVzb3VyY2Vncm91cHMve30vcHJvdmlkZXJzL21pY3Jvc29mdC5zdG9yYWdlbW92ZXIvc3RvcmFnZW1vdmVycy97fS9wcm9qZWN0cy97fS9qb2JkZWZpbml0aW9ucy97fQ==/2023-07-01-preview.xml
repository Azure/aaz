<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagemover/storagemovers/{}/projects/{}/jobdefinitions/{}" version="2023-07-01-preview" swagger="mgmt-plane/storagemover/ResourceProviders/Microsoft.StorageMover/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZU1vdmVyL3N0b3JhZ2VNb3ZlcnMve3N0b3JhZ2VNb3Zlck5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vam9iRGVmaW5pdGlvbnMve2pvYkRlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
  <commandGroup name="storage-mover job-definition">
    <command name="show" version="2023-07-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagemover/storagemovers/{}/projects/{}/jobdefinitions/{}" version="2023-07-01-preview" swagger="mgmt-plane/storagemover/ResourceProviders/Microsoft.StorageMover/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZU1vdmVyL3N0b3JhZ2VNb3ZlcnMve3N0b3JhZ2VNb3Zlck5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vam9iRGVmaW5pdGlvbnMve2pvYkRlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.jobDefinitionName" options="job-definition-name name n" required="True" idPart="child_name_2">
          <help short="The name of the Job Definition resource."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" idPart="child_name_1">
          <help short="The name of the Project resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageMoverName" options="storage-mover-name" required="True" idPart="name">
          <help short="The name of the Storage Mover resource."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="JobDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="jobDefinitionName" arg="$Path.jobDefinitionName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageMoverName" arg="$Path.storageMoverName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageMover/storageMovers/{}/projects/{}/jobDefinitions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="agentName"/>
                    <prop readOnly="True" type="string" name="agentResourceId"/>
                    <prop type="string" name="copyMode" required="True">
                      <enum>
                        <item value="&quot;Additive&quot;"/>
                        <item value="&quot;Mirror&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="string" name="latestJobRunName"/>
                    <prop readOnly="True" type="string" name="latestJobRunResourceId"/>
                    <prop readOnly="True" type="string" name="latestJobRunStatus">
                      <enum>
                        <item value="&quot;CancelRequested&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Canceling&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Queued&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Started&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceName" required="True"/>
                    <prop readOnly="True" type="string" name="sourceResourceId"/>
                    <prop type="string" name="sourceSubpath"/>
                    <prop type="string" name="targetName" required="True"/>
                    <prop readOnly="True" type="string" name="targetResourceId"/>
                    <prop type="string" name="targetSubpath"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-07-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagemover/storagemovers/{}/projects/{}/jobdefinitions/{}" version="2023-07-01-preview" swagger="mgmt-plane/storagemover/ResourceProviders/Microsoft.StorageMover/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZU1vdmVyL3N0b3JhZ2VNb3ZlcnMve3N0b3JhZ2VNb3Zlck5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vam9iRGVmaW5pdGlvbnMve2pvYkRlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.jobDefinitionName" options="job-definition-name name n" required="True" idPart="child_name_2">
          <help short="The name of the Job Definition resource."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" idPart="child_name_1">
          <help short="The name of the Project resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageMoverName" options="storage-mover-name" required="True" idPart="name">
          <help short="The name of the Storage Mover resource."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="JobDefinitions_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}">
          <request method="delete">
            <path>
              <param type="string" name="jobDefinitionName" arg="$Path.jobDefinitionName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageMoverName" arg="$Path.storageMoverName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-07-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagemover/storagemovers/{}/projects/{}/jobdefinitions/{}" version="2023-07-01-preview" swagger="mgmt-plane/storagemover/ResourceProviders/Microsoft.StorageMover/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZU1vdmVyL3N0b3JhZ2VNb3ZlcnMve3N0b3JhZ2VNb3Zlck5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vam9iRGVmaW5pdGlvbnMve2pvYkRlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.jobDefinitionName" options="job-definition-name name n" required="True" idPart="child_name_2">
          <help short="The name of the Job Definition resource."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" idPart="child_name_1">
          <help short="The name of the Project resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageMoverName" options="storage-mover-name" required="True" idPart="name">
          <help short="The name of the Storage Mover resource."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$jobDefinition.properties.agentName" options="agent-name" group="Properties">
          <help short="Name of the Agent to assign for new Job Runs of this Job Definition."/>
        </arg>
        <arg type="string" var="$jobDefinition.properties.copyMode" options="copy-mode" required="True" group="Properties">
          <help short="Strategy to use for copy."/>
          <enum>
            <item name="Additive" value="&quot;Additive&quot;"/>
            <item name="Mirror" value="&quot;Mirror&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$jobDefinition.properties.description" options="description" group="Properties">
          <help short="A description for the Job Definition."/>
        </arg>
        <arg type="string" var="$jobDefinition.properties.sourceName" options="source-name" required="True" group="Properties">
          <help short="The name of the source Endpoint."/>
        </arg>
        <arg type="string" var="$jobDefinition.properties.sourceSubpath" options="source-subpath" group="Properties">
          <help short="The subpath to use when reading from the source Endpoint."/>
        </arg>
        <arg type="string" var="$jobDefinition.properties.targetName" options="target-name" required="True" group="Properties">
          <help short="The name of the target Endpoint."/>
        </arg>
        <arg type="string" var="$jobDefinition.properties.targetSubpath" options="target-subpath" group="Properties">
          <help short="The subpath to use when writing to the target Endpoint."/>
        </arg>
      </argGroup>
      <operation operationId="JobDefinitions_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="jobDefinitionName" arg="$Path.jobDefinitionName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageMoverName" arg="$Path.storageMoverName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="jobDefinition" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="agentName" arg="$jobDefinition.properties.agentName"/>
                    <prop type="string" name="copyMode" arg="$jobDefinition.properties.copyMode" required="True">
                      <enum>
                        <item value="&quot;Additive&quot;"/>
                        <item value="&quot;Mirror&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$jobDefinition.properties.description"/>
                    <prop type="string" name="sourceName" arg="$jobDefinition.properties.sourceName" required="True"/>
                    <prop type="string" name="sourceSubpath" arg="$jobDefinition.properties.sourceSubpath"/>
                    <prop type="string" name="targetName" arg="$jobDefinition.properties.targetName" required="True"/>
                    <prop type="string" name="targetSubpath" arg="$jobDefinition.properties.targetSubpath"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageMover/storageMovers/{}/projects/{}/jobDefinitions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="agentName"/>
                    <prop readOnly="True" type="string" name="agentResourceId"/>
                    <prop type="string" name="copyMode" required="True">
                      <enum>
                        <item value="&quot;Additive&quot;"/>
                        <item value="&quot;Mirror&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="string" name="latestJobRunName"/>
                    <prop readOnly="True" type="string" name="latestJobRunResourceId"/>
                    <prop readOnly="True" type="string" name="latestJobRunStatus">
                      <enum>
                        <item value="&quot;CancelRequested&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Canceling&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Queued&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Started&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceName" required="True"/>
                    <prop readOnly="True" type="string" name="sourceResourceId"/>
                    <prop type="string" name="sourceSubpath"/>
                    <prop type="string" name="targetName" required="True"/>
                    <prop readOnly="True" type="string" name="targetResourceId"/>
                    <prop type="string" name="targetSubpath"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagemover/storagemovers/{}/projects/{}/jobdefinitions/{}" version="2023-07-01-preview" swagger="mgmt-plane/storagemover/ResourceProviders/Microsoft.StorageMover/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZU1vdmVyL3N0b3JhZ2VNb3ZlcnMve3N0b3JhZ2VNb3Zlck5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vam9iRGVmaW5pdGlvbnMve2pvYkRlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.jobDefinitionName" options="job-definition-name name n" required="True" idPart="child_name_2">
          <help short="The name of the Job Definition resource."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" idPart="child_name_1">
          <help short="The name of the Project resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageMoverName" options="storage-mover-name" required="True" idPart="name">
          <help short="The name of the Storage Mover resource."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$jobDefinition.properties.agentName" options="agent-name" group="Properties">
          <help short="Name of the Agent to assign for new Job Runs of this Job Definition."/>
        </arg>
        <arg type="string" var="$jobDefinition.properties.copyMode" options="copy-mode" group="Properties">
          <help short="Strategy to use for copy."/>
          <enum>
            <item name="Additive" value="&quot;Additive&quot;"/>
            <item name="Mirror" value="&quot;Mirror&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$jobDefinition.properties.description" options="description" group="Properties">
          <help short="A description for the Job Definition."/>
        </arg>
      </argGroup>
      <operation operationId="JobDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="jobDefinitionName" arg="$Path.jobDefinitionName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageMoverName" arg="$Path.storageMoverName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="JobDefinition_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageMover/storageMovers/{}/projects/{}/jobDefinitions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="agentName"/>
                    <prop readOnly="True" type="string" name="agentResourceId"/>
                    <prop type="string" name="copyMode" required="True">
                      <enum>
                        <item value="&quot;Additive&quot;"/>
                        <item value="&quot;Mirror&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="string" name="latestJobRunName"/>
                    <prop readOnly="True" type="string" name="latestJobRunResourceId"/>
                    <prop readOnly="True" type="string" name="latestJobRunStatus">
                      <enum>
                        <item value="&quot;CancelRequested&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Canceling&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Queued&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Started&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceName" required="True"/>
                    <prop readOnly="True" type="string" name="sourceResourceId"/>
                    <prop type="string" name="sourceSubpath"/>
                    <prop type="string" name="targetName" required="True"/>
                    <prop readOnly="True" type="string" name="targetResourceId"/>
                    <prop type="string" name="targetSubpath"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="jobDefinition" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="agentName" arg="$jobDefinition.properties.agentName"/>
                <prop type="string" name="copyMode" arg="$jobDefinition.properties.copyMode" required="True">
                  <enum>
                    <item value="&quot;Additive&quot;"/>
                    <item value="&quot;Mirror&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$jobDefinition.properties.description"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="JobDefinitions_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="jobDefinitionName" arg="$Path.jobDefinitionName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageMoverName" arg="$Path.storageMoverName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@JobDefinition_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
