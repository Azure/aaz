<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.azureterraform/exportterraform" version="2023-07-01-preview" swagger="mgmt-plane/terraform/ResourceProviders/Microsoft.AzureTerraform/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF6dXJlVGVycmFmb3JtL2V4cG9ydFRlcnJhZm9ybQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
  <commandGroup name="terraform">
    <command name="export-terraform" version="2023-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.azureterraform/exportterraform" version="2023-07-01-preview" swagger="mgmt-plane/terraform/ResourceProviders/Microsoft.AzureTerraform/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF6dXJlVGVycmFmb3JtL2V4cG9ydFRlcnJhZm9ybQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="ExportParameter">
        <arg type="object" var="$exportParameter.ExportQuery" options="export-query" group="ExportParameter">
          <help short="Export parameter for resources queried by ARG (Azure Resource Graph)."/>
          <arg type="string" var="$exportParameter.ExportQuery.namePattern" options="name-pattern">
            <help short="The name pattern of the Terraform resources"/>
            <default value="&quot;res-&quot;"/>
          </arg>
          <arg type="string" var="$exportParameter.ExportQuery.query" options="query" required="True">
            <help short="The ARG where predicate. Note that you can combine multiple conditions in one `where` predicate, e.g. `resourceGroup =~ &quot;my-rg&quot; and type =~ &quot;microsoft.network/virtualnetworks&quot;`"/>
          </arg>
          <arg type="boolean" var="$exportParameter.ExportQuery.recursive" options="recursive">
            <help short="Whether to recursively list child resources of the query result"/>
            <default value="false"/>
          </arg>
        </arg>
        <arg type="object" var="$exportParameter.ExportResource" options="export-resource" group="ExportParameter">
          <help short="Export parameter for individual resources."/>
          <arg type="string" var="$exportParameter.ExportResource.namePattern" options="name-pattern">
            <help short="The name pattern of the Terraform resources"/>
            <default value="&quot;res-&quot;"/>
          </arg>
          <arg type="array<string>" var="$exportParameter.ExportResource.resourceIds" options="resource-ids" required="True">
            <help short="The id of the resource to be exported"/>
            <item type="string"/>
          </arg>
          <arg type="string" var="$exportParameter.ExportResource.resourceName" options="resource-name">
            <help short="The Terraform resource name. Only works when `resourceIds` contains only one item."/>
            <default value="&quot;res-0&quot;"/>
          </arg>
          <arg type="string" var="$exportParameter.ExportResource.resourceType" options="resource-type">
            <help short="The Terraform resource type. Only works when `resourceIds` contains only one item."/>
          </arg>
        </arg>
        <arg type="object" var="$exportParameter.ExportResourceGroup" options="export-resource-group" group="ExportParameter">
          <help short="Export parameter for a resource group."/>
          <arg type="string" var="$exportParameter.ExportResourceGroup.namePattern" options="name-pattern">
            <help short="The name pattern of the Terraform resources"/>
            <default value="&quot;res-&quot;"/>
          </arg>
          <arg type="string" var="$exportParameter.ExportResourceGroup.resourceGroupName" options="resource-group-name" required="True">
            <help short="The name of the resource group to be exported"/>
          </arg>
        </arg>
        <arg type="boolean" var="$exportParameter.fullProperties" options="full-properties" group="ExportParameter">
          <help short="Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid"/>
          <default value="true"/>
        </arg>
        <arg type="boolean" var="$exportParameter.maskSensitive" options="mask-sensitive" group="ExportParameter">
          <help short="Mask sensitive attributes in the Terraform configuration"/>
          <default value="true"/>
        </arg>
        <arg type="string" var="$exportParameter.targetProvider" options="target-provider" group="ExportParameter">
          <help short="The target Azure Terraform Provider"/>
          <default value="&quot;azurerm&quot;"/>
          <enum>
            <item name="azapi" value="&quot;azapi&quot;"/>
            <item name="azurerm" value="&quot;azurerm&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="ExportTerraform">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.AzureTerraform/exportTerraform">
          <request method="post">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="exportParameter" required="True" clientFlatten="True">
                  <prop type="boolean" name="fullProperties" arg="$exportParameter.fullProperties">
                    <default value="true"/>
                  </prop>
                  <prop type="boolean" name="maskSensitive" arg="$exportParameter.maskSensitive">
                    <default value="true"/>
                  </prop>
                  <prop type="string" name="targetProvider" arg="$exportParameter.targetProvider">
                    <default value="&quot;azurerm&quot;"/>
                    <enum>
                      <item value="&quot;azapi&quot;"/>
                      <item value="&quot;azurerm&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="type" required="True">
                    <enum>
                      <item arg="$exportParameter.ExportQuery" value="&quot;ExportQuery&quot;"/>
                      <item arg="$exportParameter.ExportResource" value="&quot;ExportResource&quot;"/>
                      <item arg="$exportParameter.ExportResourceGroup" value="&quot;ExportResourceGroup&quot;"/>
                    </enum>
                  </prop>
                  <discriminator property="type" value="ExportQuery">
                    <prop type="string" name="namePattern" arg="$exportParameter.ExportQuery.namePattern">
                      <default value="&quot;res-&quot;"/>
                    </prop>
                    <prop type="string" name="query" arg="$exportParameter.ExportQuery.query" required="True"/>
                    <prop type="boolean" name="recursive" arg="$exportParameter.ExportQuery.recursive">
                      <default value="false"/>
                    </prop>
                  </discriminator>
                  <discriminator property="type" value="ExportResource">
                    <prop type="string" name="namePattern" arg="$exportParameter.ExportResource.namePattern">
                      <default value="&quot;res-&quot;"/>
                    </prop>
                    <prop type="array<string>" name="resourceIds" arg="$exportParameter.ExportResource.resourceIds" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="resourceName" arg="$exportParameter.ExportResource.resourceName">
                      <default value="&quot;res-0&quot;"/>
                    </prop>
                    <prop type="string" name="resourceType" arg="$exportParameter.ExportResource.resourceType"/>
                  </discriminator>
                  <discriminator property="type" value="ExportResourceGroup">
                    <prop type="string" name="namePattern" arg="$exportParameter.ExportResourceGroup.namePattern">
                      <default value="&quot;res-&quot;"/>
                    </prop>
                    <prop type="string" name="resourceGroupName" arg="$exportParameter.ExportResourceGroup.resourceGroupName" required="True"/>
                  </discriminator>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="object" name="info">
                          <additionalProp readOnly="True" anyType="True"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="float64" name="percentComplete"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="configuration"/>
                    <prop type="array<@ErrorDetail_read>" name="errors">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop type="array<string>" name="skippedResources">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="dateTime" name="startTime"/>
                  <prop type="string" name="status"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
