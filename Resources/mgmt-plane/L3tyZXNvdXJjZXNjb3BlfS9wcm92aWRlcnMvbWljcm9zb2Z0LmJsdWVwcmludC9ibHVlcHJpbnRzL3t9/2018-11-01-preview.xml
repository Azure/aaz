<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="blueprint">
    <command name="show" version="2018-11-01-preview">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.blueprintName" options="name n" required="True" group="">
          <help short="Name of the blueprint definition."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
      </argGroup>
      <operation operationId="Blueprints_Get">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}">
          <request method="get">
            <path>
              <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue"/>
                          <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                            <prop type="string" name="description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location"/>
                          <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                    <prop type="string" name="targetScope" required="True">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2018-11-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.blueprintName" options="name n" required="True" group="">
          <help short="Name of the blueprint definition."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
      </argGroup>
      <operation operationId="Blueprints_Delete">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}">
          <request method="delete">
            <path>
              <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue"/>
                          <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                            <prop type="string" name="description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location"/>
                          <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                    <prop type="string" name="targetScope" required="True">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2018-11-01-preview">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.blueprintName" options="name n" required="True" group="">
          <help short="Name of the blueprint definition."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
        <arg type="string" var="$blueprint.properties.description" options="description" group="">
          <help short="Multi-line explain this resource."/>
          <format maxLength="500"/>
        </arg>
        <arg type="string" var="$blueprint.properties.displayName" options="display-name" group="">
          <help short="One-liner string explain this resource."/>
          <format maxLength="256"/>
        </arg>
        <arg type="object" var="$blueprint.properties.parameters" options="parameters p" group="">
          <help short="Parameters required by this blueprint definition. It can be a JSON                             string or JSON file path."/>
          <additionalProp>
            <item type="object">
              <arg type="array<string>" var="$blueprint.properties.parameters{}.allowedValues" options="allowed-values">
                <help short="Array of allowed values for this parameter."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$blueprint.properties.parameters{}.defaultValue" options="default-value">
                <help short="Default Value for this parameter."/>
              </arg>
              <arg type="string" var="$blueprint.properties.parameters{}.metadata.description" options="description" group="Metadata">
                <help short="Description of this parameter/resourceGroup."/>
                <format maxLength="500"/>
              </arg>
              <arg type="string" var="$blueprint.properties.parameters{}.metadata.displayName" options="display-name" group="Metadata">
                <help short="DisplayName of this parameter/resourceGroup."/>
                <format maxLength="256"/>
              </arg>
              <arg type="string" var="$blueprint.properties.parameters{}.metadata.strongType" options="strong-type" group="Metadata">
                <help short="StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location."/>
                <format maxLength="64"/>
              </arg>
              <arg type="string" var="$blueprint.properties.parameters{}.type" options="type" required="True">
                <help short="Allowed data types for Resource Manager template parameters."/>
                <enum>
                  <item name="array" value="&quot;array&quot;"/>
                  <item name="bool" value="&quot;bool&quot;"/>
                  <item name="int" value="&quot;int&quot;"/>
                  <item name="object" value="&quot;object&quot;"/>
                  <item name="secureObject" value="&quot;secureObject&quot;"/>
                  <item name="secureString" value="&quot;secureString&quot;"/>
                  <item name="string" value="&quot;string&quot;"/>
                </enum>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="object" var="$blueprint.properties.resourceGroups" options="resource-groups" group="">
          <help short="Resource group placeholders defined by this blueprint definition.                             Expected value: json-string/@json-file."/>
          <additionalProp>
            <item type="object">
              <arg type="array<string>" var="$blueprint.properties.resourceGroups{}.dependsOn" options="depends-on">
                <help short="Artifacts which need to be deployed before this resource group."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$blueprint.properties.resourceGroups{}.location" options="location">
                <help short="Location of this resourceGroup. Leave empty if the resource group location will be specified during the blueprint assignment."/>
              </arg>
              <arg type="string" var="$blueprint.properties.resourceGroups{}.metadata.description" options="description" group="Metadata">
                <help short="Description of this parameter/resourceGroup."/>
                <format maxLength="500"/>
              </arg>
              <arg type="string" var="$blueprint.properties.resourceGroups{}.metadata.displayName" options="display-name" group="Metadata">
                <help short="DisplayName of this parameter/resourceGroup."/>
                <format maxLength="256"/>
              </arg>
              <arg type="string" var="$blueprint.properties.resourceGroups{}.metadata.strongType" options="strong-type" group="Metadata">
                <help short="StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location."/>
                <format maxLength="64"/>
              </arg>
              <arg type="string" var="$blueprint.properties.resourceGroups{}.name" options="name">
                <help short="Name of this resourceGroup. Leave empty if the resource group name will be specified during the blueprint assignment."/>
              </arg>
              <arg type="object" var="$blueprint.properties.resourceGroups{}.tags" options="tags">
                <help short="Tags to be assigned to this resource group."/>
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$blueprint.properties.targetScope" options="target-scope" required="True" group="">
          <help short="The scope where this blueprint definition can be assigned."/>
          <enum>
            <item name="managementGroup" value="&quot;managementGroup&quot;"/>
            <item name="subscription" value="&quot;subscription&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Blueprints_CreateOrUpdate">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}">
          <request method="put">
            <path>
              <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="blueprint" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="description" arg="$blueprint.properties.description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName" arg="$blueprint.properties.displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters" arg="$blueprint.properties.parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues" arg="$blueprint.properties.parameters{}.allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue" arg="$blueprint.properties.parameters{}.defaultValue"/>
                          <prop type="object" name="metadata" clientFlatten="True">
                            <prop type="string" name="description" arg="$blueprint.properties.parameters{}.metadata.description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName" arg="$blueprint.properties.parameters{}.metadata.displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType" arg="$blueprint.properties.parameters{}.metadata.strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" arg="$blueprint.properties.parameters{}.type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups" arg="$blueprint.properties.resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn" arg="$blueprint.properties.resourceGroups{}.dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location" arg="$blueprint.properties.resourceGroups{}.location"/>
                          <prop type="object" name="metadata" clientFlatten="True">
                            <prop type="string" name="description" arg="$blueprint.properties.resourceGroups{}.metadata.description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName" arg="$blueprint.properties.resourceGroups{}.metadata.displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType" arg="$blueprint.properties.resourceGroups{}.metadata.strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="name" arg="$blueprint.properties.resourceGroups{}.name"/>
                          <prop type="object" name="tags" arg="$blueprint.properties.resourceGroups{}.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="targetScope" arg="$blueprint.properties.targetScope" required="True">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue"/>
                          <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                            <prop type="string" name="description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location"/>
                          <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                    <prop type="string" name="targetScope" required="True">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-11-01-preview">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.blueprintName" options="name n" required="True" group="">
          <help short="Name of the blueprint definition."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
        <arg nullable="True" type="string" var="$blueprint.properties.description" options="description" group="">
          <help short="Multi-line explain this resource."/>
          <format maxLength="500"/>
        </arg>
        <arg nullable="True" type="string" var="$blueprint.properties.displayName" options="display-name" group="">
          <help short="One-liner string explain this resource."/>
          <format maxLength="256"/>
        </arg>
        <arg nullable="True" type="object" var="$blueprint.properties.parameters" options="parameters p" group="">
          <help short="Parameters required by this blueprint definition. It can be a JSON                             string or JSON file path."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$blueprint.properties.parameters{}.allowedValues" options="allowed-values">
                <help short="Array of allowed values for this parameter."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.parameters{}.defaultValue" options="default-value">
                <help short="Default Value for this parameter."/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.parameters{}.metadata.description" options="description" group="Metadata">
                <help short="Description of this parameter/resourceGroup."/>
                <format maxLength="500"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.parameters{}.metadata.displayName" options="display-name" group="Metadata">
                <help short="DisplayName of this parameter/resourceGroup."/>
                <format maxLength="256"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.parameters{}.metadata.strongType" options="strong-type" group="Metadata">
                <help short="StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location."/>
                <format maxLength="64"/>
              </arg>
              <arg type="string" var="$blueprint.properties.parameters{}.type" options="type">
                <help short="Allowed data types for Resource Manager template parameters."/>
                <enum>
                  <item name="array" value="&quot;array&quot;"/>
                  <item name="bool" value="&quot;bool&quot;"/>
                  <item name="int" value="&quot;int&quot;"/>
                  <item name="object" value="&quot;object&quot;"/>
                  <item name="secureObject" value="&quot;secureObject&quot;"/>
                  <item name="secureString" value="&quot;secureString&quot;"/>
                  <item name="string" value="&quot;string&quot;"/>
                </enum>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg nullable="True" type="object" var="$blueprint.properties.resourceGroups" options="resource-groups" group="">
          <help short="Resource group placeholders defined by this blueprint definition."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$blueprint.properties.resourceGroups{}.dependsOn" options="depends-on">
                <help short="Artifacts which need to be deployed before this resource group."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.resourceGroups{}.location" options="location">
                <help short="Location of this resourceGroup. Leave empty if the resource group location will be specified during the blueprint assignment."/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.resourceGroups{}.metadata.description" options="description" group="Metadata">
                <help short="Description of this parameter/resourceGroup."/>
                <format maxLength="500"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.resourceGroups{}.metadata.displayName" options="display-name" group="Metadata">
                <help short="DisplayName of this parameter/resourceGroup."/>
                <format maxLength="256"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.resourceGroups{}.metadata.strongType" options="strong-type" group="Metadata">
                <help short="StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location."/>
                <format maxLength="64"/>
              </arg>
              <arg nullable="True" type="string" var="$blueprint.properties.resourceGroups{}.name" options="name">
                <help short="Name of this resourceGroup. Leave empty if the resource group name will be specified during the blueprint assignment."/>
              </arg>
              <arg nullable="True" type="object" var="$blueprint.properties.resourceGroups{}.tags" options="tags">
                <help short="Tags to be assigned to this resource group."/>
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$blueprint.properties.targetScope" options="target-scope" group="">
          <help short="The scope where this blueprint definition can be assigned."/>
          <enum>
            <item name="managementGroup" value="&quot;managementGroup&quot;"/>
            <item name="subscription" value="&quot;subscription&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Blueprints_Get">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}">
          <request method="get">
            <path>
              <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Blueprint_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue"/>
                          <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                            <prop type="string" name="description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location"/>
                          <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                    <prop type="string" name="targetScope" required="True">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="blueprint" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="description" arg="$blueprint.properties.description">
                  <format maxLength="500"/>
                </prop>
                <prop type="string" name="displayName" arg="$blueprint.properties.displayName">
                  <format maxLength="256"/>
                </prop>
                <prop type="object" name="parameters" arg="$blueprint.properties.parameters">
                  <additionalProp>
                    <item type="object">
                      <prop type="array<string>" name="allowedValues" arg="$blueprint.properties.parameters{}.allowedValues">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="defaultValue" arg="$blueprint.properties.parameters{}.defaultValue"/>
                      <prop type="object" name="metadata" clientFlatten="True">
                        <prop type="string" name="description" arg="$blueprint.properties.parameters{}.metadata.description">
                          <format maxLength="500"/>
                        </prop>
                        <prop type="string" name="displayName" arg="$blueprint.properties.parameters{}.metadata.displayName">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="string" name="strongType" arg="$blueprint.properties.parameters{}.metadata.strongType">
                          <format maxLength="64"/>
                        </prop>
                      </prop>
                      <prop type="string" name="type" arg="$blueprint.properties.parameters{}.type" required="True">
                        <enum>
                          <item value="&quot;array&quot;"/>
                          <item value="&quot;bool&quot;"/>
                          <item value="&quot;int&quot;"/>
                          <item value="&quot;object&quot;"/>
                          <item value="&quot;secureObject&quot;"/>
                          <item value="&quot;secureString&quot;"/>
                          <item value="&quot;string&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
                <prop type="object" name="resourceGroups" arg="$blueprint.properties.resourceGroups">
                  <additionalProp>
                    <item type="object">
                      <prop type="array<string>" name="dependsOn" arg="$blueprint.properties.resourceGroups{}.dependsOn">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="location" arg="$blueprint.properties.resourceGroups{}.location"/>
                      <prop type="object" name="metadata" clientFlatten="True">
                        <prop type="string" name="description" arg="$blueprint.properties.resourceGroups{}.metadata.description">
                          <format maxLength="500"/>
                        </prop>
                        <prop type="string" name="displayName" arg="$blueprint.properties.resourceGroups{}.metadata.displayName">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="string" name="strongType" arg="$blueprint.properties.resourceGroups{}.metadata.strongType">
                          <format maxLength="64"/>
                        </prop>
                      </prop>
                      <prop type="string" name="name" arg="$blueprint.properties.resourceGroups{}.name"/>
                      <prop type="object" name="tags" arg="$blueprint.properties.resourceGroups{}.tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
                <prop type="string" name="targetScope" arg="$blueprint.properties.targetScope" required="True">
                  <enum>
                    <item value="&quot;managementGroup&quot;"/>
                    <item value="&quot;subscription&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Blueprints_CreateOrUpdate">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}">
          <request method="put">
            <path>
              <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="@Blueprint_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
