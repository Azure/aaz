<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}/cryptocertificates" version="2025-08-02" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0vY3J5cHRvQ2VydGlmaWNhdGVz/V/MjAyNS0wOC0wMg=="/>
  <commandGroup name="firmwareanalysis firmware">
    <command name="crypto-certificate" version="2025-08-02" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}/cryptocertificates" version="2025-08-02" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0vY3J5cHRvQ2VydGlmaWNhdGVz/V/MjAyNS0wOC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firmwareId" options="firmware-id" required="True" idPart="child_name_1">
          <help short="The id of the firmware."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="name">
          <help short="The name of the firmware analysis workspace."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
      </argGroup>
      <operation operationId="CryptoCertificates_ListByFirmware">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoCertificates">
          <request method="get">
            <path>
              <param type="string" name="firmwareId" arg="$Path.firmwareId" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-08-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="string" name="certificateKeyAlgorithm"/>
                        <prop type="integer64" name="certificateKeySize"/>
                        <prop type="string" name="certificateName"/>
                        <prop type="string" name="certificateRole"/>
                        <prop type="array<string>" name="certificateUsage">
                          <item type="string">
                            <enum>
                              <item value="&quot;clientAuth&quot;"/>
                              <item value="&quot;codeSigning&quot;"/>
                              <item value="&quot;contentCommitment&quot;"/>
                              <item value="&quot;crlSign&quot;"/>
                              <item value="&quot;dataEncipherment&quot;"/>
                              <item value="&quot;decipherOnly&quot;"/>
                              <item value="&quot;digitalSignature&quot;"/>
                              <item value="&quot;emailProtection&quot;"/>
                              <item value="&quot;encipherOnly&quot;"/>
                              <item value="&quot;keyAgreement&quot;"/>
                              <item value="&quot;keyCertSign&quot;"/>
                              <item value="&quot;keyEncipherment&quot;"/>
                              <item value="&quot;nonRepudiation&quot;"/>
                              <item value="&quot;ocspSigning&quot;"/>
                              <item value="&quot;serverAuth&quot;"/>
                              <item value="&quot;timeStamping&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="string" name="cryptoCertId"/>
                        <prop type="string" name="encoding"/>
                        <prop type="dateTime" name="expirationDate">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="filePaths">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="fingerprint"/>
                        <prop type="boolean" name="isExpired"/>
                        <prop type="boolean" name="isSelfSigned"/>
                        <prop type="boolean" name="isShortKeySize"/>
                        <prop type="boolean" name="isWeakSignature"/>
                        <prop type="dateTime" name="issuedDate">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="@CryptoCertificateEntity_read" name="issuer"/>
                        <prop type="object" name="pairedKey">
                          <prop type="string" name="pairedKeyId"/>
                          <prop type="string" name="type"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Analyzing&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Extracting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Pending&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="serialNumber"/>
                        <prop type="string" name="signatureAlgorithm"/>
                        <prop type="object" name="subject" cls="CryptoCertificateEntity_read">
                          <prop type="string" name="commonName"/>
                          <prop type="string" name="country"/>
                          <prop type="string" name="organization"/>
                          <prop type="string" name="organizationalUnit"/>
                          <prop type="string" name="state"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
