<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.managednetworkfabric/networkmonitors" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hbmFnZWROZXR3b3JrRmFicmljL25ldHdvcmtNb25pdG9ycw==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3Jz/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
  <commandGroup name="networkfabric networkmonitor">
    <command name="list" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/providers/microsoft.managednetworkfabric/networkmonitors" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hbmFnZWROZXR3b3JrRmFicmljL25ldHdvcmtNb25pdG9ycw==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkmonitors" version="2024-06-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya01vbml0b3Jz/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_NetworkMonitors_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_NetworkMonitors_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_NetworkMonitors_ListBySubscription" operationId="NetworkMonitors_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkMonitors">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="string" name="administrativeState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;MAT&quot;"/>
                            <item value="&quot;RMA&quot;"/>
                            <item value="&quot;UnderMaintenance&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="annotation"/>
                        <prop type="object" name="bmpConfiguration">
                          <prop type="string" name="exportPolicy">
                            <default value="&quot;All&quot;"/>
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Post-Policy&quot;"/>
                              <item value="&quot;Pre-Policy&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="monitoredAddressFamilies">
                            <default value="[&quot;All&quot;]"/>
                            <item type="string">
                              <enum>
                                <item value="&quot;All&quot;"/>
                                <item value="&quot;ipv4Unicast&quot;"/>
                                <item value="&quot;ipv6Unicast&quot;"/>
                                <item value="&quot;vpnIpv4&quot;"/>
                                <item value="&quot;vpnIpv6&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<ResourceId>" name="monitoredNetworks">
                            <item type="ResourceId"/>
                          </prop>
                          <prop type="ResourceId" name="scopeResourceId"/>
                          <prop type="string" name="stationConfigurationState">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="stationConnectionMode">
                            <enum>
                              <item value="&quot;Active&quot;"/>
                              <item value="&quot;Passive&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stationConnectionProperties">
                            <prop type="integer32" name="keepaliveIdleTime">
                              <default value="180"/>
                              <format maximum="3600" minimum="1"/>
                            </prop>
                            <prop type="integer32" name="probeCount">
                              <default value="10"/>
                              <format maximum="100" minimum="1"/>
                            </prop>
                            <prop type="integer32" name="probeInterval">
                              <default value="60"/>
                              <format maximum="3600" minimum="1"/>
                            </prop>
                          </prop>
                          <prop type="string" name="stationIp"/>
                          <prop type="string" name="stationName"/>
                          <prop type="ResourceId" name="stationNetwork"/>
                          <prop type="integer32" name="stationPort">
                            <default value="5000"/>
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="configurationState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;DeferredControl&quot;"/>
                            <item value="&quot;Deprovisioned&quot;"/>
                            <item value="&quot;Deprovisioning&quot;"/>
                            <item value="&quot;ErrorDeprovisioning&quot;"/>
                            <item value="&quot;ErrorProvisioning&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;PendingCommit&quot;"/>
                            <item value="&quot;Provisioned&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Rejected&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="lastOperation">
                          <prop readOnly="True" type="string" name="details"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_NetworkMonitors_ListByResourceGroup" operationId="NetworkMonitors_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="string" name="administrativeState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;MAT&quot;"/>
                            <item value="&quot;RMA&quot;"/>
                            <item value="&quot;UnderMaintenance&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="annotation"/>
                        <prop type="object" name="bmpConfiguration">
                          <prop type="string" name="exportPolicy">
                            <default value="&quot;All&quot;"/>
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Post-Policy&quot;"/>
                              <item value="&quot;Pre-Policy&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="monitoredAddressFamilies">
                            <default value="[&quot;All&quot;]"/>
                            <item type="string">
                              <enum>
                                <item value="&quot;All&quot;"/>
                                <item value="&quot;ipv4Unicast&quot;"/>
                                <item value="&quot;ipv6Unicast&quot;"/>
                                <item value="&quot;vpnIpv4&quot;"/>
                                <item value="&quot;vpnIpv6&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<ResourceId>" name="monitoredNetworks">
                            <item type="ResourceId"/>
                          </prop>
                          <prop type="ResourceId" name="scopeResourceId"/>
                          <prop type="string" name="stationConfigurationState">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="stationConnectionMode">
                            <enum>
                              <item value="&quot;Active&quot;"/>
                              <item value="&quot;Passive&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stationConnectionProperties">
                            <prop type="integer32" name="keepaliveIdleTime">
                              <default value="180"/>
                              <format maximum="3600" minimum="1"/>
                            </prop>
                            <prop type="integer32" name="probeCount">
                              <default value="10"/>
                              <format maximum="100" minimum="1"/>
                            </prop>
                            <prop type="integer32" name="probeInterval">
                              <default value="60"/>
                              <format maximum="3600" minimum="1"/>
                            </prop>
                          </prop>
                          <prop type="string" name="stationIp"/>
                          <prop type="string" name="stationName"/>
                          <prop type="ResourceId" name="stationNetwork"/>
                          <prop type="integer32" name="stationPort">
                            <default value="5000"/>
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="configurationState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;DeferredControl&quot;"/>
                            <item value="&quot;Deprovisioned&quot;"/>
                            <item value="&quot;Deprovisioning&quot;"/>
                            <item value="&quot;ErrorDeprovisioning&quot;"/>
                            <item value="&quot;ErrorProvisioning&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;PendingCommit&quot;"/>
                            <item value="&quot;Provisioned&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Rejected&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="lastOperation">
                          <prop readOnly="True" type="string" name="details"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
