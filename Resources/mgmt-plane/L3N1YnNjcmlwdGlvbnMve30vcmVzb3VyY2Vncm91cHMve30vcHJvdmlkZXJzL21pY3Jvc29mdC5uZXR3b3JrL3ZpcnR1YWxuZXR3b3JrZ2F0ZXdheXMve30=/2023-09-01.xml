<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="network vnet-gateway">
    <command name="show" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="activeActive"/>
                    <prop type="string" name="adminState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="allowRemoteVnetTraffic"/>
                    <prop type="boolean" name="allowVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max"/>
                        <prop type="integer" name="min"/>
                      </prop>
                    </prop>
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="string" name="bgpPeeringAddress"/>
                      <prop type="array<object>" name="bgpPeeringAddresses">
                        <item type="object">
                          <prop type="array<string>" name="customBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="ipconfigurationId"/>
                          <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="integer32" name="peerWeight"/>
                    </prop>
                    <prop type="@AddressSpace_read" name="customRoutes"/>
                    <prop type="boolean" name="disableIPSecReplayProtection"/>
                    <prop type="boolean" name="enableBgp"/>
                    <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                    <prop type="boolean" name="enableDnsForwarding"/>
                    <prop type="boolean" name="enablePrivateIpAddress"/>
                    <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                    <prop type="string" name="gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;LocalGateway&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@SubResource_read" name="publicIPAddress"/>
                          <prop type="object" name="subnet" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="natRules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                            <item type="@VpnNatRuleMapping_read"/>
                          </prop>
                          <prop type="array<object>" name="internalMappings">
                            <item type="object" cls="VpnNatRuleMapping_read">
                              <prop type="string" name="addressSpace"/>
                              <prop type="string" name="portRange"/>
                            </item>
                          </prop>
                          <prop type="string" name="ipConfigurationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;EgressSnat&quot;"/>
                              <item value="&quot;IngressSnat&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop readOnly="True" type="integer32" name="capacity"/>
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="vNetExtendedLocationResourceId"/>
                    <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="isDefault" required="True"/>
                          <prop type="array<object>" name="policyMembers" required="True">
                            <item type="object">
                              <prop type="string" name="attributeType">
                                <enum>
                                  <item value="&quot;AADGroupId&quot;"/>
                                  <item value="&quot;CertificateGroupId&quot;"/>
                                  <item value="&quot;RadiusAzureGroupId&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="attributeValue"/>
                              <prop type="string" name="name"/>
                            </item>
                          </prop>
                          <prop type="integer32" name="priority" required="True"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                            <item type="@SubResource_read"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="string" name="aadAudience"/>
                      <prop type="string" name="aadIssuer"/>
                      <prop type="string" name="aadTenant"/>
                      <prop type="string" name="radiusServerAddress"/>
                      <prop type="string" name="radiusServerSecret"/>
                      <prop type="array<object>" name="radiusServers">
                        <item type="object">
                          <prop type="string" name="radiusServerAddress" required="True"/>
                          <prop type="integer64" name="radiusServerScore"/>
                          <prop type="string" name="radiusServerSecret"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vngClientConnectionConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                              <item type="@SubResource_read"/>
                            </prop>
                            <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnAuthenticationTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;AAD&quot;"/>
                            <item value="&quot;Certificate&quot;"/>
                            <item value="&quot;Radius&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                        <prop type="array<string>" name="addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientIpsecPolicies">
                        <item type="object">
                          <prop type="string" name="dhGroup" required="True">
                            <enum>
                              <item value="&quot;DHGroup1&quot;"/>
                              <item value="&quot;DHGroup14&quot;"/>
                              <item value="&quot;DHGroup2&quot;"/>
                              <item value="&quot;DHGroup2048&quot;"/>
                              <item value="&quot;DHGroup24&quot;"/>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                              <item value="&quot;SHA384&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="pfsGroup" required="True">
                            <enum>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;PFS1&quot;"/>
                              <item value="&quot;PFS14&quot;"/>
                              <item value="&quot;PFS2&quot;"/>
                              <item value="&quot;PFS2048&quot;"/>
                              <item value="&quot;PFS24&quot;"/>
                              <item value="&quot;PFSMM&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                          <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnClientProtocols">
                        <item type="string">
                          <enum>
                            <item value="&quot;IkeV2&quot;"/>
                            <item value="&quot;OpenVPN&quot;"/>
                            <item value="&quot;SSTP&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" required="True" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="publicCertData" required="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnGatewayGeneration">
                      <enum>
                        <item value="&quot;Generation1&quot;"/>
                        <item value="&quot;Generation2&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
        <arg type="string" var="$parameters.extendedLocation.name" options="edge-zone" group="">
          <help short="The name of edge zone."/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.allowRemoteVnetTraffic" options="allow-remote-vnet-traffic" group="">
          <help short="Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.allowVirtualWanTraffic" options="allow-vwan-traffic" group="">
          <help short="Configures this gateway to accept traffic from remote Virtual WAN networks."/>
        </arg>
        <arg type="integer" var="$parameters.properties.autoScaleConfiguration.bounds.max" options="max-scale-unit" group="">
          <help short="Maximum scale units for auto-scale configuration."/>
        </arg>
        <arg type="integer" var="$parameters.properties.autoScaleConfiguration.bounds.min" options="min-scale-unit" group="">
          <help short="Minimum scale units for auto-scale configuration."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enablePrivateIpAddress" options="enable-private-ip" group="">
          <help short="Whether private IP needs to be enabled on this gateway for connections or not."/>
        </arg>
        <arg type="string" var="$parameters.properties.gatewayDefaultSite.id" options="gateway-default-site" group="">
          <help short="Name or ID of a local network gateway representing a local network site with default routes."/>
        </arg>
        <arg type="string" var="$parameters.properties.gatewayType" options="gateway-type" group="">
          <help short="The gateway type."/>
          <default value="&quot;Vpn&quot;"/>
          <enum>
            <item name="ExpressRoute" value="&quot;ExpressRoute&quot;"/>
            <item name="LocalGateway" value="&quot;LocalGateway&quot;"/>
            <item name="Vpn" value="&quot;Vpn&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$parameters.properties.ipConfigurations" options="ip-configurations" group="">
          <help short="IP configurations for virtual network gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.ipConfigurations[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
              <help short="The private IP address allocation method."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id" options="public-ip-address" group="PublicIpAddress">
              <help short="The reference to the public IP resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="subnet" group="Subnet">
              <help short="test"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.sku.name" options="sku" group="">
          <help short="VNet gateway SKU."/>
          <default value="&quot;Basic&quot;"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="ErGw1AZ" value="&quot;ErGw1AZ&quot;"/>
            <item name="ErGw2AZ" value="&quot;ErGw2AZ&quot;"/>
            <item name="ErGw3AZ" value="&quot;ErGw3AZ&quot;"/>
            <item name="ErGwScale" value="&quot;ErGwScale&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="UltraPerformance" value="&quot;UltraPerformance&quot;"/>
            <item name="VpnGw1" value="&quot;VpnGw1&quot;"/>
            <item name="VpnGw1AZ" value="&quot;VpnGw1AZ&quot;"/>
            <item name="VpnGw2" value="&quot;VpnGw2&quot;"/>
            <item name="VpnGw2AZ" value="&quot;VpnGw2AZ&quot;"/>
            <item name="VpnGw3" value="&quot;VpnGw3&quot;"/>
            <item name="VpnGw3AZ" value="&quot;VpnGw3AZ&quot;"/>
            <item name="VpnGw4" value="&quot;VpnGw4&quot;"/>
            <item name="VpnGw4AZ" value="&quot;VpnGw4AZ&quot;"/>
            <item name="VpnGw5" value="&quot;VpnGw5&quot;"/>
            <item name="VpnGw5AZ" value="&quot;VpnGw5AZ&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.vNetExtendedLocationResourceId" options="edge-zone-vnet-id" group="">
          <help short="The Extended vnet resource id of the local gateway."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes" options="vpn-auth-type" group="">
          <help short="VPN authentication types enabled for the virtual network gateway."/>
          <item type="string">
            <enum>
              <item name="AAD" value="&quot;AAD&quot;"/>
              <item name="Certificate" value="&quot;Certificate&quot;"/>
              <item name="Radius" value="&quot;Radius&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.vpnGatewayGeneration" options="vpn-gateway-generation" group="">
          <help short="The generation for the virtual network gateway. vpn_gateway_generation should not be provided if gateway_type is not Vpn."/>
          <enum>
            <item name="Generation1" value="&quot;Generation1&quot;"/>
            <item name="Generation2" value="&quot;Generation2&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.vpnType" options="vpn-type" group="">
          <help short="VPN routing type."/>
          <default value="&quot;RouteBased&quot;"/>
          <enum>
            <item name="PolicyBased" value="&quot;PolicyBased&quot;"/>
            <item name="RouteBased" value="&quot;RouteBased&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="AAD Authentication">
        <arg type="string" var="$parameters.properties.vpnClientConfiguration.aadAudience" options="aad-audience" group="AAD Authentication">
          <help short="The AADAudience ID of the VirtualNetworkGateway."/>
        </arg>
        <arg type="string" var="$parameters.properties.vpnClientConfiguration.aadIssuer" options="aad-issuer" group="AAD Authentication">
          <help short="The AAD Issuer URI of the VirtualNetworkGateway."/>
        </arg>
        <arg type="string" var="$parameters.properties.vpnClientConfiguration.aadTenant" options="aad-tenant" group="AAD Authentication">
          <help short="The AAD Tenant URI of the VirtualNetworkGateway."/>
        </arg>
      </argGroup>
      <argGroup name="BGP Peering">
        <arg type="integer64" var="$parameters.properties.bgpSettings.asn" options="asn" group="BGP Peering">
          <help short="Autonomous System Number to use for the BGP settings."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg type="string" var="$parameters.properties.bgpSettings.bgpPeeringAddress" options="bgp-peering-address" group="BGP Peering">
          <help short="IP address to use for BGP peering."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.bgpSettings.peerWeight" options="peer-weight" group="BGP Peering">
          <help short="Weight (0-100) added to routes learned through BGP peering."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableBgp" options="enable-bgp" group="BGP Peering">
          <help short="Enable BGP (Border Gateway Protocol)."/>
        </arg>
      </argGroup>
      <argGroup name="BgpSettings">
        <arg type="array<object>" var="$parameters.properties.bgpSettings.bgpPeeringAddresses" options="bgp-peering-addresses" hide="True" group="BgpSettings">
          <help short="BGP peering address with IP configuration ID for virtual network gateway."/>
          <item type="object">
            <arg type="array<string>" var="$parameters.properties.bgpSettings.bgpPeeringAddresses[].customBgpIpAddresses" options="custom-bgp-ip-addresses">
              <help short="The list of custom BGP peering addresses which belong to IP configuration."/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$parameters.properties.bgpSettings.bgpPeeringAddresses[].ipconfigurationId" options="ipconfiguration-id">
              <help short="The ID of IP configuration which belongs to gateway."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Nat Rule">
        <arg type="array<object>" var="$parameters.properties.natRules" options="nat-rules" group="Nat Rule" singularOptions="nat-rule">
          <help short="VirtualNetworkGatewayNatRule Resource." lines="ip-config-id=/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default external-mappings=192.168.21.0/24 internal-mappings=10.4.0.0/24 internal-mappings: external-mappings: mode=EgressSnat ip-config-id: Configuration Required.The Required.The Required.The type=Static --nat-rule name=rule resource. direction resource resource internal external private address mapping private address mapping applies Usage: unique within group. access Source name: type: mode: name that This name used NAT. NAT. type rule NAT. NAT. this rule the can the for for The NAT for VPN The NAT VPN The NAT to. of is be to IP IP of of IP ID a a"/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.natRules[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.natRules[].name" options="name" group="">
              <help short="Required. The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.natRules[].properties.externalMappings" options="external-mappings-ip" group="Properties">
              <help short="The private IP address external mapping for NAT."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.natRules[].properties.externalMappings[].addressSpace" options="address-space">
                  <help short="Address space for Vpn NatRule mapping."/>
                </arg>
                <arg type="string" var="$parameters.properties.natRules[].properties.externalMappings[].portRange" options="port-range" hide="True" group="">
                  <help short="test"/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$parameters.properties.natRules[].properties.internalMappings" options="internal-mappings-ip" group="Properties">
              <help short="The private IP address internal mapping for NAT."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.natRules[].properties.internalMappings[].addressSpace" options="address-space">
                  <help short="Address space for Vpn NatRule mapping."/>
                </arg>
                <arg type="string" var="$parameters.properties.natRules[].properties.internalMappings[].portRange" options="port-range" hide="True" group="">
                  <help short="test"/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.natRules[].properties.ipConfigurationId" options="ip-config-id" group="Properties">
              <help short="The IP Configuration ID this NAT rule applies to."/>
            </arg>
            <arg type="string" var="$parameters.properties.natRules[].properties.mode" options="mode" group="Properties">
              <help short="The Source NAT direction of a VPN NAT."/>
              <enum>
                <item name="EgressSnat" value="&quot;EgressSnat&quot;"/>
                <item name="IngressSnat" value="&quot;IngressSnat&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.natRules[].properties.type" options="type" group="Properties">
              <help short="The IP Configuration ID this NAT rule applies to."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.extendedLocation.type" options="edge-zone-type" group="Properties">
          <help short="The type of the extended location."/>
          <enum>
            <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$parameters.properties.activeActive" options="active" group="Properties">
          <help short="ActiveActive flag."/>
        </arg>
        <arg type="string" var="$parameters.properties.adminState" options="admin-state" hide="True" group="Properties">
          <help short="Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$parameters.properties.disableIPSecReplayProtection" options="disable-ip-sec-replay-protection" hide="True" group="Properties">
          <help short="disableIPSecReplayProtection flag."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableBgpRouteTranslationForNat" options="enable-bgp-route-translation-for-nat" hide="True" group="Properties">
          <help short="EnableBgpRouteTranslationForNat flag."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableDnsForwarding" options="enable-dns-forwarding" hide="True" group="Properties">
          <help short="Whether dns forwarding is enabled or not."/>
        </arg>
        <arg type="string" var="$parameters.properties.sku.tier" options="sku-tier" group="Properties">
          <help short="Gateway SKU tier."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="ErGw1AZ" value="&quot;ErGw1AZ&quot;"/>
            <item name="ErGw2AZ" value="&quot;ErGw2AZ&quot;"/>
            <item name="ErGw3AZ" value="&quot;ErGw3AZ&quot;"/>
            <item name="ErGwScale" value="&quot;ErGwScale&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="UltraPerformance" value="&quot;UltraPerformance&quot;"/>
            <item name="VpnGw1" value="&quot;VpnGw1&quot;"/>
            <item name="VpnGw1AZ" value="&quot;VpnGw1AZ&quot;"/>
            <item name="VpnGw2" value="&quot;VpnGw2&quot;"/>
            <item name="VpnGw2AZ" value="&quot;VpnGw2AZ&quot;"/>
            <item name="VpnGw3" value="&quot;VpnGw3&quot;"/>
            <item name="VpnGw3AZ" value="&quot;VpnGw3AZ&quot;"/>
            <item name="VpnGw4" value="&quot;VpnGw4&quot;"/>
            <item name="VpnGw4AZ" value="&quot;VpnGw4AZ&quot;"/>
            <item name="VpnGw5" value="&quot;VpnGw5&quot;"/>
            <item name="VpnGw5AZ" value="&quot;VpnGw5AZ&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$parameters.properties.virtualNetworkGatewayPolicyGroups" options="virtual-network-gateway-policy-groups" hide="True" group="Properties">
          <help short="The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.isDefault" options="is-default" group="Properties">
              <help short="Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers" options="policy-members" group="Properties">
              <help short="Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeType" options="attribute-type">
                  <help short="The Vpn Policy member attribute type."/>
                  <enum>
                    <item name="AADGroupId" value="&quot;AADGroupId&quot;"/>
                    <item name="CertificateGroupId" value="&quot;CertificateGroupId&quot;"/>
                    <item name="RadiusAzureGroupId" value="&quot;RadiusAzureGroupId&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeValue" options="attribute-value">
                  <help short="The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember."/>
                </arg>
                <arg type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].name" options="name">
                  <help short="Name of the VirtualNetworkGatewayPolicyGroupMember."/>
                </arg>
              </item>
            </arg>
            <arg type="integer32" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.priority" options="priority" group="Properties">
              <help short="Priority for VirtualNetworkGatewayPolicyGroup."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Root Cert Authentication">
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates" options="vpn-client-root-certificates" group="Root Cert Authentication">
          <help short="VpnClientRootCertificate for virtual network gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" required="True" group="Properties">
              <help short="The certificate public data."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="VPN Client">
        <arg type="array<string>" var="$parameters.properties.customRoutes.addressPrefixes" options="custom-routes" group="VPN Client">
          <help short="Space-separated list of CIDR prefixes representing the custom routes address space specified by the customer for VpnClient."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerAddress" options="radius-server" group="VPN Client">
          <help short="Radius server address to connect to."/>
        </arg>
        <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerSecret" options="radius-secret" group="VPN Client">
          <help short="Radius secret to use for authentication."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes" options="address-prefixes" group="VPN Client" singularOptions="address-prefix">
          <help short="Space-separated list of CIDR prefixes representing the address space for the P2S Vpnclient."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientProtocols" options="client-protocol" group="VPN Client">
          <help short="Protocols to use for connecting.  Allowed values: IkeV2, OpenVPN, SSTP."/>
          <item type="string">
            <enum>
              <item name="IkeV2" value="&quot;IkeV2&quot;"/>
              <item name="OpenVPN" value="&quot;OpenVPN&quot;"/>
              <item name="SSTP" value="&quot;SSTP&quot;"/>
            </enum>
          </item>
        </arg>
      </argGroup>
      <argGroup name="VpnClientConfiguration">
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.radiusServers" options="radius-servers" hide="True" group="VpnClientConfiguration">
          <help short="The radiusServers property for multiple radius server configuration."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" options="radius-server-address" required="True">
              <help short="The address of this radius server."/>
            </arg>
            <arg type="integer64" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore" options="radius-server-score">
              <help short="The initial score assigned to this radius server."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret" options="radius-server-secret">
              <help short="The secret used for this radius server."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations" options="vng-client-connection-configurations" hide="True" group="VpnClientConfiguration">
          <help short="per ip address pool connection policy for virtual network gateway P2S client."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" options="virtual-network-gateway-policy-groups" group="Properties">
              <help short="List of references to virtualNetworkGatewayPolicyGroups"/>
              <item type="object" cls="SubResource_create">
                <arg type="string" var="@SubResource_create.id" options="id">
                  <help short="Resource ID."/>
                </arg>
              </item>
            </arg>
            <arg type="object" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" options="vpn-client-address-pool" group="Properties" cls="AddressSpace_create">
              <help short="The reference to the address space resource which represents Address space for P2S VpnClient."/>
              <arg type="array<string>" var="@AddressSpace_create.addressPrefixes" options="address-prefixes">
                <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
                <item type="string"/>
              </arg>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies" options="vpn-client-ipsec-policies" hide="True" group="VpnClientConfiguration">
          <help short="VpnClientIpsecPolicies for virtual network gateway P2S client."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" options="dh-group" required="True">
              <help short="The DH Group used in IKE Phase 1 for initial SA."/>
              <enum>
                <item name="DHGroup1" value="&quot;DHGroup1&quot;"/>
                <item name="DHGroup14" value="&quot;DHGroup14&quot;"/>
                <item name="DHGroup2" value="&quot;DHGroup2&quot;"/>
                <item name="DHGroup2048" value="&quot;DHGroup2048&quot;"/>
                <item name="DHGroup24" value="&quot;DHGroup24&quot;"/>
                <item name="ECP256" value="&quot;ECP256&quot;"/>
                <item name="ECP384" value="&quot;ECP384&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" options="ike-encryption" required="True">
              <help short="The IKE encryption algorithm (IKE phase 2)."/>
              <enum>
                <item name="AES128" value="&quot;AES128&quot;"/>
                <item name="AES192" value="&quot;AES192&quot;"/>
                <item name="AES256" value="&quot;AES256&quot;"/>
                <item name="DES" value="&quot;DES&quot;"/>
                <item name="DES3" value="&quot;DES3&quot;"/>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" options="ike-integrity" required="True">
              <help short="The IKE integrity algorithm (IKE phase 2)."/>
              <enum>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                <item name="MD5" value="&quot;MD5&quot;"/>
                <item name="SHA1" value="&quot;SHA1&quot;"/>
                <item name="SHA256" value="&quot;SHA256&quot;"/>
                <item name="SHA384" value="&quot;SHA384&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" options="ipsec-encryption" required="True">
              <help short="The IPSec encryption algorithm (IKE phase 1)."/>
              <enum>
                <item name="AES128" value="&quot;AES128&quot;"/>
                <item name="AES192" value="&quot;AES192&quot;"/>
                <item name="AES256" value="&quot;AES256&quot;"/>
                <item name="DES" value="&quot;DES&quot;"/>
                <item name="DES3" value="&quot;DES3&quot;"/>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" options="ipsec-integrity" required="True">
              <help short="The IPSec integrity algorithm (IKE phase 1)."/>
              <enum>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                <item name="MD5" value="&quot;MD5&quot;"/>
                <item name="SHA1" value="&quot;SHA1&quot;"/>
                <item name="SHA256" value="&quot;SHA256&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" options="pfs-group" required="True">
              <help short="The Pfs Group used in IKE Phase 2 for new child SA."/>
              <enum>
                <item name="ECP256" value="&quot;ECP256&quot;"/>
                <item name="ECP384" value="&quot;ECP384&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
                <item name="PFS1" value="&quot;PFS1&quot;"/>
                <item name="PFS14" value="&quot;PFS14&quot;"/>
                <item name="PFS2" value="&quot;PFS2&quot;"/>
                <item name="PFS2048" value="&quot;PFS2048&quot;"/>
                <item name="PFS24" value="&quot;PFS24&quot;"/>
                <item name="PFSMM" value="&quot;PFSMM&quot;"/>
              </enum>
            </arg>
            <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" options="sa-data-size-kilobytes" required="True">
              <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" options="sa-life-time-seconds" required="True">
              <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates" options="vpn-client-revoked-certificates" hide="True" group="VpnClientConfiguration">
          <help short="VpnClientRevokedCertificate for Virtual network gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="Properties">
              <help short="The revoked VPN client certificate thumbprint."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" arg="$parameters.extendedLocation.name"/>
                    <prop type="string" name="type" arg="$parameters.extendedLocation.type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="activeActive" arg="$parameters.properties.activeActive"/>
                    <prop type="string" name="adminState" arg="$parameters.properties.adminState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="allowRemoteVnetTraffic" arg="$parameters.properties.allowRemoteVnetTraffic"/>
                    <prop type="boolean" name="allowVirtualWanTraffic" arg="$parameters.properties.allowVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max" arg="$parameters.properties.autoScaleConfiguration.bounds.max"/>
                        <prop type="integer" name="min" arg="$parameters.properties.autoScaleConfiguration.bounds.min"/>
                      </prop>
                    </prop>
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn" arg="$parameters.properties.bgpSettings.asn">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="string" name="bgpPeeringAddress" arg="$parameters.properties.bgpSettings.bgpPeeringAddress"/>
                      <prop type="array<object>" name="bgpPeeringAddresses" arg="$parameters.properties.bgpSettings.bgpPeeringAddresses">
                        <item type="object">
                          <prop type="array<string>" name="customBgpIpAddresses" arg="$parameters.properties.bgpSettings.bgpPeeringAddresses[].customBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="ipconfigurationId" arg="$parameters.properties.bgpSettings.bgpPeeringAddresses[].ipconfigurationId"/>
                        </item>
                      </prop>
                      <prop type="integer32" name="peerWeight" arg="$parameters.properties.bgpSettings.peerWeight"/>
                    </prop>
                    <prop type="object" name="customRoutes">
                      <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.customRoutes.addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="disableIPSecReplayProtection" arg="$parameters.properties.disableIPSecReplayProtection"/>
                    <prop type="boolean" name="enableBgp" arg="$parameters.properties.enableBgp"/>
                    <prop type="boolean" name="enableBgpRouteTranslationForNat" arg="$parameters.properties.enableBgpRouteTranslationForNat"/>
                    <prop type="boolean" name="enableDnsForwarding" arg="$parameters.properties.enableDnsForwarding"/>
                    <prop type="boolean" name="enablePrivateIpAddress" arg="$parameters.properties.enablePrivateIpAddress"/>
                    <prop type="object" name="gatewayDefaultSite">
                      <prop type="string" name="id" arg="$parameters.properties.gatewayDefaultSite.id"/>
                    </prop>
                    <prop type="string" name="gatewayType" arg="$parameters.properties.gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;LocalGateway&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.ipConfigurations">
                      <item type="object">
                        <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                        <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="publicIPAddress">
                            <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id"/>
                          </prop>
                          <prop type="object" name="subnet">
                            <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="natRules" arg="$parameters.properties.natRules">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.natRules[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.natRules[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="externalMappings" arg="$parameters.properties.natRules[].properties.externalMappings">
                            <item type="object">
                              <prop type="string" name="addressSpace" arg="$parameters.properties.natRules[].properties.externalMappings[].addressSpace"/>
                              <prop type="string" name="portRange" arg="$parameters.properties.natRules[].properties.externalMappings[].portRange"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="internalMappings" arg="$parameters.properties.natRules[].properties.internalMappings">
                            <item type="object">
                              <prop type="string" name="addressSpace" arg="$parameters.properties.natRules[].properties.internalMappings[].addressSpace"/>
                              <prop type="string" name="portRange" arg="$parameters.properties.natRules[].properties.internalMappings[].portRange"/>
                            </item>
                          </prop>
                          <prop type="string" name="ipConfigurationId" arg="$parameters.properties.natRules[].properties.ipConfigurationId"/>
                          <prop type="string" name="mode" arg="$parameters.properties.natRules[].properties.mode">
                            <enum>
                              <item value="&quot;EgressSnat&quot;"/>
                              <item value="&quot;IngressSnat&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type" arg="$parameters.properties.natRules[].properties.type">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="sku">
                      <prop type="string" name="name" arg="$parameters.properties.sku.name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier" arg="$parameters.properties.sku.tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="vNetExtendedLocationResourceId" arg="$parameters.properties.vNetExtendedLocationResourceId"/>
                    <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups">
                      <item type="object">
                        <prop type="string" name="id" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].id"/>
                        <prop type="string" name="name" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="isDefault" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.isDefault" required="True"/>
                          <prop type="array<object>" name="policyMembers" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers" required="True">
                            <item type="object">
                              <prop type="string" name="attributeType" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeType">
                                <enum>
                                  <item value="&quot;AADGroupId&quot;"/>
                                  <item value="&quot;CertificateGroupId&quot;"/>
                                  <item value="&quot;RadiusAzureGroupId&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="attributeValue" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeValue"/>
                              <prop type="string" name="name" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].name"/>
                            </item>
                          </prop>
                          <prop type="integer32" name="priority" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.priority" required="True"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="string" name="aadAudience" arg="$parameters.properties.vpnClientConfiguration.aadAudience"/>
                      <prop type="string" name="aadIssuer" arg="$parameters.properties.vpnClientConfiguration.aadIssuer"/>
                      <prop type="string" name="aadTenant" arg="$parameters.properties.vpnClientConfiguration.aadTenant"/>
                      <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServerAddress"/>
                      <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServerSecret"/>
                      <prop type="array<object>" name="radiusServers" arg="$parameters.properties.vpnClientConfiguration.radiusServers">
                        <item type="object">
                          <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" required="True"/>
                          <prop type="integer64" name="radiusServerScore" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore"/>
                          <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vngClientConnectionConfigurations" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations">
                        <item type="object">
                          <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" required="True">
                              <item type="object" cls="SubResource_create">
                                <prop type="string" name="id" arg="@SubResource_create.id"/>
                              </item>
                            </prop>
                            <prop type="object" name="vpnClientAddressPool" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" required="True" cls="AddressSpace_create">
                              <prop type="array<string>" name="addressPrefixes" arg="@AddressSpace_create.addressPrefixes">
                                <item type="string"/>
                              </prop>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnAuthenticationTypes" arg="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;AAD&quot;"/>
                            <item value="&quot;Certificate&quot;"/>
                            <item value="&quot;Radius&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientAddressPool">
                        <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientIpsecPolicies" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies">
                        <item type="object">
                          <prop type="string" name="dhGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" required="True">
                            <enum>
                              <item value="&quot;DHGroup1&quot;"/>
                              <item value="&quot;DHGroup14&quot;"/>
                              <item value="&quot;DHGroup2&quot;"/>
                              <item value="&quot;DHGroup2048&quot;"/>
                              <item value="&quot;DHGroup24&quot;"/>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                              <item value="&quot;SHA384&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="pfsGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" required="True">
                            <enum>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;PFS1&quot;"/>
                              <item value="&quot;PFS14&quot;"/>
                              <item value="&quot;PFS2&quot;"/>
                              <item value="&quot;PFS2048&quot;"/>
                              <item value="&quot;PFS24&quot;"/>
                              <item value="&quot;PFSMM&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="saDataSizeKilobytes" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" required="True"/>
                          <prop type="integer32" name="saLifeTimeSeconds" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnClientProtocols" arg="$parameters.properties.vpnClientConfiguration.vpnClientProtocols">
                        <item type="string">
                          <enum>
                            <item value="&quot;IkeV2&quot;"/>
                            <item value="&quot;OpenVPN&quot;"/>
                            <item value="&quot;SSTP&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates">
                        <item type="object">
                          <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates">
                        <item type="object">
                          <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                          <prop type="object" name="properties" required="True" clientFlatten="True">
                            <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" required="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnGatewayGeneration" arg="$parameters.properties.vpnGatewayGeneration">
                      <enum>
                        <item value="&quot;Generation1&quot;"/>
                        <item value="&quot;Generation2&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vpnType" arg="$parameters.properties.vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="activeActive"/>
                    <prop type="string" name="adminState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="allowRemoteVnetTraffic"/>
                    <prop type="boolean" name="allowVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max"/>
                        <prop type="integer" name="min"/>
                      </prop>
                    </prop>
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="string" name="bgpPeeringAddress"/>
                      <prop type="array<object>" name="bgpPeeringAddresses">
                        <item type="object">
                          <prop type="array<string>" name="customBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="ipconfigurationId"/>
                          <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="integer32" name="peerWeight"/>
                    </prop>
                    <prop type="@AddressSpace_read" name="customRoutes"/>
                    <prop type="boolean" name="disableIPSecReplayProtection"/>
                    <prop type="boolean" name="enableBgp"/>
                    <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                    <prop type="boolean" name="enableDnsForwarding"/>
                    <prop type="boolean" name="enablePrivateIpAddress"/>
                    <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                    <prop type="string" name="gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;LocalGateway&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@SubResource_read" name="publicIPAddress"/>
                          <prop type="object" name="subnet" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="natRules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                            <item type="@VpnNatRuleMapping_read"/>
                          </prop>
                          <prop type="array<object>" name="internalMappings">
                            <item type="object" cls="VpnNatRuleMapping_read">
                              <prop type="string" name="addressSpace"/>
                              <prop type="string" name="portRange"/>
                            </item>
                          </prop>
                          <prop type="string" name="ipConfigurationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;EgressSnat&quot;"/>
                              <item value="&quot;IngressSnat&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop readOnly="True" type="integer32" name="capacity"/>
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="vNetExtendedLocationResourceId"/>
                    <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="isDefault" required="True"/>
                          <prop type="array<object>" name="policyMembers" required="True">
                            <item type="object">
                              <prop type="string" name="attributeType">
                                <enum>
                                  <item value="&quot;AADGroupId&quot;"/>
                                  <item value="&quot;CertificateGroupId&quot;"/>
                                  <item value="&quot;RadiusAzureGroupId&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="attributeValue"/>
                              <prop type="string" name="name"/>
                            </item>
                          </prop>
                          <prop type="integer32" name="priority" required="True"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                            <item type="@SubResource_read"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="string" name="aadAudience"/>
                      <prop type="string" name="aadIssuer"/>
                      <prop type="string" name="aadTenant"/>
                      <prop type="string" name="radiusServerAddress"/>
                      <prop type="string" name="radiusServerSecret"/>
                      <prop type="array<object>" name="radiusServers">
                        <item type="object">
                          <prop type="string" name="radiusServerAddress" required="True"/>
                          <prop type="integer64" name="radiusServerScore"/>
                          <prop type="string" name="radiusServerSecret"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vngClientConnectionConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                              <item type="@SubResource_read"/>
                            </prop>
                            <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnAuthenticationTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;AAD&quot;"/>
                            <item value="&quot;Certificate&quot;"/>
                            <item value="&quot;Radius&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                        <prop type="array<string>" name="addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientIpsecPolicies">
                        <item type="object">
                          <prop type="string" name="dhGroup" required="True">
                            <enum>
                              <item value="&quot;DHGroup1&quot;"/>
                              <item value="&quot;DHGroup14&quot;"/>
                              <item value="&quot;DHGroup2&quot;"/>
                              <item value="&quot;DHGroup2048&quot;"/>
                              <item value="&quot;DHGroup24&quot;"/>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                              <item value="&quot;SHA384&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="pfsGroup" required="True">
                            <enum>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;PFS1&quot;"/>
                              <item value="&quot;PFS14&quot;"/>
                              <item value="&quot;PFS2&quot;"/>
                              <item value="&quot;PFS2048&quot;"/>
                              <item value="&quot;PFS24&quot;"/>
                              <item value="&quot;PFSMM&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                          <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnClientProtocols">
                        <item type="string">
                          <enum>
                            <item value="&quot;IkeV2&quot;"/>
                            <item value="&quot;OpenVPN&quot;"/>
                            <item value="&quot;SSTP&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" required="True" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="publicCertData" required="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnGatewayGeneration">
                      <enum>
                        <item value="&quot;Generation1&quot;"/>
                        <item value="&quot;Generation2&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.allowRemoteVnetTraffic" options="allow-remote-vnet-traffic" group="">
          <help short="Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.allowVirtualWanTraffic" options="allow-vwan-traffic" group="">
          <help short="Configures this gateway to accept traffic from remote Virtual WAN networks."/>
        </arg>
        <arg nullable="True" type="integer" var="$parameters.properties.autoScaleConfiguration.bounds.max" options="max-scale-unit" group="">
          <help short="Maximum scale units for auto-scale configuration."/>
        </arg>
        <arg nullable="True" type="integer" var="$parameters.properties.autoScaleConfiguration.bounds.min" options="min-scale-unit" group="">
          <help short="Minimum scale units for auto-scale configuration."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enablePrivateIpAddress" options="enable-private-ip" group="">
          <help short="Whether private IP needs to be enabled on this gateway for connections or not."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.gatewayDefaultSite.id" options="gateway-default-site" group="">
          <help short="Name or ID of a local network gateway representing a local network site with default routes."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.gatewayType" options="gateway-type" group="">
          <help short="The gateway type."/>
          <enum>
            <item name="ExpressRoute" value="&quot;ExpressRoute&quot;"/>
            <item name="LocalGateway" value="&quot;LocalGateway&quot;"/>
            <item name="Vpn" value="&quot;Vpn&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.sku.name" options="sku" group="">
          <help short="VNet gateway SKU."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="ErGw1AZ" value="&quot;ErGw1AZ&quot;"/>
            <item name="ErGw2AZ" value="&quot;ErGw2AZ&quot;"/>
            <item name="ErGw3AZ" value="&quot;ErGw3AZ&quot;"/>
            <item name="ErGwScale" value="&quot;ErGwScale&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="UltraPerformance" value="&quot;UltraPerformance&quot;"/>
            <item name="VpnGw1" value="&quot;VpnGw1&quot;"/>
            <item name="VpnGw1AZ" value="&quot;VpnGw1AZ&quot;"/>
            <item name="VpnGw2" value="&quot;VpnGw2&quot;"/>
            <item name="VpnGw2AZ" value="&quot;VpnGw2AZ&quot;"/>
            <item name="VpnGw3" value="&quot;VpnGw3&quot;"/>
            <item name="VpnGw3AZ" value="&quot;VpnGw3AZ&quot;"/>
            <item name="VpnGw4" value="&quot;VpnGw4&quot;"/>
            <item name="VpnGw4AZ" value="&quot;VpnGw4AZ&quot;"/>
            <item name="VpnGw5" value="&quot;VpnGw5&quot;"/>
            <item name="VpnGw5AZ" value="&quot;VpnGw5AZ&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes" options="vpn-auth-type" group="">
          <help short="VPN authentication types enabled for the virtual network gateway."/>
          <item nullable="True" type="string">
            <enum>
              <item name="AAD" value="&quot;AAD&quot;"/>
              <item name="Certificate" value="&quot;Certificate&quot;"/>
              <item name="Radius" value="&quot;Radius&quot;"/>
            </enum>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnType" options="vpn-type" group="">
          <help short="VPN routing type."/>
          <enum>
            <item name="PolicyBased" value="&quot;PolicyBased&quot;"/>
            <item name="RouteBased" value="&quot;RouteBased&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="AAD Authentication">
        <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.aadAudience" options="aad-audience" group="AAD Authentication">
          <help short="The AADAudience ID of the VirtualNetworkGateway."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.aadIssuer" options="aad-issuer" group="AAD Authentication">
          <help short="The AAD Issuer URI of the VirtualNetworkGateway."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.aadTenant" options="aad-tenant" group="AAD Authentication">
          <help short="The AAD Tenant URI of the VirtualNetworkGateway."/>
        </arg>
      </argGroup>
      <argGroup name="BGP Peering">
        <arg nullable="True" type="integer64" var="$parameters.properties.bgpSettings.asn" options="asn" group="BGP Peering">
          <help short="Autonomous System Number to use for the BGP settings."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.bgpSettings.bgpPeeringAddress" options="bgp-peering-address" group="BGP Peering">
          <help short="IP address to use for BGP peering."/>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.bgpSettings.peerWeight" options="peer-weight" group="BGP Peering">
          <help short="Weight (0-100) added to routes learned through BGP peering."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableBgp" options="enable-bgp" group="BGP Peering">
          <help short="Enable BGP (Border Gateway Protocol)."/>
        </arg>
      </argGroup>
      <argGroup name="BgpSettings">
        <arg nullable="True" type="array<object>" var="$parameters.properties.bgpSettings.bgpPeeringAddresses" options="bgp-peering-addresses" hide="True" group="BgpSettings">
          <help short="BGP peering address with IP configuration ID for virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$parameters.properties.bgpSettings.bgpPeeringAddresses[].customBgpIpAddresses" options="custom-bgp-ip-addresses">
              <help short="The list of custom BGP peering addresses which belong to IP configuration."/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.bgpSettings.bgpPeeringAddresses[].ipconfigurationId" options="ipconfiguration-id">
              <help short="The ID of IP configuration which belongs to gateway."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.extendedLocation.name" options="edge-zone" hide="True" group="Properties">
          <help short="The name of edge zone."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.extendedLocation.type" options="edge-zone-type" hide="True" group="Properties">
          <help short="The type of the extended location."/>
          <default value="&quot;EdgeZone&quot;"/>
          <enum>
            <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.activeActive" options="active" group="Properties">
          <help short="ActiveActive flag."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.adminState" options="admin-state" hide="True" group="Properties">
          <help short="Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.disableIPSecReplayProtection" options="disable-ip-sec-replay-protection" hide="True" group="Properties">
          <help short="disableIPSecReplayProtection flag."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableBgpRouteTranslationForNat" options="enable-bgp-route-translation-for-nat" hide="True" group="Properties">
          <help short="EnableBgpRouteTranslationForNat flag."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableDnsForwarding" options="enable-dns-forwarding" hide="True" group="Properties">
          <help short="Whether dns forwarding is enabled or not."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations" options="ip-configurations" group="Properties">
          <help short="IP configurations for virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
              <help short="The private IP address allocation method."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties" cls="SubResource_update">
              <help short="The reference to the public IP resource."/>
              <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="subnet" group="Subnet">
              <help short="test"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.natRules" options="nat-rules" hide="True" group="Properties">
          <help short="NatRules for virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$parameters.properties.natRules[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.natRules[].name" options="name" group="">
              <help short="Required. The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="array<@VpnNatRuleMapping_update>" var="$parameters.properties.natRules[].properties.externalMappings" options="external-mappings" group="Properties">
              <help short="The private IP address external mapping for NAT."/>
              <item nullable="True" type="@VpnNatRuleMapping_update"/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.natRules[].properties.internalMappings" options="internal-mappings-ip" group="Properties">
              <help short="The private IP address internal mapping for NAT."/>
              <item nullable="True" type="object" cls="VpnNatRuleMapping_update">
                <arg nullable="True" type="string" var="@VpnNatRuleMapping_update.addressSpace" options="address-space">
                  <help short="Address space for Vpn NatRule mapping."/>
                </arg>
                <arg nullable="True" type="string" var="@VpnNatRuleMapping_update.portRange" options="port-range" hide="True" group="">
                  <help short="Port range for Vpn NatRule mapping."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.natRules[].properties.ipConfigurationId" options="ip-config-id" group="Properties">
              <help short="The IP Configuration ID this NAT rule applies to."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.natRules[].properties.mode" options="mode" group="Properties">
              <help short="The Source NAT direction of a VPN NAT."/>
              <enum>
                <item name="EgressSnat" value="&quot;EgressSnat&quot;"/>
                <item name="IngressSnat" value="&quot;IngressSnat&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.natRules[].properties.type" options="type" group="Properties">
              <help short="The IP Configuration ID this NAT rule applies to."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.sku.tier" options="sku-tier" group="Properties">
          <help short="Gateway SKU tier."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="ErGw1AZ" value="&quot;ErGw1AZ&quot;"/>
            <item name="ErGw2AZ" value="&quot;ErGw2AZ&quot;"/>
            <item name="ErGw3AZ" value="&quot;ErGw3AZ&quot;"/>
            <item name="ErGwScale" value="&quot;ErGwScale&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="UltraPerformance" value="&quot;UltraPerformance&quot;"/>
            <item name="VpnGw1" value="&quot;VpnGw1&quot;"/>
            <item name="VpnGw1AZ" value="&quot;VpnGw1AZ&quot;"/>
            <item name="VpnGw2" value="&quot;VpnGw2&quot;"/>
            <item name="VpnGw2AZ" value="&quot;VpnGw2AZ&quot;"/>
            <item name="VpnGw3" value="&quot;VpnGw3&quot;"/>
            <item name="VpnGw3AZ" value="&quot;VpnGw3AZ&quot;"/>
            <item name="VpnGw4" value="&quot;VpnGw4&quot;"/>
            <item name="VpnGw4AZ" value="&quot;VpnGw4AZ&quot;"/>
            <item name="VpnGw5" value="&quot;VpnGw5&quot;"/>
            <item name="VpnGw5AZ" value="&quot;VpnGw5AZ&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vNetExtendedLocationResourceId" options="edge-zone-vnet-id" hide="True" group="Properties">
          <help short="The Extended vnet resource id of the local gateway."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.virtualNetworkGatewayPolicyGroups" options="virtual-network-gateway-policy-groups" hide="True" group="Properties">
          <help short="The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.isDefault" options="is-default" group="Properties">
              <help short="Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers" options="policy-members" group="Properties">
              <help short="Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeType" options="attribute-type">
                  <help short="The Vpn Policy member attribute type."/>
                  <enum>
                    <item name="AADGroupId" value="&quot;AADGroupId&quot;"/>
                    <item name="CertificateGroupId" value="&quot;CertificateGroupId&quot;"/>
                    <item name="RadiusAzureGroupId" value="&quot;RadiusAzureGroupId&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeValue" options="attribute-value">
                  <help short="The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].name" options="name">
                  <help short="Name of the VirtualNetworkGatewayPolicyGroupMember."/>
                </arg>
              </item>
            </arg>
            <arg type="integer32" var="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.priority" options="priority" group="Properties">
              <help short="Priority for VirtualNetworkGatewayPolicyGroup."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnGatewayGeneration" options="vpn-gateway-generation" hide="True" group="Properties">
          <help short="The generation for the virtual network gateway. vpn_gateway_generation should not be provided if gateway_type is not Vpn."/>
          <enum>
            <item name="Generation1" value="&quot;Generation1&quot;"/>
            <item name="Generation2" value="&quot;Generation2&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Root Cert Authentication">
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates" options="vpn-client-root-certificates" group="Root Cert Authentication">
          <help short="VpnClientRootCertificate for virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" group="Properties">
              <help short="The certificate public data."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="VPN Client">
        <arg nullable="True" type="array<string>" var="$parameters.properties.customRoutes.addressPrefixes" options="custom-routes" group="VPN Client">
          <help short="Space-separated list of CIDR prefixes representing the custom routes address space specified by the customer for VpnClient."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerAddress" options="radius-server" group="VPN Client">
          <help short="Radius server address to connect to."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerSecret" options="radius-secret" group="VPN Client">
          <help short="Radius secret to use for authentication."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes" options="address-prefixes" group="VPN Client" singularOptions="address-prefix">
          <help short="Space-separated list of CIDR prefixes representing the address space for the P2S Vpnclient."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientProtocols" options="client-protocol" group="VPN Client">
          <help short="Protocols to use for connecting.  Allowed values: IkeV2, OpenVPN, SSTP."/>
          <item nullable="True" type="string">
            <enum>
              <item name="IkeV2" value="&quot;IkeV2&quot;"/>
              <item name="OpenVPN" value="&quot;OpenVPN&quot;"/>
              <item name="SSTP" value="&quot;SSTP&quot;"/>
            </enum>
          </item>
        </arg>
      </argGroup>
      <argGroup name="VpnClientConfiguration">
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.radiusServers" options="radius-servers" hide="True" group="VpnClientConfiguration">
          <help short="The radiusServers property for multiple radius server configuration."/>
          <item nullable="True" type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" options="radius-server-address">
              <help short="The address of this radius server."/>
            </arg>
            <arg nullable="True" type="integer64" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore" options="radius-server-score">
              <help short="The initial score assigned to this radius server."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret" options="radius-server-secret">
              <help short="The secret used for this radius server."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations" options="vng-client-connection-configurations" hide="True" group="VpnClientConfiguration">
          <help short="per ip address pool connection policy for virtual network gateway P2S client."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="array<@SubResource_update>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" options="virtual-network-gateway-policy-groups" group="Properties">
              <help short="List of references to virtualNetworkGatewayPolicyGroups"/>
              <item nullable="True" type="@SubResource_update"/>
            </arg>
            <arg type="object" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" options="vpn-client-address-pool" group="Properties" cls="AddressSpace_update">
              <help short="The reference to the address space resource which represents Address space for P2S VpnClient."/>
              <arg nullable="True" type="array<string>" var="@AddressSpace_update.addressPrefixes" options="address-prefixes">
                <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
                <item nullable="True" type="string"/>
              </arg>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies" options="vpn-client-ipsec-policies" group="VpnClientConfiguration">
          <help short="VpnClientIpsecPolicies for virtual network gateway P2S client."/>
          <item nullable="True" type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" options="dh-group">
              <help short="The DH Group used in IKE Phase 1 for initial SA."/>
              <enum>
                <item name="DHGroup1" value="&quot;DHGroup1&quot;"/>
                <item name="DHGroup14" value="&quot;DHGroup14&quot;"/>
                <item name="DHGroup2" value="&quot;DHGroup2&quot;"/>
                <item name="DHGroup2048" value="&quot;DHGroup2048&quot;"/>
                <item name="DHGroup24" value="&quot;DHGroup24&quot;"/>
                <item name="ECP256" value="&quot;ECP256&quot;"/>
                <item name="ECP384" value="&quot;ECP384&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" options="ike-encryption">
              <help short="The IKE encryption algorithm (IKE phase 2)."/>
              <enum>
                <item name="AES128" value="&quot;AES128&quot;"/>
                <item name="AES192" value="&quot;AES192&quot;"/>
                <item name="AES256" value="&quot;AES256&quot;"/>
                <item name="DES" value="&quot;DES&quot;"/>
                <item name="DES3" value="&quot;DES3&quot;"/>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" options="ike-integrity">
              <help short="The IKE integrity algorithm (IKE phase 2)."/>
              <enum>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                <item name="MD5" value="&quot;MD5&quot;"/>
                <item name="SHA1" value="&quot;SHA1&quot;"/>
                <item name="SHA256" value="&quot;SHA256&quot;"/>
                <item name="SHA384" value="&quot;SHA384&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" options="ipsec-encryption">
              <help short="The IPSec encryption algorithm (IKE phase 1)."/>
              <enum>
                <item name="AES128" value="&quot;AES128&quot;"/>
                <item name="AES192" value="&quot;AES192&quot;"/>
                <item name="AES256" value="&quot;AES256&quot;"/>
                <item name="DES" value="&quot;DES&quot;"/>
                <item name="DES3" value="&quot;DES3&quot;"/>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" options="ipsec-integrity">
              <help short="The IPSec integrity algorithm (IKE phase 1)."/>
              <enum>
                <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                <item name="MD5" value="&quot;MD5&quot;"/>
                <item name="SHA1" value="&quot;SHA1&quot;"/>
                <item name="SHA256" value="&quot;SHA256&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" options="pfs-group">
              <help short="The Pfs Group used in IKE Phase 2 for new child SA."/>
              <enum>
                <item name="ECP256" value="&quot;ECP256&quot;"/>
                <item name="ECP384" value="&quot;ECP384&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
                <item name="PFS1" value="&quot;PFS1&quot;"/>
                <item name="PFS14" value="&quot;PFS14&quot;"/>
                <item name="PFS2" value="&quot;PFS2&quot;"/>
                <item name="PFS2048" value="&quot;PFS2048&quot;"/>
                <item name="PFS24" value="&quot;PFS24&quot;"/>
                <item name="PFSMM" value="&quot;PFSMM&quot;"/>
              </enum>
            </arg>
            <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" options="sa-data-size-kilobytes">
              <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" options="sa-life-time-seconds">
              <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates" options="vpn-client-revoked-certificates" hide="True" group="VpnClientConfiguration">
          <help short="VpnClientRevokedCertificate for Virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="Properties">
              <help short="The revoked VPN client certificate thumbprint."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkGateway_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="activeActive"/>
                    <prop type="string" name="adminState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="allowRemoteVnetTraffic"/>
                    <prop type="boolean" name="allowVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max"/>
                        <prop type="integer" name="min"/>
                      </prop>
                    </prop>
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="string" name="bgpPeeringAddress"/>
                      <prop type="array<object>" name="bgpPeeringAddresses">
                        <item type="object">
                          <prop type="array<string>" name="customBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="ipconfigurationId"/>
                          <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="integer32" name="peerWeight"/>
                    </prop>
                    <prop type="@AddressSpace_read" name="customRoutes"/>
                    <prop type="boolean" name="disableIPSecReplayProtection"/>
                    <prop type="boolean" name="enableBgp"/>
                    <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                    <prop type="boolean" name="enableDnsForwarding"/>
                    <prop type="boolean" name="enablePrivateIpAddress"/>
                    <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                    <prop type="string" name="gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;LocalGateway&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@SubResource_read" name="publicIPAddress"/>
                          <prop type="object" name="subnet" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="natRules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                            <item type="@VpnNatRuleMapping_read"/>
                          </prop>
                          <prop type="array<object>" name="internalMappings">
                            <item type="object" cls="VpnNatRuleMapping_read">
                              <prop type="string" name="addressSpace"/>
                              <prop type="string" name="portRange"/>
                            </item>
                          </prop>
                          <prop type="string" name="ipConfigurationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;EgressSnat&quot;"/>
                              <item value="&quot;IngressSnat&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop readOnly="True" type="integer32" name="capacity"/>
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;ErGw1AZ&quot;"/>
                          <item value="&quot;ErGw2AZ&quot;"/>
                          <item value="&quot;ErGw3AZ&quot;"/>
                          <item value="&quot;ErGwScale&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;UltraPerformance&quot;"/>
                          <item value="&quot;VpnGw1&quot;"/>
                          <item value="&quot;VpnGw1AZ&quot;"/>
                          <item value="&quot;VpnGw2&quot;"/>
                          <item value="&quot;VpnGw2AZ&quot;"/>
                          <item value="&quot;VpnGw3&quot;"/>
                          <item value="&quot;VpnGw3AZ&quot;"/>
                          <item value="&quot;VpnGw4&quot;"/>
                          <item value="&quot;VpnGw4AZ&quot;"/>
                          <item value="&quot;VpnGw5&quot;"/>
                          <item value="&quot;VpnGw5AZ&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="vNetExtendedLocationResourceId"/>
                    <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="isDefault" required="True"/>
                          <prop type="array<object>" name="policyMembers" required="True">
                            <item type="object">
                              <prop type="string" name="attributeType">
                                <enum>
                                  <item value="&quot;AADGroupId&quot;"/>
                                  <item value="&quot;CertificateGroupId&quot;"/>
                                  <item value="&quot;RadiusAzureGroupId&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="attributeValue"/>
                              <prop type="string" name="name"/>
                            </item>
                          </prop>
                          <prop type="integer32" name="priority" required="True"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                            <item type="@SubResource_read"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="string" name="aadAudience"/>
                      <prop type="string" name="aadIssuer"/>
                      <prop type="string" name="aadTenant"/>
                      <prop type="string" name="radiusServerAddress"/>
                      <prop type="string" name="radiusServerSecret"/>
                      <prop type="array<object>" name="radiusServers">
                        <item type="object">
                          <prop type="string" name="radiusServerAddress" required="True"/>
                          <prop type="integer64" name="radiusServerScore"/>
                          <prop type="string" name="radiusServerSecret"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vngClientConnectionConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                              <item type="@SubResource_read"/>
                            </prop>
                            <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnAuthenticationTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;AAD&quot;"/>
                            <item value="&quot;Certificate&quot;"/>
                            <item value="&quot;Radius&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                        <prop type="array<string>" name="addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientIpsecPolicies">
                        <item type="object">
                          <prop type="string" name="dhGroup" required="True">
                            <enum>
                              <item value="&quot;DHGroup1&quot;"/>
                              <item value="&quot;DHGroup14&quot;"/>
                              <item value="&quot;DHGroup2&quot;"/>
                              <item value="&quot;DHGroup2048&quot;"/>
                              <item value="&quot;DHGroup24&quot;"/>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ikeIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                              <item value="&quot;SHA384&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecEncryption" required="True">
                            <enum>
                              <item value="&quot;AES128&quot;"/>
                              <item value="&quot;AES192&quot;"/>
                              <item value="&quot;AES256&quot;"/>
                              <item value="&quot;DES&quot;"/>
                              <item value="&quot;DES3&quot;"/>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="ipsecIntegrity" required="True">
                            <enum>
                              <item value="&quot;GCMAES128&quot;"/>
                              <item value="&quot;GCMAES192&quot;"/>
                              <item value="&quot;GCMAES256&quot;"/>
                              <item value="&quot;MD5&quot;"/>
                              <item value="&quot;SHA1&quot;"/>
                              <item value="&quot;SHA256&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="pfsGroup" required="True">
                            <enum>
                              <item value="&quot;ECP256&quot;"/>
                              <item value="&quot;ECP384&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;PFS1&quot;"/>
                              <item value="&quot;PFS14&quot;"/>
                              <item value="&quot;PFS2&quot;"/>
                              <item value="&quot;PFS2048&quot;"/>
                              <item value="&quot;PFS24&quot;"/>
                              <item value="&quot;PFSMM&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                          <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="vpnClientProtocols">
                        <item type="string">
                          <enum>
                            <item value="&quot;IkeV2&quot;"/>
                            <item value="&quot;OpenVPN&quot;"/>
                            <item value="&quot;SSTP&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" required="True" clientFlatten="True">
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="publicCertData" required="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnGatewayGeneration">
                      <enum>
                        <item value="&quot;Generation1&quot;"/>
                        <item value="&quot;Generation2&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="extendedLocation">
                <prop type="string" name="name" arg="$parameters.extendedLocation.name"/>
                <prop type="string" name="type" arg="$parameters.extendedLocation.type">
                  <enum>
                    <item value="&quot;EdgeZone&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="boolean" name="activeActive" arg="$parameters.properties.activeActive"/>
                <prop type="string" name="adminState" arg="$parameters.properties.adminState">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="allowRemoteVnetTraffic" arg="$parameters.properties.allowRemoteVnetTraffic"/>
                <prop type="boolean" name="allowVirtualWanTraffic" arg="$parameters.properties.allowVirtualWanTraffic"/>
                <prop type="object" name="autoScaleConfiguration">
                  <prop type="object" name="bounds">
                    <prop type="integer" name="max" arg="$parameters.properties.autoScaleConfiguration.bounds.max"/>
                    <prop type="integer" name="min" arg="$parameters.properties.autoScaleConfiguration.bounds.min"/>
                  </prop>
                </prop>
                <prop type="object" name="bgpSettings">
                  <prop type="integer64" name="asn" arg="$parameters.properties.bgpSettings.asn">
                    <format maximum="4294967295" minimum="0"/>
                  </prop>
                  <prop type="string" name="bgpPeeringAddress" arg="$parameters.properties.bgpSettings.bgpPeeringAddress"/>
                  <prop type="array<object>" name="bgpPeeringAddresses" arg="$parameters.properties.bgpSettings.bgpPeeringAddresses">
                    <item type="object">
                      <prop type="array<string>" name="customBgpIpAddresses" arg="$parameters.properties.bgpSettings.bgpPeeringAddresses[].customBgpIpAddresses">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="ipconfigurationId" arg="$parameters.properties.bgpSettings.bgpPeeringAddresses[].ipconfigurationId"/>
                    </item>
                  </prop>
                  <prop type="integer32" name="peerWeight" arg="$parameters.properties.bgpSettings.peerWeight"/>
                </prop>
                <prop type="object" name="customRoutes">
                  <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.customRoutes.addressPrefixes">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="boolean" name="disableIPSecReplayProtection" arg="$parameters.properties.disableIPSecReplayProtection"/>
                <prop type="boolean" name="enableBgp" arg="$parameters.properties.enableBgp"/>
                <prop type="boolean" name="enableBgpRouteTranslationForNat" arg="$parameters.properties.enableBgpRouteTranslationForNat"/>
                <prop type="boolean" name="enableDnsForwarding" arg="$parameters.properties.enableDnsForwarding"/>
                <prop type="boolean" name="enablePrivateIpAddress" arg="$parameters.properties.enablePrivateIpAddress"/>
                <prop type="object" name="gatewayDefaultSite">
                  <prop type="string" name="id" arg="$parameters.properties.gatewayDefaultSite.id"/>
                </prop>
                <prop type="string" name="gatewayType" arg="$parameters.properties.gatewayType">
                  <enum>
                    <item value="&quot;ExpressRoute&quot;"/>
                    <item value="&quot;LocalGateway&quot;"/>
                    <item value="&quot;Vpn&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.ipConfigurations">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                        <enum>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="publicIPAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress" cls="SubResource_update">
                        <prop type="string" name="id" arg="@SubResource_update.id"/>
                      </prop>
                      <prop type="object" name="subnet">
                        <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id"/>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="natRules" arg="$parameters.properties.natRules">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$parameters.properties.natRules[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.natRules[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<@VpnNatRuleMapping_update>" name="externalMappings" arg="$parameters.properties.natRules[].properties.externalMappings">
                        <item type="@VpnNatRuleMapping_update"/>
                      </prop>
                      <prop type="array<object>" name="internalMappings" arg="$parameters.properties.natRules[].properties.internalMappings">
                        <item type="object" cls="VpnNatRuleMapping_update">
                          <prop type="string" name="addressSpace" arg="@VpnNatRuleMapping_update.addressSpace"/>
                          <prop type="string" name="portRange" arg="@VpnNatRuleMapping_update.portRange"/>
                        </item>
                      </prop>
                      <prop type="string" name="ipConfigurationId" arg="$parameters.properties.natRules[].properties.ipConfigurationId"/>
                      <prop type="string" name="mode" arg="$parameters.properties.natRules[].properties.mode">
                        <enum>
                          <item value="&quot;EgressSnat&quot;"/>
                          <item value="&quot;IngressSnat&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="type" arg="$parameters.properties.natRules[].properties.type">
                        <enum>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="sku">
                  <prop type="string" name="name" arg="$parameters.properties.sku.name">
                    <enum>
                      <item value="&quot;Basic&quot;"/>
                      <item value="&quot;ErGw1AZ&quot;"/>
                      <item value="&quot;ErGw2AZ&quot;"/>
                      <item value="&quot;ErGw3AZ&quot;"/>
                      <item value="&quot;ErGwScale&quot;"/>
                      <item value="&quot;HighPerformance&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                      <item value="&quot;UltraPerformance&quot;"/>
                      <item value="&quot;VpnGw1&quot;"/>
                      <item value="&quot;VpnGw1AZ&quot;"/>
                      <item value="&quot;VpnGw2&quot;"/>
                      <item value="&quot;VpnGw2AZ&quot;"/>
                      <item value="&quot;VpnGw3&quot;"/>
                      <item value="&quot;VpnGw3AZ&quot;"/>
                      <item value="&quot;VpnGw4&quot;"/>
                      <item value="&quot;VpnGw4AZ&quot;"/>
                      <item value="&quot;VpnGw5&quot;"/>
                      <item value="&quot;VpnGw5AZ&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="tier" arg="$parameters.properties.sku.tier">
                    <enum>
                      <item value="&quot;Basic&quot;"/>
                      <item value="&quot;ErGw1AZ&quot;"/>
                      <item value="&quot;ErGw2AZ&quot;"/>
                      <item value="&quot;ErGw3AZ&quot;"/>
                      <item value="&quot;ErGwScale&quot;"/>
                      <item value="&quot;HighPerformance&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                      <item value="&quot;UltraPerformance&quot;"/>
                      <item value="&quot;VpnGw1&quot;"/>
                      <item value="&quot;VpnGw1AZ&quot;"/>
                      <item value="&quot;VpnGw2&quot;"/>
                      <item value="&quot;VpnGw2AZ&quot;"/>
                      <item value="&quot;VpnGw3&quot;"/>
                      <item value="&quot;VpnGw3AZ&quot;"/>
                      <item value="&quot;VpnGw4&quot;"/>
                      <item value="&quot;VpnGw4AZ&quot;"/>
                      <item value="&quot;VpnGw5&quot;"/>
                      <item value="&quot;VpnGw5AZ&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="vNetExtendedLocationResourceId" arg="$parameters.properties.vNetExtendedLocationResourceId"/>
                <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="boolean" name="isDefault" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.isDefault" required="True"/>
                      <prop type="array<object>" name="policyMembers" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers" required="True">
                        <item type="object">
                          <prop type="string" name="attributeType" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeType">
                            <enum>
                              <item value="&quot;AADGroupId&quot;"/>
                              <item value="&quot;CertificateGroupId&quot;"/>
                              <item value="&quot;RadiusAzureGroupId&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="attributeValue" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].attributeValue"/>
                          <prop type="string" name="name" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.policyMembers[].name"/>
                        </item>
                      </prop>
                      <prop type="integer32" name="priority" arg="$parameters.properties.virtualNetworkGatewayPolicyGroups[].properties.priority" required="True"/>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="vpnClientConfiguration">
                  <prop type="string" name="aadAudience" arg="$parameters.properties.vpnClientConfiguration.aadAudience"/>
                  <prop type="string" name="aadIssuer" arg="$parameters.properties.vpnClientConfiguration.aadIssuer"/>
                  <prop type="string" name="aadTenant" arg="$parameters.properties.vpnClientConfiguration.aadTenant"/>
                  <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServerAddress"/>
                  <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServerSecret"/>
                  <prop type="array<object>" name="radiusServers" arg="$parameters.properties.vpnClientConfiguration.radiusServers">
                    <item type="object">
                      <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" required="True"/>
                      <prop type="integer64" name="radiusServerScore" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore"/>
                      <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="vngClientConnectionConfigurations" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations">
                    <item type="object">
                      <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<@SubResource_update>" name="virtualNetworkGatewayPolicyGroups" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" required="True">
                          <item type="@SubResource_update"/>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" required="True" cls="AddressSpace_update">
                          <prop type="array<string>" name="addressPrefixes" arg="@AddressSpace_update.addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<string>" name="vpnAuthenticationTypes" arg="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes">
                    <item type="string">
                      <enum>
                        <item value="&quot;AAD&quot;"/>
                        <item value="&quot;Certificate&quot;"/>
                        <item value="&quot;Radius&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="object" name="vpnClientAddressPool">
                    <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="array<object>" name="vpnClientIpsecPolicies" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies">
                    <item type="object">
                      <prop type="string" name="dhGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" required="True">
                        <enum>
                          <item value="&quot;DHGroup1&quot;"/>
                          <item value="&quot;DHGroup14&quot;"/>
                          <item value="&quot;DHGroup2&quot;"/>
                          <item value="&quot;DHGroup2048&quot;"/>
                          <item value="&quot;DHGroup24&quot;"/>
                          <item value="&quot;ECP256&quot;"/>
                          <item value="&quot;ECP384&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ikeEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" required="True">
                        <enum>
                          <item value="&quot;AES128&quot;"/>
                          <item value="&quot;AES192&quot;"/>
                          <item value="&quot;AES256&quot;"/>
                          <item value="&quot;DES&quot;"/>
                          <item value="&quot;DES3&quot;"/>
                          <item value="&quot;GCMAES128&quot;"/>
                          <item value="&quot;GCMAES256&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ikeIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" required="True">
                        <enum>
                          <item value="&quot;GCMAES128&quot;"/>
                          <item value="&quot;GCMAES256&quot;"/>
                          <item value="&quot;MD5&quot;"/>
                          <item value="&quot;SHA1&quot;"/>
                          <item value="&quot;SHA256&quot;"/>
                          <item value="&quot;SHA384&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipsecEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" required="True">
                        <enum>
                          <item value="&quot;AES128&quot;"/>
                          <item value="&quot;AES192&quot;"/>
                          <item value="&quot;AES256&quot;"/>
                          <item value="&quot;DES&quot;"/>
                          <item value="&quot;DES3&quot;"/>
                          <item value="&quot;GCMAES128&quot;"/>
                          <item value="&quot;GCMAES192&quot;"/>
                          <item value="&quot;GCMAES256&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipsecIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" required="True">
                        <enum>
                          <item value="&quot;GCMAES128&quot;"/>
                          <item value="&quot;GCMAES192&quot;"/>
                          <item value="&quot;GCMAES256&quot;"/>
                          <item value="&quot;MD5&quot;"/>
                          <item value="&quot;SHA1&quot;"/>
                          <item value="&quot;SHA256&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="pfsGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" required="True">
                        <enum>
                          <item value="&quot;ECP256&quot;"/>
                          <item value="&quot;ECP384&quot;"/>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;PFS1&quot;"/>
                          <item value="&quot;PFS14&quot;"/>
                          <item value="&quot;PFS2&quot;"/>
                          <item value="&quot;PFS2048&quot;"/>
                          <item value="&quot;PFS24&quot;"/>
                          <item value="&quot;PFSMM&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="saDataSizeKilobytes" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" required="True"/>
                      <prop type="integer32" name="saLifeTimeSeconds" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<string>" name="vpnClientProtocols" arg="$parameters.properties.vpnClientConfiguration.vpnClientProtocols">
                    <item type="string">
                      <enum>
                        <item value="&quot;IkeV2&quot;"/>
                        <item value="&quot;OpenVPN&quot;"/>
                        <item value="&quot;SSTP&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="array<object>" name="vpnClientRevokedCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates">
                    <item type="object">
                      <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="vpnClientRootCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates">
                    <item type="object">
                      <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" required="True"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="vpnGatewayGeneration" arg="$parameters.properties.vpnGatewayGeneration">
                  <enum>
                    <item value="&quot;Generation1&quot;"/>
                    <item value="&quot;Generation2&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="vpnType" arg="$parameters.properties.vpnType">
                  <enum>
                    <item value="&quot;PolicyBased&quot;"/>
                    <item value="&quot;RouteBased&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualNetworkGateway_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="aad">
      <command name="create" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <argGroup name="AAD Authentication">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.aadAudience" options="audience" group="AAD Authentication">
            <help short="The AADAudience ID of the VirtualNetworkGateway."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.aadIssuer" options="issuer" group="AAD Authentication">
            <help short="The AADIssuer URI of the VirtualNetworkGateway."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.aadTenant" options="tenant" group="AAD Authentication">
            <help short="The AADTenant URI of the VirtualNetworkGateway."/>
          </arg>
        </argGroup>
        <argGroup name="Parameters.properties.vpnClientConfiguration">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerAddress" options="radius-server-address" group="Parameters.properties.vpnClientConfiguration">
            <help short="The radius server address property of the VirtualNetworkGateway resource for vpn client connection."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerSecret" options="radius-server-secret" group="Parameters.properties.vpnClientConfiguration">
            <help short="The radius secret property of the VirtualNetworkGateway resource for vpn client connection."/>
          </arg>
          <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.radiusServers" options="radius-servers" group="Parameters.properties.vpnClientConfiguration">
            <help short="The radiusServers property for multiple radius server configuration."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" options="radius-server-address" required="True">
                <help short="The address of this radius server."/>
              </arg>
              <arg type="integer64" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore" options="radius-server-score">
                <help short="The initial score assigned to this radius server."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret" options="radius-server-secret">
                <help short="The secret used for this radius server."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations" options="vng-client-connection-configurations" group="Parameters.properties.vpnClientConfiguration">
            <help short="per ip address pool connection policy for virtual network gateway P2S client."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id" options="id">
                <help short="Resource ID."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" options="virtual-network-gateway-policy-groups" group="Properties">
                <help short="List of references to virtualNetworkGatewayPolicyGroups"/>
                <item type="object" cls="SubResource_update">
                  <arg type="string" var="@SubResource_update.id" options="id">
                    <help short="Resource ID."/>
                  </arg>
                </item>
              </arg>
              <arg type="object" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" options="vpn-client-address-pool" group="Properties" cls="AddressSpace_update">
                <help short="The reference to the address space resource which represents Address space for P2S VpnClient."/>
                <arg type="array<string>" var="@AddressSpace_update.addressPrefixes" options="address-prefixes">
                  <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
                  <item type="string"/>
                </arg>
              </arg>
            </item>
          </arg>
          <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes" options="vpn-authentication-types" group="Parameters.properties.vpnClientConfiguration">
            <help short="VPN authentication types for the virtual network gateway.."/>
            <item type="string">
              <enum>
                <item name="AAD" value="&quot;AAD&quot;"/>
                <item name="Certificate" value="&quot;Certificate&quot;"/>
                <item name="Radius" value="&quot;Radius&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="object" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool" options="vpn-client-address-pool" group="Parameters.properties.vpnClientConfiguration">
            <help short="The reference to the address space resource which represents Address space for P2S VpnClient."/>
            <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes" options="address-prefixes">
              <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
              <item type="string"/>
            </arg>
          </arg>
          <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies" options="vpn-client-ipsec-policies" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientIpsecPolicies for virtual network gateway P2S client."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" options="dh-group" required="True">
                <help short="The DH Group used in IKE Phase 1 for initial SA."/>
                <enum>
                  <item name="DHGroup1" value="&quot;DHGroup1&quot;"/>
                  <item name="DHGroup14" value="&quot;DHGroup14&quot;"/>
                  <item name="DHGroup2" value="&quot;DHGroup2&quot;"/>
                  <item name="DHGroup2048" value="&quot;DHGroup2048&quot;"/>
                  <item name="DHGroup24" value="&quot;DHGroup24&quot;"/>
                  <item name="ECP256" value="&quot;ECP256&quot;"/>
                  <item name="ECP384" value="&quot;ECP384&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" options="ike-encryption" required="True">
                <help short="The IKE encryption algorithm (IKE phase 2)."/>
                <enum>
                  <item name="AES128" value="&quot;AES128&quot;"/>
                  <item name="AES192" value="&quot;AES192&quot;"/>
                  <item name="AES256" value="&quot;AES256&quot;"/>
                  <item name="DES" value="&quot;DES&quot;"/>
                  <item name="DES3" value="&quot;DES3&quot;"/>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" options="ike-integrity" required="True">
                <help short="The IKE integrity algorithm (IKE phase 2)."/>
                <enum>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                  <item name="MD5" value="&quot;MD5&quot;"/>
                  <item name="SHA1" value="&quot;SHA1&quot;"/>
                  <item name="SHA256" value="&quot;SHA256&quot;"/>
                  <item name="SHA384" value="&quot;SHA384&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" options="ipsec-encryption" required="True">
                <help short="The IPSec encryption algorithm (IKE phase 1)."/>
                <enum>
                  <item name="AES128" value="&quot;AES128&quot;"/>
                  <item name="AES192" value="&quot;AES192&quot;"/>
                  <item name="AES256" value="&quot;AES256&quot;"/>
                  <item name="DES" value="&quot;DES&quot;"/>
                  <item name="DES3" value="&quot;DES3&quot;"/>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" options="ipsec-integrity" required="True">
                <help short="The IPSec integrity algorithm (IKE phase 1)."/>
                <enum>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                  <item name="MD5" value="&quot;MD5&quot;"/>
                  <item name="SHA1" value="&quot;SHA1&quot;"/>
                  <item name="SHA256" value="&quot;SHA256&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" options="pfs-group" required="True">
                <help short="The Pfs Group used in IKE Phase 2 for new child SA."/>
                <enum>
                  <item name="ECP256" value="&quot;ECP256&quot;"/>
                  <item name="ECP384" value="&quot;ECP384&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="PFS1" value="&quot;PFS1&quot;"/>
                  <item name="PFS14" value="&quot;PFS14&quot;"/>
                  <item name="PFS2" value="&quot;PFS2&quot;"/>
                  <item name="PFS2048" value="&quot;PFS2048&quot;"/>
                  <item name="PFS24" value="&quot;PFS24&quot;"/>
                  <item name="PFSMM" value="&quot;PFSMM&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" options="sa-data-size-kilobytes" required="True">
                <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" options="sa-life-time-seconds" required="True">
                <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."/>
              </arg>
            </item>
          </arg>
          <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientProtocols" options="vpn-client-protocols" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientProtocols for Virtual network gateway."/>
            <item type="string">
              <enum>
                <item name="IkeV2" value="&quot;IkeV2&quot;"/>
                <item name="OpenVPN" value="&quot;OpenVPN&quot;"/>
                <item name="SSTP" value="&quot;SSTP&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates" options="vpn-client-revoked-certificates" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientRevokedCertificate for Virtual network gateway."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
                <help short="Resource ID."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="Properties">
                <help short="The revoked VPN client certificate thumbprint."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates" options="vpn-client-root-certificates" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientRootCertificate for virtual network gateway."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
                <help short="Resource ID."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" required="True" group="Properties">
                <help short="The certificate public data."/>
              </arg>
            </item>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="properties.vpnClientConfiguration"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration" required="True">
                <prop type="string" name="aadAudience" arg="$parameters.properties.vpnClientConfiguration.aadAudience"/>
                <prop type="string" name="aadIssuer" arg="$parameters.properties.vpnClientConfiguration.aadIssuer"/>
                <prop type="string" name="aadTenant" arg="$parameters.properties.vpnClientConfiguration.aadTenant"/>
                <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServerAddress"/>
                <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServerSecret"/>
                <prop type="array<object>" name="radiusServers" arg="$parameters.properties.vpnClientConfiguration.radiusServers">
                  <item type="object">
                    <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" required="True"/>
                    <prop type="integer64" name="radiusServerScore" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore"/>
                    <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret"/>
                  </item>
                </prop>
                <prop type="array<object>" name="vngClientConnectionConfigurations" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" required="True">
                        <item type="object" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientAddressPool" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" required="True" cls="AddressSpace_update">
                        <prop type="array<string>" name="addressPrefixes" arg="@AddressSpace_update.addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="array<string>" name="vpnAuthenticationTypes" arg="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes">
                  <item type="string">
                    <enum>
                      <item value="&quot;AAD&quot;"/>
                      <item value="&quot;Certificate&quot;"/>
                      <item value="&quot;Radius&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="object" name="vpnClientAddressPool" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool">
                  <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="array<object>" name="vpnClientIpsecPolicies" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies">
                  <item type="object">
                    <prop type="string" name="dhGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" required="True">
                      <enum>
                        <item value="&quot;DHGroup1&quot;"/>
                        <item value="&quot;DHGroup14&quot;"/>
                        <item value="&quot;DHGroup2&quot;"/>
                        <item value="&quot;DHGroup2048&quot;"/>
                        <item value="&quot;DHGroup24&quot;"/>
                        <item value="&quot;ECP256&quot;"/>
                        <item value="&quot;ECP384&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ikeEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" required="True">
                      <enum>
                        <item value="&quot;AES128&quot;"/>
                        <item value="&quot;AES192&quot;"/>
                        <item value="&quot;AES256&quot;"/>
                        <item value="&quot;DES&quot;"/>
                        <item value="&quot;DES3&quot;"/>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ikeIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" required="True">
                      <enum>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                        <item value="&quot;MD5&quot;"/>
                        <item value="&quot;SHA1&quot;"/>
                        <item value="&quot;SHA256&quot;"/>
                        <item value="&quot;SHA384&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipsecEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" required="True">
                      <enum>
                        <item value="&quot;AES128&quot;"/>
                        <item value="&quot;AES192&quot;"/>
                        <item value="&quot;AES256&quot;"/>
                        <item value="&quot;DES&quot;"/>
                        <item value="&quot;DES3&quot;"/>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES192&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipsecIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" required="True">
                      <enum>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES192&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                        <item value="&quot;MD5&quot;"/>
                        <item value="&quot;SHA1&quot;"/>
                        <item value="&quot;SHA256&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="pfsGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" required="True">
                      <enum>
                        <item value="&quot;ECP256&quot;"/>
                        <item value="&quot;ECP384&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;PFS1&quot;"/>
                        <item value="&quot;PFS14&quot;"/>
                        <item value="&quot;PFS2&quot;"/>
                        <item value="&quot;PFS2048&quot;"/>
                        <item value="&quot;PFS24&quot;"/>
                        <item value="&quot;PFSMM&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="saDataSizeKilobytes" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" required="True"/>
                    <prop type="integer32" name="saLifeTimeSeconds" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" required="True"/>
                  </item>
                </prop>
                <prop type="array<string>" name="vpnClientProtocols" arg="$parameters.properties.vpnClientConfiguration.vpnClientProtocols">
                  <item type="string">
                    <enum>
                      <item value="&quot;IkeV2&quot;"/>
                      <item value="&quot;OpenVPN&quot;"/>
                      <item value="&quot;SSTP&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="array<object>" name="vpnClientRevokedCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="vpnClientRootCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" required="True"/>
                    </prop>
                  </item>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="assign" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <argGroup name="AAD Authentication">
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.aadAudience" options="audience" group="AAD Authentication">
            <help short="The AADAudience ID of the VirtualNetworkGateway."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.aadIssuer" options="issuer" group="AAD Authentication">
            <help short="The AADIssuer URI of the VirtualNetworkGateway."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.aadTenant" options="tenant" group="AAD Authentication">
            <help short="The AADTenant URI of the VirtualNetworkGateway."/>
          </arg>
        </argGroup>
        <argGroup name="Parameters.properties.vpnClientConfiguration">
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerAddress" options="radius-server-address" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="The radius server address property of the VirtualNetworkGateway resource for vpn client connection."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.radiusServerSecret" options="radius-server-secret" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="The radius secret property of the VirtualNetworkGateway resource for vpn client connection."/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.radiusServers" options="radius-servers" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="The radiusServers property for multiple radius server configuration."/>
            <item nullable="True" type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" options="radius-server-address">
                <help short="The address of this radius server."/>
              </arg>
              <arg nullable="True" type="integer64" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore" options="radius-server-score">
                <help short="The initial score assigned to this radius server."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret" options="radius-server-secret">
                <help short="The secret used for this radius server."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations" options="vng-client-connection-configurations" group="Parameters.properties.vpnClientConfiguration">
            <help short="per ip address pool connection policy for virtual network gateway P2S client."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id" options="id">
                <help short="Resource ID."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" options="virtual-network-gateway-policy-groups" group="Properties">
                <help short="List of references to virtualNetworkGatewayPolicyGroups"/>
                <item nullable="True" type="object" cls="SubResource_update">
                  <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                    <help short="Resource ID."/>
                  </arg>
                </item>
              </arg>
              <arg type="object" var="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" options="vpn-client-address-pool" group="Properties" cls="AddressSpace_update">
                <help short="The reference to the address space resource which represents Address space for P2S VpnClient."/>
                <arg nullable="True" type="array<string>" var="@AddressSpace_update.addressPrefixes" options="address-prefixes">
                  <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
                  <item nullable="True" type="string"/>
                </arg>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes" options="vpn-authentication-types" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="VPN authentication types for the virtual network gateway.."/>
            <item nullable="True" type="string">
              <enum>
                <item name="AAD" value="&quot;AAD&quot;"/>
                <item name="Certificate" value="&quot;Certificate&quot;"/>
                <item name="Radius" value="&quot;Radius&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool" options="vpn-client-address-pool" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="The reference to the address space resource which represents Address space for P2S VpnClient."/>
            <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes" options="address-prefixes">
              <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
              <item nullable="True" type="string"/>
            </arg>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies" options="vpn-client-ipsec-policies" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientIpsecPolicies for virtual network gateway P2S client."/>
            <item nullable="True" type="object">
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" options="dh-group">
                <help short="The DH Group used in IKE Phase 1 for initial SA."/>
                <enum>
                  <item name="DHGroup1" value="&quot;DHGroup1&quot;"/>
                  <item name="DHGroup14" value="&quot;DHGroup14&quot;"/>
                  <item name="DHGroup2" value="&quot;DHGroup2&quot;"/>
                  <item name="DHGroup2048" value="&quot;DHGroup2048&quot;"/>
                  <item name="DHGroup24" value="&quot;DHGroup24&quot;"/>
                  <item name="ECP256" value="&quot;ECP256&quot;"/>
                  <item name="ECP384" value="&quot;ECP384&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" options="ike-encryption">
                <help short="The IKE encryption algorithm (IKE phase 2)."/>
                <enum>
                  <item name="AES128" value="&quot;AES128&quot;"/>
                  <item name="AES192" value="&quot;AES192&quot;"/>
                  <item name="AES256" value="&quot;AES256&quot;"/>
                  <item name="DES" value="&quot;DES&quot;"/>
                  <item name="DES3" value="&quot;DES3&quot;"/>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" options="ike-integrity">
                <help short="The IKE integrity algorithm (IKE phase 2)."/>
                <enum>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                  <item name="MD5" value="&quot;MD5&quot;"/>
                  <item name="SHA1" value="&quot;SHA1&quot;"/>
                  <item name="SHA256" value="&quot;SHA256&quot;"/>
                  <item name="SHA384" value="&quot;SHA384&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" options="ipsec-encryption">
                <help short="The IPSec encryption algorithm (IKE phase 1)."/>
                <enum>
                  <item name="AES128" value="&quot;AES128&quot;"/>
                  <item name="AES192" value="&quot;AES192&quot;"/>
                  <item name="AES256" value="&quot;AES256&quot;"/>
                  <item name="DES" value="&quot;DES&quot;"/>
                  <item name="DES3" value="&quot;DES3&quot;"/>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" options="ipsec-integrity">
                <help short="The IPSec integrity algorithm (IKE phase 1)."/>
                <enum>
                  <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
                  <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
                  <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
                  <item name="MD5" value="&quot;MD5&quot;"/>
                  <item name="SHA1" value="&quot;SHA1&quot;"/>
                  <item name="SHA256" value="&quot;SHA256&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" options="pfs-group">
                <help short="The Pfs Group used in IKE Phase 2 for new child SA."/>
                <enum>
                  <item name="ECP256" value="&quot;ECP256&quot;"/>
                  <item name="ECP384" value="&quot;ECP384&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="PFS1" value="&quot;PFS1&quot;"/>
                  <item name="PFS14" value="&quot;PFS14&quot;"/>
                  <item name="PFS2" value="&quot;PFS2&quot;"/>
                  <item name="PFS2048" value="&quot;PFS2048&quot;"/>
                  <item name="PFS24" value="&quot;PFS24&quot;"/>
                  <item name="PFSMM" value="&quot;PFSMM&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" options="sa-data-size-kilobytes">
                <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" options="sa-life-time-seconds">
                <help short="The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientProtocols" options="vpn-client-protocols" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientProtocols for Virtual network gateway."/>
            <item nullable="True" type="string">
              <enum>
                <item name="IkeV2" value="&quot;IkeV2&quot;"/>
                <item name="OpenVPN" value="&quot;OpenVPN&quot;"/>
                <item name="SSTP" value="&quot;SSTP&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates" options="vpn-client-revoked-certificates" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientRevokedCertificate for Virtual network gateway."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
                <help short="Resource ID."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="Properties">
                <help short="The revoked VPN client certificate thumbprint."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates" options="vpn-client-root-certificates" hide="True" group="Parameters.properties.vpnClientConfiguration">
            <help short="VpnClientRootCertificate for virtual network gateway."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
                <help short="Resource ID."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name">
                <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" group="Properties">
                <help short="The certificate public data."/>
              </arg>
            </item>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="properties.vpnClientConfiguration"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration" required="True">
                <prop type="string" name="aadAudience" arg="$parameters.properties.vpnClientConfiguration.aadAudience"/>
                <prop type="string" name="aadIssuer" arg="$parameters.properties.vpnClientConfiguration.aadIssuer"/>
                <prop type="string" name="aadTenant" arg="$parameters.properties.vpnClientConfiguration.aadTenant"/>
                <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServerAddress"/>
                <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServerSecret"/>
                <prop type="array<object>" name="radiusServers" arg="$parameters.properties.vpnClientConfiguration.radiusServers">
                  <item type="object">
                    <prop type="string" name="radiusServerAddress" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerAddress" required="True"/>
                    <prop type="integer64" name="radiusServerScore" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerScore"/>
                    <prop type="string" name="radiusServerSecret" arg="$parameters.properties.vpnClientConfiguration.radiusServers[].radiusServerSecret"/>
                  </item>
                </prop>
                <prop type="array<object>" name="vngClientConnectionConfigurations" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.virtualNetworkGatewayPolicyGroups" required="True">
                        <item type="object" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientAddressPool" arg="$parameters.properties.vpnClientConfiguration.vngClientConnectionConfigurations[].properties.vpnClientAddressPool" required="True" cls="AddressSpace_update">
                        <prop type="array<string>" name="addressPrefixes" arg="@AddressSpace_update.addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="array<string>" name="vpnAuthenticationTypes" arg="$parameters.properties.vpnClientConfiguration.vpnAuthenticationTypes">
                  <item type="string">
                    <enum>
                      <item value="&quot;AAD&quot;"/>
                      <item value="&quot;Certificate&quot;"/>
                      <item value="&quot;Radius&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="object" name="vpnClientAddressPool" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool">
                  <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="array<object>" name="vpnClientIpsecPolicies" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies">
                  <item type="object">
                    <prop type="string" name="dhGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" required="True">
                      <enum>
                        <item value="&quot;DHGroup1&quot;"/>
                        <item value="&quot;DHGroup14&quot;"/>
                        <item value="&quot;DHGroup2&quot;"/>
                        <item value="&quot;DHGroup2048&quot;"/>
                        <item value="&quot;DHGroup24&quot;"/>
                        <item value="&quot;ECP256&quot;"/>
                        <item value="&quot;ECP384&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ikeEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" required="True">
                      <enum>
                        <item value="&quot;AES128&quot;"/>
                        <item value="&quot;AES192&quot;"/>
                        <item value="&quot;AES256&quot;"/>
                        <item value="&quot;DES&quot;"/>
                        <item value="&quot;DES3&quot;"/>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ikeIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" required="True">
                      <enum>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                        <item value="&quot;MD5&quot;"/>
                        <item value="&quot;SHA1&quot;"/>
                        <item value="&quot;SHA256&quot;"/>
                        <item value="&quot;SHA384&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipsecEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" required="True">
                      <enum>
                        <item value="&quot;AES128&quot;"/>
                        <item value="&quot;AES192&quot;"/>
                        <item value="&quot;AES256&quot;"/>
                        <item value="&quot;DES&quot;"/>
                        <item value="&quot;DES3&quot;"/>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES192&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipsecIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" required="True">
                      <enum>
                        <item value="&quot;GCMAES128&quot;"/>
                        <item value="&quot;GCMAES192&quot;"/>
                        <item value="&quot;GCMAES256&quot;"/>
                        <item value="&quot;MD5&quot;"/>
                        <item value="&quot;SHA1&quot;"/>
                        <item value="&quot;SHA256&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="pfsGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" required="True">
                      <enum>
                        <item value="&quot;ECP256&quot;"/>
                        <item value="&quot;ECP384&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;PFS1&quot;"/>
                        <item value="&quot;PFS14&quot;"/>
                        <item value="&quot;PFS2&quot;"/>
                        <item value="&quot;PFS2048&quot;"/>
                        <item value="&quot;PFS24&quot;"/>
                        <item value="&quot;PFSMM&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="saDataSizeKilobytes" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" required="True"/>
                    <prop type="integer32" name="saLifeTimeSeconds" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" required="True"/>
                  </item>
                </prop>
                <prop type="array<string>" name="vpnClientProtocols" arg="$parameters.properties.vpnClientConfiguration.vpnClientProtocols">
                  <item type="string">
                    <enum>
                      <item value="&quot;IkeV2&quot;"/>
                      <item value="&quot;OpenVPN&quot;"/>
                      <item value="&quot;SSTP&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="array<object>" name="vpnClientRevokedCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="vpnClientRootCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates">
                  <item type="object">
                    <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" required="True"/>
                    </prop>
                  </item>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="properties.vpnClientConfiguration"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="properties.vpnClientConfiguration"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
    <commandGroup name="ipsec-policy">
      <command name="list" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientIpsecPolicies" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientIpsecPolicies"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="add" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientIpsecPolicies[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="integer" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" options="vpn-client-ipsec-policy-index"/>
        </argGroup>
        <argGroup name="IKE Phase 1">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" options="dh-group" required="True" group="IKE Phase 1">
            <help short="The DH Group used in initial SA."/>
            <enum>
              <item name="DHGroup1" value="&quot;DHGroup1&quot;"/>
              <item name="DHGroup14" value="&quot;DHGroup14&quot;"/>
              <item name="DHGroup2" value="&quot;DHGroup2&quot;"/>
              <item name="DHGroup2048" value="&quot;DHGroup2048&quot;"/>
              <item name="DHGroup24" value="&quot;DHGroup24&quot;"/>
              <item name="ECP256" value="&quot;ECP256&quot;"/>
              <item name="ECP384" value="&quot;ECP384&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" options="ipsec-encryption" required="True" group="IKE Phase 1">
            <help short="The IPSec encryption algorithm."/>
            <enum>
              <item name="AES128" value="&quot;AES128&quot;"/>
              <item name="AES192" value="&quot;AES192&quot;"/>
              <item name="AES256" value="&quot;AES256&quot;"/>
              <item name="DES" value="&quot;DES&quot;"/>
              <item name="DES3" value="&quot;DES3&quot;"/>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" options="ipsec-integrity" required="True" group="IKE Phase 1">
            <help short="The IPSec integrity algorithm."/>
            <enum>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              <item name="MD5" value="&quot;MD5&quot;"/>
              <item name="SHA1" value="&quot;SHA1&quot;"/>
              <item name="SHA256" value="&quot;SHA256&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="IKE Phase 2">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" options="ike-encryption" required="True" group="IKE Phase 2">
            <help short="The IKE encryption algorithm."/>
            <enum>
              <item name="AES128" value="&quot;AES128&quot;"/>
              <item name="AES192" value="&quot;AES192&quot;"/>
              <item name="AES256" value="&quot;AES256&quot;"/>
              <item name="DES" value="&quot;DES&quot;"/>
              <item name="DES3" value="&quot;DES3&quot;"/>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" options="ike-integrity" required="True" group="IKE Phase 2">
            <help short="The IKE integrity algorithm."/>
            <enum>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              <item name="MD5" value="&quot;MD5&quot;"/>
              <item name="SHA1" value="&quot;SHA1&quot;"/>
              <item name="SHA256" value="&quot;SHA256&quot;"/>
              <item name="SHA384" value="&quot;SHA384&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" options="pfs-group" required="True" group="IKE Phase 2">
            <help short="The Pfs Group used for new child SA."/>
            <enum>
              <item name="ECP256" value="&quot;ECP256&quot;"/>
              <item name="ECP384" value="&quot;ECP384&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
              <item name="PFS1" value="&quot;PFS1&quot;"/>
              <item name="PFS14" value="&quot;PFS14&quot;"/>
              <item name="PFS2" value="&quot;PFS2&quot;"/>
              <item name="PFS2048" value="&quot;PFS2048&quot;"/>
              <item name="PFS24" value="&quot;PFS24&quot;"/>
              <item name="PFSMM" value="&quot;PFSMM&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="Security Association">
          <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" options="sa-max-size" required="True" group="Security Association">
            <help short="The payload size in KB for P2S client."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" options="sa-lifetime" required="True" group="Security Association">
            <help short="The lifetime in seconds for P2S client."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientIpsecPolicies">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[]" required="True">
                <prop type="string" name="dhGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" required="True">
                  <enum>
                    <item value="&quot;DHGroup1&quot;"/>
                    <item value="&quot;DHGroup14&quot;"/>
                    <item value="&quot;DHGroup2&quot;"/>
                    <item value="&quot;DHGroup2048&quot;"/>
                    <item value="&quot;DHGroup24&quot;"/>
                    <item value="&quot;ECP256&quot;"/>
                    <item value="&quot;ECP384&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ikeEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" required="True">
                  <enum>
                    <item value="&quot;AES128&quot;"/>
                    <item value="&quot;AES192&quot;"/>
                    <item value="&quot;AES256&quot;"/>
                    <item value="&quot;DES&quot;"/>
                    <item value="&quot;DES3&quot;"/>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ikeIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" required="True">
                  <enum>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                    <item value="&quot;MD5&quot;"/>
                    <item value="&quot;SHA1&quot;"/>
                    <item value="&quot;SHA256&quot;"/>
                    <item value="&quot;SHA384&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ipsecEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" required="True">
                  <enum>
                    <item value="&quot;AES128&quot;"/>
                    <item value="&quot;AES192&quot;"/>
                    <item value="&quot;AES256&quot;"/>
                    <item value="&quot;DES&quot;"/>
                    <item value="&quot;DES3&quot;"/>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES192&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ipsecIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" required="True">
                  <enum>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES192&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                    <item value="&quot;MD5&quot;"/>
                    <item value="&quot;SHA1&quot;"/>
                    <item value="&quot;SHA256&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="pfsGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" required="True">
                  <enum>
                    <item value="&quot;ECP256&quot;"/>
                    <item value="&quot;ECP384&quot;"/>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;PFS1&quot;"/>
                    <item value="&quot;PFS14&quot;"/>
                    <item value="&quot;PFS2&quot;"/>
                    <item value="&quot;PFS2048&quot;"/>
                    <item value="&quot;PFS24&quot;"/>
                    <item value="&quot;PFSMM&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="saDataSizeKilobytes" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" required="True"/>
                <prop type="integer32" name="saLifeTimeSeconds" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" required="True"/>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientIpsecPolicies[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="integer" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" options="vpn-client-ipsec-policy-index" required="True"/>
        </argGroup>
        <argGroup name="IKE Phase 1">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" options="dh-group" group="IKE Phase 1">
            <help short="The DH Group used in initial SA."/>
            <enum>
              <item name="DHGroup1" value="&quot;DHGroup1&quot;"/>
              <item name="DHGroup14" value="&quot;DHGroup14&quot;"/>
              <item name="DHGroup2" value="&quot;DHGroup2&quot;"/>
              <item name="DHGroup2048" value="&quot;DHGroup2048&quot;"/>
              <item name="DHGroup24" value="&quot;DHGroup24&quot;"/>
              <item name="ECP256" value="&quot;ECP256&quot;"/>
              <item name="ECP384" value="&quot;ECP384&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" options="ipsec-encryption" group="IKE Phase 1">
            <help short="The IPSec encryption algorithm."/>
            <enum>
              <item name="AES128" value="&quot;AES128&quot;"/>
              <item name="AES192" value="&quot;AES192&quot;"/>
              <item name="AES256" value="&quot;AES256&quot;"/>
              <item name="DES" value="&quot;DES&quot;"/>
              <item name="DES3" value="&quot;DES3&quot;"/>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" options="ipsec-integrity" group="IKE Phase 1">
            <help short="The IPSec integrity algorithm."/>
            <enum>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES192" value="&quot;GCMAES192&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              <item name="MD5" value="&quot;MD5&quot;"/>
              <item name="SHA1" value="&quot;SHA1&quot;"/>
              <item name="SHA256" value="&quot;SHA256&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="IKE Phase 2">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" options="ike-encryption" group="IKE Phase 2">
            <help short="The IKE encryption algorithm."/>
            <enum>
              <item name="AES128" value="&quot;AES128&quot;"/>
              <item name="AES192" value="&quot;AES192&quot;"/>
              <item name="AES256" value="&quot;AES256&quot;"/>
              <item name="DES" value="&quot;DES&quot;"/>
              <item name="DES3" value="&quot;DES3&quot;"/>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" options="ike-integrity" group="IKE Phase 2">
            <help short="The IKE integrity algorithm."/>
            <enum>
              <item name="GCMAES128" value="&quot;GCMAES128&quot;"/>
              <item name="GCMAES256" value="&quot;GCMAES256&quot;"/>
              <item name="MD5" value="&quot;MD5&quot;"/>
              <item name="SHA1" value="&quot;SHA1&quot;"/>
              <item name="SHA256" value="&quot;SHA256&quot;"/>
              <item name="SHA384" value="&quot;SHA384&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" options="pfs-group" group="IKE Phase 2">
            <help short="The Pfs Group used for new child SA."/>
            <enum>
              <item name="ECP256" value="&quot;ECP256&quot;"/>
              <item name="ECP384" value="&quot;ECP384&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
              <item name="PFS1" value="&quot;PFS1&quot;"/>
              <item name="PFS14" value="&quot;PFS14&quot;"/>
              <item name="PFS2" value="&quot;PFS2&quot;"/>
              <item name="PFS2048" value="&quot;PFS2048&quot;"/>
              <item name="PFS24" value="&quot;PFS24&quot;"/>
              <item name="PFSMM" value="&quot;PFSMM&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="Security Association">
          <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" options="sa-max-size" group="Security Association">
            <help short="The payload size in KB for P2S client."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" options="sa-lifetime" group="Security Association">
            <help short="The lifetime in seconds for P2S client."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientIpsecPolicies">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[]" required="True">
                <prop type="string" name="dhGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup" required="True">
                  <enum>
                    <item value="&quot;DHGroup1&quot;"/>
                    <item value="&quot;DHGroup14&quot;"/>
                    <item value="&quot;DHGroup2&quot;"/>
                    <item value="&quot;DHGroup2048&quot;"/>
                    <item value="&quot;DHGroup24&quot;"/>
                    <item value="&quot;ECP256&quot;"/>
                    <item value="&quot;ECP384&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ikeEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption" required="True">
                  <enum>
                    <item value="&quot;AES128&quot;"/>
                    <item value="&quot;AES192&quot;"/>
                    <item value="&quot;AES256&quot;"/>
                    <item value="&quot;DES&quot;"/>
                    <item value="&quot;DES3&quot;"/>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ikeIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity" required="True">
                  <enum>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                    <item value="&quot;MD5&quot;"/>
                    <item value="&quot;SHA1&quot;"/>
                    <item value="&quot;SHA256&quot;"/>
                    <item value="&quot;SHA384&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ipsecEncryption" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption" required="True">
                  <enum>
                    <item value="&quot;AES128&quot;"/>
                    <item value="&quot;AES192&quot;"/>
                    <item value="&quot;AES256&quot;"/>
                    <item value="&quot;DES&quot;"/>
                    <item value="&quot;DES3&quot;"/>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES192&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="ipsecIntegrity" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity" required="True">
                  <enum>
                    <item value="&quot;GCMAES128&quot;"/>
                    <item value="&quot;GCMAES192&quot;"/>
                    <item value="&quot;GCMAES256&quot;"/>
                    <item value="&quot;MD5&quot;"/>
                    <item value="&quot;SHA1&quot;"/>
                    <item value="&quot;SHA256&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="pfsGroup" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup" required="True">
                  <enum>
                    <item value="&quot;ECP256&quot;"/>
                    <item value="&quot;ECP384&quot;"/>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;PFS1&quot;"/>
                    <item value="&quot;PFS14&quot;"/>
                    <item value="&quot;PFS2&quot;"/>
                    <item value="&quot;PFS2048&quot;"/>
                    <item value="&quot;PFS24&quot;"/>
                    <item value="&quot;PFSMM&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="saDataSizeKilobytes" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes" required="True"/>
                <prop type="integer32" name="saLifeTimeSeconds" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds" required="True"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientIpsecPolicies[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="integer" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" options="vpn-client-ipsec-policy-index" required="True"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientIpsecPolicies">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientIpsecPolicies[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="integer" var="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" options="vpn-client-ipsec-policy-index" required="True"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientIpsecPolicies">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$parameters.properties.vpnClientConfiguration.vpnClientIpsecPolicies[Index]" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
    <commandGroup name="nat-rule">
      <command name="list" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.natRules" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.natRules"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="add" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.natRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="ResourceId" var="$parameters.properties.natRules[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].name" options="name" required="True" group="">
            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].properties.ipConfigurationId" options="ip-config-id" group="">
            <help short="The IP Configuration ID this NAT rule applies to."/>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].properties.mode" options="mode" group="">
            <help short="The Source NAT direction of a VPN NAT."/>
            <enum>
              <item name="EgressSnat" value="&quot;EgressSnat&quot;"/>
              <item name="IngressSnat" value="&quot;IngressSnat&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].properties.type" options="type" group="">
            <help short="The type of NAT rule for VPN NAT."/>
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg type="array<object>" var="$parameters.properties.natRules[].properties.externalMappings" options="external-mappings-ip" group="Properties">
            <help short="The private IP address external mapping for NAT."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.natRules[].properties.externalMappings[].addressSpace" options="address-space">
                <help short="Address space for Vpn NatRule mapping."/>
              </arg>
              <arg type="string" var="$parameters.properties.natRules[].properties.externalMappings[].portRange" options="port-range">
                <help short="Port range for Vpn NatRule mapping."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$parameters.properties.natRules[].properties.internalMappings" options="internal-mappings-ip" group="Properties">
            <help short="The private IP address internal mapping for NAT."/>
            <item type="object" cls="VpnNatRuleMapping_update">
              <arg type="string" var="@VpnNatRuleMapping_update.addressSpace" options="address-space">
                <help short="Address space for Vpn NatRule mapping."/>
              </arg>
              <arg type="string" var="@VpnNatRuleMapping_update.portRange" options="port-range" hide="True" group="">
                <help short="Port range for Vpn NatRule mapping."/>
              </arg>
            </item>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.natRules">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.natRules[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.natRules[]" required="True">
                <prop type="ResourceId" name="id" arg="$parameters.properties.natRules[].id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                </prop>
                <prop type="string" name="name" arg="$parameters.properties.natRules[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="array<object>" name="externalMappings" arg="$parameters.properties.natRules[].properties.externalMappings">
                    <item type="object">
                      <prop type="string" name="addressSpace" arg="$parameters.properties.natRules[].properties.externalMappings[].addressSpace"/>
                      <prop type="string" name="portRange" arg="$parameters.properties.natRules[].properties.externalMappings[].portRange"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="internalMappings" arg="$parameters.properties.natRules[].properties.internalMappings">
                    <item type="object" cls="VpnNatRuleMapping_update">
                      <prop type="string" name="addressSpace" arg="@VpnNatRuleMapping_update.addressSpace"/>
                      <prop type="string" name="portRange" arg="@VpnNatRuleMapping_update.portRange"/>
                    </item>
                  </prop>
                  <prop type="string" name="ipConfigurationId" arg="$parameters.properties.natRules[].properties.ipConfigurationId"/>
                  <prop type="string" name="mode" arg="$parameters.properties.natRules[].properties.mode">
                    <enum>
                      <item value="&quot;EgressSnat&quot;"/>
                      <item value="&quot;IngressSnat&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="type" arg="$parameters.properties.natRules[].properties.type">
                    <enum>
                      <item value="&quot;Dynamic&quot;"/>
                      <item value="&quot;Static&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.natRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.natRules[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].name" options="name" required="True" group="">
            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.natRules[].properties.ipConfigurationId" options="ip-config-id" group="">
            <help short="The IP Configuration ID this NAT rule applies to."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.natRules[].properties.mode" options="mode" group="">
            <help short="The Source NAT direction of a VPN NAT."/>
            <enum>
              <item name="EgressSnat" value="&quot;EgressSnat&quot;"/>
              <item name="IngressSnat" value="&quot;IngressSnat&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.natRules[].properties.type" options="type" group="">
            <help short="The type of NAT rule for VPN NAT."/>
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg nullable="True" type="array<@VpnNatRuleMapping_update>" var="$parameters.properties.natRules[].properties.externalMappings" options="external-mappings-ip" group="Properties">
            <help short="The private IP address external mapping for NAT."/>
            <item nullable="True" type="@VpnNatRuleMapping_update"/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.natRules[].properties.internalMappings" options="internal-mappings-ip" group="Properties">
            <help short="The private IP address internal mapping for NAT."/>
            <item nullable="True" type="object" cls="VpnNatRuleMapping_update">
              <arg nullable="True" type="string" var="@VpnNatRuleMapping_update.addressSpace" options="address-space">
                <help short="Address space for Vpn NatRule mapping."/>
              </arg>
              <arg nullable="True" type="string" var="@VpnNatRuleMapping_update.portRange" options="port-range" hide="True" group="">
                <help short="Port range for Vpn NatRule mapping."/>
              </arg>
            </item>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.natRules">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.natRules[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.natRules[]" required="True">
                <prop type="ResourceId" name="id" arg="$parameters.properties.natRules[].id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                </prop>
                <prop type="string" name="name" arg="$parameters.properties.natRules[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="array<@VpnNatRuleMapping_update>" name="externalMappings" arg="$parameters.properties.natRules[].properties.externalMappings">
                    <item type="@VpnNatRuleMapping_update"/>
                  </prop>
                  <prop type="array<object>" name="internalMappings" arg="$parameters.properties.natRules[].properties.internalMappings">
                    <item type="object" cls="VpnNatRuleMapping_update">
                      <prop type="string" name="addressSpace" arg="@VpnNatRuleMapping_update.addressSpace"/>
                      <prop type="string" name="portRange" arg="@VpnNatRuleMapping_update.portRange"/>
                    </item>
                  </prop>
                  <prop type="string" name="ipConfigurationId" arg="$parameters.properties.natRules[].properties.ipConfigurationId"/>
                  <prop type="string" name="mode" arg="$parameters.properties.natRules[].properties.mode">
                    <enum>
                      <item value="&quot;EgressSnat&quot;"/>
                      <item value="&quot;IngressSnat&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="type" arg="$parameters.properties.natRules[].properties.type">
                    <enum>
                      <item value="&quot;Dynamic&quot;"/>
                      <item value="&quot;Static&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.natRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].name" options="name" required="True" group="">
            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.natRules">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.natRules[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.natRules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.natRules[].name" options="name" required="True" group="">
            <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.natRules">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.natRules[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
    <commandGroup name="revoked-cert">
      <command name="list" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="create" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="">
            <help short="Certificate thumbprint."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" required="True">
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="">
            <help short="Certificate thumbprint."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" required="True">
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
    <commandGroup name="root-cert">
      <command name="list" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="create" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="root-cert-data" required="True" group="">
            <help short="Base64 contents of the root certificate file or file path."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[]" required="True">
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                <prop type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" required="True"/>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" group="">
            <help short="Base64 contents of the root certificate file or file path."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[]" required="True">
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                <prop type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" required="True"/>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-09-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2023-09-01" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAyMy0wOS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-09-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="boolean" name="activeActive"/>
                      <prop type="string" name="adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="allowRemoteVnetTraffic"/>
                      <prop type="boolean" name="allowVirtualWanTraffic"/>
                      <prop type="object" name="autoScaleConfiguration">
                        <prop type="object" name="bounds">
                          <prop type="integer" name="max"/>
                          <prop type="integer" name="min"/>
                        </prop>
                      </prop>
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn">
                          <format maximum="4294967295" minimum="0"/>
                        </prop>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="array<object>" name="bgpPeeringAddresses">
                          <item type="object">
                            <prop type="array<string>" name="customBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="defaultBgpIpAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipconfigurationId"/>
                            <prop readOnly="True" type="array<string>" name="tunnelIpAddresses">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="@AddressSpace_read" name="customRoutes"/>
                      <prop type="boolean" name="disableIPSecReplayProtection"/>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="boolean" name="enableBgpRouteTranslationForNat"/>
                      <prop type="boolean" name="enableDnsForwarding"/>
                      <prop type="boolean" name="enablePrivateIpAddress"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;LocalGateway&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="inboundDnsForwardingEndpoint"/>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop readOnly="True" type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="natRules">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}/natRules/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<@VpnNatRuleMapping_read>" name="externalMappings">
                              <item type="@VpnNatRuleMapping_read"/>
                            </prop>
                            <prop type="array<object>" name="internalMappings">
                              <item type="object" cls="VpnNatRuleMapping_read">
                                <prop type="string" name="addressSpace"/>
                                <prop type="string" name="portRange"/>
                              </item>
                            </prop>
                            <prop type="string" name="ipConfigurationId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;EgressSnat&quot;"/>
                                <item value="&quot;IngressSnat&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop readOnly="True" type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;ErGw1AZ&quot;"/>
                            <item value="&quot;ErGw2AZ&quot;"/>
                            <item value="&quot;ErGw3AZ&quot;"/>
                            <item value="&quot;ErGwScale&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;UltraPerformance&quot;"/>
                            <item value="&quot;VpnGw1&quot;"/>
                            <item value="&quot;VpnGw1AZ&quot;"/>
                            <item value="&quot;VpnGw2&quot;"/>
                            <item value="&quot;VpnGw2AZ&quot;"/>
                            <item value="&quot;VpnGw3&quot;"/>
                            <item value="&quot;VpnGw3AZ&quot;"/>
                            <item value="&quot;VpnGw4&quot;"/>
                            <item value="&quot;VpnGw4AZ&quot;"/>
                            <item value="&quot;VpnGw5&quot;"/>
                            <item value="&quot;VpnGw5AZ&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="vNetExtendedLocationResourceId"/>
                      <prop type="array<object>" name="virtualNetworkGatewayPolicyGroups">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="isDefault" required="True"/>
                            <prop type="array<object>" name="policyMembers" required="True">
                              <item type="object">
                                <prop type="string" name="attributeType">
                                  <enum>
                                    <item value="&quot;AADGroupId&quot;"/>
                                    <item value="&quot;CertificateGroupId&quot;"/>
                                    <item value="&quot;RadiusAzureGroupId&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="attributeValue"/>
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="integer32" name="priority" required="True"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@SubResource_read>" name="vngClientConnectionConfigurations">
                              <item type="@SubResource_read"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="string" name="aadAudience"/>
                        <prop type="string" name="aadIssuer"/>
                        <prop type="string" name="aadTenant"/>
                        <prop type="string" name="radiusServerAddress"/>
                        <prop type="string" name="radiusServerSecret"/>
                        <prop type="array<object>" name="radiusServers">
                          <item type="object">
                            <prop type="string" name="radiusServerAddress" required="True"/>
                            <prop type="integer64" name="radiusServerScore"/>
                            <prop type="string" name="radiusServerSecret"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vngClientConnectionConfigurations">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@SubResource_read>" name="virtualNetworkGatewayPolicyGroups" required="True">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="@AddressSpace_read" name="vpnClientAddressPool" required="True"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnAuthenticationTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;AAD&quot;"/>
                              <item value="&quot;Certificate&quot;"/>
                              <item value="&quot;Radius&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="vpnClientAddressPool" cls="AddressSpace_read">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientIpsecPolicies">
                          <item type="object">
                            <prop type="string" name="dhGroup" required="True">
                              <enum>
                                <item value="&quot;DHGroup1&quot;"/>
                                <item value="&quot;DHGroup14&quot;"/>
                                <item value="&quot;DHGroup2&quot;"/>
                                <item value="&quot;DHGroup2048&quot;"/>
                                <item value="&quot;DHGroup24&quot;"/>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ikeIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                                <item value="&quot;SHA384&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecEncryption" required="True">
                              <enum>
                                <item value="&quot;AES128&quot;"/>
                                <item value="&quot;AES192&quot;"/>
                                <item value="&quot;AES256&quot;"/>
                                <item value="&quot;DES&quot;"/>
                                <item value="&quot;DES3&quot;"/>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipsecIntegrity" required="True">
                              <enum>
                                <item value="&quot;GCMAES128&quot;"/>
                                <item value="&quot;GCMAES192&quot;"/>
                                <item value="&quot;GCMAES256&quot;"/>
                                <item value="&quot;MD5&quot;"/>
                                <item value="&quot;SHA1&quot;"/>
                                <item value="&quot;SHA256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="pfsGroup" required="True">
                              <enum>
                                <item value="&quot;ECP256&quot;"/>
                                <item value="&quot;ECP384&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PFS1&quot;"/>
                                <item value="&quot;PFS14&quot;"/>
                                <item value="&quot;PFS2&quot;"/>
                                <item value="&quot;PFS2048&quot;"/>
                                <item value="&quot;PFS24&quot;"/>
                                <item value="&quot;PFSMM&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="saDataSizeKilobytes" required="True"/>
                            <prop type="integer32" name="saLifeTimeSeconds" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="vpnClientProtocols">
                          <item type="string">
                            <enum>
                              <item value="&quot;IkeV2&quot;"/>
                              <item value="&quot;OpenVPN&quot;"/>
                              <item value="&quot;SSTP&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" required="True" clientFlatten="True">
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="publicCertData" required="True"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnGatewayGeneration">
                        <enum>
                          <item value="&quot;Generation1&quot;"/>
                          <item value="&quot;Generation2&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
