<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
  <commandGroup name="network vnet-gateway">
    <command name="show" version="2015-06-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn"/>
                      <prop type="string" name="bgpPeeringAddress"/>
                      <prop type="integer32" name="peerWeight"/>
                    </prop>
                    <prop type="boolean" name="enableBgp"/>
                    <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                    <prop type="string" name="gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="@SubResource_read" name="publicIPAddress"/>
                          <prop type="object" name="subnet" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="object" name="vpnClientAddressPool">
                        <prop type="array<string>" name="addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="publicCertData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2015-06-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2015-06-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="string" var="$parameters.properties.gatewayDefaultSite.id" options="gateway-default-site" group="">
          <help short="Name or ID of a local network gateway representing a local network site with default routes."/>
        </arg>
        <arg type="string" var="$parameters.properties.gatewayType" options="gateway-type" group="">
          <help short="The gateway type."/>
          <default value="&quot;Vpn&quot;"/>
          <enum>
            <item name="ExpressRoute" value="&quot;ExpressRoute&quot;"/>
            <item name="Vpn" value="&quot;Vpn&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$parameters.properties.ipConfigurations" options="ip-configurations" group="">
          <help short="IP configurations for virtual network gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.ipConfigurations[].etag" options="etag">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].id" options="id">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties">
              <help short="Gets or sets the privateIPAddress of the IP Configuration"/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
              <help short="The private IP address allocation method."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id" options="public-ip-address" group="PublicIpAddress">
              <help short="The reference to the public IP resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="subnet" group="Subnet">
              <help short="test"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.sku.name" options="sku" group="">
          <help short="VNet gateway SKU."/>
          <default value="&quot;Basic&quot;"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.vpnType" options="vpn-type" group="">
          <help short="VPN routing type."/>
          <default value="&quot;RouteBased&quot;"/>
          <enum>
            <item name="PolicyBased" value="&quot;PolicyBased&quot;"/>
            <item name="RouteBased" value="&quot;RouteBased&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="BGP Peering">
        <arg type="integer64" var="$parameters.properties.bgpSettings.asn" options="asn" group="BGP Peering">
          <help short="Autonomous System Number to use for the BGP settings."/>
        </arg>
        <arg type="string" var="$parameters.properties.bgpSettings.bgpPeeringAddress" options="bgp-peering-address" group="BGP Peering">
          <help short="IP address to use for BGP peering."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.bgpSettings.peerWeight" options="peer-weight" group="BGP Peering">
          <help short="Weight (0-100) added to routes learned through BGP peering."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableBgp" options="enable-bgp" group="BGP Peering">
          <help short="Enable BGP (Border Gateway Protocol)."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.etag" options="etag" hide="True" group="Parameters">
          <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
        </arg>
        <arg type="string" var="$parameters.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
          <help short="The resource GUID property of the VirtualNetworkGateway resource."/>
        </arg>
        <arg type="string" var="$parameters.properties.sku.tier" options="sku-tier" group="Properties">
          <help short="Gateway SKU tier."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Root Cert Authentication">
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates" options="vpn-client-root-certificates" group="Root Cert Authentication">
          <help short="VpnClientRootCertificate for virtual network gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag" options="etag" hide="True" group="Properties">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" group="Properties">
              <help short="The certificate public data."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="integer32" var="$parameters.properties.sku.capacity" options="capacity" hide="True" group="Sku">
          <help short="The capacity."/>
        </arg>
      </argGroup>
      <argGroup name="VPN Client">
        <arg type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes" options="address-prefixes" group="VPN Client" singularOptions="address-prefix">
          <help short="Space-separated list of CIDR prefixes representing the address space for the P2S Vpnclient."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="VpnClientConfiguration">
        <arg type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates" options="vpn-client-revoked-certificates" hide="True" group="VpnClientConfiguration">
          <help short="VpnClientRevokedCertificate for Virtual network gateway."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag" options="etag" hide="True" group="Properties">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="Properties">
              <help short="The revoked VPN client certificate thumbprint."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="etag" arg="$parameters.etag"/>
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn" arg="$parameters.properties.bgpSettings.asn"/>
                      <prop type="string" name="bgpPeeringAddress" arg="$parameters.properties.bgpSettings.bgpPeeringAddress"/>
                      <prop type="integer32" name="peerWeight" arg="$parameters.properties.bgpSettings.peerWeight"/>
                    </prop>
                    <prop type="boolean" name="enableBgp" arg="$parameters.properties.enableBgp"/>
                    <prop type="object" name="gatewayDefaultSite">
                      <prop type="string" name="id" arg="$parameters.properties.gatewayDefaultSite.id"/>
                    </prop>
                    <prop type="string" name="gatewayType" arg="$parameters.properties.gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.ipConfigurations">
                      <item type="object">
                        <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].etag"/>
                        <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                        <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="privateIPAddress" arg="$parameters.properties.ipConfigurations[].properties.privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.provisioningState"/>
                          <prop type="object" name="publicIPAddress">
                            <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress.id"/>
                          </prop>
                          <prop type="object" name="subnet">
                            <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$parameters.properties.provisioningState"/>
                    <prop type="string" name="resourceGuid" arg="$parameters.properties.resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop type="integer32" name="capacity" arg="$parameters.properties.sku.capacity"/>
                      <prop type="string" name="name" arg="$parameters.properties.sku.name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier" arg="$parameters.properties.sku.tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="object" name="vpnClientAddressPool">
                        <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates">
                        <item type="object">
                          <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag"/>
                          <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState"/>
                            <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates">
                        <item type="object">
                          <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag"/>
                          <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                          <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState"/>
                            <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnType" arg="$parameters.properties.vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn"/>
                      <prop type="string" name="bgpPeeringAddress"/>
                      <prop type="integer32" name="peerWeight"/>
                    </prop>
                    <prop type="boolean" name="enableBgp"/>
                    <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                    <prop type="string" name="gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="@SubResource_read" name="publicIPAddress"/>
                          <prop type="object" name="subnet" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="object" name="vpnClientAddressPool">
                        <prop type="array<string>" name="addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="publicCertData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2015-06-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet gateway."/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.gatewayDefaultSite.id" options="gateway-default-site" group="">
          <help short="Name or ID of a local network gateway representing a local network site with default routes."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.gatewayType" options="gateway-type" group="">
          <help short="The gateway type."/>
          <enum>
            <item name="ExpressRoute" value="&quot;ExpressRoute&quot;"/>
            <item name="Vpn" value="&quot;Vpn&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.sku.name" options="sku" group="">
          <help short="VNet gateway SKU."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.vpnType" options="vpn-type" group="">
          <help short="VPN routing type."/>
          <enum>
            <item name="PolicyBased" value="&quot;PolicyBased&quot;"/>
            <item name="RouteBased" value="&quot;RouteBased&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="BGP Peering">
        <arg nullable="True" type="integer64" var="$parameters.properties.bgpSettings.asn" options="asn" group="BGP Peering">
          <help short="Autonomous System Number to use for the BGP settings."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.bgpSettings.bgpPeeringAddress" options="bgp-peering-address" group="BGP Peering">
          <help short="IP address to use for BGP peering."/>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.bgpSettings.peerWeight" options="peer-weight" group="BGP Peering">
          <help short="Weight (0-100) added to routes learned through BGP peering."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableBgp" options="enable-bgp" group="BGP Peering">
          <help short="Enable BGP (Border Gateway Protocol)."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="string" var="$parameters.etag" options="etag" hide="True" group="Parameters">
          <help short="Gets a unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.ipConfigurations" options="ip-configurations" group="Properties">
          <help short="IP configurations for virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].etag" options="etag">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAddress" options="private-ip-address" group="Properties">
              <help short="Gets or sets the privateIPAddress of the IP Configuration"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
              <help short="The private IP address allocation method."/>
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.ipConfigurations[].properties.publicIPAddress" options="public-ip-address" group="Properties" cls="SubResource_update">
              <help short="The reference to the public IP resource."/>
              <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.ipConfigurations[].properties.subnet.id" options="subnet" group="Subnet">
              <help short="test"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.resourceGuid" options="resource-guid" hide="True" group="Properties">
          <help short="The resource GUID property of the VirtualNetworkGateway resource."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.sku.tier" options="sku-tier" group="Properties">
          <help short="Gateway SKU tier."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="HighPerformance" value="&quot;HighPerformance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Root Cert Authentication">
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates" options="vpn-client-root-certificates" group="Root Cert Authentication">
          <help short="VpnClientRootCertificate for virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag" options="etag" hide="True" group="Properties">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" group="Properties">
              <help short="The certificate public data."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg nullable="True" type="integer32" var="$parameters.properties.sku.capacity" options="capacity" hide="True" group="Sku">
          <help short="The capacity."/>
        </arg>
      </argGroup>
      <argGroup name="VPN Client">
        <arg nullable="True" type="array<string>" var="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes" options="address-prefixes" group="VPN Client" singularOptions="address-prefix">
          <help short="Space-separated list of CIDR prefixes representing the address space for the P2S Vpnclient."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="VpnClientConfiguration">
        <arg nullable="True" type="array<object>" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates" options="vpn-client-revoked-certificates" hide="True" group="VpnClientConfiguration">
          <help short="VpnClientRevokedCertificate for Virtual network gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag" options="etag" hide="True" group="Properties">
              <help short="A unique read-only string that changes whenever the resource is updated."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
              <help short="Resource ID."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
              <help short="The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="Properties">
              <help short="The revoked VPN client certificate thumbprint."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkGateways_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkGateway_read">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="bgpSettings">
                      <prop type="integer64" name="asn"/>
                      <prop type="string" name="bgpPeeringAddress"/>
                      <prop type="integer32" name="peerWeight"/>
                    </prop>
                    <prop type="boolean" name="enableBgp"/>
                    <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                    <prop type="string" name="gatewayType">
                      <enum>
                        <item value="&quot;ExpressRoute&quot;"/>
                        <item value="&quot;Vpn&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="ipConfigurations">
                      <item type="object">
                        <prop type="string" name="etag"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="privateIPAddress"/>
                          <prop type="string" name="privateIPAllocationMethod">
                            <enum>
                              <item value="&quot;Dynamic&quot;"/>
                              <item value="&quot;Static&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="provisioningState"/>
                          <prop type="@SubResource_read" name="publicIPAddress"/>
                          <prop type="object" name="subnet" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="string" name="resourceGuid"/>
                    <prop type="object" name="sku">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="name">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighPerformance&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="vpnClientConfiguration">
                      <prop type="object" name="vpnClientAddressPool">
                        <prop type="array<string>" name="addressPrefixes">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="vpnClientRevokedCertificates">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="vpnClientRootCertificates">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="provisioningState"/>
                            <prop type="string" name="publicCertData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="vpnType">
                      <enum>
                        <item value="&quot;PolicyBased&quot;"/>
                        <item value="&quot;RouteBased&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="string" name="etag" arg="$parameters.etag"/>
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="bgpSettings">
                  <prop type="integer64" name="asn" arg="$parameters.properties.bgpSettings.asn"/>
                  <prop type="string" name="bgpPeeringAddress" arg="$parameters.properties.bgpSettings.bgpPeeringAddress"/>
                  <prop type="integer32" name="peerWeight" arg="$parameters.properties.bgpSettings.peerWeight"/>
                </prop>
                <prop type="boolean" name="enableBgp" arg="$parameters.properties.enableBgp"/>
                <prop type="object" name="gatewayDefaultSite">
                  <prop type="string" name="id" arg="$parameters.properties.gatewayDefaultSite.id"/>
                </prop>
                <prop type="string" name="gatewayType" arg="$parameters.properties.gatewayType">
                  <enum>
                    <item value="&quot;ExpressRoute&quot;"/>
                    <item value="&quot;Vpn&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.ipConfigurations">
                  <item type="object">
                    <prop type="string" name="etag" arg="$parameters.properties.ipConfigurations[].etag"/>
                    <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].id"/>
                    <prop type="string" name="name" arg="$parameters.properties.ipConfigurations[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="privateIPAddress" arg="$parameters.properties.ipConfigurations[].properties.privateIPAddress"/>
                      <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.ipConfigurations[].properties.privateIPAllocationMethod">
                        <enum>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="provisioningState" arg="$parameters.properties.ipConfigurations[].properties.provisioningState"/>
                      <prop type="object" name="publicIPAddress" arg="$parameters.properties.ipConfigurations[].properties.publicIPAddress" cls="SubResource_update">
                        <prop type="string" name="id" arg="@SubResource_update.id"/>
                      </prop>
                      <prop type="object" name="subnet">
                        <prop type="string" name="id" arg="$parameters.properties.ipConfigurations[].properties.subnet.id"/>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="provisioningState" arg="$parameters.properties.provisioningState"/>
                <prop type="string" name="resourceGuid" arg="$parameters.properties.resourceGuid"/>
                <prop type="object" name="sku">
                  <prop type="integer32" name="capacity" arg="$parameters.properties.sku.capacity"/>
                  <prop type="string" name="name" arg="$parameters.properties.sku.name">
                    <enum>
                      <item value="&quot;Basic&quot;"/>
                      <item value="&quot;HighPerformance&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="tier" arg="$parameters.properties.sku.tier">
                    <enum>
                      <item value="&quot;Basic&quot;"/>
                      <item value="&quot;HighPerformance&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="vpnClientConfiguration">
                  <prop type="object" name="vpnClientAddressPool">
                    <prop type="array<string>" name="addressPrefixes" arg="$parameters.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="array<object>" name="vpnClientRevokedCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates">
                    <item type="object">
                      <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag"/>
                      <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState"/>
                        <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="vpnClientRootCertificates" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates">
                    <item type="object">
                      <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag"/>
                      <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                      <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState"/>
                        <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="vpnType" arg="$parameters.properties.vpnType">
                  <enum>
                    <item value="&quot;PolicyBased&quot;"/>
                    <item value="&quot;RouteBased&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2015-06-15&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualNetworkGateway_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="revoked-cert">
      <command name="list" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="create" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="">
            <help short="Certificate thumbprint."/>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag" options="etag" hide="True" group="Properties">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" required="True">
                <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag"/>
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState"/>
                  <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint" options="thumbprint" group="">
            <help short="Certificate thumbprint."/>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag" options="etag" hide="True" group="Properties">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" required="True">
                <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].etag"/>
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.provisioningState"/>
                  <prop type="string" name="thumbprint" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint"/>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRevokedCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRevokedCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
    <commandGroup name="root-cert">
      <command name="list" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="create" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="root-cert-data" group="">
            <help short="Base64 contents of the root certificate file or file path."/>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag" options="etag" hide="True" group="Properties">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[]" required="True">
                <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag"/>
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState"/>
                  <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData"/>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id" options="id" hide="True" group="">
            <help short="Resource ID."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData" options="public-cert-data" group="">
            <help short="Base64 contents of the root certificate file or file path."/>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag" options="etag" hide="True" group="Properties">
            <help short="A unique read-only string that changes whenever the resource is updated."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
            <help short="The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[]" required="True">
                <prop type="string" name="etag" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].etag"/>
                <prop type="string" name="id" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].id"/>
                <prop type="string" name="name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="provisioningState" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.provisioningState"/>
                  <prop type="string" name="publicCertData" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData"/>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="VirtualNetworkGateways_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualNetworkGateway_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2015-06-15" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworkgateways/{}" version="2015-06-15" subresource="properties.vpnClientConfiguration.vpnClientRootCertificates[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya0dhdGV3YXlzL3t2aXJ0dWFsTmV0d29ya0dhdGV3YXlOYW1lfQ==/V/MjAxNS0wNi0xNQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualNetworkGatewayName" options="gateway-name" required="True" group="" idPart="name">
            <help short="Virtual network gateway name."/>
          </arg>
          <arg type="string" var="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" options="name n" required="True" group="">
            <help short="Root certificate name."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.vpnClientConfiguration.vpnClientRootCertificates">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.vpnClientConfiguration.vpnClientRootCertificates[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualNetworkGateways_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualNetworkGatewayName" arg="$Path.virtualNetworkGatewayName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2015-06-15&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualNetworkGateway_read">
                    <prop type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkGateways/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="bgpSettings">
                        <prop type="integer64" name="asn"/>
                        <prop type="string" name="bgpPeeringAddress"/>
                        <prop type="integer32" name="peerWeight"/>
                      </prop>
                      <prop type="boolean" name="enableBgp"/>
                      <prop type="@SubResource_read" name="gatewayDefaultSite"/>
                      <prop type="string" name="gatewayType">
                        <enum>
                          <item value="&quot;ExpressRoute&quot;"/>
                          <item value="&quot;Vpn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipConfigurations">
                        <item type="object">
                          <prop type="string" name="etag"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="privateIPAddress"/>
                            <prop type="string" name="privateIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="provisioningState"/>
                            <prop type="@SubResource_read" name="publicIPAddress"/>
                            <prop type="object" name="subnet" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="provisioningState"/>
                      <prop type="string" name="resourceGuid"/>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;HighPerformance&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="vpnClientConfiguration">
                        <prop type="object" name="vpnClientAddressPool">
                          <prop type="array<string>" name="addressPrefixes">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="vpnClientRevokedCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="thumbprint"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vpnClientRootCertificates">
                          <item type="object">
                            <prop type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="provisioningState"/>
                              <prop type="string" name="publicCertData"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="vpnType">
                        <enum>
                          <item value="&quot;PolicyBased&quot;"/>
                          <item value="&quot;RouteBased&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
