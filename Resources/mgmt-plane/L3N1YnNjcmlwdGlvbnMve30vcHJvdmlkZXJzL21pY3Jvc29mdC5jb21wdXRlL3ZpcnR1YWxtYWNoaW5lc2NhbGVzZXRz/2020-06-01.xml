<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.compute/virtualmachinescalesets" version="2020-06-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbXB1dGUvdmlydHVhbE1hY2hpbmVTY2FsZVNldHM=/V/MjAyMC0wNi0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets" version="2020-06-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cw==/V/MjAyMC0wNi0wMQ=="/>
  <commandGroup name="vmss">
    <command name="list" version="2020-06-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.compute/virtualmachinescalesets" version="2020-06-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbXB1dGUvdmlydHVhbE1hY2hpbmVTY2FsZVNldHM=/V/MjAyMC0wNi0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets" version="2020-06-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cw==/V/MjAyMC0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_VirtualMachineScaleSets_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_VirtualMachineScaleSets_ListAll">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_VirtualMachineScaleSets_List" operationId="VirtualMachineScaleSets_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="plan">
                        <prop type="string" name="name"/>
                        <prop type="string" name="product"/>
                        <prop type="string" name="promotionCode"/>
                        <prop type="string" name="publisher"/>
                      </prop>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="additionalCapabilities">
                          <prop type="boolean" name="ultraSSDEnabled"/>
                        </prop>
                        <prop type="object" name="automaticRepairsPolicy">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="gracePeriod"/>
                        </prop>
                        <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs"/>
                        <prop type="@SubResource_read" name="hostGroup"/>
                        <prop type="boolean" name="overprovision"/>
                        <prop type="integer32" name="platformFaultDomainCount"/>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                        <prop type="object" name="scaleInPolicy">
                          <prop type="array<string>" name="rules">
                            <item type="string">
                              <enum>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;NewestVM&quot;"/>
                                <item value="&quot;OldestVM&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </prop>
                        <prop type="boolean" name="singlePlacementGroup"/>
                        <prop readOnly="True" type="string" name="uniqueId"/>
                        <prop type="object" name="upgradePolicy">
                          <prop type="object" name="automaticOSUpgradePolicy">
                            <prop type="boolean" name="disableAutomaticRollback"/>
                            <prop type="boolean" name="enableAutomaticOSUpgrade"/>
                          </prop>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Automatic&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                              <item value="&quot;Rolling&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="rollingUpgradePolicy">
                            <prop type="integer32" name="maxBatchInstancePercent">
                              <format maximum="100" minimum="5"/>
                            </prop>
                            <prop type="integer32" name="maxUnhealthyInstancePercent">
                              <format maximum="100" minimum="5"/>
                            </prop>
                            <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent">
                              <format maximum="100" minimum="0"/>
                            </prop>
                            <prop type="string" name="pauseTimeBetweenBatches"/>
                          </prop>
                        </prop>
                        <prop type="object" name="virtualMachineProfile">
                          <prop type="object" name="billingProfile">
                            <prop type="float64" name="maxPrice"/>
                          </prop>
                          <prop type="object" name="diagnosticsProfile">
                            <prop type="object" name="bootDiagnostics">
                              <prop type="boolean" name="enabled"/>
                              <prop type="string" name="storageUri"/>
                            </prop>
                          </prop>
                          <prop type="string" name="evictionPolicy">
                            <enum>
                              <item value="&quot;Deallocate&quot;"/>
                              <item value="&quot;Delete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="extensionProfile">
                            <prop type="array<object>" name="extensions">
                              <item type="object">
                                <prop readOnly="True" type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}/extensions/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="boolean" name="autoUpgradeMinorVersion"/>
                                  <prop type="boolean" name="enableAutomaticUpgrade"/>
                                  <prop type="string" name="forceUpdateTag"/>
                                  <prop type="array<string>" name="provisionAfterExtensions">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState"/>
                                  <prop type="string" name="publisher"/>
                                  <prop type="string" name="type"/>
                                  <prop type="string" name="typeHandlerVersion"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="string" name="extensionsTimeBudget"/>
                          </prop>
                          <prop type="string" name="licenseType"/>
                          <prop type="object" name="networkProfile">
                            <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="array<object>" name="networkInterfaceConfigurations">
                              <item type="object">
                                <prop type="string" name="id"/>
                                <prop type="string" name="name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="object" name="dnsSettings">
                                    <prop type="array<string>" name="dnsServers">
                                      <item type="string"/>
                                    </prop>
                                  </prop>
                                  <prop type="boolean" name="enableAcceleratedNetworking"/>
                                  <prop type="boolean" name="enableFpga"/>
                                  <prop type="boolean" name="enableIPForwarding"/>
                                  <prop type="array<object>" name="ipConfigurations" required="True">
                                    <item type="object">
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="boolean" name="primary"/>
                                        <prop type="string" name="privateIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="publicIPAddressConfiguration">
                                          <prop type="string" name="name" required="True"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel" required="True"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="array<object>" name="ipTags">
                                              <item type="object">
                                                <prop type="string" name="ipTagType"/>
                                                <prop type="string" name="tag"/>
                                              </item>
                                            </prop>
                                            <prop type="string" name="publicIPAddressVersion">
                                              <enum>
                                                <item value="&quot;IPv4&quot;"/>
                                                <item value="&quot;IPv6&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="@SubResource_read" name="publicIPPrefix"/>
                                          </prop>
                                        </prop>
                                        <prop type="@ApiEntityReference_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@SubResource_read" name="networkSecurityGroup"/>
                                  <prop type="boolean" name="primary"/>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="osProfile">
                            <prop type="string" name="adminPassword"/>
                            <prop type="string" name="adminUsername"/>
                            <prop type="string" name="computerNamePrefix"/>
                            <prop type="string" name="customData"/>
                            <prop type="object" name="linuxConfiguration">
                              <prop type="boolean" name="disablePasswordAuthentication"/>
                              <prop type="boolean" name="provisionVMAgent"/>
                              <prop type="object" name="ssh">
                                <prop type="array<object>" name="publicKeys">
                                  <item type="object">
                                    <prop type="string" name="keyData"/>
                                    <prop type="string" name="path"/>
                                  </item>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="array<object>" name="secrets">
                              <item type="object">
                                <prop type="object" name="sourceVault" cls="SubResource_read">
                                  <prop type="string" name="id"/>
                                </prop>
                                <prop type="array<object>" name="vaultCertificates">
                                  <item type="object">
                                    <prop type="string" name="certificateStore"/>
                                    <prop type="string" name="certificateUrl"/>
                                  </item>
                                </prop>
                              </item>
                            </prop>
                            <prop type="object" name="windowsConfiguration">
                              <prop type="array<object>" name="additionalUnattendContent">
                                <item type="object">
                                  <prop type="string" name="componentName">
                                    <enum>
                                      <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="content"/>
                                  <prop type="string" name="passName">
                                    <enum>
                                      <item value="&quot;OobeSystem&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="settingName">
                                    <enum>
                                      <item value="&quot;AutoLogon&quot;"/>
                                      <item value="&quot;FirstLogonCommands&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="enableAutomaticUpdates"/>
                              <prop type="object" name="patchSettings">
                                <prop type="string" name="patchMode">
                                  <enum>
                                    <item value="&quot;AutomaticByOS&quot;"/>
                                    <item value="&quot;AutomaticByPlatform&quot;"/>
                                    <item value="&quot;Manual&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="boolean" name="provisionVMAgent"/>
                              <prop type="string" name="timeZone"/>
                              <prop type="object" name="winRM">
                                <prop type="array<object>" name="listeners">
                                  <item type="object">
                                    <prop type="string" name="certificateUrl"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Http&quot;"/>
                                        <item value="&quot;Https&quot;"/>
                                      </enum>
                                    </prop>
                                  </item>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="string" name="priority">
                            <enum>
                              <item value="&quot;Low&quot;"/>
                              <item value="&quot;Regular&quot;"/>
                              <item value="&quot;Spot&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="scheduledEventsProfile">
                            <prop type="object" name="terminateNotificationProfile">
                              <prop type="boolean" name="enable"/>
                              <prop type="string" name="notBeforeTimeout"/>
                            </prop>
                          </prop>
                          <prop type="object" name="securityProfile">
                            <prop type="boolean" name="encryptionAtHost"/>
                          </prop>
                          <prop type="object" name="storageProfile">
                            <prop type="array<object>" name="dataDisks">
                              <item type="object">
                                <prop type="string" name="caching">
                                  <enum>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;ReadOnly&quot;"/>
                                    <item value="&quot;ReadWrite&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="createOption" required="True">
                                  <enum>
                                    <item value="&quot;Attach&quot;"/>
                                    <item value="&quot;Empty&quot;"/>
                                    <item value="&quot;FromImage&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer64" name="diskIOPSReadWrite"/>
                                <prop type="integer64" name="diskMBpsReadWrite"/>
                                <prop type="integer32" name="diskSizeGB"/>
                                <prop type="integer32" name="lun" required="True"/>
                                <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                                <prop type="string" name="name"/>
                                <prop type="boolean" name="writeAcceleratorEnabled"/>
                              </item>
                            </prop>
                            <prop type="object" name="imageReference">
                              <prop readOnly="True" type="string" name="exactVersion"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="offer"/>
                              <prop type="string" name="publisher"/>
                              <prop type="string" name="sku"/>
                              <prop type="string" name="version"/>
                            </prop>
                            <prop type="object" name="osDisk">
                              <prop type="string" name="caching">
                                <enum>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;ReadOnly&quot;"/>
                                  <item value="&quot;ReadWrite&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="createOption" required="True">
                                <enum>
                                  <item value="&quot;Attach&quot;"/>
                                  <item value="&quot;Empty&quot;"/>
                                  <item value="&quot;FromImage&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="diffDiskSettings">
                                <prop type="string" name="option">
                                  <enum>
                                    <item value="&quot;Local&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="placement">
                                  <enum>
                                    <item value="&quot;CacheDisk&quot;"/>
                                    <item value="&quot;ResourceDisk&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="integer32" name="diskSizeGB"/>
                              <prop type="object" name="image">
                                <prop type="string" name="uri"/>
                              </prop>
                              <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                                <prop type="object" name="diskEncryptionSet">
                                  <prop type="string" name="id"/>
                                </prop>
                                <prop type="string" name="storageAccountType">
                                  <enum>
                                    <item value="&quot;Premium_LRS&quot;"/>
                                    <item value="&quot;StandardSSD_LRS&quot;"/>
                                    <item value="&quot;Standard_LRS&quot;"/>
                                    <item value="&quot;UltraSSD_LRS&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="string" name="osType">
                                <enum>
                                  <item value="&quot;Linux&quot;"/>
                                  <item value="&quot;Windows&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="vhdContainers">
                                <item type="string"/>
                              </prop>
                              <prop type="boolean" name="writeAcceleratorEnabled"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="zoneBalance"/>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer64" name="capacity"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_VirtualMachineScaleSets_ListAll" operationId="VirtualMachineScaleSets_ListAll">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="plan">
                        <prop type="string" name="name"/>
                        <prop type="string" name="product"/>
                        <prop type="string" name="promotionCode"/>
                        <prop type="string" name="publisher"/>
                      </prop>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="additionalCapabilities">
                          <prop type="boolean" name="ultraSSDEnabled"/>
                        </prop>
                        <prop type="object" name="automaticRepairsPolicy">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="gracePeriod"/>
                        </prop>
                        <prop type="boolean" name="doNotRunExtensionsOnOverprovisionedVMs"/>
                        <prop type="@SubResource_read" name="hostGroup"/>
                        <prop type="boolean" name="overprovision"/>
                        <prop type="integer32" name="platformFaultDomainCount"/>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                        <prop type="object" name="scaleInPolicy">
                          <prop type="array<string>" name="rules">
                            <item type="string">
                              <enum>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;NewestVM&quot;"/>
                                <item value="&quot;OldestVM&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </prop>
                        <prop type="boolean" name="singlePlacementGroup"/>
                        <prop readOnly="True" type="string" name="uniqueId"/>
                        <prop type="object" name="upgradePolicy">
                          <prop type="object" name="automaticOSUpgradePolicy">
                            <prop type="boolean" name="disableAutomaticRollback"/>
                            <prop type="boolean" name="enableAutomaticOSUpgrade"/>
                          </prop>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Automatic&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                              <item value="&quot;Rolling&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="rollingUpgradePolicy">
                            <prop type="integer32" name="maxBatchInstancePercent">
                              <format maximum="100" minimum="5"/>
                            </prop>
                            <prop type="integer32" name="maxUnhealthyInstancePercent">
                              <format maximum="100" minimum="5"/>
                            </prop>
                            <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent">
                              <format maximum="100" minimum="0"/>
                            </prop>
                            <prop type="string" name="pauseTimeBetweenBatches"/>
                          </prop>
                        </prop>
                        <prop type="object" name="virtualMachineProfile">
                          <prop type="object" name="billingProfile">
                            <prop type="float64" name="maxPrice"/>
                          </prop>
                          <prop type="object" name="diagnosticsProfile">
                            <prop type="object" name="bootDiagnostics">
                              <prop type="boolean" name="enabled"/>
                              <prop type="string" name="storageUri"/>
                            </prop>
                          </prop>
                          <prop type="string" name="evictionPolicy">
                            <enum>
                              <item value="&quot;Deallocate&quot;"/>
                              <item value="&quot;Delete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="extensionProfile">
                            <prop type="array<object>" name="extensions">
                              <item type="object">
                                <prop readOnly="True" type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}/extensions/{}"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="boolean" name="autoUpgradeMinorVersion"/>
                                  <prop type="boolean" name="enableAutomaticUpgrade"/>
                                  <prop type="string" name="forceUpdateTag"/>
                                  <prop type="array<string>" name="provisionAfterExtensions">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState"/>
                                  <prop type="string" name="publisher"/>
                                  <prop type="string" name="type"/>
                                  <prop type="string" name="typeHandlerVersion"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="string" name="extensionsTimeBudget"/>
                          </prop>
                          <prop type="string" name="licenseType"/>
                          <prop type="object" name="networkProfile">
                            <prop type="@ApiEntityReference_read" name="healthProbe"/>
                            <prop type="array<object>" name="networkInterfaceConfigurations">
                              <item type="object">
                                <prop type="string" name="id"/>
                                <prop type="string" name="name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="object" name="dnsSettings">
                                    <prop type="array<string>" name="dnsServers">
                                      <item type="string"/>
                                    </prop>
                                  </prop>
                                  <prop type="boolean" name="enableAcceleratedNetworking"/>
                                  <prop type="boolean" name="enableFpga"/>
                                  <prop type="boolean" name="enableIPForwarding"/>
                                  <prop type="array<object>" name="ipConfigurations" required="True">
                                    <item type="object">
                                      <prop type="string" name="id"/>
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                          <item type="@SubResource_read"/>
                                        </prop>
                                        <prop type="boolean" name="primary"/>
                                        <prop type="string" name="privateIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="publicIPAddressConfiguration">
                                          <prop type="string" name="name" required="True"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="object" name="dnsSettings">
                                              <prop type="string" name="domainNameLabel" required="True"/>
                                            </prop>
                                            <prop type="integer32" name="idleTimeoutInMinutes"/>
                                            <prop type="array<object>" name="ipTags">
                                              <item type="object">
                                                <prop type="string" name="ipTagType"/>
                                                <prop type="string" name="tag"/>
                                              </item>
                                            </prop>
                                            <prop type="string" name="publicIPAddressVersion">
                                              <enum>
                                                <item value="&quot;IPv4&quot;"/>
                                                <item value="&quot;IPv6&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="@SubResource_read" name="publicIPPrefix"/>
                                          </prop>
                                        </prop>
                                        <prop type="@ApiEntityReference_read" name="subnet"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="@SubResource_read" name="networkSecurityGroup"/>
                                  <prop type="boolean" name="primary"/>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="osProfile">
                            <prop type="string" name="adminPassword"/>
                            <prop type="string" name="adminUsername"/>
                            <prop type="string" name="computerNamePrefix"/>
                            <prop type="string" name="customData"/>
                            <prop type="object" name="linuxConfiguration">
                              <prop type="boolean" name="disablePasswordAuthentication"/>
                              <prop type="boolean" name="provisionVMAgent"/>
                              <prop type="object" name="ssh">
                                <prop type="array<object>" name="publicKeys">
                                  <item type="object">
                                    <prop type="string" name="keyData"/>
                                    <prop type="string" name="path"/>
                                  </item>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="array<object>" name="secrets">
                              <item type="object">
                                <prop type="@SubResource_read" name="sourceVault"/>
                                <prop type="array<object>" name="vaultCertificates">
                                  <item type="object">
                                    <prop type="string" name="certificateStore"/>
                                    <prop type="string" name="certificateUrl"/>
                                  </item>
                                </prop>
                              </item>
                            </prop>
                            <prop type="object" name="windowsConfiguration">
                              <prop type="array<object>" name="additionalUnattendContent">
                                <item type="object">
                                  <prop type="string" name="componentName">
                                    <enum>
                                      <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="content"/>
                                  <prop type="string" name="passName">
                                    <enum>
                                      <item value="&quot;OobeSystem&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="settingName">
                                    <enum>
                                      <item value="&quot;AutoLogon&quot;"/>
                                      <item value="&quot;FirstLogonCommands&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="enableAutomaticUpdates"/>
                              <prop type="object" name="patchSettings">
                                <prop type="string" name="patchMode">
                                  <enum>
                                    <item value="&quot;AutomaticByOS&quot;"/>
                                    <item value="&quot;AutomaticByPlatform&quot;"/>
                                    <item value="&quot;Manual&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="boolean" name="provisionVMAgent"/>
                              <prop type="string" name="timeZone"/>
                              <prop type="object" name="winRM">
                                <prop type="array<object>" name="listeners">
                                  <item type="object">
                                    <prop type="string" name="certificateUrl"/>
                                    <prop type="string" name="protocol">
                                      <enum>
                                        <item value="&quot;Http&quot;"/>
                                        <item value="&quot;Https&quot;"/>
                                      </enum>
                                    </prop>
                                  </item>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="string" name="priority">
                            <enum>
                              <item value="&quot;Low&quot;"/>
                              <item value="&quot;Regular&quot;"/>
                              <item value="&quot;Spot&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="scheduledEventsProfile">
                            <prop type="object" name="terminateNotificationProfile">
                              <prop type="boolean" name="enable"/>
                              <prop type="string" name="notBeforeTimeout"/>
                            </prop>
                          </prop>
                          <prop type="object" name="securityProfile">
                            <prop type="boolean" name="encryptionAtHost"/>
                          </prop>
                          <prop type="object" name="storageProfile">
                            <prop type="array<object>" name="dataDisks">
                              <item type="object">
                                <prop type="string" name="caching">
                                  <enum>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;ReadOnly&quot;"/>
                                    <item value="&quot;ReadWrite&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="createOption" required="True">
                                  <enum>
                                    <item value="&quot;Attach&quot;"/>
                                    <item value="&quot;Empty&quot;"/>
                                    <item value="&quot;FromImage&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer64" name="diskIOPSReadWrite"/>
                                <prop type="integer64" name="diskMBpsReadWrite"/>
                                <prop type="integer32" name="diskSizeGB"/>
                                <prop type="integer32" name="lun" required="True"/>
                                <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                                <prop type="string" name="name"/>
                                <prop type="boolean" name="writeAcceleratorEnabled"/>
                              </item>
                            </prop>
                            <prop type="object" name="imageReference">
                              <prop readOnly="True" type="string" name="exactVersion"/>
                              <prop type="string" name="id"/>
                              <prop type="string" name="offer"/>
                              <prop type="string" name="publisher"/>
                              <prop type="string" name="sku"/>
                              <prop type="string" name="version"/>
                            </prop>
                            <prop type="object" name="osDisk">
                              <prop type="string" name="caching">
                                <enum>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;ReadOnly&quot;"/>
                                  <item value="&quot;ReadWrite&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="createOption" required="True">
                                <enum>
                                  <item value="&quot;Attach&quot;"/>
                                  <item value="&quot;Empty&quot;"/>
                                  <item value="&quot;FromImage&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="diffDiskSettings">
                                <prop type="string" name="option">
                                  <enum>
                                    <item value="&quot;Local&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="placement">
                                  <enum>
                                    <item value="&quot;CacheDisk&quot;"/>
                                    <item value="&quot;ResourceDisk&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="integer32" name="diskSizeGB"/>
                              <prop type="object" name="image">
                                <prop type="string" name="uri"/>
                              </prop>
                              <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                              <prop type="string" name="name"/>
                              <prop type="string" name="osType">
                                <enum>
                                  <item value="&quot;Linux&quot;"/>
                                  <item value="&quot;Windows&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="vhdContainers">
                                <item type="string"/>
                              </prop>
                              <prop type="boolean" name="writeAcceleratorEnabled"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="zoneBalance"/>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer64" name="capacity"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
