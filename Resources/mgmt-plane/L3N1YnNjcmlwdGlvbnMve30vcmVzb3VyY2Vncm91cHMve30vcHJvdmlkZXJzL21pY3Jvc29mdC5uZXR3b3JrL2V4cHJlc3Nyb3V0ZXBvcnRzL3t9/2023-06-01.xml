<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
  <commandGroup name="network express-route port">
    <command name="show" version="2023-06-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute port name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRoutePorts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
          <request method="get">
            <path>
              <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="allocationDate"/>
                    <prop type="integer" name="bandwidthInGbps"/>
                    <prop type="string" name="billingType">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="circuits">
                      <item type="object">
                        <prop type="string" name="id"/>
                      </item>
                    </prop>
                    <prop type="string" name="encapsulation">
                      <enum>
                        <item value="&quot;Dot1Q&quot;"/>
                        <item value="&quot;QinQ&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="etherType"/>
                    <prop type="array<object>" name="links">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="adminState">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="coloLocation"/>
                          <prop readOnly="True" type="string" name="connectorType">
                            <enum>
                              <item value="&quot;LC&quot;"/>
                              <item value="&quot;SC&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="interfaceName"/>
                          <prop type="object" name="macSecConfig">
                            <prop type="string" name="cakSecretIdentifier"/>
                            <prop type="string" name="cipher">
                              <enum>
                                <item value="&quot;GcmAes128&quot;"/>
                                <item value="&quot;GcmAes256&quot;"/>
                                <item value="&quot;GcmAesXpn128&quot;"/>
                                <item value="&quot;GcmAesXpn256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="cknSecretIdentifier"/>
                            <prop type="string" name="sciState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="patchPanelId"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="rackId"/>
                          <prop readOnly="True" type="string" name="routerName"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="mtu"/>
                    <prop type="string" name="peeringLocation"/>
                    <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-06-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute port name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRoutePorts_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
          <request method="delete">
            <path>
              <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-06-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute port name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="integer" var="$parameters.properties.bandwidthInGbps" options="bandwidth-in-gbps" group="">
          <help short="Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Gbps."/>
        </arg>
        <arg type="string" var="$parameters.properties.encapsulation" options="encapsulation" group="">
          <help short="Encapsulation method on physical ports.  Allowed values: Dot1Q, QinQ."/>
          <enum>
            <item name="Dot1Q" value="&quot;Dot1Q&quot;"/>
            <item name="QinQ" value="&quot;QinQ&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.peeringLocation" options="peering-location" group="">
          <help short="The name of the peering location that the port is mapped to physically."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
        </arg>
        <arg type="object" var="$parameters.identity" options="identity" hide="True" group="Parameters">
          <help short="The identity of ExpressRoutePort, if configured."/>
          <arg type="string" var="$parameters.identity.type" options="type">
            <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.billingType" options="billing-type" group="Properties">
          <help short="The billing type of the ExpressRoutePort resource."/>
          <enum>
            <item name="MeteredData" value="&quot;MeteredData&quot;"/>
            <item name="UnlimitedData" value="&quot;UnlimitedData&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$parameters.properties.links" options="links" hide="True" group="Properties">
          <help short="The set of physical links of the ExpressRoutePort resource."/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.links[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].name" options="name">
              <help short="Name of child port resource that is unique among child port resources of the parent."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].properties.adminState" options="admin-state" group="Properties">
              <help short="Administrative state of the physical port."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.properties.links[].properties.macSecConfig" options="mac-sec-config" group="Properties">
              <help short="MacSec configuration."/>
              <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier" options="cak-secret-identifier">
                <help short="Keyvault Secret Identifier URL containing Mac security CAK key."/>
              </arg>
              <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.cipher" options="cipher">
                <help short="Mac security cipher."/>
                <enum>
                  <item name="GcmAes128" value="&quot;GcmAes128&quot;"/>
                  <item name="GcmAes256" value="&quot;GcmAes256&quot;"/>
                  <item name="GcmAesXpn128" value="&quot;GcmAesXpn128&quot;"/>
                  <item name="GcmAesXpn256" value="&quot;GcmAesXpn256&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier" options="ckn-secret-identifier">
                <help short="Keyvault Secret Identifier URL containing Mac security CKN key."/>
              </arg>
              <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.sciState" options="sci-state">
                <help short="Sci mode enabled/disabled."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ExpressRoutePorts_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
          <request method="put">
            <path>
              <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity" arg="$parameters.identity">
                    <prop type="string" name="type" arg="$parameters.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer" name="bandwidthInGbps" arg="$parameters.properties.bandwidthInGbps"/>
                    <prop type="string" name="billingType" arg="$parameters.properties.billingType">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="encapsulation" arg="$parameters.properties.encapsulation">
                      <enum>
                        <item value="&quot;Dot1Q&quot;"/>
                        <item value="&quot;QinQ&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="links" arg="$parameters.properties.links">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.links[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.links[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="adminState" arg="$parameters.properties.links[].properties.adminState">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="macSecConfig" arg="$parameters.properties.links[].properties.macSecConfig">
                            <prop type="string" name="cakSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier"/>
                            <prop type="string" name="cipher" arg="$parameters.properties.links[].properties.macSecConfig.cipher">
                              <enum>
                                <item value="&quot;GcmAes128&quot;"/>
                                <item value="&quot;GcmAes256&quot;"/>
                                <item value="&quot;GcmAesXpn128&quot;"/>
                                <item value="&quot;GcmAesXpn256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="cknSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier"/>
                            <prop type="string" name="sciState" arg="$parameters.properties.links[].properties.macSecConfig.sciState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="peeringLocation" arg="$parameters.properties.peeringLocation"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="allocationDate"/>
                    <prop type="integer" name="bandwidthInGbps"/>
                    <prop type="string" name="billingType">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="circuits">
                      <item type="object">
                        <prop type="string" name="id"/>
                      </item>
                    </prop>
                    <prop type="string" name="encapsulation">
                      <enum>
                        <item value="&quot;Dot1Q&quot;"/>
                        <item value="&quot;QinQ&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="etherType"/>
                    <prop type="array<object>" name="links">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="adminState">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="coloLocation"/>
                          <prop readOnly="True" type="string" name="connectorType">
                            <enum>
                              <item value="&quot;LC&quot;"/>
                              <item value="&quot;SC&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="interfaceName"/>
                          <prop type="object" name="macSecConfig">
                            <prop type="string" name="cakSecretIdentifier"/>
                            <prop type="string" name="cipher">
                              <enum>
                                <item value="&quot;GcmAes128&quot;"/>
                                <item value="&quot;GcmAes256&quot;"/>
                                <item value="&quot;GcmAesXpn128&quot;"/>
                                <item value="&quot;GcmAesXpn256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="cknSecretIdentifier"/>
                            <prop type="string" name="sciState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="patchPanelId"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="rackId"/>
                          <prop readOnly="True" type="string" name="routerName"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="mtu"/>
                    <prop type="string" name="peeringLocation"/>
                    <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-06-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute port name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="integer" var="$parameters.properties.bandwidthInGbps" options="bandwidth-in-gbps" hide="True" group="">
          <help short="Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Gbps."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.encapsulation" options="encapsulation" hide="True" group="">
          <help short="Encapsulation method on physical ports.  Allowed values: Dot1Q, QinQ."/>
          <enum>
            <item name="Dot1Q" value="&quot;Dot1Q&quot;"/>
            <item name="QinQ" value="&quot;QinQ&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.peeringLocation" options="peering-location" hide="True" group="">
          <help short="The name of the peering location that the port is mapped to physically."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.identity" options="port-identity" hide="True" group="Parameters">
          <help short="The identity of ExpressRoutePort, if configured."/>
          <arg nullable="True" type="string" var="$parameters.identity.type" options="type">
            <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.billingType" options="billing-type" group="Properties">
          <help short="The billing type of the ExpressRoutePort resource."/>
          <enum>
            <item name="MeteredData" value="&quot;MeteredData&quot;"/>
            <item name="UnlimitedData" value="&quot;UnlimitedData&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.links" options="links" hide="True" group="Properties">
          <help short="The set of physical links of the ExpressRoutePort resource."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$parameters.properties.links[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.links[].name" options="name">
              <help short="Name of child port resource that is unique among child port resources of the parent."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.links[].properties.adminState" options="admin-state" group="Properties">
              <help short="Enable/Disable administrative state of an ExpressRoute Link. Allowed values: Disabled, Enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier" options="cak-secret-identifier" group="MacSecConfig">
              <help short="The connectivity association key (CAK) ID that stored in the KeyVault."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.cipher" options="cipher" group="MacSecConfig">
              <help short="Cipher Method.  Allowed values: GcmAes128, GcmAes256, GcmAesXpn128, GcmAesXpn256."/>
              <enum>
                <item name="GcmAes128" value="&quot;GcmAes128&quot;"/>
                <item name="GcmAes256" value="&quot;GcmAes256&quot;"/>
                <item name="GcmAesXpn128" value="&quot;GcmAesXpn128&quot;"/>
                <item name="GcmAesXpn256" value="&quot;GcmAesXpn256&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier" options="ckn-secret-identifier" group="MacSecConfig">
              <help short="The connectivity key name (CKN) that stored in the KeyVault."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.sciState" options="sci-state" group="MacSecConfig">
              <help short="Sci mode.  Allowed values: Disabled, Enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ExpressRoutePorts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
          <request method="get">
            <path>
              <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRoutePort_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="allocationDate"/>
                    <prop type="integer" name="bandwidthInGbps"/>
                    <prop type="string" name="billingType">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="circuits">
                      <item type="object">
                        <prop type="string" name="id"/>
                      </item>
                    </prop>
                    <prop type="string" name="encapsulation">
                      <enum>
                        <item value="&quot;Dot1Q&quot;"/>
                        <item value="&quot;QinQ&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="etherType"/>
                    <prop type="array<object>" name="links">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="adminState">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="coloLocation"/>
                          <prop readOnly="True" type="string" name="connectorType">
                            <enum>
                              <item value="&quot;LC&quot;"/>
                              <item value="&quot;SC&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="interfaceName"/>
                          <prop type="object" name="macSecConfig">
                            <prop type="string" name="cakSecretIdentifier"/>
                            <prop type="string" name="cipher">
                              <enum>
                                <item value="&quot;GcmAes128&quot;"/>
                                <item value="&quot;GcmAes256&quot;"/>
                                <item value="&quot;GcmAesXpn128&quot;"/>
                                <item value="&quot;GcmAesXpn256&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="cknSecretIdentifier"/>
                            <prop type="string" name="sciState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="patchPanelId"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="rackId"/>
                          <prop readOnly="True" type="string" name="routerName"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="mtu"/>
                    <prop type="string" name="peeringLocation"/>
                    <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
              </prop>
              <prop type="IdentityObject" name="identity" arg="$parameters.identity">
                <prop type="string" name="type" arg="$parameters.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="integer" name="bandwidthInGbps" arg="$parameters.properties.bandwidthInGbps"/>
                <prop type="string" name="billingType" arg="$parameters.properties.billingType">
                  <enum>
                    <item value="&quot;MeteredData&quot;"/>
                    <item value="&quot;UnlimitedData&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="encapsulation" arg="$parameters.properties.encapsulation">
                  <enum>
                    <item value="&quot;Dot1Q&quot;"/>
                    <item value="&quot;QinQ&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="links" arg="$parameters.properties.links">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$parameters.properties.links[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.links[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="adminState" arg="$parameters.properties.links[].properties.adminState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="macSecConfig">
                        <prop type="string" name="cakSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier"/>
                        <prop type="string" name="cipher" arg="$parameters.properties.links[].properties.macSecConfig.cipher">
                          <enum>
                            <item value="&quot;GcmAes128&quot;"/>
                            <item value="&quot;GcmAes256&quot;"/>
                            <item value="&quot;GcmAesXpn128&quot;"/>
                            <item value="&quot;GcmAesXpn256&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="cknSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier"/>
                        <prop type="string" name="sciState" arg="$parameters.properties.links[].properties.macSecConfig.sciState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="peeringLocation" arg="$parameters.properties.peeringLocation"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRoutePorts_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
          <request method="put">
            <path>
              <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRoutePort_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="identity">
      <command name="assign" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="identity" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Identity">
          <arg type="string" var="$parameters.identity.type" options="type" group="Identity">
            <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
            <default value="&quot;UserAssigned&quot;"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities" group="Identity">
            <help short="The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="IdentityObject" name="parameters.identity" required="True">
                <prop type="string" name="type" arg="$parameters.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="ExpressRoutePorts_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="put">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRoutePort_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="identity" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="name" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Parameters.identity">
          <arg nullable="True" type="string" var="$parameters.identity.type" options="type" group="Parameters.identity">
            <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities" group="Parameters.identity">
            <help short="The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="IdentityObject" name="parameters.identity" required="True">
                <prop type="string" name="type" arg="$parameters.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="ExpressRoutePorts_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="put">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRoutePort_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="identity" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="ExpressRoutePorts_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="put">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRoutePort_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="identity" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="name n" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
    <commandGroup name="link">
      <command name="list" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="properties.links" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="port-name" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.links"/>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="create" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="properties.links[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="name" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.links[].name" options="link-name" required="True">
            <help short="Name of child port resource that is unique among child port resources of the parent."/>
          </arg>
        </argGroup>
        <argGroup name="MacSecConfig">
          <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier" options="macsec-cak-secret-identifier" group="MacSecConfig">
            <help short="The connectivity association key (CAK) ID that stored in the KeyVault."/>
          </arg>
          <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.cipher" options="macsec-cipher" group="MacSecConfig">
            <help short="Cipher Method.  Allowed values: GcmAes128, GcmAes256, GcmAesXpn128, GcmAesXpn256."/>
            <enum>
              <item name="GcmAes128" value="&quot;GcmAes128&quot;"/>
              <item name="GcmAes256" value="&quot;GcmAes256&quot;"/>
              <item name="GcmAesXpn128" value="&quot;GcmAesXpn128&quot;"/>
              <item name="GcmAesXpn256" value="&quot;GcmAesXpn256&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier" options="macsec-ckn-secret-identifier" group="MacSecConfig">
            <help short="The connectivity key name (CKN) that stored in the KeyVault."/>
          </arg>
          <arg type="string" var="$parameters.properties.links[].properties.macSecConfig.sciState" options="macsec-sci-state" group="MacSecConfig">
            <help short="Sci mode.  Allowed values: Disabled, Enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="Parameters.properties.links[]">
          <arg type="ResourceId" var="$parameters.properties.links[].id" options="id" group="Parameters.properties.links[]">
            <help short="Resource ID."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg type="string" var="$parameters.properties.links[].properties.adminState" options="admin-state" group="Properties">
            <help short="Enable/Disable administrative state of an ExpressRoute Link. Allowed values: Disabled, Enabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.links">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.links[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.links[]" required="True">
                <prop type="ResourceId" name="id" arg="$parameters.properties.links[].id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                </prop>
                <prop type="string" name="name" arg="$parameters.properties.links[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="adminState" arg="$parameters.properties.links[].properties.adminState">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="macSecConfig">
                    <prop type="string" name="cakSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier"/>
                    <prop type="string" name="cipher" arg="$parameters.properties.links[].properties.macSecConfig.cipher">
                      <enum>
                        <item value="&quot;GcmAes128&quot;"/>
                        <item value="&quot;GcmAes256&quot;"/>
                        <item value="&quot;GcmAesXpn128&quot;"/>
                        <item value="&quot;GcmAesXpn256&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="cknSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier"/>
                    <prop type="string" name="sciState" arg="$parameters.properties.links[].properties.macSecConfig.sciState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="ExpressRoutePorts_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="put">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRoutePort_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="properties.links[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="port-name" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.links[].id" options="ids" group="">
            <help short="Resource ID."/>
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
          </arg>
          <arg type="string" var="$parameters.properties.links[].name" options="name n" required="True" group="">
            <help short="The link name of the ExpressRoute Port."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.links[].properties.adminState" options="admin-state" group="">
            <help short="Enable/Disable administrative state of an ExpressRoute Link."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <argGroup name="MACsec">
          <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier" options="macsec-cak-secret-identifier" group="MACsec">
            <help short="The connectivity association key (CAK) ID that stored in the KeyVault."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.cipher" options="macsec-cipher" group="MACsec">
            <help short="Cipher Method."/>
            <enum>
              <item name="GcmAes128" value="&quot;GcmAes128&quot;"/>
              <item name="GcmAes256" value="&quot;GcmAes256&quot;"/>
              <item name="GcmAesXpn128" value="&quot;GcmAesXpn128&quot;"/>
              <item name="GcmAesXpn256" value="&quot;GcmAesXpn256&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier" options="macsec-ckn-secret-identifier" group="MACsec">
            <help short="The connectivity key name (CKN) that stored in the KeyVault."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.links[].properties.macSecConfig.sciState" options="macsec-sci-state" group="MACsec">
            <help short="Sci mode."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.links">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.links[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="parameters.properties.links[]" required="True">
                <prop type="ResourceId" name="id" arg="$parameters.properties.links[].id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                </prop>
                <prop type="string" name="name" arg="$parameters.properties.links[].name"/>
                <prop type="object" name="properties" clientFlatten="True">
                  <prop type="string" name="adminState" arg="$parameters.properties.links[].properties.adminState">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="macSecConfig">
                    <prop type="string" name="cakSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cakSecretIdentifier"/>
                    <prop type="string" name="cipher" arg="$parameters.properties.links[].properties.macSecConfig.cipher">
                      <enum>
                        <item value="&quot;GcmAes128&quot;"/>
                        <item value="&quot;GcmAes256&quot;"/>
                        <item value="&quot;GcmAesXpn128&quot;"/>
                        <item value="&quot;GcmAesXpn256&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="cknSecretIdentifier" arg="$parameters.properties.links[].properties.macSecConfig.cknSecretIdentifier"/>
                    <prop type="string" name="sciState" arg="$parameters.properties.links[].properties.macSecConfig.sciState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="ExpressRoutePorts_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="put">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRoutePort_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="properties.links[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="name" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.links[].name" options="link-name" required="True">
            <help short="Name of child port resource that is unique among child port resources of the parent."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.links">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.links[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="ExpressRoutePorts_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="put">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@ExpressRoutePort_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-06-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressrouteports/{}" version="2023-06-01" subresource="properties.links[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9FeHByZXNzUm91dGVQb3J0cy97ZXhwcmVzc1JvdXRlUG9ydE5hbWV9/V/MjAyMy0wNi0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.expressRoutePortName" options="port-name" required="True" group="" idPart="name">
            <help short="ExpressRoute port name."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$parameters.properties.links[].name" options="name n" required="True" group="">
            <help short="The link name of the ExpressRoute Port."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="array" name="properties.links">
              <item type="object"/>
              <identifier type="string" name="[].name" arg="$parameters.properties.links[].name" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="ExpressRoutePorts_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}">
            <request method="get">
              <path>
                <param type="string" name="expressRoutePortName" arg="$Path.expressRoutePortName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-06-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="ExpressRoutePort_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop readOnly="True" type="string" name="allocationDate"/>
                      <prop type="integer" name="bandwidthInGbps"/>
                      <prop type="string" name="billingType">
                        <enum>
                          <item value="&quot;MeteredData&quot;"/>
                          <item value="&quot;UnlimitedData&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="circuits">
                        <item type="object">
                          <prop type="string" name="id"/>
                        </item>
                      </prop>
                      <prop type="string" name="encapsulation">
                        <enum>
                          <item value="&quot;Dot1Q&quot;"/>
                          <item value="&quot;QinQ&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="etherType"/>
                      <prop type="array<object>" name="links">
                        <item type="object">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/ExpressRoutePorts/{}/links/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="adminState">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="coloLocation"/>
                            <prop readOnly="True" type="string" name="connectorType">
                              <enum>
                                <item value="&quot;LC&quot;"/>
                                <item value="&quot;SC&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="interfaceName"/>
                            <prop type="object" name="macSecConfig">
                              <prop type="string" name="cakSecretIdentifier"/>
                              <prop type="string" name="cipher">
                                <enum>
                                  <item value="&quot;GcmAes128&quot;"/>
                                  <item value="&quot;GcmAes256&quot;"/>
                                  <item value="&quot;GcmAesXpn128&quot;"/>
                                  <item value="&quot;GcmAesXpn256&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="cknSecretIdentifier"/>
                              <prop type="string" name="sciState">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="patchPanelId"/>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="rackId"/>
                            <prop readOnly="True" type="string" name="routerName"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="mtu"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop readOnly="True" type="float" name="provisionedBandwidthInGbps"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="resourceGuid"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
