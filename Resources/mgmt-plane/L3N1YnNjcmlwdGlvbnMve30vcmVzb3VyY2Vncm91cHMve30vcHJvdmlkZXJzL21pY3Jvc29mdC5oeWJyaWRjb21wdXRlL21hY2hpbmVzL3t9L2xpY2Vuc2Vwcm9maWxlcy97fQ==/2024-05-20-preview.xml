<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/licenseprofiles/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L2xpY2Vuc2VQcm9maWxlcy97bGljZW5zZVByb2ZpbGVOYW1lfQ==/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
  <commandGroup name="connectedmachine license-profile">
    <command name="show" version="2024-05-20-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/licenseprofiles/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L2xpY2Vuc2VQcm9maWxlcy97bGljZW5zZVByb2ZpbGVOYW1lfQ==/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.licenseProfileName" options="license-profile-name name n" required="True" idPart="child_name_1">
          <help short="The name of the license profile."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="LicenseProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}">
          <request method="get">
            <path>
              <param type="string" name="licenseProfileName" arg="$Path.licenseProfileName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/machines/{}/licenseProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="esuProfile" clientFlatten="True">
                      <prop type="string" name="assignedLicense"/>
                      <prop readOnly="True" type="string" name="assignedLicenseImmutableId"/>
                      <prop readOnly="True" type="string" name="esuEligibility">
                        <enum>
                          <item value="&quot;Eligible&quot;"/>
                          <item value="&quot;Ineligible&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="esuKeyState">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Inactive&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="esuKeys">
                        <item type="object">
                          <prop type="integer32" name="licenseStatus"/>
                          <prop type="string" name="sku"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="serverType">
                        <enum>
                          <item value="&quot;Datacenter&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="productProfile" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="billingEndDate"/>
                      <prop readOnly="True" type="dateTime" name="billingStartDate"/>
                      <prop readOnly="True" type="dateTime" name="disenrollmentDate"/>
                      <prop readOnly="True" type="dateTime" name="enrollmentDate"/>
                      <prop readOnly="True" type="object" name="error" cls="ErrorDetail_read">
                        <prop readOnly="True" type="array<object>" name="additionalInfo">
                          <item type="object">
                            <prop readOnly="True" type="object" name="info"/>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                          <item type="@ErrorDetail_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="target"/>
                      </prop>
                      <prop type="array<object>" name="productFeatures">
                        <item type="object">
                          <prop readOnly="True" type="dateTime" name="billingEndDate"/>
                          <prop readOnly="True" type="dateTime" name="billingStartDate"/>
                          <prop readOnly="True" type="dateTime" name="disenrollmentDate"/>
                          <prop readOnly="True" type="dateTime" name="enrollmentDate"/>
                          <prop readOnly="True" type="@ErrorDetail_read" name="error"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="subscriptionStatus">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Disabling&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;Enabling&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="productType">
                        <enum>
                          <item value="&quot;WindowsIoTEnterprise&quot;"/>
                          <item value="&quot;WindowsServer&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subscriptionStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Enabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="softwareAssurance" clientFlatten="True">
                      <prop type="boolean" name="softwareAssuranceCustomer"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-05-20-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/licenseprofiles/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L2xpY2Vuc2VQcm9maWxlcy97bGljZW5zZVByb2ZpbGVOYW1lfQ==/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.licenseProfileName" options="license-profile-name name n" required="True" idPart="child_name_1">
          <help short="The name of the license profile."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="LicenseProfiles_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}">
          <request method="delete">
            <path>
              <param type="string" name="licenseProfileName" arg="$Path.licenseProfileName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-05-20-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/licenseprofiles/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L2xpY2Vuc2VQcm9maWxlcy97bGljZW5zZVByb2ZpbGVOYW1lfQ==/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.licenseProfileName" options="license-profile-name name n" required="True" idPart="child_name_1">
          <help short="The name of the license profile."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="EsuProfile">
        <arg type="string" var="$parameters.properties.esuProfile.assignedLicense" options="assigned-license" group="EsuProfile">
          <help short="The resource id of the license."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="ProductProfile">
        <arg type="array<object>" var="$parameters.properties.productProfile.productFeatures" options="product-features" group="ProductProfile">
          <help short="The list of product features."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.productProfile.productFeatures[].name" options="name">
              <help short="Product feature name."/>
            </arg>
            <arg type="string" var="$parameters.properties.productProfile.productFeatures[].subscriptionStatus" options="subscription-status">
              <help short="Indicates the current status of the product features."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Disabling" value="&quot;Disabling&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
                <item name="Enabling" value="&quot;Enabling&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="Unknown" value="&quot;Unknown&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.productProfile.productType" options="product-type" group="ProductProfile">
          <help short="Indicates the product type of the license."/>
          <enum>
            <item name="WindowsIoTEnterprise" value="&quot;WindowsIoTEnterprise&quot;"/>
            <item name="WindowsServer" value="&quot;WindowsServer&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.productProfile.subscriptionStatus" options="subscription-status" group="ProductProfile">
          <help short="Indicates the subscription status of the product."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Disabling" value="&quot;Disabling&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="Enabling" value="&quot;Enabling&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="SoftwareAssurance">
        <arg type="boolean" var="$parameters.properties.softwareAssurance.softwareAssuranceCustomer" options="software-assurance-customer" group="SoftwareAssurance">
          <help short="Specifies if this machine is licensed as part of a Software Assurance agreement."/>
        </arg>
      </argGroup>
      <operation operationId="LicenseProfiles_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}">
          <request method="put">
            <path>
              <param type="string" name="licenseProfileName" arg="$Path.licenseProfileName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="esuProfile" clientFlatten="True">
                      <prop type="string" name="assignedLicense" arg="$parameters.properties.esuProfile.assignedLicense"/>
                    </prop>
                    <prop type="object" name="productProfile" clientFlatten="True">
                      <prop type="array<object>" name="productFeatures" arg="$parameters.properties.productProfile.productFeatures">
                        <item type="object">
                          <prop type="string" name="name" arg="$parameters.properties.productProfile.productFeatures[].name"/>
                          <prop type="string" name="subscriptionStatus" arg="$parameters.properties.productProfile.productFeatures[].subscriptionStatus">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Disabling&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;Enabling&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="productType" arg="$parameters.properties.productProfile.productType">
                        <enum>
                          <item value="&quot;WindowsIoTEnterprise&quot;"/>
                          <item value="&quot;WindowsServer&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subscriptionStatus" arg="$parameters.properties.productProfile.subscriptionStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Enabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="softwareAssurance" clientFlatten="True">
                      <prop type="boolean" name="softwareAssuranceCustomer" arg="$parameters.properties.softwareAssurance.softwareAssuranceCustomer"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/machines/{}/licenseProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="esuProfile" clientFlatten="True">
                      <prop type="string" name="assignedLicense"/>
                      <prop readOnly="True" type="string" name="assignedLicenseImmutableId"/>
                      <prop readOnly="True" type="string" name="esuEligibility">
                        <enum>
                          <item value="&quot;Eligible&quot;"/>
                          <item value="&quot;Ineligible&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="esuKeyState">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Inactive&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="esuKeys">
                        <item type="object">
                          <prop type="integer32" name="licenseStatus"/>
                          <prop type="string" name="sku"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="serverType">
                        <enum>
                          <item value="&quot;Datacenter&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="productProfile" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="billingEndDate"/>
                      <prop readOnly="True" type="dateTime" name="billingStartDate"/>
                      <prop readOnly="True" type="dateTime" name="disenrollmentDate"/>
                      <prop readOnly="True" type="dateTime" name="enrollmentDate"/>
                      <prop readOnly="True" type="object" name="error" cls="ErrorDetail_read">
                        <prop readOnly="True" type="array<object>" name="additionalInfo">
                          <item type="object">
                            <prop readOnly="True" type="object" name="info"/>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                          <item type="@ErrorDetail_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="target"/>
                      </prop>
                      <prop type="array<object>" name="productFeatures">
                        <item type="object">
                          <prop readOnly="True" type="dateTime" name="billingEndDate"/>
                          <prop readOnly="True" type="dateTime" name="billingStartDate"/>
                          <prop readOnly="True" type="dateTime" name="disenrollmentDate"/>
                          <prop readOnly="True" type="dateTime" name="enrollmentDate"/>
                          <prop readOnly="True" type="@ErrorDetail_read" name="error"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="subscriptionStatus">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Disabling&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;Enabling&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="productType">
                        <enum>
                          <item value="&quot;WindowsIoTEnterprise&quot;"/>
                          <item value="&quot;WindowsServer&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subscriptionStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Enabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="softwareAssurance" clientFlatten="True">
                      <prop type="boolean" name="softwareAssuranceCustomer"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-05-20-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/licenseprofiles/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L2xpY2Vuc2VQcm9maWxlcy97bGljZW5zZVByb2ZpbGVOYW1lfQ==/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.licenseProfileName" options="license-profile-name name n" required="True" idPart="child_name_1">
          <help short="The name of the license profile."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="EsuProfile">
        <arg nullable="True" type="string" var="$parameters.properties.esuProfile.assignedLicense" options="assigned-license" group="EsuProfile">
          <help short="The resource id of the license."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="ProductProfile">
        <arg nullable="True" type="array<object>" var="$parameters.properties.productProfile.productFeatures" options="product-features" group="ProductProfile">
          <help short="The list of product features."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.productProfile.productFeatures[].name" options="name">
              <help short="Product feature name."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.productProfile.productFeatures[].subscriptionStatus" options="subscription-status">
              <help short="Indicates the current status of the product features."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Disabling" value="&quot;Disabling&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
                <item name="Enabling" value="&quot;Enabling&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="Unknown" value="&quot;Unknown&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.productProfile.productType" options="product-type" group="ProductProfile">
          <help short="Indicates the product type of the license."/>
          <enum>
            <item name="WindowsIoTEnterprise" value="&quot;WindowsIoTEnterprise&quot;"/>
            <item name="WindowsServer" value="&quot;WindowsServer&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.productProfile.subscriptionStatus" options="subscription-status" group="ProductProfile">
          <help short="Indicates the subscription status of the product."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Disabling" value="&quot;Disabling&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="Enabling" value="&quot;Enabling&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="SoftwareAssurance">
        <arg nullable="True" type="boolean" var="$parameters.properties.softwareAssurance.softwareAssuranceCustomer" options="software-assurance-customer" group="SoftwareAssurance">
          <help short="Specifies if this machine is licensed as part of a Software Assurance agreement."/>
        </arg>
      </argGroup>
      <operation operationId="LicenseProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}">
          <request method="get">
            <path>
              <param type="string" name="licenseProfileName" arg="$Path.licenseProfileName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="LicenseProfile_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/machines/{}/licenseProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="esuProfile" clientFlatten="True">
                      <prop type="string" name="assignedLicense"/>
                      <prop readOnly="True" type="string" name="assignedLicenseImmutableId"/>
                      <prop readOnly="True" type="string" name="esuEligibility">
                        <enum>
                          <item value="&quot;Eligible&quot;"/>
                          <item value="&quot;Ineligible&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="esuKeyState">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Inactive&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="esuKeys">
                        <item type="object">
                          <prop type="integer32" name="licenseStatus"/>
                          <prop type="string" name="sku"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="serverType">
                        <enum>
                          <item value="&quot;Datacenter&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="productProfile" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="billingEndDate"/>
                      <prop readOnly="True" type="dateTime" name="billingStartDate"/>
                      <prop readOnly="True" type="dateTime" name="disenrollmentDate"/>
                      <prop readOnly="True" type="dateTime" name="enrollmentDate"/>
                      <prop readOnly="True" type="object" name="error" cls="ErrorDetail_read">
                        <prop readOnly="True" type="array<object>" name="additionalInfo">
                          <item type="object">
                            <prop readOnly="True" type="object" name="info"/>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                          <item type="@ErrorDetail_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="target"/>
                      </prop>
                      <prop type="array<object>" name="productFeatures">
                        <item type="object">
                          <prop readOnly="True" type="dateTime" name="billingEndDate"/>
                          <prop readOnly="True" type="dateTime" name="billingStartDate"/>
                          <prop readOnly="True" type="dateTime" name="disenrollmentDate"/>
                          <prop readOnly="True" type="dateTime" name="enrollmentDate"/>
                          <prop readOnly="True" type="@ErrorDetail_read" name="error"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="subscriptionStatus">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Disabling&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;Enabling&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="productType">
                        <enum>
                          <item value="&quot;WindowsIoTEnterprise&quot;"/>
                          <item value="&quot;WindowsServer&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subscriptionStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Enabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="softwareAssurance" clientFlatten="True">
                      <prop type="boolean" name="softwareAssuranceCustomer"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="esuProfile" clientFlatten="True">
                  <prop type="string" name="assignedLicense" arg="$parameters.properties.esuProfile.assignedLicense"/>
                </prop>
                <prop type="object" name="productProfile" clientFlatten="True">
                  <prop type="array<object>" name="productFeatures" arg="$parameters.properties.productProfile.productFeatures">
                    <item type="object">
                      <prop type="string" name="name" arg="$parameters.properties.productProfile.productFeatures[].name"/>
                      <prop type="string" name="subscriptionStatus" arg="$parameters.properties.productProfile.productFeatures[].subscriptionStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Enabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="productType" arg="$parameters.properties.productProfile.productType">
                    <enum>
                      <item value="&quot;WindowsIoTEnterprise&quot;"/>
                      <item value="&quot;WindowsServer&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="subscriptionStatus" arg="$parameters.properties.productProfile.subscriptionStatus">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Disabling&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                      <item value="&quot;Enabling&quot;"/>
                      <item value="&quot;Failed&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="softwareAssurance" clientFlatten="True">
                  <prop type="boolean" name="softwareAssuranceCustomer" arg="$parameters.properties.softwareAssurance.softwareAssuranceCustomer"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="LicenseProfiles_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}">
          <request method="put">
            <path>
              <param type="string" name="licenseProfileName" arg="$Path.licenseProfileName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@LicenseProfile_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
