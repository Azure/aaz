<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXM=/V/MjAyNC0wMS0wMQ=="/>
  <commandGroup name="storage share-rm">
    <command name="list" version="2024-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXM=/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="storage-account account-name" required="True" group="" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand" group="">
          <help short="Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','"/>
        </arg>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="Optional. When specified, only share names starting with the filter will be listed."/>
        </arg>
        <arg type="string" var="$Query.maxpagesize" options="maxpagesize">
          <help short="Optional. Specified maximum number of shares that can be included in the list."/>
        </arg>
      </argGroup>
      <operation operationId="FileShares_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="string" name="$maxpagesize" arg="$Query.maxpagesize"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="string" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="accessTier">
                          <enum>
                            <item value="&quot;Cool&quot;"/>
                            <item value="&quot;Hot&quot;"/>
                            <item value="&quot;Premium&quot;"/>
                            <item value="&quot;TransactionOptimized&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="accessTierChangeTime"/>
                        <prop readOnly="True" type="string" name="accessTierStatus"/>
                        <prop readOnly="True" type="boolean" name="deleted"/>
                        <prop readOnly="True" type="dateTime" name="deletedTime"/>
                        <prop type="string" name="enabledProtocols">
                          <enum>
                            <item value="&quot;NFS&quot;"/>
                            <item value="&quot;SMB&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="fileSharePaidBursting">
                          <prop type="boolean" name="paidBurstingEnabled"/>
                          <prop type="integer32" name="paidBurstingMaxBandwidthMibps"/>
                          <prop type="integer32" name="paidBurstingMaxIops"/>
                        </prop>
                        <prop readOnly="True" type="integer32" name="includedBurstIops"/>
                        <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                        <prop readOnly="True" type="string" name="leaseDuration">
                          <enum>
                            <item value="&quot;Fixed&quot;"/>
                            <item value="&quot;Infinite&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="leaseState">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;Breaking&quot;"/>
                            <item value="&quot;Broken&quot;"/>
                            <item value="&quot;Expired&quot;"/>
                            <item value="&quot;Leased&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="leaseStatus">
                          <enum>
                            <item value="&quot;Locked&quot;"/>
                            <item value="&quot;Unlocked&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer64" name="maxBurstCreditsForIops"/>
                        <prop type="object" name="metadata">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="nextAllowedProvisionedBandwidthDowngradeTime"/>
                        <prop readOnly="True" type="dateTime" name="nextAllowedProvisionedIopsDowngradeTime"/>
                        <prop readOnly="True" type="dateTime" name="nextAllowedQuotaDowngradeTime"/>
                        <prop type="integer32" name="provisionedBandwidthMibps"/>
                        <prop type="integer32" name="provisionedIops"/>
                        <prop readOnly="True" type="integer" name="remainingRetentionDays"/>
                        <prop type="string" name="rootSquash">
                          <enum>
                            <item value="&quot;AllSquash&quot;"/>
                            <item value="&quot;NoRootSquash&quot;"/>
                            <item value="&quot;RootSquash&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="shareQuota"/>
                        <prop readOnly="True" type="integer64" name="shareUsageBytes"/>
                        <prop type="array<object>" name="signedIdentifiers">
                          <item type="object">
                            <prop type="object" name="accessPolicy">
                              <prop type="dateTime" name="expiryTime"/>
                              <prop type="string" name="permission"/>
                              <prop type="dateTime" name="startTime"/>
                            </prop>
                            <prop type="string" name="id"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="snapshotTime"/>
                        <prop readOnly="True" type="string" name="version"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
