<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{scope}/providers/microsoft.help/discoverysolutions" version="2023-09-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL2Rpc2NvdmVyeVNvbHV0aW9ucw==/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
  <commandGroup name="self-help discovery-solution">
    <command name="list" version="2023-09-01-preview" confirmation="">
      <resource id="/{scope}/providers/microsoft.help/discoverysolutions" version="2023-09-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL2Rpc2NvdmVyeVNvbHV0aW9ucw==/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="This is an extension resource provider and only resource level extension is supported at the moment."/>
        </arg>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="'ProblemClassificationId' or 'Id' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The filter supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'"/>
        </arg>
        <arg type="string" var="$Query.skiptoken" options="skiptoken">
          <help short="Skiptoken is only used if a previous operation returned a partial result."/>
        </arg>
      </argGroup>
      <operation operationId="DiscoverySolution_List">
        <http path="/{scope}/providers/Microsoft.Help/discoverySolutions">
          <request method="get">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="string" name="$skiptoken" arg="$Query.skiptoken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="solutions">
                          <item type="object">
                            <prop readOnly="True" type="string" name="description"/>
                            <prop readOnly="True" type="array<string>" name="requiredInputs">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="solutionId"/>
                            <prop readOnly="True" type="string" name="solutionType">
                              <enum>
                                <item value="&quot;Diagnostics&quot;"/>
                                <item value="&quot;Solutions&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
