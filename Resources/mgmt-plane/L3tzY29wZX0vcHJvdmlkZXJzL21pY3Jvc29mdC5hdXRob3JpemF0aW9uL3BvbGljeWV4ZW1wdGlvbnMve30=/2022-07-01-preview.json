{"plane": "mgmt-plane", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyexemptions/{}", "version": "2022-07-01-preview", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUV4ZW1wdGlvbnMve3BvbGljeUV4ZW1wdGlvbk5hbWV9/V/MjAyMi0wNy0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "policy exemption", "commands": [{"name": "show", "version": "2022-07-01-preview", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyexemptions/{}", "version": "2022-07-01-preview", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUV4ZW1wdGlvbnMve3BvbGljeUV4ZW1wdGlvbk5hbWV9/V/MjAyMi0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyExemptionName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy exemption."}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}], "operations": [{"operationId": "PolicyExemptions_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyExemptionName", "arg": "$Path.policyExemptionName", "required": true}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-07-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Default"}, "type": "string", "name": "assignmentScopeValidation", "enum": {"items": [{"value": "Default"}, {"value": "DoNotValidate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"type": "string", "name": "exemptionCategory", "required": true, "enum": {"items": [{"value": "Mitigated"}, {"value": "Waiver"}]}}, {"type": "dateTime", "name": "expiresOn"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "string", "name": "policyAssignmentId", "required": true}, {"type": "array<string>", "name": "policyDefinitionReferenceIds", "item": {"type": "string"}}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}]}}]}, "identifiers": ["name"]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2022-07-01-preview", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyexemptions/{}", "version": "2022-07-01-preview", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUV4ZW1wdGlvbnMve3BvbGljeUV4ZW1wdGlvbk5hbWV9/V/MjAyMi0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyExemptionName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy exemption."}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}], "operations": [{"operationId": "PolicyExemptions_Delete", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "policyExemptionName", "arg": "$Path.policyExemptionName", "required": true}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-07-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2022-07-01-preview", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyexemptions/{}", "version": "2022-07-01-preview", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUV4ZW1wdGlvbnMve3BvbGljeUV4ZW1wdGlvbk5hbWV9/V/MjAyMi0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyExemptionName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy exemption."}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}, {"name": "Properties", "args": [{"type": "string", "var": "$parameters.properties.assignmentScopeValidation", "options": ["v", "assignment-scope-validation"], "group": "Properties", "help": {"short": "The assignment scope validation", "lines": ["Indicates the type of validation to perform on the assignment scope. Valid values are Default, DoNotValidate."]}, "default": {"value": "Default"}, "enum": {"items": [{"name": "Default", "value": "Default"}, {"name": "DoNotValidate", "value": "DoNotValidate"}]}}, {"type": "string", "var": "$parameters.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "Policy exemption description.", "lines": ["Full description of the policy exemption."]}}, {"type": "string", "var": "$parameters.properties.displayName", "options": ["display-name"], "group": "Properties", "help": {"short": "The display name of the policy exemption.", "lines": ["The display name of the policy exemption is not part of its ID, allowing for longer and more flexible naming."]}}, {"type": "string", "var": "$parameters.properties.exemptionCategory", "options": ["e", "exemption-category"], "required": true, "group": "Properties", "help": {"short": "The policy exemption category.", "lines": ["The policy exemption category. Possible values are Mitigated and Waiver."]}, "enum": {"items": [{"name": "Mitigated", "value": "Mitigated"}, {"name": "Waiver", "value": "Waiver"}]}}, {"type": "dateTime", "var": "$parameters.properties.expiresOn", "options": ["expires-on"], "group": "Properties", "help": {"short": "The expiration date and time.", "lines": ["The expiration date and time of the policy exemption in UTC ISO 8601 format, e.g. yyyy-MM-ddTHH:mm:ssZ."]}}, {"type": "object", "var": "$parameters.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "The policy exemption metadata.", "lines": ["The policy exemption metadata. Metadata is an open-ended object and is typically a collection of key value pairs."]}, "additionalProps": {"item": {"type": "any"}}}, {"type": "string", "var": "$parameters.properties.policyAssignmentId", "options": ["a", "policy-assignment"], "required": true, "group": "Properties", "help": {"short": "The policy assignment to exempt.", "lines": ["The resource ID of the policy assignment to exempt."]}}, {"type": "array<string>", "var": "$parameters.properties.policyDefinitionReferenceIds", "options": ["r", "policy-definition-reference-ids"], "group": "Properties", "help": {"short": "The policy definition reference IDs.", "lines": ["The collection of policy definition reference IDs to exempt when the policy assignment is an assignment of a policy set definition."]}, "item": {"type": "string"}}, {"type": "array<object>", "var": "$parameters.properties.resourceSelectors", "options": ["resource-selectors"], "group": "Properties", "help": {"short": "The resource selectors list to filter policies by resource properties.", "lines": ["The collection of resource selector expressions used to filter policy exemption applicability by certain resource property values."]}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.resourceSelectors[].name", "options": ["name"], "help": {"short": "The name of the resource selector."}}, {"type": "array<object>", "var": "$parameters.properties.resourceSelectors[].selectors", "options": ["selectors"], "help": {"short": "The list of the selector expressions."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$parameters.properties.resourceSelectors[].selectors[].in", "options": ["in"], "help": {"short": "The list of values to filter in."}, "item": {"type": "string"}}, {"type": "string", "var": "$parameters.properties.resourceSelectors[].selectors[].kind", "options": ["kind"], "help": {"short": "The selector kind."}, "enum": {"items": [{"name": "policyDefinitionReferenceId", "value": "policyDefinitionReferenceId"}, {"name": "resourceLocation", "value": "resourceLocation"}, {"name": "resourceType", "value": "resourceType"}, {"name": "resourceWithoutLocation", "value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "var": "$parameters.properties.resourceSelectors[].selectors[].notIn", "options": ["not-in"], "help": {"short": "The list of values to filter out."}, "item": {"type": "string"}}]}}]}}]}], "operations": [{"operationId": "PolicyExemptions_CreateOrUpdate", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyExemptionName", "arg": "$Path.policyExemptionName", "required": true}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-07-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Default"}, "type": "string", "name": "assignmentScopeValidation", "arg": "$parameters.properties.assignmentScopeValidation", "enum": {"items": [{"value": "Default"}, {"value": "DoNotValidate"}]}}, {"type": "string", "name": "description", "arg": "$parameters.properties.description"}, {"type": "string", "name": "displayName", "arg": "$parameters.properties.displayName"}, {"type": "string", "name": "exemptionCategory", "arg": "$parameters.properties.exemptionCategory", "required": true, "enum": {"items": [{"value": "Mitigated"}, {"value": "Waiver"}]}}, {"type": "dateTime", "name": "expiresOn", "arg": "$parameters.properties.expiresOn"}, {"type": "object", "name": "metadata", "arg": "$parameters.properties.metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "string", "name": "policyAssignmentId", "arg": "$parameters.properties.policyAssignmentId", "required": true}, {"type": "array<string>", "name": "policyDefinitionReferenceIds", "arg": "$parameters.properties.policyDefinitionReferenceIds", "item": {"type": "string"}}, {"type": "array<object>", "name": "resourceSelectors", "arg": "$parameters.properties.resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.resourceSelectors[].name"}, {"type": "array<object>", "name": "selectors", "arg": "$parameters.properties.resourceSelectors[].selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "arg": "$parameters.properties.resourceSelectors[].selectors[].in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "arg": "$parameters.properties.resourceSelectors[].selectors[].kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "arg": "$parameters.properties.resourceSelectors[].selectors[].notIn", "item": {"type": "string"}}]}}]}, "identifiers": ["name"]}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Default"}, "type": "string", "name": "assignmentScopeValidation", "enum": {"items": [{"value": "Default"}, {"value": "DoNotValidate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"type": "string", "name": "exemptionCategory", "required": true, "enum": {"items": [{"value": "Mitigated"}, {"value": "Waiver"}]}}, {"type": "dateTime", "name": "expiresOn"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "string", "name": "policyAssignmentId", "required": true}, {"type": "array<string>", "name": "policyDefinitionReferenceIds", "item": {"type": "string"}}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}]}}]}, "identifiers": ["name"]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2022-07-01-preview", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyexemptions/{}", "version": "2022-07-01-preview", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUV4ZW1wdGlvbnMve3BvbGljeUV4ZW1wdGlvbk5hbWV9/V/MjAyMi0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyExemptionName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy exemption."}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.assignmentScopeValidation", "options": ["v", "assignment-scope-validation"], "group": "Properties", "help": {"short": "The assignment scope validation", "lines": ["Indicates the type of validation to perform on the assignment scope. Valid values are Default, DoNotValidate."]}, "enum": {"items": [{"name": "Default", "value": "Default"}, {"name": "DoNotValidate", "value": "DoNotValidate"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "Policy exemption description.", "lines": ["Full description of the policy exemption."]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.displayName", "options": ["display-name"], "group": "Properties", "help": {"short": "The display name of the policy exemption.", "lines": ["The display name of the policy exemption is not part of its ID, allowing for longer and more flexible naming."]}}, {"type": "string", "var": "$parameters.properties.exemptionCategory", "options": ["e", "exemption-category"], "group": "Properties", "help": {"short": "The policy exemption category.", "lines": ["The policy exemption category. Possible values are Mitigated and Waiver."]}, "enum": {"items": [{"name": "Mitigated", "value": "Mitigated"}, {"name": "Waiver", "value": "Waiver"}]}}, {"nullable": true, "type": "dateTime", "var": "$parameters.properties.expiresOn", "options": ["expires-on"], "group": "Properties", "help": {"short": "The expiration date and time.", "lines": ["The expiration date and time of the policy exemption in UTC ISO 8601 format, e.g. yyyy-MM-ddTHH:mm:ssZ."]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "The policy exemption metadata.", "lines": ["The policy exemption metadata. Metadata is an open-ended object and is typically a collection of key value pairs."]}, "additionalProps": {"item": {"nullable": true, "type": "any"}}}, {"type": "string", "var": "$parameters.properties.policyAssignmentId", "options": ["a", "policy-assignment"], "group": "Properties", "help": {"short": "The policy assignment to exempt.", "lines": ["The resource ID of the policy assignment to exempt."]}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.policyDefinitionReferenceIds", "options": ["r", "policy-definition-reference-ids"], "group": "Properties", "help": {"short": "The policy definition reference IDs.", "lines": ["The collection of policy definition reference IDs to exempt when the policy assignment is an assignment of a policy set definition."]}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.resourceSelectors", "options": ["resource-selectors"], "group": "Properties", "help": {"short": "The resource selectors list to filter policies by resource properties.", "lines": ["The collection of resource selector expressions used to filter policy exemption applicability by certain resource property values."]}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.resourceSelectors[].name", "options": ["name"], "help": {"short": "The name of the resource selector."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.resourceSelectors[].selectors", "options": ["selectors"], "help": {"short": "The list of the selector expressions."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.resourceSelectors[].selectors[].in", "options": ["in"], "help": {"short": "The list of values to filter in."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.resourceSelectors[].selectors[].kind", "options": ["kind"], "help": {"short": "The selector kind."}, "enum": {"items": [{"name": "policyDefinitionReferenceId", "value": "policyDefinitionReferenceId"}, {"name": "resourceLocation", "value": "resourceLocation"}, {"name": "resourceType", "value": "resourceType"}, {"name": "resourceWithoutLocation", "value": "resourceWithoutLocation"}]}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.resourceSelectors[].selectors[].notIn", "options": ["not-in"], "help": {"short": "The list of values to filter out."}, "item": {"nullable": true, "type": "string"}}]}}]}}]}], "operations": [{"operationId": "PolicyExemptions_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyExemptionName", "arg": "$Path.policyExemptionName", "required": true}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-07-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Default"}, "type": "string", "name": "assignmentScopeValidation", "enum": {"items": [{"value": "Default"}, {"value": "DoNotValidate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"type": "string", "name": "exemptionCategory", "required": true, "enum": {"items": [{"value": "Mitigated"}, {"value": "Waiver"}]}}, {"type": "dateTime", "name": "expiresOn"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "string", "name": "policyAssignmentId", "required": true}, {"type": "array<string>", "name": "policyDefinitionReferenceIds", "item": {"type": "string"}}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}]}}]}, "identifiers": ["name"]}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyExemption_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": "Default"}, "type": "string", "name": "assignmentScopeValidation", "arg": "$parameters.properties.assignmentScopeValidation", "enum": {"items": [{"value": "Default"}, {"value": "DoNotValidate"}]}}, {"type": "string", "name": "description", "arg": "$parameters.properties.description"}, {"type": "string", "name": "displayName", "arg": "$parameters.properties.displayName"}, {"type": "string", "name": "exemptionCategory", "arg": "$parameters.properties.exemptionCategory", "required": true, "enum": {"items": [{"value": "Mitigated"}, {"value": "Waiver"}]}}, {"type": "dateTime", "name": "expiresOn", "arg": "$parameters.properties.expiresOn"}, {"type": "object", "name": "metadata", "arg": "$parameters.properties.metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "string", "name": "policyAssignmentId", "arg": "$parameters.properties.policyAssignmentId", "required": true}, {"type": "array<string>", "name": "policyDefinitionReferenceIds", "arg": "$parameters.properties.policyDefinitionReferenceIds", "item": {"type": "string"}}, {"type": "array<object>", "name": "resourceSelectors", "arg": "$parameters.properties.resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.resourceSelectors[].name"}, {"type": "array<object>", "name": "selectors", "arg": "$parameters.properties.resourceSelectors[].selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "arg": "$parameters.properties.resourceSelectors[].selectors[].in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "arg": "$parameters.properties.resourceSelectors[].selectors[].kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "arg": "$parameters.properties.resourceSelectors[].selectors[].notIn", "item": {"type": "string"}}]}}]}, "identifiers": ["name"]}], "clientFlatten": true}], "clientFlatten": true}}}}, {"operationId": "PolicyExemptions_CreateOrUpdate", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyExemptionName", "arg": "$Path.policyExemptionName", "required": true}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-07-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyExemption_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}