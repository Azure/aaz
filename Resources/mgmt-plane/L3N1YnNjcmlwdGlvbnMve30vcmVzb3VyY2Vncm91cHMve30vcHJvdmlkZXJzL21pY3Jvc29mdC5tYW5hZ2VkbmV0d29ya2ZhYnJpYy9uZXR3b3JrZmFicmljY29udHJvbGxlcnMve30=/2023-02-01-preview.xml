<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabriccontrollers/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY0NvbnRyb2xsZXJzL3tuZXR3b3JrRmFicmljQ29udHJvbGxlck5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkfabric controller">
    <command name="show" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabriccontrollers/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY0NvbnRyb2xsZXJzL3tuZXR3b3JrRmFicmljQ29udHJvbGxlck5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricControllerName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric Controller"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabricControllers_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}">
          <request method="get">
            <path>
              <param type="string" name="networkFabricControllerName" arg="$Path.networkFabricControllerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation"/>
                    <prop type="array<object>" name="infrastructureExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="object" cls="ExpressRouteConnectionInformation_read">
                        <prop type="string" name="expressRouteAuthorizationKey" required="True" secret="True"/>
                        <prop type="string" name="expressRouteCircuitId" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="object" name="infrastructureServices">
                      <prop type="array<string>" name="ipv4AddressSpaces">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipv6AddressSpaces">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="ipv4AddressSpace"/>
                    <prop type="string" name="ipv6AddressSpace"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="location"/>
                      <prop type="string" name="name"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="networkFabricIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="operationalState">
                      <enum>
                        <item value="&quot;Configuring&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@ExpressRouteConnectionInformation_read>" name="workloadExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="@ExpressRouteConnectionInformation_read"/>
                    </prop>
                    <prop readOnly="True" type="boolean" name="workloadManagementNetwork">
                      <default value="true"/>
                    </prop>
                    <prop readOnly="True" type="object" name="workloadServices">
                      <prop type="array<string>" name="ipv4AddressSpaces">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipv6AddressSpaces">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabriccontrollers/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY0NvbnRyb2xsZXJzL3tuZXR3b3JrRmFicmljQ29udHJvbGxlck5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricControllerName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric Controller"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabricControllers_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}">
          <request method="delete">
            <path>
              <param type="string" name="networkFabricControllerName" arg="$Path.networkFabricControllerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabriccontrollers/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY0NvbnRyb2xsZXJzL3tuZXR3b3JrRmFicmljQ29udHJvbGxlck5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricControllerName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric Controller"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="Location of Azure region"/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Switch configuration description."/>
        </arg>
        <arg type="array<object>" var="$body.properties.infrastructureExpressRouteConnections" options="infra-er-connections" group="Properties">
          <help short="Infra ER connections to manage infra resources."/>
          <item type="object" cls="ExpressRouteConnectionInformation_create">
            <arg type="string" var="@ExpressRouteConnectionInformation_create.expressRouteAuthorizationKey" options="express-route-authorization-key" required="True" group="">
              <help short="Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations."/>
            </arg>
            <arg type="string" var="@ExpressRouteConnectionInformation_create.expressRouteCircuitId" options="express-route-circuit-id" required="True" group="">
              <help short="The name of express route circuit, must be of type Microsoft.NetworkexpressRouteCircuits/circuitName."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$body.properties.ipv4AddressSpace" options="ipv4-address-space" group="Properties">
          <help short="IPv4 Network Fabric Controller Address Space."/>
        </arg>
        <arg type="string" var="$body.properties.ipv6AddressSpace" options="ipv6-address-space" group="Properties">
          <help short="IPv6 Network Fabric Controller Address Space."/>
        </arg>
        <arg type="object" var="$body.properties.managedResourceGroupConfiguration" options="managed-resource-group-configuration mrg" group="Properties">
          <help short="Managed Resource Group configuration properties."/>
          <arg type="string" var="$body.properties.managedResourceGroupConfiguration.location" options="location">
            <help short="Managed resource group location."/>
          </arg>
          <arg type="string" var="$body.properties.managedResourceGroupConfiguration.name" options="name">
            <help short="The NFC service will be hosted in a Managed resource group."/>
          </arg>
        </arg>
        <arg type="array<@ExpressRouteConnectionInformation_create>" var="$body.properties.workloadExpressRouteConnections" options="workload-er-connections" group="Properties">
          <help short="workload management Network for hosting Proxy, NTP and DNS for workloads."/>
          <item type="@ExpressRouteConnectionInformation_create"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabricControllers_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}">
          <request method="put">
            <path>
              <param type="string" name="networkFabricControllerName" arg="$Path.networkFabricControllerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="array<object>" name="infrastructureExpressRouteConnections" arg="$body.properties.infrastructureExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="object" cls="ExpressRouteConnectionInformation_create">
                        <prop type="string" name="expressRouteAuthorizationKey" arg="@ExpressRouteConnectionInformation_create.expressRouteAuthorizationKey" required="True" secret="True"/>
                        <prop type="string" name="expressRouteCircuitId" arg="@ExpressRouteConnectionInformation_create.expressRouteCircuitId" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="ipv4AddressSpace" arg="$body.properties.ipv4AddressSpace"/>
                    <prop type="string" name="ipv6AddressSpace" arg="$body.properties.ipv6AddressSpace"/>
                    <prop type="object" name="managedResourceGroupConfiguration" arg="$body.properties.managedResourceGroupConfiguration">
                      <prop type="string" name="location" arg="$body.properties.managedResourceGroupConfiguration.location"/>
                      <prop type="string" name="name" arg="$body.properties.managedResourceGroupConfiguration.name"/>
                    </prop>
                    <prop type="array<@ExpressRouteConnectionInformation_create>" name="workloadExpressRouteConnections" arg="$body.properties.workloadExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="@ExpressRouteConnectionInformation_create"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation"/>
                    <prop type="array<object>" name="infrastructureExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="object" cls="ExpressRouteConnectionInformation_read">
                        <prop type="string" name="expressRouteAuthorizationKey" required="True" secret="True"/>
                        <prop type="string" name="expressRouteCircuitId" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="object" name="infrastructureServices">
                      <prop type="array<string>" name="ipv4AddressSpaces">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipv6AddressSpaces">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="ipv4AddressSpace"/>
                    <prop type="string" name="ipv6AddressSpace"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="location"/>
                      <prop type="string" name="name"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="networkFabricIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="operationalState">
                      <enum>
                        <item value="&quot;Configuring&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@ExpressRouteConnectionInformation_read>" name="workloadExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="@ExpressRouteConnectionInformation_read"/>
                    </prop>
                    <prop readOnly="True" type="boolean" name="workloadManagementNetwork">
                      <default value="true"/>
                    </prop>
                    <prop readOnly="True" type="object" name="workloadServices">
                      <prop type="array<string>" name="ipv4AddressSpaces">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipv6AddressSpaces">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-02-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabriccontrollers/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY0NvbnRyb2xsZXJzL3tuZXR3b3JrRmFicmljQ29udHJvbGxlck5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricControllerName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric Controller"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$body.properties.infrastructureExpressRouteConnections" options="infra-er-connections" group="Properties">
          <help short="Infra ER connections to manage infra resources."/>
          <item type="object" cls="ExpressRouteConnectionInformation_update">
            <arg type="string" var="@ExpressRouteConnectionInformation_update.expressRouteAuthorizationKey" options="express-route-authorization-key" required="True" group="">
              <help short="Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations."/>
            </arg>
            <arg type="string" var="@ExpressRouteConnectionInformation_update.expressRouteCircuitId" options="express-route-circuit-id" required="True" group="">
              <help short="The name of express route circuit, must be of type Microsoft.NetworkexpressRouteCircuits/circuitName."/>
            </arg>
          </item>
        </arg>
        <arg type="array<@ExpressRouteConnectionInformation_update>" var="$body.properties.workloadExpressRouteConnections" options="workload-express-route-connections" group="Properties">
          <help short="As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute)."/>
          <item type="@ExpressRouteConnectionInformation_update"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFabricControllers_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}">
          <request method="patch">
            <path>
              <param type="string" name="networkFabricControllerName" arg="$Path.networkFabricControllerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="infrastructureExpressRouteConnections" arg="$body.properties.infrastructureExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="object" cls="ExpressRouteConnectionInformation_update">
                        <prop type="string" name="expressRouteAuthorizationKey" arg="@ExpressRouteConnectionInformation_update.expressRouteAuthorizationKey" required="True" secret="True"/>
                        <prop type="string" name="expressRouteCircuitId" arg="@ExpressRouteConnectionInformation_update.expressRouteCircuitId" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<@ExpressRouteConnectionInformation_update>" name="workloadExpressRouteConnections" arg="$body.properties.workloadExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="@ExpressRouteConnectionInformation_update"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation"/>
                    <prop type="array<object>" name="infrastructureExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="object" cls="ExpressRouteConnectionInformation_read">
                        <prop type="string" name="expressRouteAuthorizationKey" required="True" secret="True"/>
                        <prop type="string" name="expressRouteCircuitId" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="object" name="infrastructureServices">
                      <prop type="array<string>" name="ipv4AddressSpaces">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipv6AddressSpaces">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="ipv4AddressSpace"/>
                    <prop type="string" name="ipv6AddressSpace"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="location"/>
                      <prop type="string" name="name"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="networkFabricIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="operationalState">
                      <enum>
                        <item value="&quot;Configuring&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@ExpressRouteConnectionInformation_read>" name="workloadExpressRouteConnections" identifiers="expressRouteCircuitId">
                      <item type="@ExpressRouteConnectionInformation_read"/>
                    </prop>
                    <prop readOnly="True" type="boolean" name="workloadManagementNetwork">
                      <default value="true"/>
                    </prop>
                    <prop readOnly="True" type="object" name="workloadServices">
                      <prop type="array<string>" name="ipv4AddressSpaces">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipv6AddressSpaces">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
