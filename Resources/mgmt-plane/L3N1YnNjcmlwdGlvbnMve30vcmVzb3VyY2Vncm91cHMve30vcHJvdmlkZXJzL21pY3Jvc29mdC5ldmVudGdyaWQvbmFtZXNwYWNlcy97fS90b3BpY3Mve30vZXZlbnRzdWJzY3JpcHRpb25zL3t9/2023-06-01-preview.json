{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}/topics/{}/eventsubscriptions/{}", "version": "2023-06-01-preview", "swagger": "mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9L3RvcGljcy97dG9waWNOYW1lfS9ldmVudFN1YnNjcmlwdGlvbnMve2V2ZW50U3Vic2NyaXB0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "eventgrid namespace topic event-subscription", "commands": [{"name": "show", "version": "2023-06-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}/topics/{}/eventsubscriptions/{}", "version": "2023-06-01-preview", "swagger": "mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9L3RvcGljcy97dG9waWNOYW1lfS9ldmVudFN1YnNjcmlwdGlvbnMve2V2ZW50U3Vic2NyaXB0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventSubscriptionName", "options": ["n", "name", "event-subscription-name"], "required": true, "idPart": "child_name_2", "help": {"short": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "Name of the namespace."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.topicName", "options": ["topic-name"], "required": true, "idPart": "child_name_1", "help": {"short": "Name of the namespace topic."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}], "operations": [{"operationId": "NamespaceTopicEventSubscriptions_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "eventSubscriptionName", "arg": "$Path.eventSubscriptionName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "topicName", "arg": "$Path.topicName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-06-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}/topics/{}/eventSubscriptions/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "deliveryConfiguration", "props": [{"type": "string", "name": "deliveryMode", "enum": {"items": [{"value": "Queue"}]}}, {"type": "object", "name": "queue", "props": [{"type": "object", "name": "deadLetterDestinationWithResourceIdentity", "props": [{"type": "object", "name": "deadLetterDestination", "props": [{"type": "string", "name": "endpointType", "required": true, "enum": {"items": [{"value": "StorageBlob"}]}}], "discriminators": [{"property": "endpointType", "value": "StorageBlob", "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "blobContainerName"}, {"type": "ResourceId", "name": "resourceId"}], "clientFlatten": true}]}]}, {"type": "object", "name": "identity", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "string", "name": "userAssignedIdentity"}]}]}, {"type": "duration", "name": "eventTimeToLive"}, {"type": "integer32", "name": "maxDeliveryCount"}, {"type": "integer32", "name": "receiveLockDurationInSeconds"}]}]}, {"type": "string", "name": "eventDeliverySchema", "enum": {"items": [{"value": "CloudEventSchemaV1_0"}]}}, {"type": "object", "name": "filtersConfiguration", "props": [{"type": "array<object>", "name": "filters", "item": {"type": "object", "props": [{"type": "string", "name": "key"}, {"type": "string", "name": "operatorType", "required": true, "enum": {"items": [{"value": "BoolEquals"}, {"value": "IsNotNull"}, {"value": "IsNullOrUndefined"}, {"value": "NumberGreaterThan"}, {"value": "NumberGreaterThanOrEquals"}, {"value": "NumberIn"}, {"value": "NumberInRange"}, {"value": "NumberLessThan"}, {"value": "NumberLessThanOrEquals"}, {"value": "NumberNotIn"}, {"value": "NumberNotInRange"}, {"value": "StringBeginsWith"}, {"value": "StringContains"}, {"value": "StringEndsWith"}, {"value": "StringIn"}, {"value": "StringNotBeginsWith"}, {"value": "StringNotContains"}, {"value": "StringNotEndsWith"}, {"value": "StringNotIn"}]}}], "discriminators": [{"property": "operatorType", "value": "BoolEquals", "props": [{"type": "boolean", "name": "value"}]}, {"property": "operatorType", "value": "NumberGreaterThan", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberGreaterThanOrEquals", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberIn", "props": [{"type": "array<float64>", "name": "values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberInRange", "props": [{"type": "array<array<float64>>", "name": "values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "NumberLessThan", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberLessThanOrEquals", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberNotIn", "props": [{"type": "array<float64>", "name": "values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberNotInRange", "props": [{"type": "array<array<float64>>", "name": "values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "StringBeginsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringContains", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringEndsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringIn", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotBeginsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotContains", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotEndsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotIn", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}]}}, {"type": "array<string>", "name": "includedEventTypes", "item": {"type": "string"}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "AwaitingManualAction"}, {"value": "Canceled"}, {"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "UpdatedFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2023-06-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}/topics/{}/eventsubscriptions/{}", "version": "2023-06-01-preview", "swagger": "mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9L3RvcGljcy97dG9waWNOYW1lfS9ldmVudFN1YnNjcmlwdGlvbnMve2V2ZW50U3Vic2NyaXB0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventSubscriptionName", "options": ["n", "name", "event-subscription-name"], "required": true, "idPart": "child_name_2", "help": {"short": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "Name of the namespace."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.topicName", "options": ["topic-name"], "required": true, "idPart": "child_name_1", "help": {"short": "Name of the namespace topic."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "NamespaceTopicEventSubscriptions_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "eventSubscriptionName", "arg": "$Path.eventSubscriptionName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "topicName", "arg": "$Path.topicName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-06-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-06-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}/topics/{}/eventsubscriptions/{}", "version": "2023-06-01-preview", "swagger": "mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9L3RvcGljcy97dG9waWNOYW1lfS9ldmVudFN1YnNjcmlwdGlvbnMve2V2ZW50U3Vic2NyaXB0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventSubscriptionName", "options": ["n", "name", "event-subscription-name"], "required": true, "idPart": "child_name_2", "help": {"short": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "Name of the namespace."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.topicName", "options": ["topic-name"], "required": true, "idPart": "child_name_1", "help": {"short": "Name of the namespace topic."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration", "options": ["delivery-configuration"], "group": "Properties", "help": {"short": "Information about the delivery configuration of the event subscription."}, "args": [{"type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.deliveryMode", "options": ["delivery-mode"], "help": {"short": "Delivery mode of the event subscription."}, "enum": {"items": [{"name": "Queue", "value": "Queue"}]}}, {"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue", "options": ["queue"], "help": {"short": "This property should be populated when deliveryMode is queue and represents information about the queue subscription."}, "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity", "options": ["dead-letter-destination-with-resource-identity"], "group": "", "help": {"short": "The dead letter destination of the event subscription."}, "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination", "options": ["dead-letter-destination"], "group": "", "help": {"short": "Information about the destination where events have to be delivered for the event subscription."}, "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob", "options": ["storage-blob"], "args": [{"type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.blobContainerName", "options": ["blob-container-name"], "group": "Properties", "help": {"short": "The name of the Storage blob container that is the destination of the deadletter events"}}, {"type": "ResourceId", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.resourceId", "options": ["resource-id"], "group": "Properties", "help": {"short": "The Azure Resource ID of the storage account that is the destination of the deadletter events"}}]}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity", "options": ["identity"], "help": {"short": "The identity to use when dead-lettering events."}, "args": [{"type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.type", "options": ["type"], "help": {"short": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity."}, "enum": {"items": [{"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.userAssignedIdentity", "options": ["user-assigned-identity"], "help": {"short": "The user identity associated with the resource."}}]}]}, {"type": "duration", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.eventTimeToLive", "options": ["event-time-to-live"], "group": "", "help": {"short": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published."}}, {"type": "integer32", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.maxDeliveryCount", "options": ["max-delivery-count"], "help": {"short": "The maximum delivery count of the events."}}, {"type": "integer32", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.receiveLockDurationInSeconds", "options": ["receive-lock-duration-in-seconds"], "group": "", "help": {"short": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected."}}]}]}, {"type": "string", "var": "$eventSubscriptionInfo.properties.eventDeliverySchema", "options": ["event-delivery-schema"], "group": "Properties", "help": {"short": "The event delivery schema for the event subscription."}, "enum": {"items": [{"name": "CloudEventSchemaV1_0", "value": "CloudEventSchemaV1_0"}]}}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration", "options": ["filters-configuration"], "group": "Properties", "help": {"short": "Information about the filter for the event subscription."}, "args": [{"type": "array<object>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters", "options": ["filters"], "help": {"short": "An array of filters that are used for filtering event subscriptions."}, "item": {"type": "object", "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals", "options": ["bool-equals"], "args": [{"type": "boolean", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals.value", "options": ["value"], "help": {"short": "The boolean filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan", "options": ["number-greater-than"], "args": [{"type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals", "options": ["number-greater-than-or-equals"], "args": [{"type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn", "options": ["number-in"], "args": [{"type": "array<float64>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "float64"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange", "options": ["number-in-range"], "args": [{"type": "array<array<float64>>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan", "options": ["number-less-than"], "args": [{"type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals", "options": ["number-less-than-or-equals"], "args": [{"type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn", "options": ["number-not-in"], "args": [{"type": "array<float64>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "float64"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange", "options": ["number-not-in-range"], "args": [{"type": "array<array<float64>>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith", "options": ["string-begins-with"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains", "options": ["string-contains"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith", "options": ["string-ends-with"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn", "options": ["string-in"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith", "options": ["string-not-begins-with"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains", "options": ["string-not-contains"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith", "options": ["string-not-ends-with"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn", "options": ["string-not-in"], "args": [{"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"type": "string"}}]}, {"type": "string", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].key", "options": ["key"], "help": {"short": "The field/property in the event based on which you want to filter."}}]}}, {"type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.includedEventTypes", "options": ["included-event-types"], "help": {"short": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null."}, "item": {"type": "string"}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "NamespaceTopicEventSubscriptions_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "eventSubscriptionName", "arg": "$Path.eventSubscriptionName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "topicName", "arg": "$Path.topicName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-06-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "eventSubscriptionInfo", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "deliveryConfiguration", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration", "props": [{"type": "string", "name": "deliveryMode", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.deliveryMode", "enum": {"items": [{"value": "Queue"}]}}, {"type": "object", "name": "queue", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue", "props": [{"type": "object", "name": "deadLetterDestinationWithResourceIdentity", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity", "props": [{"type": "object", "name": "deadLetterDestination", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination", "props": [{"type": "string", "name": "endpointType", "required": true, "enum": {"items": [{"arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob", "value": "StorageBlob"}]}}], "discriminators": [{"property": "endpointType", "value": "StorageBlob", "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "blobContainerName", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.blobContainerName"}, {"type": "ResourceId", "name": "resourceId", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.resourceId"}], "clientFlatten": true}]}]}, {"type": "object", "name": "identity", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity", "props": [{"type": "string", "name": "type", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.type", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "string", "name": "userAssignedIdentity", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.userAssignedIdentity"}]}]}, {"type": "duration", "name": "eventTimeToLive", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.eventTimeToLive"}, {"type": "integer32", "name": "maxDeliveryCount", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.maxDeliveryCount"}, {"type": "integer32", "name": "receiveLockDurationInSeconds", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.receiveLockDurationInSeconds"}]}]}, {"type": "string", "name": "eventDeliverySchema", "arg": "$eventSubscriptionInfo.properties.eventDeliverySchema", "enum": {"items": [{"value": "CloudEventSchemaV1_0"}]}}, {"type": "object", "name": "filtersConfiguration", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration", "props": [{"type": "array<object>", "name": "filters", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters", "item": {"type": "object", "props": [{"type": "string", "name": "key", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].key"}, {"type": "string", "name": "operatorType", "required": true, "enum": {"items": [{"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals", "value": "BoolEquals"}, {"value": "IsNotNull"}, {"value": "IsNullOrUndefined"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan", "value": "NumberGreaterThan"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals", "value": "NumberGreaterThanOrEquals"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn", "value": "NumberIn"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange", "value": "NumberInRange"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan", "value": "NumberLessThan"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals", "value": "NumberLessThanOrEquals"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn", "value": "NumberNotIn"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange", "value": "NumberNotInRange"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith", "value": "StringBeginsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains", "value": "StringContains"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith", "value": "StringEndsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn", "value": "StringIn"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith", "value": "StringNotBeginsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains", "value": "StringNotContains"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith", "value": "StringNotEndsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn", "value": "StringNotIn"}]}}], "discriminators": [{"property": "operatorType", "value": "BoolEquals", "props": [{"type": "boolean", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals.value"}]}, {"property": "operatorType", "value": "NumberGreaterThan", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan.value"}]}, {"property": "operatorType", "value": "NumberGreaterThanOrEquals", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals.value"}]}, {"property": "operatorType", "value": "NumberIn", "props": [{"type": "array<float64>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn.values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberInRange", "props": [{"type": "array<array<float64>>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange.values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "NumberLessThan", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan.value"}]}, {"property": "operatorType", "value": "NumberLessThanOrEquals", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals.value"}]}, {"property": "operatorType", "value": "NumberNotIn", "props": [{"type": "array<float64>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn.values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberNotInRange", "props": [{"type": "array<array<float64>>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange.values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "StringBeginsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringContains", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringEndsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringIn", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotBeginsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotContains", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotEndsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotIn", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn.values", "item": {"type": "string"}}]}]}}, {"type": "array<string>", "name": "includedEventTypes", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.includedEventTypes", "item": {"type": "string"}}]}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}/topics/{}/eventSubscriptions/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "deliveryConfiguration", "props": [{"type": "string", "name": "deliveryMode", "enum": {"items": [{"value": "Queue"}]}}, {"type": "object", "name": "queue", "props": [{"type": "object", "name": "deadLetterDestinationWithResourceIdentity", "props": [{"type": "object", "name": "deadLetterDestination", "props": [{"type": "string", "name": "endpointType", "required": true, "enum": {"items": [{"value": "StorageBlob"}]}}], "discriminators": [{"property": "endpointType", "value": "StorageBlob", "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "blobContainerName"}, {"type": "ResourceId", "name": "resourceId"}], "clientFlatten": true}]}]}, {"type": "object", "name": "identity", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "string", "name": "userAssignedIdentity"}]}]}, {"type": "duration", "name": "eventTimeToLive"}, {"type": "integer32", "name": "maxDeliveryCount"}, {"type": "integer32", "name": "receiveLockDurationInSeconds"}]}]}, {"type": "string", "name": "eventDeliverySchema", "enum": {"items": [{"value": "CloudEventSchemaV1_0"}]}}, {"type": "object", "name": "filtersConfiguration", "props": [{"type": "array<object>", "name": "filters", "item": {"type": "object", "props": [{"type": "string", "name": "key"}, {"type": "string", "name": "operatorType", "required": true, "enum": {"items": [{"value": "BoolEquals"}, {"value": "IsNotNull"}, {"value": "IsNullOrUndefined"}, {"value": "NumberGreaterThan"}, {"value": "NumberGreaterThanOrEquals"}, {"value": "NumberIn"}, {"value": "NumberInRange"}, {"value": "NumberLessThan"}, {"value": "NumberLessThanOrEquals"}, {"value": "NumberNotIn"}, {"value": "NumberNotInRange"}, {"value": "StringBeginsWith"}, {"value": "StringContains"}, {"value": "StringEndsWith"}, {"value": "StringIn"}, {"value": "StringNotBeginsWith"}, {"value": "StringNotContains"}, {"value": "StringNotEndsWith"}, {"value": "StringNotIn"}]}}], "discriminators": [{"property": "operatorType", "value": "BoolEquals", "props": [{"type": "boolean", "name": "value"}]}, {"property": "operatorType", "value": "NumberGreaterThan", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberGreaterThanOrEquals", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberIn", "props": [{"type": "array<float64>", "name": "values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberInRange", "props": [{"type": "array<array<float64>>", "name": "values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "NumberLessThan", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberLessThanOrEquals", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberNotIn", "props": [{"type": "array<float64>", "name": "values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberNotInRange", "props": [{"type": "array<array<float64>>", "name": "values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "StringBeginsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringContains", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringEndsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringIn", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotBeginsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotContains", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotEndsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotIn", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}]}}, {"type": "array<string>", "name": "includedEventTypes", "item": {"type": "string"}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "AwaitingManualAction"}, {"value": "Canceled"}, {"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "UpdatedFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2023-06-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}/topics/{}/eventsubscriptions/{}", "version": "2023-06-01-preview", "swagger": "mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9L3RvcGljcy97dG9waWNOYW1lfS9ldmVudFN1YnNjcmlwdGlvbnMve2V2ZW50U3Vic2NyaXB0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventSubscriptionName", "options": ["n", "name", "event-subscription-name"], "required": true, "idPart": "child_name_2", "help": {"short": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "Name of the namespace."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.topicName", "options": ["topic-name"], "required": true, "idPart": "child_name_1", "help": {"short": "Name of the namespace topic."}, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration", "options": ["delivery-configuration"], "group": "Properties", "help": {"short": "Information about the delivery configuration of the event subscription."}, "args": [{"nullable": true, "type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.deliveryMode", "options": ["delivery-mode"], "help": {"short": "Delivery mode of the event subscription."}, "enum": {"items": [{"name": "Queue", "value": "Queue"}]}}, {"nullable": true, "type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue", "options": ["queue"], "help": {"short": "This property should be populated when deliveryMode is queue and represents information about the queue subscription."}, "args": [{"nullable": true, "type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity", "options": ["dead-letter-destination-with-resource-identity"], "group": "", "help": {"short": "The dead letter destination of the event subscription."}, "args": [{"nullable": true, "type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination", "options": ["dead-letter-destination"], "group": "", "help": {"short": "Information about the destination where events have to be delivered for the event subscription."}, "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob", "options": ["storage-blob"], "args": [{"nullable": true, "type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.blobContainerName", "options": ["blob-container-name"], "group": "Properties", "help": {"short": "The name of the Storage blob container that is the destination of the deadletter events"}}, {"nullable": true, "type": "ResourceId", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.resourceId", "options": ["resource-id"], "group": "Properties", "help": {"short": "The Azure Resource ID of the storage account that is the destination of the deadletter events"}}]}]}, {"nullable": true, "type": "object", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity", "options": ["identity"], "help": {"short": "The identity to use when dead-lettering events."}, "args": [{"nullable": true, "type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.type", "options": ["type"], "help": {"short": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity."}, "enum": {"items": [{"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "string", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.userAssignedIdentity", "options": ["user-assigned-identity"], "help": {"short": "The user identity associated with the resource."}}]}]}, {"nullable": true, "type": "duration", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.eventTimeToLive", "options": ["event-time-to-live"], "group": "", "help": {"short": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published."}}, {"nullable": true, "type": "integer32", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.maxDeliveryCount", "options": ["max-delivery-count"], "help": {"short": "The maximum delivery count of the events."}}, {"nullable": true, "type": "integer32", "var": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.receiveLockDurationInSeconds", "options": ["receive-lock-duration-in-seconds"], "group": "", "help": {"short": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected."}}]}]}, {"nullable": true, "type": "string", "var": "$eventSubscriptionInfo.properties.eventDeliverySchema", "options": ["event-delivery-schema"], "group": "Properties", "help": {"short": "The event delivery schema for the event subscription."}, "enum": {"items": [{"name": "CloudEventSchemaV1_0", "value": "CloudEventSchemaV1_0"}]}}, {"nullable": true, "type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration", "options": ["filters-configuration"], "group": "Properties", "help": {"short": "Information about the filter for the event subscription."}, "args": [{"nullable": true, "type": "array<object>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters", "options": ["filters"], "help": {"short": "An array of filters that are used for filtering event subscriptions."}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals", "options": ["bool-equals"], "args": [{"nullable": true, "type": "boolean", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals.value", "options": ["value"], "help": {"short": "The boolean filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan", "options": ["number-greater-than"], "args": [{"nullable": true, "type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals", "options": ["number-greater-than-or-equals"], "args": [{"nullable": true, "type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn", "options": ["number-in"], "args": [{"nullable": true, "type": "array<float64>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "float64"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange", "options": ["number-in-range"], "args": [{"nullable": true, "type": "array<array<float64>>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "array<float64>", "item": {"nullable": true, "type": "float64"}}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan", "options": ["number-less-than"], "args": [{"nullable": true, "type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals", "options": ["number-less-than-or-equals"], "args": [{"nullable": true, "type": "float64", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals.value", "options": ["value"], "help": {"short": "The filter value."}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn", "options": ["number-not-in"], "args": [{"nullable": true, "type": "array<float64>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "float64"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange", "options": ["number-not-in-range"], "args": [{"nullable": true, "type": "array<array<float64>>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "array<float64>", "item": {"nullable": true, "type": "float64"}}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith", "options": ["string-begins-with"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains", "options": ["string-contains"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith", "options": ["string-ends-with"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn", "options": ["string-in"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith", "options": ["string-not-begins-with"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains", "options": ["string-not-contains"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith", "options": ["string-not-ends-with"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"type": "object", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn", "options": ["string-not-in"], "args": [{"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn.values", "options": ["values"], "help": {"short": "The set of filter values."}, "item": {"nullable": true, "type": "string"}}]}, {"nullable": true, "type": "string", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].key", "options": ["key"], "help": {"short": "The field/property in the event based on which you want to filter."}}]}}, {"nullable": true, "type": "array<string>", "var": "$eventSubscriptionInfo.properties.filtersConfiguration.includedEventTypes", "options": ["included-event-types"], "help": {"short": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null."}, "item": {"nullable": true, "type": "string"}}]}]}], "operations": [{"operationId": "NamespaceTopicEventSubscriptions_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "eventSubscriptionName", "arg": "$Path.eventSubscriptionName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "topicName", "arg": "$Path.topicName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-06-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}/topics/{}/eventSubscriptions/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "deliveryConfiguration", "props": [{"type": "string", "name": "deliveryMode", "enum": {"items": [{"value": "Queue"}]}}, {"type": "object", "name": "queue", "props": [{"type": "object", "name": "deadLetterDestinationWithResourceIdentity", "props": [{"type": "object", "name": "deadLetterDestination", "props": [{"type": "string", "name": "endpointType", "required": true, "enum": {"items": [{"value": "StorageBlob"}]}}], "discriminators": [{"property": "endpointType", "value": "StorageBlob", "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "blobContainerName"}, {"type": "ResourceId", "name": "resourceId"}], "clientFlatten": true}]}]}, {"type": "object", "name": "identity", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "string", "name": "userAssignedIdentity"}]}]}, {"type": "duration", "name": "eventTimeToLive"}, {"type": "integer32", "name": "maxDeliveryCount"}, {"type": "integer32", "name": "receiveLockDurationInSeconds"}]}]}, {"type": "string", "name": "eventDeliverySchema", "enum": {"items": [{"value": "CloudEventSchemaV1_0"}]}}, {"type": "object", "name": "filtersConfiguration", "props": [{"type": "array<object>", "name": "filters", "item": {"type": "object", "props": [{"type": "string", "name": "key"}, {"type": "string", "name": "operatorType", "required": true, "enum": {"items": [{"value": "BoolEquals"}, {"value": "IsNotNull"}, {"value": "IsNullOrUndefined"}, {"value": "NumberGreaterThan"}, {"value": "NumberGreaterThanOrEquals"}, {"value": "NumberIn"}, {"value": "NumberInRange"}, {"value": "NumberLessThan"}, {"value": "NumberLessThanOrEquals"}, {"value": "NumberNotIn"}, {"value": "NumberNotInRange"}, {"value": "StringBeginsWith"}, {"value": "StringContains"}, {"value": "StringEndsWith"}, {"value": "StringIn"}, {"value": "StringNotBeginsWith"}, {"value": "StringNotContains"}, {"value": "StringNotEndsWith"}, {"value": "StringNotIn"}]}}], "discriminators": [{"property": "operatorType", "value": "BoolEquals", "props": [{"type": "boolean", "name": "value"}]}, {"property": "operatorType", "value": "NumberGreaterThan", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberGreaterThanOrEquals", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberIn", "props": [{"type": "array<float64>", "name": "values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberInRange", "props": [{"type": "array<array<float64>>", "name": "values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "NumberLessThan", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberLessThanOrEquals", "props": [{"type": "float64", "name": "value"}]}, {"property": "operatorType", "value": "NumberNotIn", "props": [{"type": "array<float64>", "name": "values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberNotInRange", "props": [{"type": "array<array<float64>>", "name": "values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "StringBeginsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringContains", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringEndsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringIn", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotBeginsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotContains", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotEndsWith", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotIn", "props": [{"type": "array<string>", "name": "values", "item": {"type": "string"}}]}]}}, {"type": "array<string>", "name": "includedEventTypes", "item": {"type": "string"}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "AwaitingManualAction"}, {"value": "Canceled"}, {"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "UpdatedFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Subscription_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "eventSubscriptionInfo", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "deliveryConfiguration", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration", "props": [{"type": "string", "name": "deliveryMode", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.deliveryMode", "enum": {"items": [{"value": "Queue"}]}}, {"type": "object", "name": "queue", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue", "props": [{"type": "object", "name": "deadLetterDestinationWithResourceIdentity", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity", "props": [{"type": "object", "name": "deadLetterDestination", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination", "props": [{"type": "string", "name": "endpointType", "required": true, "enum": {"items": [{"arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob", "value": "StorageBlob"}]}}], "discriminators": [{"property": "endpointType", "value": "StorageBlob", "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "blobContainerName", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.blobContainerName"}, {"type": "ResourceId", "name": "resourceId", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.deadLetterDestination.StorageBlob.properties.resourceId"}], "clientFlatten": true}]}]}, {"type": "object", "name": "identity", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity", "props": [{"type": "string", "name": "type", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.type", "enum": {"items": [{"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "string", "name": "userAssignedIdentity", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.deadLetterDestinationWithResourceIdentity.identity.userAssignedIdentity"}]}]}, {"type": "duration", "name": "eventTimeToLive", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.eventTimeToLive"}, {"type": "integer32", "name": "maxDeliveryCount", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.maxDeliveryCount"}, {"type": "integer32", "name": "receiveLockDurationInSeconds", "arg": "$eventSubscriptionInfo.properties.deliveryConfiguration.queue.receiveLockDurationInSeconds"}]}]}, {"type": "string", "name": "eventDeliverySchema", "arg": "$eventSubscriptionInfo.properties.eventDeliverySchema", "enum": {"items": [{"value": "CloudEventSchemaV1_0"}]}}, {"type": "object", "name": "filtersConfiguration", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration", "props": [{"type": "array<object>", "name": "filters", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters", "item": {"type": "object", "props": [{"type": "string", "name": "key", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].key"}, {"type": "string", "name": "operatorType", "required": true, "enum": {"items": [{"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals", "value": "BoolEquals"}, {"value": "IsNotNull"}, {"value": "IsNullOrUndefined"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan", "value": "NumberGreaterThan"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals", "value": "NumberGreaterThanOrEquals"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn", "value": "NumberIn"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange", "value": "NumberInRange"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan", "value": "NumberLessThan"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals", "value": "NumberLessThanOrEquals"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn", "value": "NumberNotIn"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange", "value": "NumberNotInRange"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith", "value": "StringBeginsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains", "value": "StringContains"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith", "value": "StringEndsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn", "value": "StringIn"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith", "value": "StringNotBeginsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains", "value": "StringNotContains"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith", "value": "StringNotEndsWith"}, {"arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn", "value": "StringNotIn"}]}}], "discriminators": [{"property": "operatorType", "value": "BoolEquals", "props": [{"type": "boolean", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].BoolEquals.value"}]}, {"property": "operatorType", "value": "NumberGreaterThan", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThan.value"}]}, {"property": "operatorType", "value": "NumberGreaterThanOrEquals", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberGreaterThanOrEquals.value"}]}, {"property": "operatorType", "value": "NumberIn", "props": [{"type": "array<float64>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberIn.values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberInRange", "props": [{"type": "array<array<float64>>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberInRange.values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "NumberLessThan", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThan.value"}]}, {"property": "operatorType", "value": "NumberLessThanOrEquals", "props": [{"type": "float64", "name": "value", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberLessThanOrEquals.value"}]}, {"property": "operatorType", "value": "NumberNotIn", "props": [{"type": "array<float64>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotIn.values", "item": {"type": "float64"}}]}, {"property": "operatorType", "value": "NumberNotInRange", "props": [{"type": "array<array<float64>>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].NumberNotInRange.values", "item": {"type": "array<float64>", "item": {"type": "float64"}}}]}, {"property": "operatorType", "value": "StringBeginsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringBeginsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringContains", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringContains.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringEndsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringEndsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringIn", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringIn.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotBeginsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotBeginsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotContains", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotContains.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotEndsWith", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotEndsWith.values", "item": {"type": "string"}}]}, {"property": "operatorType", "value": "StringNotIn", "props": [{"type": "array<string>", "name": "values", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.filters[].StringNotIn.values", "item": {"type": "string"}}]}]}}, {"type": "array<string>", "name": "includedEventTypes", "arg": "$eventSubscriptionInfo.properties.filtersConfiguration.includedEventTypes", "item": {"type": "string"}}]}], "clientFlatten": true}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "NamespaceTopicEventSubscriptions_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "eventSubscriptionName", "arg": "$Path.eventSubscriptionName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "topicName", "arg": "$Path.topicName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]*$", "maxLength": 50, "minLength": 3}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-06-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Subscription_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}