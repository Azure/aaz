{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/networkconfigurationdiagnostic", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vbmV0d29ya0NvbmZpZ3VyYXRpb25EaWFnbm9zdGlj/V/MjAyMi0wMS0wMQ=="}], "commandGroups": [{"name": "network watcher", "commands": [{"name": "run-configuration-diagnostic", "version": "2022-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/networkconfigurationdiagnostic", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vbmV0d29ya0NvbmZpZ3VyYXRpb25EaWFnbm9zdGlj/V/MjAyMi0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkWatcherName", "options": ["watcher-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the network watcher."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["watcher-rg"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the resource group the watcher is in."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"type": "string", "var": "$parameters.verbosityLevel", "options": ["verbosity-level"], "hide": true, "group": "Parameters", "help": {"short": "Verbosity level."}, "enum": {"items": [{"name": "Full", "value": "Full"}, {"name": "Minimum", "value": "Minimum"}, {"name": "Normal", "value": "Normal"}]}}]}, {"name": "Query", "args": [{"type": "array<object>", "var": "$parameters.profiles", "options": ["queries"], "required": true, "group": "Query", "help": {"short": "JSON list of queries to use. Use `@{path}` to load from a file."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.profiles[].destination", "options": ["destination"], "required": true, "help": {"short": "Traffic destination. Accepted values are: '*', IP Address/CIDR, Service Tag."}}, {"type": "string", "var": "$parameters.profiles[].destinationPort", "options": ["destination-port"], "required": true, "help": {"short": "Traffic destination port. Accepted values are '*' and a single port in the range (0 - 65535)."}}, {"type": "string", "var": "$parameters.profiles[].direction", "options": ["direction"], "required": true, "help": {"short": "The direction of the traffic."}, "enum": {"items": [{"name": "Inbound", "value": "Inbound"}, {"name": "Outbound", "value": "Outbound"}]}}, {"type": "string", "var": "$parameters.profiles[].protocol", "options": ["protocol"], "required": true, "help": {"short": "Protocol to be verified on. Accepted values are '*', TCP, UDP."}}, {"type": "string", "var": "$parameters.profiles[].source", "options": ["source"], "required": true, "help": {"short": "Traffic source. Accepted values are '*', IP Address/CIDR, Service Tag."}}]}}]}, {"name": "Target", "args": [{"type": "string", "var": "$parameters.targetResourceId", "options": ["resource"], "required": true, "group": "Target", "help": {"short": "Name or ID of the target resource to diagnose. If an ID is given, other resource arguments should not be given."}}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "NetworkWatchers_GetNetworkConfigurationDiagnostic", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/networkConfigurationDiagnostic", "request": {"method": "post", "path": {"params": [{"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "array<object>", "name": "profiles", "arg": "$parameters.profiles", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "destination", "arg": "$parameters.profiles[].destination", "required": true}, {"type": "string", "name": "destinationPort", "arg": "$parameters.profiles[].destinationPort", "required": true}, {"type": "string", "name": "direction", "arg": "$parameters.profiles[].direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "string", "name": "protocol", "arg": "$parameters.profiles[].protocol", "required": true}, {"type": "string", "name": "source", "arg": "$parameters.profiles[].source", "required": true}]}}, {"type": "string", "name": "targetResourceId", "arg": "$parameters.targetResourceId", "required": true}, {"type": "string", "name": "verbosityLevel", "arg": "$parameters.verbosityLevel", "enum": {"items": [{"value": "Full"}, {"value": "Minimum"}, {"value": "Normal"}]}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "array<object>", "name": "results", "item": {"type": "object", "props": [{"type": "object", "name": "networkSecurityGroupResult", "props": [{"readOnly": true, "type": "array<object>", "name": "evaluatedNetworkSecurityGroups", "item": {"type": "object", "props": [{"type": "string", "name": "appliedTo"}, {"type": "object", "name": "matchedRule", "props": [{"type": "string", "name": "action"}, {"type": "string", "name": "ruleName"}]}, {"type": "string", "name": "networkSecurityGroupId"}, {"readOnly": true, "type": "array<object>", "name": "rulesEvaluationResult", "item": {"type": "object", "props": [{"type": "boolean", "name": "destinationMatched"}, {"type": "boolean", "name": "destinationPortMatched"}, {"type": "string", "name": "name"}, {"type": "boolean", "name": "protocolMatched"}, {"type": "boolean", "name": "sourceMatched"}, {"type": "boolean", "name": "sourcePortMatched"}]}}]}}, {"type": "string", "name": "securityRuleAccessResult", "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}]}, {"type": "object", "name": "profile", "props": [{"type": "string", "name": "destination", "required": true}, {"type": "string", "name": "destinationPort", "required": true}, {"type": "string", "name": "direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "string", "name": "protocol", "required": true}, {"type": "string", "name": "source", "required": true}]}]}}], "cls": "NetworkConfigurationDiagnosticResponse_read"}}}}, {"statusCode": [202], "body": {"json": {"var": "$Instance", "schema": {"type": "@NetworkConfigurationDiagnosticResponse_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}