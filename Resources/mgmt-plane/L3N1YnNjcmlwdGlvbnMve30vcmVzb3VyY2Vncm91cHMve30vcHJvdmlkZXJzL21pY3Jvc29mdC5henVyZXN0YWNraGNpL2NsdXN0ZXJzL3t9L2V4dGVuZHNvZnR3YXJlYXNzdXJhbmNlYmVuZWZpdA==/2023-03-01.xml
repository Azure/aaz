<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/extendsoftwareassurancebenefit" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2V4dGVuZFNvZnR3YXJlQXNzdXJhbmNlQmVuZWZpdA==/V/MjAyMy0wMy0wMQ=="/>
  <commandGroup name="stack-hci cluster">
    <command name="extend-software-assurance-benefit" version="2023-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/extendsoftwareassurancebenefit" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2V4dGVuZFNvZnR3YXJlQXNzdXJhbmNlQmVuZWZpdA==/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$softwareAssuranceChangeRequest.properties.softwareAssuranceIntent" options="software-assurance-intent" group="Properties">
          <help short="Customer Intent for Software Assurance Benefit."/>
          <enum>
            <item name="Disable" value="&quot;Disable&quot;"/>
            <item name="Enable" value="&quot;Enable&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Clusters_ExtendSoftwareAssuranceBenefit">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/extendSoftwareAssuranceBenefit">
          <request method="post">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="softwareAssuranceChangeRequest" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="string" name="softwareAssuranceIntent" arg="$softwareAssuranceChangeRequest.properties.softwareAssuranceIntent">
                      <enum>
                        <item value="&quot;Disable&quot;"/>
                        <item value="&quot;Enable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="aadApplicationObjectId"/>
                    <prop type="string" name="aadClientId"/>
                    <prop type="string" name="aadServicePrincipalObjectId"/>
                    <prop type="string" name="aadTenantId"/>
                    <prop readOnly="True" type="string" name="billingModel"/>
                    <prop readOnly="True" type="string" name="cloudId"/>
                    <prop type="string" name="cloudManagementEndpoint"/>
                    <prop type="object" name="desiredProperties">
                      <prop type="string" name="diagnosticLevel">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Enhanced&quot;"/>
                          <item value="&quot;Off&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="windowsServerSubscription">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastBillingTimestamp"/>
                    <prop readOnly="True" type="dateTime" name="lastSyncTimestamp"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;DisableInProgress&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="registrationTimestamp"/>
                    <prop type="object" name="reportedProperties">
                      <prop readOnly="True" type="string" name="clusterId"/>
                      <prop readOnly="True" type="string" name="clusterName"/>
                      <prop readOnly="True" type="string" name="clusterType">
                        <enum>
                          <item value="&quot;FirstParty&quot;"/>
                          <item value="&quot;ThirdParty&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="clusterVersion"/>
                      <prop type="string" name="diagnosticLevel">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Enhanced&quot;"/>
                          <item value="&quot;Off&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="imdsAttestation">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="lastUpdated"/>
                      <prop readOnly="True" type="string" name="manufacturer"/>
                      <prop readOnly="True" type="array<object>" name="nodes">
                        <item type="object">
                          <prop readOnly="True" type="float" name="coreCount"/>
                          <prop readOnly="True" type="string" name="ehcResourceId"/>
                          <prop readOnly="True" type="float" name="id"/>
                          <prop readOnly="True" type="dateTime" name="lastLicensingTimestamp"/>
                          <prop readOnly="True" type="string" name="manufacturer"/>
                          <prop readOnly="True" type="float" name="memoryInGiB"/>
                          <prop readOnly="True" type="string" name="model"/>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop readOnly="True" type="string" name="nodeType">
                            <enum>
                              <item value="&quot;FirstParty&quot;"/>
                              <item value="&quot;ThirdParty&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="osDisplayVersion"/>
                          <prop readOnly="True" type="string" name="osName"/>
                          <prop readOnly="True" type="string" name="osVersion"/>
                          <prop readOnly="True" type="string" name="serialNumber"/>
                          <prop readOnly="True" type="string" name="windowsServerSubscription">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="supportedCapabilities">
                        <item readOnly="True" type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceProviderObjectId"/>
                    <prop readOnly="True" type="string" name="serviceEndpoint"/>
                    <prop type="object" name="softwareAssuranceProperties">
                      <prop readOnly="True" type="dateTime" name="lastUpdated"/>
                      <prop type="string" name="softwareAssuranceIntent">
                        <enum>
                          <item value="&quot;Disable&quot;"/>
                          <item value="&quot;Enable&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="softwareAssuranceStatus">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;ConnectedRecently&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;NotConnectedRecently&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;NotYetRegistered&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="float" name="trialDaysRemaining"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
