<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0=/V/MjAyMy0wOC0wMQ=="/>
  <commandGroup name="resource-mover move-collection">
    <command name="show" version="2023-08-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0=/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.moveCollectionName" options="move-collection-name name n" required="True" idPart="name">
          <help short="The Move Collection Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <operation operationId="MoveCollections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}">
          <request method="get">
            <path>
              <param type="string" name="moveCollectionName" arg="$Path.moveCollectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Migrate/moveCollections/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="object" name="properties" cls="MoveResourceErrorBody_read">
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@MoveResourceErrorBody_read>" name="details">
                          <item type="@MoveResourceErrorBody_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="target"/>
                      </prop>
                    </prop>
                    <prop type="string" name="moveRegion"/>
                    <prop type="string" name="moveType">
                      <enum>
                        <item value="&quot;RegionToRegion&quot;"/>
                        <item value="&quot;RegionToZone&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceRegion"/>
                    <prop type="string" name="targetRegion"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0=/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.moveCollectionName" options="move-collection-name name n" required="True" idPart="name">
          <help short="The Move Collection Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <operation operationId="MoveCollections_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}">
          <request method="delete">
            <path>
              <param type="string" name="moveCollectionName" arg="$Path.moveCollectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="endTime"/>
                  <prop type="object" name="error" cls="OperationStatusError_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop type="object" name="info">
                          <prop readOnly="True" type="array<object>" name="moveResources">
                            <item type="object" cls="AffectedMoveResource_read">
                              <prop readOnly="True" type="string" name="id"/>
                              <prop readOnly="True" type="array<@AffectedMoveResource_read>" name="moveResources">
                                <item type="@AffectedMoveResource_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="sourceId"/>
                            </item>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@OperationStatusError_read>" name="details">
                      <item type="@OperationStatusError_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                  </prop>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop readOnly="True" type="string" name="startTime"/>
                  <prop readOnly="True" type="string" name="status"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-08-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0=/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.moveCollectionName" options="move-collection-name name n" required="True" idPart="name">
          <help short="The Move Collection Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.identity" options="identity" group="Body">
          <help short="Defines the MSI properties of the Move Collection."/>
          <arg type="string" var="$body.identity.principalId" options="principal-id">
            <help short="Gets or sets the principal id."/>
          </arg>
          <arg type="string" var="$body.identity.tenantId" options="tenant-id">
            <help short="Gets or sets the tenant id."/>
          </arg>
          <arg type="string" var="$body.identity.type" options="type">
            <help short="The type of identity used for the resource mover service."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$body.location" options="location l" group="Body">
          <help short="The geo-location where the resource lives."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.moveRegion" options="move-region" group="Properties">
          <help short="Gets or sets the move region which indicates the region where the VM Regional to Zonal move will be conducted."/>
        </arg>
        <arg type="string" var="$body.properties.moveType" options="move-type" group="Properties">
          <help short="Defines the MoveType."/>
          <enum>
            <item name="RegionToRegion" value="&quot;RegionToRegion&quot;"/>
            <item name="RegionToZone" value="&quot;RegionToZone&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.sourceRegion" options="source-region" group="Properties">
          <help short="Gets or sets the source region."/>
        </arg>
        <arg type="string" var="$body.properties.targetRegion" options="target-region" group="Properties">
          <help short="Gets or sets the target region."/>
        </arg>
        <arg type="string" var="$body.properties.version" options="version" group="Properties">
          <help short="Gets or sets the version of move collection."/>
        </arg>
      </argGroup>
      <operation operationId="MoveCollections_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}">
          <request method="put">
            <path>
              <param type="string" name="moveCollectionName" arg="$Path.moveCollectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="identity" arg="$body.identity">
                    <prop type="string" name="principalId" arg="$body.identity.principalId"/>
                    <prop type="string" name="tenantId" arg="$body.identity.tenantId"/>
                    <prop type="string" name="type" arg="$body.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="moveRegion" arg="$body.properties.moveRegion"/>
                    <prop type="string" name="moveType" arg="$body.properties.moveType">
                      <enum>
                        <item value="&quot;RegionToRegion&quot;"/>
                        <item value="&quot;RegionToZone&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceRegion" arg="$body.properties.sourceRegion"/>
                    <prop type="string" name="targetRegion" arg="$body.properties.targetRegion"/>
                    <prop type="string" name="version" arg="$body.properties.version"/>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Migrate/moveCollections/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="object" name="properties" cls="MoveResourceErrorBody_read">
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@MoveResourceErrorBody_read>" name="details">
                          <item type="@MoveResourceErrorBody_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="target"/>
                      </prop>
                    </prop>
                    <prop type="string" name="moveRegion"/>
                    <prop type="string" name="moveType">
                      <enum>
                        <item value="&quot;RegionToRegion&quot;"/>
                        <item value="&quot;RegionToZone&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceRegion"/>
                    <prop type="string" name="targetRegion"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-08-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0=/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.moveCollectionName" options="move-collection-name name n" required="True" idPart="name">
          <help short="The Move Collection Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.identity" options="identity" group="Body">
          <help short="Defines the MSI properties of the Move Collection."/>
          <arg nullable="True" type="string" var="$body.identity.principalId" options="principal-id">
            <help short="Gets or sets the principal id."/>
          </arg>
          <arg nullable="True" type="string" var="$body.identity.tenantId" options="tenant-id">
            <help short="Gets or sets the tenant id."/>
          </arg>
          <arg nullable="True" type="string" var="$body.identity.type" options="type">
            <help short="The type of identity used for the resource mover service."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$body.properties.moveRegion" options="move-region" group="Properties">
          <help short="Gets or sets the move region which indicates the region where the VM Regional to Zonal move will be conducted."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.moveType" options="move-type" group="Properties">
          <help short="Defines the MoveType."/>
          <enum>
            <item name="RegionToRegion" value="&quot;RegionToRegion&quot;"/>
            <item name="RegionToZone" value="&quot;RegionToZone&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.sourceRegion" options="source-region" group="Properties">
          <help short="Gets or sets the source region."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.targetRegion" options="target-region" group="Properties">
          <help short="Gets or sets the target region."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.version" options="version" group="Properties">
          <help short="Gets or sets the version of move collection."/>
        </arg>
      </argGroup>
      <operation operationId="MoveCollections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}">
          <request method="get">
            <path>
              <param type="string" name="moveCollectionName" arg="$Path.moveCollectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MoveCollection_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Migrate/moveCollections/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="object" name="properties" cls="MoveResourceErrorBody_read">
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@MoveResourceErrorBody_read>" name="details">
                          <item type="@MoveResourceErrorBody_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="target"/>
                      </prop>
                    </prop>
                    <prop type="string" name="moveRegion"/>
                    <prop type="string" name="moveType">
                      <enum>
                        <item value="&quot;RegionToRegion&quot;"/>
                        <item value="&quot;RegionToZone&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceRegion"/>
                    <prop type="string" name="targetRegion"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="identity" arg="$body.identity">
                <prop type="string" name="principalId" arg="$body.identity.principalId"/>
                <prop type="string" name="tenantId" arg="$body.identity.tenantId"/>
                <prop type="string" name="type" arg="$body.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="properties">
                <prop type="string" name="moveRegion" arg="$body.properties.moveRegion"/>
                <prop type="string" name="moveType" arg="$body.properties.moveType">
                  <enum>
                    <item value="&quot;RegionToRegion&quot;"/>
                    <item value="&quot;RegionToZone&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="sourceRegion" arg="$body.properties.sourceRegion"/>
                <prop type="string" name="targetRegion" arg="$body.properties.targetRegion"/>
                <prop type="string" name="version" arg="$body.properties.version"/>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="MoveCollections_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}">
          <request method="put">
            <path>
              <param type="string" name="moveCollectionName" arg="$Path.moveCollectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@MoveCollection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
