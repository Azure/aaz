<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}/summaries/{}" version="2025-08-02" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0vc3VtbWFyaWVzL3tzdW1tYXJ5VHlwZX0=/V/MjAyNS0wOC0wMg=="/>
  <commandGroup name="firmwareanalysis firmware">
    <command name="summary" version="2025-08-02" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotfirmwaredefense/workspaces/{}/firmwares/{}/summaries/{}" version="2025-08-02" swagger="mgmt-plane/fist/ResourceProviders/Microsoft.IoTFirmwareDefense/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW9URmlybXdhcmVEZWZlbnNlL3dvcmtzcGFjZXMve3dvcmtzcGFjZU5hbWV9L2Zpcm13YXJlcy97ZmlybXdhcmVJZH0vc3VtbWFyaWVzL3tzdW1tYXJ5VHlwZX0=/V/MjAyNS0wOC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firmwareId" options="firmware-id" required="True" idPart="child_name_1">
          <help short="The id of the firmware."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.summaryType" options="summary-type name n" required="True" idPart="child_name_2">
          <help short="The Firmware analysis summary name describing the type of summary."/>
          <enum>
            <item name="BinaryHardening" value="&quot;BinaryHardening&quot;"/>
            <item name="CommonVulnerabilitiesAndExposures" value="&quot;CommonVulnerabilitiesAndExposures&quot;"/>
            <item name="CryptoCertificate" value="&quot;CryptoCertificate&quot;"/>
            <item name="CryptoKey" value="&quot;CryptoKey&quot;"/>
            <item name="Firmware" value="&quot;Firmware&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="name">
          <help short="The name of the firmware analysis workspace."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
        </arg>
      </argGroup>
      <operation operationId="Summaries_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries/{summaryType}">
          <request method="get">
            <path>
              <param type="string" name="firmwareId" arg="$Path.firmwareId" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="summaryType" arg="$Path.summaryType" required="True">
                <enum>
                  <item value="&quot;BinaryHardening&quot;"/>
                  <item value="&quot;CommonVulnerabilitiesAndExposures&quot;"/>
                  <item value="&quot;CryptoCertificate&quot;"/>
                  <item value="&quot;CryptoKey&quot;"/>
                  <item value="&quot;Firmware&quot;"/>
                </enum>
              </param>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-08-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.IoTFirmwareDefense/workspaces/{}/firmwares/{}/summaries/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Analyzing&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Extracting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="summaryType" required="True">
                      <enum>
                        <item value="&quot;BinaryHardening&quot;"/>
                        <item value="&quot;CommonVulnerabilitiesAndExposures&quot;"/>
                        <item value="&quot;CryptoCertificate&quot;"/>
                        <item value="&quot;CryptoKey&quot;"/>
                        <item value="&quot;Firmware&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="summaryType" value="BinaryHardening">
                      <prop type="integer64" name="notExecutableStackCount"/>
                      <prop type="integer64" name="positionIndependentExecutableCount"/>
                      <prop type="integer64" name="relocationReadOnlyCount"/>
                      <prop type="integer64" name="stackCanaryCount"/>
                      <prop type="integer64" name="strippedBinaryCount"/>
                      <prop type="integer64" name="totalFiles"/>
                    </discriminator>
                    <discriminator property="summaryType" value="CommonVulnerabilitiesAndExposures">
                      <prop type="integer64" name="criticalCveCount"/>
                      <prop type="integer64" name="highCveCount"/>
                      <prop type="integer64" name="lowCveCount"/>
                      <prop type="integer64" name="mediumCveCount"/>
                      <prop type="integer64" name="unknownCveCount"/>
                    </discriminator>
                    <discriminator property="summaryType" value="CryptoCertificate">
                      <prop type="integer64" name="expiredCertificateCount"/>
                      <prop type="integer64" name="expiringSoonCertificateCount"/>
                      <prop type="integer64" name="pairedKeyCount"/>
                      <prop type="integer64" name="selfSignedCertificateCount"/>
                      <prop type="integer64" name="shortKeySizeCount"/>
                      <prop type="integer64" name="totalCertificateCount"/>
                      <prop type="integer64" name="weakSignatureCount"/>
                    </discriminator>
                    <discriminator property="summaryType" value="CryptoKey">
                      <prop type="integer64" name="pairedKeyCount"/>
                      <prop type="integer64" name="privateKeyCount"/>
                      <prop type="integer64" name="publicKeyCount"/>
                      <prop type="integer64" name="shortKeySizeCount"/>
                      <prop type="integer64" name="totalKeyCount"/>
                    </discriminator>
                    <discriminator property="summaryType" value="Firmware">
                      <prop type="integer64" name="analysisTimeSeconds"/>
                      <prop type="integer64" name="binaryCount"/>
                      <prop type="integer64" name="componentCount"/>
                      <prop type="integer64" name="extractedFileCount"/>
                      <prop type="integer64" name="extractedSize"/>
                      <prop type="integer64" name="fileSize"/>
                      <prop type="integer64" name="rootFileSystems"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
