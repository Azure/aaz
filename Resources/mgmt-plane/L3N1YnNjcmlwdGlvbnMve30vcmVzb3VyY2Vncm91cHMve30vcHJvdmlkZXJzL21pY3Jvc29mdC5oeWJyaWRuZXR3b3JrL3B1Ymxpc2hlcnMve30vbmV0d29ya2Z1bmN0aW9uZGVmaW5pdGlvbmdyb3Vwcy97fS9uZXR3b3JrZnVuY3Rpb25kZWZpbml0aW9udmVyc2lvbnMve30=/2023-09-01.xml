<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkfunctiondefinitiongroups/{}/networkfunctiondefinitionversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBzL3tuZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uVmVyc2lvbnMve25ldHdvcmtGdW5jdGlvbkRlZmluaXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="aosm publisher network-function-definition version">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkfunctiondefinitiongroups/{}/networkfunctiondefinitionversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBzL3tuZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uVmVyc2lvbnMve25ldHdvcmtGdW5jdGlvbkRlZmluaXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFunctionDefinitionGroupName" options="group-name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the network function definition group."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.networkFunctionDefinitionVersionName" options="version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the network function definition version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html."/>
          <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.publisherName" options="publisher-name" required="True" idPart="name">
          <help short="The name of the publisher."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkFunctionDefinitionVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}">
          <request method="get">
            <path>
              <param type="string" name="networkFunctionDefinitionGroupName" arg="$Path.networkFunctionDefinitionGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="networkFunctionDefinitionVersionName" arg="$Path.networkFunctionDefinitionVersionName" required="True">
                <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
              </param>
              <param type="string" name="publisherName" arg="$Path.publisherName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridNetwork/publishers/{}/networkFunctionDefinitionGroups/{}/networkFunctionDefinitionVersions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="deployParameters"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="networkFunctionType" required="True">
                      <enum>
                        <item value="&quot;ContainerizedNetworkFunction&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;VirtualNetworkFunction&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Converging&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="versionState">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Deprecated&quot;"/>
                        <item value="&quot;Preview&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Validating&quot;"/>
                        <item value="&quot;ValidationFailed&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="networkFunctionType" value="ContainerizedNetworkFunction">
                      <prop type="object" name="networkFunctionTemplate">
                        <prop type="string" name="nfviType" required="True">
                          <enum>
                            <item value="&quot;AzureArcKubernetes&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="nfviType" value="AzureArcKubernetes">
                          <prop type="array<object>" name="networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item value="&quot;HelmPackage&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="dependsOnProfile" cls="DependsOnProfile_read">
                                <prop type="array<string>" name="installDependsOn">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="uninstallDependsOn">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="updateDependsOn">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="string" name="name"/>
                              <discriminator property="artifactType" value="HelmPackage">
                                <prop type="object" name="artifactProfile">
                                  <prop type="object" name="artifactStore" cls="ReferencedResource_read">
                                    <prop type="string" name="id"/>
                                  </prop>
                                  <prop type="object" name="helmArtifactProfile">
                                    <prop type="string" name="helmPackageName"/>
                                    <prop type="string" name="helmPackageVersionRange"/>
                                    <prop type="array<string>" name="imagePullSecretsValuesPaths">
                                      <item type="string"/>
                                    </prop>
                                    <prop type="array<string>" name="registryValuesPaths">
                                      <item type="string"/>
                                    </prop>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="helmMappingRuleProfile">
                                    <prop type="string" name="helmPackageVersion"/>
                                    <prop type="object" name="options">
                                      <prop type="object" name="installOptions">
                                        <prop type="string" name="atomic"/>
                                        <prop type="string" name="timeout"/>
                                        <prop type="string" name="wait"/>
                                      </prop>
                                      <prop type="object" name="upgradeOptions">
                                        <prop type="string" name="atomic"/>
                                        <prop type="string" name="timeout"/>
                                        <prop type="string" name="wait"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="releaseName"/>
                                    <prop type="string" name="releaseNamespace"/>
                                    <prop type="string" name="values"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                      </prop>
                    </discriminator>
                    <discriminator property="networkFunctionType" value="VirtualNetworkFunction">
                      <prop type="object" name="networkFunctionTemplate">
                        <prop type="string" name="nfviType" required="True">
                          <enum>
                            <item value="&quot;AzureCore&quot;"/>
                            <item value="&quot;AzureOperatorNexus&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="nfviType" value="AzureCore">
                          <prop type="array<object>" name="networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item value="&quot;ArmTemplate&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                  <item value="&quot;VhdImageFile&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@DependsOnProfile_read" name="dependsOnProfile"/>
                              <prop type="string" name="name"/>
                              <discriminator property="artifactType" value="ArmTemplate">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="object" name="templateArtifactProfile" cls="ArmTemplateArtifactProfile_read">
                                    <prop type="string" name="templateName"/>
                                    <prop type="string" name="templateVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="templateMappingRuleProfile" cls="ArmTemplateMappingRuleProfile_read">
                                    <prop type="string" name="templateParameters"/>
                                  </prop>
                                </prop>
                              </discriminator>
                              <discriminator property="artifactType" value="VhdImageFile">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="object" name="vhdArtifactProfile">
                                    <prop type="string" name="vhdName"/>
                                    <prop type="string" name="vhdVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="vhdImageMappingRuleProfile">
                                    <prop type="string" name="userConfiguration"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                        <discriminator property="nfviType" value="AzureOperatorNexus">
                          <prop type="array<object>" name="networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item value="&quot;ArmTemplate&quot;"/>
                                  <item value="&quot;ImageFile&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@DependsOnProfile_read" name="dependsOnProfile"/>
                              <prop type="string" name="name"/>
                              <discriminator property="artifactType" value="ArmTemplate">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="@ArmTemplateArtifactProfile_read" name="templateArtifactProfile"/>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@ArmTemplateMappingRuleProfile_read" name="templateMappingRuleProfile"/>
                                </prop>
                              </discriminator>
                              <discriminator property="artifactType" value="ImageFile">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="object" name="imageArtifactProfile">
                                    <prop type="string" name="imageName"/>
                                    <prop type="string" name="imageVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="imageMappingRuleProfile">
                                    <prop type="string" name="userConfiguration"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                      </prop>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkfunctiondefinitiongroups/{}/networkfunctiondefinitionversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBzL3tuZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uVmVyc2lvbnMve25ldHdvcmtGdW5jdGlvbkRlZmluaXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFunctionDefinitionGroupName" options="group-name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the network function definition group."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.networkFunctionDefinitionVersionName" options="version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the network function definition version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html."/>
          <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.publisherName" options="publisher-name" required="True" idPart="name">
          <help short="The name of the publisher."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkFunctionDefinitionVersions_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}">
          <request method="delete">
            <path>
              <param type="string" name="networkFunctionDefinitionGroupName" arg="$Path.networkFunctionDefinitionGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="networkFunctionDefinitionVersionName" arg="$Path.networkFunctionDefinitionVersionName" required="True">
                <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
              </param>
              <param type="string" name="publisherName" arg="$Path.publisherName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkfunctiondefinitiongroups/{}/networkfunctiondefinitionversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBzL3tuZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uR3JvdXBOYW1lfS9uZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uVmVyc2lvbnMve25ldHdvcmtGdW5jdGlvbkRlZmluaXRpb25WZXJzaW9uTmFtZX0=/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFunctionDefinitionGroupName" options="group-name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the network function definition group."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.networkFunctionDefinitionVersionName" options="version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the network function definition version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html."/>
          <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.publisherName" options="publisher-name" required="True" idPart="name">
          <help short="The name of the publisher."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction" options="containerized-network-function" group="Properties">
          <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate" options="network-function-template">
            <help short="Containerized network function template."/>
            <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes" options="azure-arc-kubernetes">
              <arg type="array<object>" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications" options="network-function-applications">
                <help short="Network function applications."/>
                <item type="object">
                  <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage" options="helm-package">
                    <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile" options="artifact-profile">
                      <help short="Azure arc kubernetes artifact profile."/>
                      <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.artifactStore" options="artifact-store" cls="ReferencedResource_create">
                        <help short="The reference to artifact store."/>
                        <arg type="string" var="@ReferencedResource_create.id" options="id">
                          <help short="Resource ID."/>
                        </arg>
                      </arg>
                      <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile" options="helm-artifact-profile">
                        <help short="Helm artifact profile."/>
                        <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.helmPackageName" options="helm-package-name">
                          <help short="Helm package name."/>
                        </arg>
                        <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.helmPackageVersionRange" options="helm-package-version-range">
                          <help short="Helm package version range."/>
                        </arg>
                        <arg type="array<string>" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.imagePullSecretsValuesPaths" options="image-pull-secrets-values-paths">
                          <help short="The image pull secrets values path list."/>
                          <item type="string"/>
                        </arg>
                        <arg type="array<string>" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.registryValuesPaths" options="registry-values-paths">
                          <help short="The registry values path list."/>
                          <item type="string"/>
                        </arg>
                      </arg>
                    </arg>
                    <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile" options="deploy-parameters-mapping-rule-profile">
                      <help short="Deploy mapping rule profile."/>
                      <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.applicationEnablement" options="application-enablement">
                        <help short="The application enablement."/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                          <item name="Unknown" value="&quot;Unknown&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile" options="helm-mapping-rule-profile">
                        <help short="The helm mapping rule profile."/>
                        <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.helmPackageVersion" options="helm-package-version">
                          <help short="Helm package version."/>
                        </arg>
                        <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options" options="options">
                          <help short="The helm deployment options"/>
                          <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions" options="install-options">
                            <help short="The helm deployment install options"/>
                            <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions.atomic" options="atomic">
                              <help short="The helm deployment atomic options"/>
                            </arg>
                            <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions.timeout" options="timeout">
                              <help short="The helm deployment timeout options"/>
                            </arg>
                            <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions.wait" options="wait">
                              <help short="The helm deployment wait options"/>
                            </arg>
                          </arg>
                          <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions" options="upgrade-options">
                            <help short="The helm deployment upgrade options"/>
                            <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions.atomic" options="atomic">
                              <help short="The helm deployment atomic options"/>
                            </arg>
                            <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions.timeout" options="timeout">
                              <help short="The helm deployment timeout options"/>
                            </arg>
                            <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions.wait" options="wait">
                              <help short="The helm deployment wait options"/>
                            </arg>
                          </arg>
                        </arg>
                        <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.releaseName" options="release-name">
                          <help short="Helm release name."/>
                        </arg>
                        <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.releaseNamespace" options="release-namespace">
                          <help short="Helm release namespace."/>
                        </arg>
                        <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.values" options="values">
                          <help short="Helm release values."/>
                        </arg>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].dependsOnProfile" options="depends-on-profile" cls="DependsOnProfile_create">
                    <help short="Depends on profile definition."/>
                    <arg type="array<string>" var="@DependsOnProfile_create.installDependsOn" options="install-depends-on">
                      <help short="Application installation operation dependency."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="@DependsOnProfile_create.uninstallDependsOn" options="uninstall-depends-on">
                      <help short="Application deletion operation dependency."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="@DependsOnProfile_create.updateDependsOn" options="update-depends-on">
                      <help short="Application update operation dependency."/>
                      <item type="string"/>
                    </arg>
                  </arg>
                  <arg type="string" var="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].name" options="name">
                    <help short="The name of the network function application."/>
                  </arg>
                </item>
              </arg>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.VirtualNetworkFunction" options="virtual-network-function" group="Properties">
          <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate" options="network-function-template">
            <help short="Virtual network function template."/>
            <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore" options="azure-core">
              <arg type="array<object>" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications" options="network-function-applications">
                <help short="Network function applications."/>
                <item type="object">
                  <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate" options="arm-template">
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.artifactProfile" options="artifact-profile">
                      <help short="Azure template artifact profile."/>
                      <arg type="@ReferencedResource_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.artifactProfile.artifactStore" options="artifact-store">
                        <help short="The reference to artifact store."/>
                      </arg>
                      <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.artifactProfile.templateArtifactProfile" options="template-artifact-profile" cls="ArmTemplateArtifactProfile_create">
                        <help short="Template artifact profile."/>
                        <arg type="string" var="@ArmTemplateArtifactProfile_create.templateName" options="template-name">
                          <help short="Template name."/>
                        </arg>
                        <arg type="string" var="@ArmTemplateArtifactProfile_create.templateVersion" options="template-version">
                          <help short="Template version."/>
                        </arg>
                      </arg>
                    </arg>
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile" options="deploy-parameters-mapping-rule-profile">
                      <help short="Deploy mapping rule profile."/>
                      <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.applicationEnablement" options="application-enablement">
                        <help short="The application enablement."/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                          <item name="Unknown" value="&quot;Unknown&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.templateMappingRuleProfile" options="template-mapping-rule-profile" cls="ArmTemplateMappingRuleProfile_create">
                        <help short="The template mapping rule profile."/>
                        <arg type="string" var="@ArmTemplateMappingRuleProfile_create.templateParameters" options="template-parameters">
                          <help short="List of template parameters."/>
                        </arg>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile" options="vhd-image-file">
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile" options="artifact-profile">
                      <help short="Azure vhd image artifact profile."/>
                      <arg type="@ReferencedResource_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.artifactStore" options="artifact-store">
                        <help short="The reference to artifact store."/>
                      </arg>
                      <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.vhdArtifactProfile" options="vhd-artifact-profile">
                        <help short="Vhd artifact profile."/>
                        <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.vhdArtifactProfile.vhdName" options="vhd-name">
                          <help short="Vhd name."/>
                        </arg>
                        <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.vhdArtifactProfile.vhdVersion" options="vhd-version">
                          <help short="Vhd version."/>
                        </arg>
                      </arg>
                    </arg>
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile" options="deploy-parameters-mapping-rule-profile">
                      <help short="Deploy mapping rule profile."/>
                      <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile.applicationEnablement" options="application-enablement">
                        <help short="The application enablement."/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                          <item name="Unknown" value="&quot;Unknown&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile.vhdImageMappingRuleProfile" options="vhd-image-mapping-rule-profile">
                        <help short="The vhd mapping rule profile."/>
                        <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile.vhdImageMappingRuleProfile.userConfiguration" options="user-configuration">
                          <help short="List of values."/>
                        </arg>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="@DependsOnProfile_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].dependsOnProfile" options="depends-on-profile">
                    <help short="Depends on profile definition."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].name" options="name">
                    <help short="The name of the network function application."/>
                  </arg>
                </item>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus" options="azure-operator-nexus">
              <arg type="array<object>" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications" options="network-function-applications">
                <help short="Network function applications."/>
                <item type="object">
                  <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate" options="arm-template">
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.artifactProfile" options="artifact-profile">
                      <help short="Azure Operator Distributed Services Template artifact profile."/>
                      <arg type="@ReferencedResource_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.artifactProfile.artifactStore" options="artifact-store">
                        <help short="The reference to artifact store."/>
                      </arg>
                      <arg type="@ArmTemplateArtifactProfile_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.artifactProfile.templateArtifactProfile" options="template-artifact-profile">
                        <help short="Template artifact profile."/>
                      </arg>
                    </arg>
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile" options="deploy-parameters-mapping-rule-profile">
                      <help short="Deploy mapping rule profile."/>
                      <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.applicationEnablement" options="application-enablement">
                        <help short="The application enablement."/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                          <item name="Unknown" value="&quot;Unknown&quot;"/>
                        </enum>
                      </arg>
                      <arg type="@ArmTemplateMappingRuleProfile_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.templateMappingRuleProfile" options="template-mapping-rule-profile">
                        <help short="The template mapping rule profile."/>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile" options="image-file">
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile" options="artifact-profile">
                      <help short="Azure Operator Distributed Services image artifact profile."/>
                      <arg type="@ReferencedResource_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.artifactStore" options="artifact-store">
                        <help short="The reference to artifact store."/>
                      </arg>
                      <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.imageArtifactProfile" options="image-artifact-profile">
                        <help short="Image artifact profile."/>
                        <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.imageArtifactProfile.imageName" options="image-name">
                          <help short="Image name."/>
                        </arg>
                        <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.imageArtifactProfile.imageVersion" options="image-version">
                          <help short="Image version."/>
                        </arg>
                      </arg>
                    </arg>
                    <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile" options="deploy-parameters-mapping-rule-profile">
                      <help short="Deploy mapping rule profile."/>
                      <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile.applicationEnablement" options="application-enablement">
                        <help short="The application enablement."/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                          <item name="Unknown" value="&quot;Unknown&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile.imageMappingRuleProfile" options="image-mapping-rule-profile">
                        <help short="The vhd mapping rule profile."/>
                        <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile.imageMappingRuleProfile.userConfiguration" options="user-configuration">
                          <help short="List of values."/>
                        </arg>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="@DependsOnProfile_create" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].dependsOnProfile" options="depends-on-profile">
                    <help short="Depends on profile definition."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].name" options="name">
                    <help short="The name of the network function application."/>
                  </arg>
                </item>
              </arg>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.deployParameters" options="deploy-parameters" group="Properties">
          <help short="The deployment parameters of the network function definition version."/>
        </arg>
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="The network function definition version description."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkFunctionDefinitionVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}">
          <request method="put">
            <path>
              <param type="string" name="networkFunctionDefinitionGroupName" arg="$Path.networkFunctionDefinitionGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="networkFunctionDefinitionVersionName" arg="$Path.networkFunctionDefinitionVersionName" required="True">
                <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
              </param>
              <param type="string" name="publisherName" arg="$Path.publisherName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="deployParameters" arg="$parameters.properties.deployParameters"/>
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="string" name="networkFunctionType" required="True">
                      <enum>
                        <item arg="$parameters.properties.ContainerizedNetworkFunction" value="&quot;ContainerizedNetworkFunction&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item arg="$parameters.properties.VirtualNetworkFunction" value="&quot;VirtualNetworkFunction&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="networkFunctionType" value="ContainerizedNetworkFunction">
                      <prop type="object" name="networkFunctionTemplate" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate">
                        <prop type="string" name="nfviType" required="True">
                          <enum>
                            <item arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes" value="&quot;AzureArcKubernetes&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="nfviType" value="AzureArcKubernetes">
                          <prop type="array<object>" name="networkFunctionApplications" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage" value="&quot;HelmPackage&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="dependsOnProfile" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].dependsOnProfile" cls="DependsOnProfile_create">
                                <prop type="array<string>" name="installDependsOn" arg="@DependsOnProfile_create.installDependsOn">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="uninstallDependsOn" arg="@DependsOnProfile_create.uninstallDependsOn">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="updateDependsOn" arg="@DependsOnProfile_create.updateDependsOn">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="string" name="name" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].name"/>
                              <discriminator property="artifactType" value="HelmPackage">
                                <prop type="object" name="artifactProfile" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile">
                                  <prop type="object" name="artifactStore" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.artifactStore" cls="ReferencedResource_create">
                                    <prop type="string" name="id" arg="@ReferencedResource_create.id"/>
                                  </prop>
                                  <prop type="object" name="helmArtifactProfile" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile">
                                    <prop type="string" name="helmPackageName" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.helmPackageName"/>
                                    <prop type="string" name="helmPackageVersionRange" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.helmPackageVersionRange"/>
                                    <prop type="array<string>" name="imagePullSecretsValuesPaths" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.imagePullSecretsValuesPaths">
                                      <item type="string"/>
                                    </prop>
                                    <prop type="array<string>" name="registryValuesPaths" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.artifactProfile.helmArtifactProfile.registryValuesPaths">
                                      <item type="string"/>
                                    </prop>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="helmMappingRuleProfile" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile">
                                    <prop type="string" name="helmPackageVersion" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.helmPackageVersion"/>
                                    <prop type="object" name="options" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options">
                                      <prop type="object" name="installOptions" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions">
                                        <prop type="string" name="atomic" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions.atomic"/>
                                        <prop type="string" name="timeout" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions.timeout"/>
                                        <prop type="string" name="wait" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.installOptions.wait"/>
                                      </prop>
                                      <prop type="object" name="upgradeOptions" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions">
                                        <prop type="string" name="atomic" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions.atomic"/>
                                        <prop type="string" name="timeout" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions.timeout"/>
                                        <prop type="string" name="wait" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.options.upgradeOptions.wait"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="releaseName" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.releaseName"/>
                                    <prop type="string" name="releaseNamespace" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.releaseNamespace"/>
                                    <prop type="string" name="values" arg="$parameters.properties.ContainerizedNetworkFunction.networkFunctionTemplate.AzureArcKubernetes.networkFunctionApplications[].HelmPackage.deployParametersMappingRuleProfile.helmMappingRuleProfile.values"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                      </prop>
                    </discriminator>
                    <discriminator property="networkFunctionType" value="VirtualNetworkFunction">
                      <prop type="object" name="networkFunctionTemplate" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate">
                        <prop type="string" name="nfviType" required="True">
                          <enum>
                            <item arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore" value="&quot;AzureCore&quot;"/>
                            <item arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus" value="&quot;AzureOperatorNexus&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="nfviType" value="AzureCore">
                          <prop type="array<object>" name="networkFunctionApplications" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate" value="&quot;ArmTemplate&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                  <item arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile" value="&quot;VhdImageFile&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@DependsOnProfile_create" name="dependsOnProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].dependsOnProfile"/>
                              <prop type="string" name="name" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].name"/>
                              <discriminator property="artifactType" value="ArmTemplate">
                                <prop type="object" name="artifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.artifactProfile">
                                  <prop type="@ReferencedResource_create" name="artifactStore" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.artifactProfile.artifactStore"/>
                                  <prop type="object" name="templateArtifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.artifactProfile.templateArtifactProfile" cls="ArmTemplateArtifactProfile_create">
                                    <prop type="string" name="templateName" arg="@ArmTemplateArtifactProfile_create.templateName"/>
                                    <prop type="string" name="templateVersion" arg="@ArmTemplateArtifactProfile_create.templateVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="templateMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.templateMappingRuleProfile" cls="ArmTemplateMappingRuleProfile_create">
                                    <prop type="string" name="templateParameters" arg="@ArmTemplateMappingRuleProfile_create.templateParameters"/>
                                  </prop>
                                </prop>
                              </discriminator>
                              <discriminator property="artifactType" value="VhdImageFile">
                                <prop type="object" name="artifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile">
                                  <prop type="@ReferencedResource_create" name="artifactStore" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.artifactStore"/>
                                  <prop type="object" name="vhdArtifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.vhdArtifactProfile">
                                    <prop type="string" name="vhdName" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.vhdArtifactProfile.vhdName"/>
                                    <prop type="string" name="vhdVersion" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.artifactProfile.vhdArtifactProfile.vhdVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile.applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="vhdImageMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile.vhdImageMappingRuleProfile">
                                    <prop type="string" name="userConfiguration" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureCore.networkFunctionApplications[].VhdImageFile.deployParametersMappingRuleProfile.vhdImageMappingRuleProfile.userConfiguration"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                        <discriminator property="nfviType" value="AzureOperatorNexus">
                          <prop type="array<object>" name="networkFunctionApplications" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate" value="&quot;ArmTemplate&quot;"/>
                                  <item arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile" value="&quot;ImageFile&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@DependsOnProfile_create" name="dependsOnProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].dependsOnProfile"/>
                              <prop type="string" name="name" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].name"/>
                              <discriminator property="artifactType" value="ArmTemplate">
                                <prop type="object" name="artifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.artifactProfile">
                                  <prop type="@ReferencedResource_create" name="artifactStore" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.artifactProfile.artifactStore"/>
                                  <prop type="@ArmTemplateArtifactProfile_create" name="templateArtifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.artifactProfile.templateArtifactProfile"/>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@ArmTemplateMappingRuleProfile_create" name="templateMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ArmTemplate.deployParametersMappingRuleProfile.templateMappingRuleProfile"/>
                                </prop>
                              </discriminator>
                              <discriminator property="artifactType" value="ImageFile">
                                <prop type="object" name="artifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile">
                                  <prop type="@ReferencedResource_create" name="artifactStore" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.artifactStore"/>
                                  <prop type="object" name="imageArtifactProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.imageArtifactProfile">
                                    <prop type="string" name="imageName" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.imageArtifactProfile.imageName"/>
                                    <prop type="string" name="imageVersion" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.artifactProfile.imageArtifactProfile.imageVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile.applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="imageMappingRuleProfile" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile.imageMappingRuleProfile">
                                    <prop type="string" name="userConfiguration" arg="$parameters.properties.VirtualNetworkFunction.networkFunctionTemplate.AzureOperatorNexus.networkFunctionApplications[].ImageFile.deployParametersMappingRuleProfile.imageMappingRuleProfile.userConfiguration"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                      </prop>
                    </discriminator>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridNetwork/publishers/{}/networkFunctionDefinitionGroups/{}/networkFunctionDefinitionVersions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="deployParameters"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="networkFunctionType" required="True">
                      <enum>
                        <item value="&quot;ContainerizedNetworkFunction&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;VirtualNetworkFunction&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Converging&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="versionState">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Deprecated&quot;"/>
                        <item value="&quot;Preview&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Validating&quot;"/>
                        <item value="&quot;ValidationFailed&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="networkFunctionType" value="ContainerizedNetworkFunction">
                      <prop type="object" name="networkFunctionTemplate">
                        <prop type="string" name="nfviType" required="True">
                          <enum>
                            <item value="&quot;AzureArcKubernetes&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="nfviType" value="AzureArcKubernetes">
                          <prop type="array<object>" name="networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item value="&quot;HelmPackage&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="dependsOnProfile" cls="DependsOnProfile_read">
                                <prop type="array<string>" name="installDependsOn">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="uninstallDependsOn">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="updateDependsOn">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="string" name="name"/>
                              <discriminator property="artifactType" value="HelmPackage">
                                <prop type="object" name="artifactProfile">
                                  <prop type="object" name="artifactStore" cls="ReferencedResource_read">
                                    <prop type="string" name="id"/>
                                  </prop>
                                  <prop type="object" name="helmArtifactProfile">
                                    <prop type="string" name="helmPackageName"/>
                                    <prop type="string" name="helmPackageVersionRange"/>
                                    <prop type="array<string>" name="imagePullSecretsValuesPaths">
                                      <item type="string"/>
                                    </prop>
                                    <prop type="array<string>" name="registryValuesPaths">
                                      <item type="string"/>
                                    </prop>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="helmMappingRuleProfile">
                                    <prop type="string" name="helmPackageVersion"/>
                                    <prop type="object" name="options">
                                      <prop type="object" name="installOptions">
                                        <prop type="string" name="atomic"/>
                                        <prop type="string" name="timeout"/>
                                        <prop type="string" name="wait"/>
                                      </prop>
                                      <prop type="object" name="upgradeOptions">
                                        <prop type="string" name="atomic"/>
                                        <prop type="string" name="timeout"/>
                                        <prop type="string" name="wait"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="releaseName"/>
                                    <prop type="string" name="releaseNamespace"/>
                                    <prop type="string" name="values"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                      </prop>
                    </discriminator>
                    <discriminator property="networkFunctionType" value="VirtualNetworkFunction">
                      <prop type="object" name="networkFunctionTemplate">
                        <prop type="string" name="nfviType" required="True">
                          <enum>
                            <item value="&quot;AzureCore&quot;"/>
                            <item value="&quot;AzureOperatorNexus&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="nfviType" value="AzureCore">
                          <prop type="array<object>" name="networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item value="&quot;ArmTemplate&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                  <item value="&quot;VhdImageFile&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@DependsOnProfile_read" name="dependsOnProfile"/>
                              <prop type="string" name="name"/>
                              <discriminator property="artifactType" value="ArmTemplate">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="object" name="templateArtifactProfile" cls="ArmTemplateArtifactProfile_read">
                                    <prop type="string" name="templateName"/>
                                    <prop type="string" name="templateVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="templateMappingRuleProfile" cls="ArmTemplateMappingRuleProfile_read">
                                    <prop type="string" name="templateParameters"/>
                                  </prop>
                                </prop>
                              </discriminator>
                              <discriminator property="artifactType" value="VhdImageFile">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="object" name="vhdArtifactProfile">
                                    <prop type="string" name="vhdName"/>
                                    <prop type="string" name="vhdVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="vhdImageMappingRuleProfile">
                                    <prop type="string" name="userConfiguration"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                        <discriminator property="nfviType" value="AzureOperatorNexus">
                          <prop type="array<object>" name="networkFunctionApplications" identifiers="name">
                            <item type="object">
                              <prop type="string" name="artifactType" required="True">
                                <enum>
                                  <item value="&quot;ArmTemplate&quot;"/>
                                  <item value="&quot;ImageFile&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@DependsOnProfile_read" name="dependsOnProfile"/>
                              <prop type="string" name="name"/>
                              <discriminator property="artifactType" value="ArmTemplate">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="@ArmTemplateArtifactProfile_read" name="templateArtifactProfile"/>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@ArmTemplateMappingRuleProfile_read" name="templateMappingRuleProfile"/>
                                </prop>
                              </discriminator>
                              <discriminator property="artifactType" value="ImageFile">
                                <prop type="object" name="artifactProfile">
                                  <prop type="@ReferencedResource_read" name="artifactStore"/>
                                  <prop type="object" name="imageArtifactProfile">
                                    <prop type="string" name="imageName"/>
                                    <prop type="string" name="imageVersion"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="deployParametersMappingRuleProfile">
                                  <prop type="string" name="applicationEnablement">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="imageMappingRuleProfile">
                                    <prop type="string" name="userConfiguration"/>
                                  </prop>
                                </prop>
                              </discriminator>
                            </item>
                          </prop>
                        </discriminator>
                      </prop>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
