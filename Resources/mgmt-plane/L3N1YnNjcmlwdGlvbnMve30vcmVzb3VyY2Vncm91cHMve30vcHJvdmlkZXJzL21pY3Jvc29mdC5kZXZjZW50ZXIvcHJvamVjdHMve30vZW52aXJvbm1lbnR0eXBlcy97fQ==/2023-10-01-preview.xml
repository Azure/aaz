<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/environmenttypes/{}" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnRUeXBlcy97ZW52aXJvbm1lbnRUeXBlTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin project-environment-type">
    <command name="show" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/environmenttypes/{}" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnRUeXBlcy97ZW52aXJvbm1lbnRUeXBlTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentTypeName" options="environment-type-name name n" required="True" idPart="child_name_1">
          <help short="The name of the environment type."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="" idPart="name">
          <help short="The name of the project. Use `az configure -d project=<project_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProjectEnvironmentTypes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}">
          <request method="get">
            <path>
              <param type="string" name="environmentTypeName" arg="$Path.environmentTypeName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}/environmentTypes/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="creatorRoleAssignment">
                      <prop type="object" name="roles">
                        <additionalProp>
                          <item type="object" cls="EnvironmentRole_read">
                            <prop readOnly="True" type="string" name="description"/>
                            <prop readOnly="True" type="string" name="roleName"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="string" name="deploymentTargetId"/>
                    <prop type="string" name="displayName"/>
                    <prop readOnly="True" type="integer32" name="environmentCount">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userRoleAssignments">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="roles">
                            <additionalProp>
                              <item type="@EnvironmentRole_read"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-10-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/environmenttypes/{}" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnRUeXBlcy97ZW52aXJvbm1lbnRUeXBlTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentTypeName" options="environment-type-name name n" required="True" idPart="child_name_1">
          <help short="The name of the environment type."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="" idPart="name">
          <help short="The name of the project. Use `az configure -d project=<project_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProjectEnvironmentTypes_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}">
          <request method="delete">
            <path>
              <param type="string" name="environmentTypeName" arg="$Path.environmentTypeName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/environmenttypes/{}" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnRUeXBlcy97ZW52aXJvbm1lbnRUeXBlTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentTypeName" options="environment-type-name name n" required="True" idPart="child_name_1">
          <help short="The name of the environment type."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="" idPart="name">
          <help short="The name of the project. Use `az configure -d project=<project_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" group="Body">
          <help short="The geo-location where the resource lives. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="CreatorRoleAssignment">
        <arg type="object" var="$body.properties.creatorRoleAssignment.roles" options="roles" group="CreatorRoleAssignment">
          <help short="A map of roles to assign to the environment creator."/>
          <additionalProp>
            <item type="object" cls="EnvironmentRole_create">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$body.identity.type" options="identity-type" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities u" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.deploymentTargetId" options="deployment-target-id" group="Properties">
          <help short="ID of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription."/>
        </arg>
        <arg type="string" var="$body.properties.displayName" options="display-name" group="Properties">
          <help short="The display name of the project environment type."/>
        </arg>
        <arg type="string" var="$body.properties.status" options="status" group="Properties">
          <help short="Defines whether this environment type can be used in this project."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.userRoleAssignments" options="user-role-assignments" group="Properties">
          <help short="Role assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs."/>
          <additionalProp>
            <item type="object">
              <arg type="object" var="$body.properties.userRoleAssignments{}.roles" options="roles">
                <help short="A map of roles to assign to the parent user."/>
                <additionalProp>
                  <item type="@EnvironmentRole_create"/>
                </additionalProp>
              </arg>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="ProjectEnvironmentTypes_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}">
          <request method="put">
            <path>
              <param type="string" name="environmentTypeName" arg="$Path.environmentTypeName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$body.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="creatorRoleAssignment">
                      <prop type="object" name="roles" arg="$body.properties.creatorRoleAssignment.roles">
                        <additionalProp>
                          <item type="object" cls="EnvironmentRole_create"/>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="string" name="deploymentTargetId" arg="$body.properties.deploymentTargetId"/>
                    <prop type="string" name="displayName" arg="$body.properties.displayName"/>
                    <prop type="string" name="status" arg="$body.properties.status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userRoleAssignments" arg="$body.properties.userRoleAssignments">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="roles" arg="$body.properties.userRoleAssignments{}.roles">
                            <additionalProp>
                              <item type="@EnvironmentRole_create"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}/environmentTypes/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="creatorRoleAssignment">
                      <prop type="object" name="roles">
                        <additionalProp>
                          <item type="object" cls="EnvironmentRole_read">
                            <prop readOnly="True" type="string" name="description"/>
                            <prop readOnly="True" type="string" name="roleName"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="string" name="deploymentTargetId"/>
                    <prop type="string" name="displayName"/>
                    <prop readOnly="True" type="integer32" name="environmentCount">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userRoleAssignments">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="roles">
                            <additionalProp>
                              <item type="@EnvironmentRole_read"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/environmenttypes/{}" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnRUeXBlcy97ZW52aXJvbm1lbnRUeXBlTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentTypeName" options="environment-type-name name n" required="True" idPart="child_name_1">
          <help short="The name of the environment type."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="" idPart="name">
          <help short="The name of the project. Use `az configure -d project=<project_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="ResourceLocation" var="$body.location" options="location l" hide="True" group="Body">
          <help short="The geo-location where the resource lives. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="CreatorRoleAssignment">
        <arg nullable="True" type="object" var="$body.properties.creatorRoleAssignment.roles" options="roles" group="CreatorRoleAssignment">
          <help short="A map of roles to assign to the environment creator."/>
          <additionalProp>
            <item nullable="True" type="object" cls="EnvironmentRole_update">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$body.identity.type" options="identity-type" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities u" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$body.properties.deploymentTargetId" options="deployment-target-id" group="Properties">
          <help short="ID of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.displayName" options="display-name" group="Properties">
          <help short="The display name of the project environment type."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.status" options="status" group="Properties">
          <help short="Defines whether this environment type can be used in this project."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.userRoleAssignments" options="user-role-assignments" group="Properties">
          <help short="Role assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="object" var="$body.properties.userRoleAssignments{}.roles" options="roles">
                <help short="A map of roles to assign to the parent user."/>
                <additionalProp>
                  <item nullable="True" type="@EnvironmentRole_update"/>
                </additionalProp>
              </arg>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="ProjectEnvironmentTypes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}">
          <request method="get">
            <path>
              <param type="string" name="environmentTypeName" arg="$Path.environmentTypeName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ProjectEnvironmentType_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}/environmentTypes/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="creatorRoleAssignment">
                      <prop type="object" name="roles">
                        <additionalProp>
                          <item type="object" cls="EnvironmentRole_read">
                            <prop readOnly="True" type="string" name="description"/>
                            <prop readOnly="True" type="string" name="roleName"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="string" name="deploymentTargetId"/>
                    <prop type="string" name="displayName"/>
                    <prop readOnly="True" type="integer32" name="environmentCount">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userRoleAssignments">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="roles">
                            <additionalProp>
                              <item type="@EnvironmentRole_read"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$body.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$body.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="creatorRoleAssignment">
                  <prop type="object" name="roles" arg="$body.properties.creatorRoleAssignment.roles">
                    <additionalProp>
                      <item type="object" cls="EnvironmentRole_update"/>
                    </additionalProp>
                  </prop>
                </prop>
                <prop type="string" name="deploymentTargetId" arg="$body.properties.deploymentTargetId"/>
                <prop type="string" name="displayName" arg="$body.properties.displayName"/>
                <prop type="string" name="status" arg="$body.properties.status">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userRoleAssignments" arg="$body.properties.userRoleAssignments">
                  <additionalProp>
                    <item type="object">
                      <prop type="object" name="roles" arg="$body.properties.userRoleAssignments{}.roles">
                        <additionalProp>
                          <item type="@EnvironmentRole_update"/>
                        </additionalProp>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ProjectEnvironmentTypes_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}">
          <request method="put">
            <path>
              <param type="string" name="environmentTypeName" arg="$Path.environmentTypeName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@ProjectEnvironmentType_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
