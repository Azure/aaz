<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecrossconnections/{}" version="2018-04-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDcm9zc0Nvbm5lY3Rpb25zL3tjcm9zc0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAxOC0wNC0wMQ=="/>
  <commandGroup name="network cross-connection">
    <command name="show" version="2018-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecrossconnections/{}" version="2018-04-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDcm9zc0Nvbm5lY3Rpb25zL3tjcm9zc0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAxOC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.crossConnectionName" options="name n" required="True" group="" idPart="name">
          <help short="Express route cross-connection name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCrossConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}">
          <request method="get">
            <path>
              <param type="string" name="crossConnectionName" arg="$Path.crossConnectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="bandwidthInMbps"/>
                    <prop type="object" name="expressRouteCircuit">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="peeringLocation"/>
                    <prop type="array<object>" name="peerings">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="integer32" name="azureASN"/>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig" cls="Ipv6ExpressRouteCircuitPeeringConfig_read">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="object" name="routeFilter" cls="RouteFilter_read">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" required="True"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="array<object>" name="peerings">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                                    </prop>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="integer32" name="azureASN"/>
                                      <prop type="array<object>" name="connections">
                                        <item type="object">
                                          <prop readOnly="True" type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="authorizationKey"/>
                                            <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                              <enum>
                                                <item value="&quot;Connected&quot;"/>
                                                <item value="&quot;Connecting&quot;"/>
                                                <item value="&quot;Disconnected&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                                              <prop type="string" name="id"/>
                                            </prop>
                                            <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                            <prop readOnly="True" type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="string" name="gatewayManagerEtag"/>
                                      <prop type="@Ipv6ExpressRouteCircuitPeeringConfig_read" name="ipv6PeeringConfig"/>
                                      <prop type="string" name="lastModifiedBy"/>
                                      <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                                      <prop type="integer64" name="peerASN">
                                        <format maximum="4294967295" minimum="1"/>
                                      </prop>
                                      <prop type="string" name="peeringType">
                                        <enum>
                                          <item value="&quot;AzurePrivatePeering&quot;"/>
                                          <item value="&quot;AzurePublicPeering&quot;"/>
                                          <item value="&quot;MicrosoftPeering&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="primaryAzurePort"/>
                                      <prop type="string" name="primaryPeerAddressPrefix"/>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="@RouteFilter_read" name="routeFilter"/>
                                      <prop type="string" name="secondaryAzurePort"/>
                                      <prop type="string" name="secondaryPeerAddressPrefix"/>
                                      <prop type="string" name="sharedKey"/>
                                      <prop type="string" name="state">
                                        <enum>
                                          <item value="&quot;Disabled&quot;"/>
                                          <item value="&quot;Enabled&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="stats">
                                        <prop type="integer64" name="primarybytesIn"/>
                                        <prop type="integer64" name="primarybytesOut"/>
                                        <prop type="integer64" name="secondarybytesIn"/>
                                        <prop type="integer64" name="secondarybytesOut"/>
                                      </prop>
                                      <prop type="integer32" name="vlanId"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="provisioningState"/>
                                <prop type="array<object>" name="rules">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="array<string>" name="communities" required="True">
                                        <item type="string"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState"/>
                                      <prop type="string" name="routeFilterRuleType" required="True">
                                        <enum>
                                          <item value="&quot;Community&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </item>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop readOnly="True" type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="primaryAzurePort"/>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="integer" name="sTag"/>
                    <prop readOnly="True" type="string" name="secondaryAzurePort"/>
                    <prop type="string" name="serviceProviderNotes"/>
                    <prop type="string" name="serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2018-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecrossconnections/{}" version="2018-04-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDcm9zc0Nvbm5lY3Rpb25zL3tjcm9zc0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAxOC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.crossConnectionName" options="cross-connection-name name n" required="True" idPart="name">
          <help short="The name of the ExpressRouteCrossConnection."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" hide="True" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="integer32" var="$parameters.properties.bandwidthInMbps" options="bandwidth-in-mbps" hide="True" group="Properties">
          <help short="The circuit bandwidth In Mbps."/>
        </arg>
        <arg type="object" var="$parameters.properties.expressRouteCircuit" options="express-route-circuit" hide="True" group="Properties">
          <help short="The ExpressRouteCircuit"/>
          <arg type="string" var="$parameters.properties.expressRouteCircuit.id" options="id">
            <help short="Corresponding Express Route Circuit Id."/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.peeringLocation" options="peering-location" hide="True" group="Properties">
          <help short="The peering location of the ExpressRoute circuit."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.peerings" options="peerings" hide="True" group="Properties">
          <help short="The list of peerings."/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.peerings[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].name" options="name">
              <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.gatewayManagerEtag" options="gateway-manager-etag" group="Properties">
              <help short="The GatewayManager Etag."/>
            </arg>
            <arg type="object" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties">
              <help short="The IPv6 peering configuration."/>
              <arg type="@ExpressRouteCircuitPeeringConfig_create" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig" options="microsoft-peering-config">
                <help short="The Microsoft peering configuration."/>
              </arg>
              <arg type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
                <help short="The primary address prefix."/>
              </arg>
              <arg type="object" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter" options="route-filter" cls="RouteFilter_create">
                <help short="The reference of the RouteFilter resource."/>
                <arg type="ResourceId" var="@RouteFilter_create.id" options="id" hide="True">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                </arg>
                <arg type="ResourceLocation" var="@RouteFilter_create.location" options="location l" required="True">
                  <help short="Resource location."/>
                </arg>
                <arg type="array<object>" var="@RouteFilter_create.properties.peerings" options="peerings" group="Properties">
                  <help short="A collection of references to express route circuit peerings."/>
                  <item type="object">
                    <arg type="ResourceId" var="@RouteFilter_create.properties.peerings[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].name" options="name">
                      <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="integer32" var="@RouteFilter_create.properties.peerings[].properties.azureASN" options="azure-asn" group="Properties">
                      <help short="The Azure ASN."/>
                    </arg>
                    <arg type="array<object>" var="@RouteFilter_create.properties.peerings[].properties.connections" options="connections" group="Properties">
                      <help short="The list of circuit connections associated with Azure Private Peering for this circuit."/>
                      <item type="object">
                        <arg type="ResourceId" var="@RouteFilter_create.properties.peerings[].properties.connections[].id" options="id">
                          <help short="Resource ID."/>
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                        </arg>
                        <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.connections[].name" options="name">
                          <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.connections[].properties.addressPrefix" options="address-prefix" group="Properties">
                          <help short="/29 IP address space to carve out Customer addresses for tunnels."/>
                        </arg>
                        <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.connections[].properties.authorizationKey" options="authorization-key" group="Properties">
                          <help short="The authorization key."/>
                        </arg>
                        <arg type="object" var="@RouteFilter_create.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties" cls="SubResource_create">
                          <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
                          <arg type="string" var="@SubResource_create.id" options="id">
                            <help short="Resource ID."/>
                          </arg>
                        </arg>
                        <arg type="@SubResource_create" var="@RouteFilter_create.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
                          <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
                        </arg>
                      </item>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.gatewayManagerEtag" options="gateway-manager-etag" group="Properties">
                      <help short="The GatewayManager Etag."/>
                    </arg>
                    <arg type="object" var="@RouteFilter_create.properties.peerings[].properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties" cls="Ipv6ExpressRouteCircuitPeeringConfig_create">
                      <help short="The IPv6 peering configuration."/>
                      <arg type="@ExpressRouteCircuitPeeringConfig_create" var="@Ipv6ExpressRouteCircuitPeeringConfig_create.microsoftPeeringConfig" options="microsoft-peering-config">
                        <help short="The Microsoft peering configuration."/>
                      </arg>
                      <arg type="string" var="@Ipv6ExpressRouteCircuitPeeringConfig_create.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
                        <help short="The primary address prefix."/>
                      </arg>
                      <arg type="@RouteFilter_create" var="@Ipv6ExpressRouteCircuitPeeringConfig_create.routeFilter" options="route-filter">
                        <help short="The reference of the RouteFilter resource."/>
                      </arg>
                      <arg type="string" var="@Ipv6ExpressRouteCircuitPeeringConfig_create.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
                        <help short="The secondary address prefix."/>
                      </arg>
                      <arg type="string" var="@Ipv6ExpressRouteCircuitPeeringConfig_create.state" options="state">
                        <help short="The state of peering. Possible values are: 'Disabled' and 'Enabled'"/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.lastModifiedBy" options="last-modified-by" group="Properties">
                      <help short="Gets whether the provider or the customer last modified the peering."/>
                    </arg>
                    <arg type="@ExpressRouteCircuitPeeringConfig_create" var="@RouteFilter_create.properties.peerings[].properties.microsoftPeeringConfig" options="microsoft-peering-config" group="Properties">
                      <help short="The Microsoft peering configuration."/>
                    </arg>
                    <arg type="integer64" var="@RouteFilter_create.properties.peerings[].properties.peerASN" options="peer-asn" group="Properties">
                      <help short="The peer ASN."/>
                      <format maximum="4294967295" minimum="1"/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.peeringType" options="peering-type" group="Properties">
                      <help short="The peering type."/>
                      <enum>
                        <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
                        <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
                        <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.primaryAzurePort" options="primary-azure-port" group="Properties">
                      <help short="The primary port."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.primaryPeerAddressPrefix" options="primary-peer-address-prefix" group="Properties">
                      <help short="The primary address prefix."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg type="@RouteFilter_create" var="@RouteFilter_create.properties.peerings[].properties.routeFilter" options="route-filter" group="Properties">
                      <help short="The reference of the RouteFilter resource."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.secondaryAzurePort" options="secondary-azure-port" group="Properties">
                      <help short="The secondary port."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix" group="Properties">
                      <help short="The secondary address prefix."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.sharedKey" options="shared-key" group="Properties">
                      <help short="The shared key."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.peerings[].properties.state" options="state" group="Properties">
                      <help short="The peering state."/>
                      <enum>
                        <item name="Disabled" value="&quot;Disabled&quot;"/>
                        <item name="Enabled" value="&quot;Enabled&quot;"/>
                      </enum>
                    </arg>
                    <arg type="object" var="@RouteFilter_create.properties.peerings[].properties.stats" options="stats" group="Properties">
                      <help short="Gets peering stats."/>
                      <arg type="integer64" var="@RouteFilter_create.properties.peerings[].properties.stats.primarybytesIn" options="primarybytes-in">
                        <help short="Gets BytesIn of the peering."/>
                      </arg>
                      <arg type="integer64" var="@RouteFilter_create.properties.peerings[].properties.stats.primarybytesOut" options="primarybytes-out">
                        <help short="Gets BytesOut of the peering."/>
                      </arg>
                      <arg type="integer64" var="@RouteFilter_create.properties.peerings[].properties.stats.secondarybytesIn" options="secondarybytes-in">
                        <help short="Gets BytesIn of the peering."/>
                      </arg>
                      <arg type="integer64" var="@RouteFilter_create.properties.peerings[].properties.stats.secondarybytesOut" options="secondarybytes-out">
                        <help short="Gets BytesOut of the peering."/>
                      </arg>
                    </arg>
                    <arg type="integer32" var="@RouteFilter_create.properties.peerings[].properties.vlanId" options="vlan-id" group="Properties">
                      <help short="The VLAN ID."/>
                    </arg>
                  </item>
                </arg>
                <arg type="array<object>" var="@RouteFilter_create.properties.rules" options="rules" group="Properties">
                  <help short="Collection of RouteFilterRules contained within a route filter."/>
                  <item type="object">
                    <arg type="ResourceId" var="@RouteFilter_create.properties.rules[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                    </arg>
                    <arg type="ResourceLocation" var="@RouteFilter_create.properties.rules[].location" options="location l">
                      <help short="Resource location."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.rules[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.rules[].properties.access" options="access" group="Properties">
                      <help short="The access type of the rule. Valid values are: 'Allow', 'Deny'"/>
                      <enum>
                        <item name="Allow" value="&quot;Allow&quot;"/>
                        <item name="Deny" value="&quot;Deny&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<string>" var="@RouteFilter_create.properties.rules[].properties.communities" options="communities" group="Properties">
                      <help short="The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']"/>
                      <item type="string"/>
                    </arg>
                    <arg type="string" var="@RouteFilter_create.properties.rules[].properties.routeFilterRuleType" options="route-filter-rule-type" group="Properties">
                      <help short="The rule type of the rule. Valid value is: 'Community'"/>
                      <enum>
                        <item name="Community" value="&quot;Community&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
                <arg type="object" var="@RouteFilter_create.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
              </arg>
              <arg type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
                <help short="The secondary address prefix."/>
              </arg>
              <arg type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state" options="state">
                <help short="The state of peering. Possible values are: 'Disabled' and 'Enabled'"/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.lastModifiedBy" options="last-modified-by" group="Properties">
              <help short="Gets whether the provider or the customer last modified the peering."/>
            </arg>
            <arg type="object" var="$parameters.properties.peerings[].properties.microsoftPeeringConfig" options="microsoft-peering-config" group="Properties" cls="ExpressRouteCircuitPeeringConfig_create">
              <help short="The Microsoft peering configuration."/>
              <arg type="array<string>" var="@ExpressRouteCircuitPeeringConfig_create.advertisedCommunities" options="advertised-communities">
                <help short="The communities of bgp peering. Specified for microsoft peering"/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixes" options="advertised-public-prefixes">
                <help short="The reference of AdvertisedPublicPrefixes."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixesState" options="advertised-public-prefixes-state">
                <help short="AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'."/>
                <enum>
                  <item name="Configured" value="&quot;Configured&quot;"/>
                  <item name="Configuring" value="&quot;Configuring&quot;"/>
                  <item name="NotConfigured" value="&quot;NotConfigured&quot;"/>
                  <item name="ValidationNeeded" value="&quot;ValidationNeeded&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="@ExpressRouteCircuitPeeringConfig_create.customerASN" options="customer-asn">
                <help short="The CustomerASN of the peering."/>
              </arg>
              <arg type="integer32" var="@ExpressRouteCircuitPeeringConfig_create.legacyMode" options="legacy-mode">
                <help short="The legacy mode of the peering."/>
              </arg>
              <arg type="string" var="@ExpressRouteCircuitPeeringConfig_create.routingRegistryName" options="routing-registry-name">
                <help short="The RoutingRegistryName of the configuration."/>
              </arg>
            </arg>
            <arg type="integer64" var="$parameters.properties.peerings[].properties.peerASN" options="peer-asn" group="Properties">
              <help short="The peer ASN."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.peeringType" options="peering-type" group="Properties">
              <help short="The peering type."/>
              <enum>
                <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
                <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
                <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix" options="primary-peer-address-prefix" group="Properties">
              <help short="The primary address prefix."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix" group="Properties">
              <help short="The secondary address prefix."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.sharedKey" options="shared-key" group="Properties">
              <help short="The shared key."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.state" options="state" group="Properties">
              <help short="The peering state."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg type="integer32" var="$parameters.properties.peerings[].properties.vlanId" options="vlan-id" group="Properties">
              <help short="The VLAN ID."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.serviceProviderNotes" options="service-provider-notes" group="Properties">
          <help short="Additional read only notes set by the connectivity provider."/>
        </arg>
        <arg type="string" var="$parameters.properties.serviceProviderProvisioningState" options="service-provider-provisioning-state" group="Properties">
          <help short="The provisioning state of the circuit in the connectivity provider system. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned'."/>
          <enum>
            <item name="Deprovisioning" value="&quot;Deprovisioning&quot;"/>
            <item name="NotProvisioned" value="&quot;NotProvisioned&quot;"/>
            <item name="Provisioned" value="&quot;Provisioned&quot;"/>
            <item name="Provisioning" value="&quot;Provisioning&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCrossConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}">
          <request method="put">
            <path>
              <param type="string" name="crossConnectionName" arg="$Path.crossConnectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="bandwidthInMbps" arg="$parameters.properties.bandwidthInMbps"/>
                    <prop type="object" name="expressRouteCircuit" arg="$parameters.properties.expressRouteCircuit">
                      <prop type="string" name="id" arg="$parameters.properties.expressRouteCircuit.id"/>
                    </prop>
                    <prop type="string" name="peeringLocation" arg="$parameters.properties.peeringLocation"/>
                    <prop type="array<object>" name="peerings" arg="$parameters.properties.peerings">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.peerings[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.peerings[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="gatewayManagerEtag" arg="$parameters.properties.peerings[].properties.gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_create" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix"/>
                            <prop type="object" name="routeFilter" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter" cls="RouteFilter_create">
                              <prop type="ResourceId" name="id" arg="@RouteFilter_create.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" arg="@RouteFilter_create.location" required="True"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="array<object>" name="peerings" arg="@RouteFilter_create.properties.peerings">
                                  <item type="object">
                                    <prop type="ResourceId" name="id" arg="@RouteFilter_create.properties.peerings[].id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                                    </prop>
                                    <prop type="string" name="name" arg="@RouteFilter_create.properties.peerings[].name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="integer32" name="azureASN" arg="@RouteFilter_create.properties.peerings[].properties.azureASN"/>
                                      <prop type="array<object>" name="connections" arg="@RouteFilter_create.properties.peerings[].properties.connections">
                                        <item type="object">
                                          <prop type="ResourceId" name="id" arg="@RouteFilter_create.properties.peerings[].properties.connections[].id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                                          </prop>
                                          <prop type="string" name="name" arg="@RouteFilter_create.properties.peerings[].properties.connections[].name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix" arg="@RouteFilter_create.properties.peerings[].properties.connections[].properties.addressPrefix"/>
                                            <prop type="string" name="authorizationKey" arg="@RouteFilter_create.properties.peerings[].properties.connections[].properties.authorizationKey"/>
                                            <prop type="object" name="expressRouteCircuitPeering" arg="@RouteFilter_create.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering" cls="SubResource_create">
                                              <prop type="string" name="id" arg="@SubResource_create.id"/>
                                            </prop>
                                            <prop type="@SubResource_create" name="peerExpressRouteCircuitPeering" arg="@RouteFilter_create.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="string" name="gatewayManagerEtag" arg="@RouteFilter_create.properties.peerings[].properties.gatewayManagerEtag"/>
                                      <prop type="object" name="ipv6PeeringConfig" arg="@RouteFilter_create.properties.peerings[].properties.ipv6PeeringConfig" cls="Ipv6ExpressRouteCircuitPeeringConfig_create">
                                        <prop type="@ExpressRouteCircuitPeeringConfig_create" name="microsoftPeeringConfig" arg="@Ipv6ExpressRouteCircuitPeeringConfig_create.microsoftPeeringConfig"/>
                                        <prop type="string" name="primaryPeerAddressPrefix" arg="@Ipv6ExpressRouteCircuitPeeringConfig_create.primaryPeerAddressPrefix"/>
                                        <prop type="@RouteFilter_create" name="routeFilter" arg="@Ipv6ExpressRouteCircuitPeeringConfig_create.routeFilter"/>
                                        <prop type="string" name="secondaryPeerAddressPrefix" arg="@Ipv6ExpressRouteCircuitPeeringConfig_create.secondaryPeerAddressPrefix"/>
                                        <prop type="string" name="state" arg="@Ipv6ExpressRouteCircuitPeeringConfig_create.state">
                                          <enum>
                                            <item value="&quot;Disabled&quot;"/>
                                            <item value="&quot;Enabled&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="lastModifiedBy" arg="@RouteFilter_create.properties.peerings[].properties.lastModifiedBy"/>
                                      <prop type="@ExpressRouteCircuitPeeringConfig_create" name="microsoftPeeringConfig" arg="@RouteFilter_create.properties.peerings[].properties.microsoftPeeringConfig"/>
                                      <prop type="integer64" name="peerASN" arg="@RouteFilter_create.properties.peerings[].properties.peerASN">
                                        <format maximum="4294967295" minimum="1"/>
                                      </prop>
                                      <prop type="string" name="peeringType" arg="@RouteFilter_create.properties.peerings[].properties.peeringType">
                                        <enum>
                                          <item value="&quot;AzurePrivatePeering&quot;"/>
                                          <item value="&quot;AzurePublicPeering&quot;"/>
                                          <item value="&quot;MicrosoftPeering&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="primaryAzurePort" arg="@RouteFilter_create.properties.peerings[].properties.primaryAzurePort"/>
                                      <prop type="string" name="primaryPeerAddressPrefix" arg="@RouteFilter_create.properties.peerings[].properties.primaryPeerAddressPrefix"/>
                                      <prop type="string" name="provisioningState" arg="@RouteFilter_create.properties.peerings[].properties.provisioningState"/>
                                      <prop type="@RouteFilter_create" name="routeFilter" arg="@RouteFilter_create.properties.peerings[].properties.routeFilter"/>
                                      <prop type="string" name="secondaryAzurePort" arg="@RouteFilter_create.properties.peerings[].properties.secondaryAzurePort"/>
                                      <prop type="string" name="secondaryPeerAddressPrefix" arg="@RouteFilter_create.properties.peerings[].properties.secondaryPeerAddressPrefix"/>
                                      <prop type="string" name="sharedKey" arg="@RouteFilter_create.properties.peerings[].properties.sharedKey"/>
                                      <prop type="string" name="state" arg="@RouteFilter_create.properties.peerings[].properties.state">
                                        <enum>
                                          <item value="&quot;Disabled&quot;"/>
                                          <item value="&quot;Enabled&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="stats" arg="@RouteFilter_create.properties.peerings[].properties.stats">
                                        <prop type="integer64" name="primarybytesIn" arg="@RouteFilter_create.properties.peerings[].properties.stats.primarybytesIn"/>
                                        <prop type="integer64" name="primarybytesOut" arg="@RouteFilter_create.properties.peerings[].properties.stats.primarybytesOut"/>
                                        <prop type="integer64" name="secondarybytesIn" arg="@RouteFilter_create.properties.peerings[].properties.stats.secondarybytesIn"/>
                                        <prop type="integer64" name="secondarybytesOut" arg="@RouteFilter_create.properties.peerings[].properties.stats.secondarybytesOut"/>
                                      </prop>
                                      <prop type="integer32" name="vlanId" arg="@RouteFilter_create.properties.peerings[].properties.vlanId"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="array<object>" name="rules" arg="@RouteFilter_create.properties.rules">
                                  <item type="object">
                                    <prop type="ResourceId" name="id" arg="@RouteFilter_create.properties.rules[].id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location" arg="@RouteFilter_create.properties.rules[].location"/>
                                    <prop type="string" name="name" arg="@RouteFilter_create.properties.rules[].name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" arg="@RouteFilter_create.properties.rules[].properties.access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="array<string>" name="communities" arg="@RouteFilter_create.properties.rules[].properties.communities" required="True">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="string" name="routeFilterRuleType" arg="@RouteFilter_create.properties.rules[].properties.routeFilterRuleType" required="True">
                                        <enum>
                                          <item value="&quot;Community&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </item>
                                </prop>
                              </prop>
                              <prop type="object" name="tags" arg="@RouteFilter_create.tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </prop>
                            <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="lastModifiedBy" arg="$parameters.properties.peerings[].properties.lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_create">
                            <prop type="array<string>" name="advertisedCommunities" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="advertisedPublicPrefixesState" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN" arg="@ExpressRouteCircuitPeeringConfig_create.customerASN"/>
                            <prop type="integer32" name="legacyMode" arg="@ExpressRouteCircuitPeeringConfig_create.legacyMode"/>
                            <prop type="string" name="routingRegistryName" arg="@ExpressRouteCircuitPeeringConfig_create.routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN" arg="$parameters.properties.peerings[].properties.peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop type="string" name="peeringType" arg="$parameters.properties.peerings[].properties.peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix"/>
                          <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey" arg="$parameters.properties.peerings[].properties.sharedKey"/>
                          <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="vlanId" arg="$parameters.properties.peerings[].properties.vlanId"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="serviceProviderNotes" arg="$parameters.properties.serviceProviderNotes"/>
                    <prop type="string" name="serviceProviderProvisioningState" arg="$parameters.properties.serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="bandwidthInMbps"/>
                    <prop type="object" name="expressRouteCircuit">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="peeringLocation"/>
                    <prop type="array<object>" name="peerings">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="integer32" name="azureASN"/>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig" cls="Ipv6ExpressRouteCircuitPeeringConfig_read">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="object" name="routeFilter" cls="RouteFilter_read">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" required="True"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="array<object>" name="peerings">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                                    </prop>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="integer32" name="azureASN"/>
                                      <prop type="array<object>" name="connections">
                                        <item type="object">
                                          <prop readOnly="True" type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="authorizationKey"/>
                                            <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                              <enum>
                                                <item value="&quot;Connected&quot;"/>
                                                <item value="&quot;Connecting&quot;"/>
                                                <item value="&quot;Disconnected&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                                              <prop type="string" name="id"/>
                                            </prop>
                                            <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                            <prop readOnly="True" type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="string" name="gatewayManagerEtag"/>
                                      <prop type="@Ipv6ExpressRouteCircuitPeeringConfig_read" name="ipv6PeeringConfig"/>
                                      <prop type="string" name="lastModifiedBy"/>
                                      <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                                      <prop type="integer64" name="peerASN">
                                        <format maximum="4294967295" minimum="1"/>
                                      </prop>
                                      <prop type="string" name="peeringType">
                                        <enum>
                                          <item value="&quot;AzurePrivatePeering&quot;"/>
                                          <item value="&quot;AzurePublicPeering&quot;"/>
                                          <item value="&quot;MicrosoftPeering&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="primaryAzurePort"/>
                                      <prop type="string" name="primaryPeerAddressPrefix"/>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="@RouteFilter_read" name="routeFilter"/>
                                      <prop type="string" name="secondaryAzurePort"/>
                                      <prop type="string" name="secondaryPeerAddressPrefix"/>
                                      <prop type="string" name="sharedKey"/>
                                      <prop type="string" name="state">
                                        <enum>
                                          <item value="&quot;Disabled&quot;"/>
                                          <item value="&quot;Enabled&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="stats">
                                        <prop type="integer64" name="primarybytesIn"/>
                                        <prop type="integer64" name="primarybytesOut"/>
                                        <prop type="integer64" name="secondarybytesIn"/>
                                        <prop type="integer64" name="secondarybytesOut"/>
                                      </prop>
                                      <prop type="integer32" name="vlanId"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="provisioningState"/>
                                <prop type="array<object>" name="rules">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="array<string>" name="communities" required="True">
                                        <item type="string"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState"/>
                                      <prop type="string" name="routeFilterRuleType" required="True">
                                        <enum>
                                          <item value="&quot;Community&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </item>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop readOnly="True" type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="primaryAzurePort"/>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="integer" name="sTag"/>
                    <prop readOnly="True" type="string" name="secondaryAzurePort"/>
                    <prop type="string" name="serviceProviderNotes"/>
                    <prop type="string" name="serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecrossconnections/{}" version="2018-04-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDcm9zc0Nvbm5lY3Rpb25zL3tjcm9zc0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAxOC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.crossConnectionName" options="name n" required="True" group="" idPart="name">
          <help short="Express route cross-connection name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="string" var="$parameters.properties.serviceProviderNotes" options="notes" group="">
          <help short="Additional read only notes set by the connectivity provider."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceProviderProvisioningState" options="provisioning-state" group="">
          <help short="The provisioning state of the circuit in the connectivity provider system. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned'."/>
          <enum>
            <item name="Deprovisioning" value="&quot;Deprovisioning&quot;"/>
            <item name="NotProvisioned" value="&quot;NotProvisioned&quot;"/>
            <item name="Provisioned" value="&quot;Provisioned&quot;"/>
            <item name="Provisioning" value="&quot;Provisioning&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" hide="True" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="integer32" var="$parameters.properties.bandwidthInMbps" options="bandwidth-in-mbps" hide="True" group="Properties">
          <help short="The circuit bandwidth In Mbps."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.expressRouteCircuit" options="express-route-circuit" hide="True" group="Properties">
          <help short="The ExpressRouteCircuit"/>
          <arg nullable="True" type="string" var="$parameters.properties.expressRouteCircuit.id" options="id">
            <help short="Corresponding Express Route Circuit Id."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.peeringLocation" options="peering-location" hide="True" group="Properties">
          <help short="The peering location of the ExpressRoute circuit."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.peerings" options="peerings" hide="True" group="Properties">
          <help short="The list of peerings."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$parameters.properties.peerings[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].name" options="name">
              <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.gatewayManagerEtag" options="gateway-manager-etag" group="Properties">
              <help short="The GatewayManager Etag."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties">
              <help short="The IPv6 peering configuration."/>
              <arg nullable="True" type="@ExpressRouteCircuitPeeringConfig_update" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig" options="microsoft-peering-config">
                <help short="The Microsoft peering configuration."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
                <help short="The primary address prefix."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter" options="route-filter" cls="RouteFilter_update">
                <help short="The reference of the RouteFilter resource."/>
                <arg nullable="True" type="ResourceId" var="@RouteFilter_update.id" options="id" hide="True">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                </arg>
                <arg type="ResourceLocation" var="@RouteFilter_update.location" options="location l">
                  <help short="Resource location."/>
                </arg>
                <arg nullable="True" type="array<object>" var="@RouteFilter_update.properties.peerings" options="peerings" group="Properties">
                  <help short="A collection of references to express route circuit peerings."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="ResourceId" var="@RouteFilter_update.properties.peerings[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].name" options="name">
                      <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg nullable="True" type="integer32" var="@RouteFilter_update.properties.peerings[].properties.azureASN" options="azure-asn" group="Properties">
                      <help short="The Azure ASN."/>
                    </arg>
                    <arg nullable="True" type="array<object>" var="@RouteFilter_update.properties.peerings[].properties.connections" options="connections" group="Properties">
                      <help short="The list of circuit connections associated with Azure Private Peering for this circuit."/>
                      <item nullable="True" type="object">
                        <arg nullable="True" type="ResourceId" var="@RouteFilter_update.properties.peerings[].properties.connections[].id" options="id">
                          <help short="Resource ID."/>
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                        </arg>
                        <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.connections[].name" options="name">
                          <help short="Gets name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                        </arg>
                        <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.connections[].properties.addressPrefix" options="address-prefix" group="Properties">
                          <help short="/29 IP address space to carve out Customer addresses for tunnels."/>
                        </arg>
                        <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.connections[].properties.authorizationKey" options="authorization-key" group="Properties">
                          <help short="The authorization key."/>
                        </arg>
                        <arg nullable="True" type="object" var="@RouteFilter_update.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties" cls="SubResource_update">
                          <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
                          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                            <help short="Resource ID."/>
                          </arg>
                        </arg>
                        <arg nullable="True" type="@SubResource_update" var="@RouteFilter_update.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
                          <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.gatewayManagerEtag" options="gateway-manager-etag" group="Properties">
                      <help short="The GatewayManager Etag."/>
                    </arg>
                    <arg nullable="True" type="object" var="@RouteFilter_update.properties.peerings[].properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties" cls="Ipv6ExpressRouteCircuitPeeringConfig_update">
                      <help short="The IPv6 peering configuration."/>
                      <arg nullable="True" type="@ExpressRouteCircuitPeeringConfig_update" var="@Ipv6ExpressRouteCircuitPeeringConfig_update.microsoftPeeringConfig" options="microsoft-peering-config">
                        <help short="The Microsoft peering configuration."/>
                      </arg>
                      <arg nullable="True" type="string" var="@Ipv6ExpressRouteCircuitPeeringConfig_update.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
                        <help short="The primary address prefix."/>
                      </arg>
                      <arg nullable="True" type="@RouteFilter_update" var="@Ipv6ExpressRouteCircuitPeeringConfig_update.routeFilter" options="route-filter">
                        <help short="The reference of the RouteFilter resource."/>
                      </arg>
                      <arg nullable="True" type="string" var="@Ipv6ExpressRouteCircuitPeeringConfig_update.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
                        <help short="The secondary address prefix."/>
                      </arg>
                      <arg nullable="True" type="string" var="@Ipv6ExpressRouteCircuitPeeringConfig_update.state" options="state">
                        <help short="The state of peering. Possible values are: 'Disabled' and 'Enabled'"/>
                        <enum>
                          <item name="Disabled" value="&quot;Disabled&quot;"/>
                          <item name="Enabled" value="&quot;Enabled&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.lastModifiedBy" options="last-modified-by" group="Properties">
                      <help short="Gets whether the provider or the customer last modified the peering."/>
                    </arg>
                    <arg nullable="True" type="@ExpressRouteCircuitPeeringConfig_update" var="@RouteFilter_update.properties.peerings[].properties.microsoftPeeringConfig" options="microsoft-peering-config" group="Properties">
                      <help short="The Microsoft peering configuration."/>
                    </arg>
                    <arg nullable="True" type="integer64" var="@RouteFilter_update.properties.peerings[].properties.peerASN" options="peer-asn" group="Properties">
                      <help short="The peer ASN."/>
                      <format maximum="4294967295" minimum="1"/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.peeringType" options="peering-type" group="Properties">
                      <help short="The peering type."/>
                      <enum>
                        <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
                        <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
                        <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.primaryAzurePort" options="primary-azure-port" group="Properties">
                      <help short="The primary port."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.primaryPeerAddressPrefix" options="primary-peer-address-prefix" group="Properties">
                      <help short="The primary address prefix."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.provisioningState" options="provisioning-state" group="Properties">
                      <help short="Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."/>
                    </arg>
                    <arg nullable="True" type="@RouteFilter_update" var="@RouteFilter_update.properties.peerings[].properties.routeFilter" options="route-filter" group="Properties">
                      <help short="The reference of the RouteFilter resource."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.secondaryAzurePort" options="secondary-azure-port" group="Properties">
                      <help short="The secondary port."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix" group="Properties">
                      <help short="The secondary address prefix."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.sharedKey" options="shared-key" group="Properties">
                      <help short="The shared key."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.peerings[].properties.state" options="state" group="Properties">
                      <help short="The peering state."/>
                      <enum>
                        <item name="Disabled" value="&quot;Disabled&quot;"/>
                        <item name="Enabled" value="&quot;Enabled&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="object" var="@RouteFilter_update.properties.peerings[].properties.stats" options="stats" group="Properties">
                      <help short="Gets peering stats."/>
                      <arg nullable="True" type="integer64" var="@RouteFilter_update.properties.peerings[].properties.stats.primarybytesIn" options="primarybytes-in">
                        <help short="Gets BytesIn of the peering."/>
                      </arg>
                      <arg nullable="True" type="integer64" var="@RouteFilter_update.properties.peerings[].properties.stats.primarybytesOut" options="primarybytes-out">
                        <help short="Gets BytesOut of the peering."/>
                      </arg>
                      <arg nullable="True" type="integer64" var="@RouteFilter_update.properties.peerings[].properties.stats.secondarybytesIn" options="secondarybytes-in">
                        <help short="Gets BytesIn of the peering."/>
                      </arg>
                      <arg nullable="True" type="integer64" var="@RouteFilter_update.properties.peerings[].properties.stats.secondarybytesOut" options="secondarybytes-out">
                        <help short="Gets BytesOut of the peering."/>
                      </arg>
                    </arg>
                    <arg nullable="True" type="integer32" var="@RouteFilter_update.properties.peerings[].properties.vlanId" options="vlan-id" group="Properties">
                      <help short="The VLAN ID."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="array<object>" var="@RouteFilter_update.properties.rules" options="rules" group="Properties">
                  <help short="Collection of RouteFilterRules contained within a route filter."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="ResourceId" var="@RouteFilter_update.properties.rules[].id" options="id">
                      <help short="Resource ID."/>
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                    </arg>
                    <arg nullable="True" type="ResourceLocation" var="@RouteFilter_update.properties.rules[].location" options="location l">
                      <help short="Resource location."/>
                    </arg>
                    <arg nullable="True" type="string" var="@RouteFilter_update.properties.rules[].name" options="name">
                      <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                    </arg>
                    <arg type="string" var="@RouteFilter_update.properties.rules[].properties.access" options="access" group="Properties">
                      <help short="The access type of the rule. Valid values are: 'Allow', 'Deny'"/>
                      <enum>
                        <item name="Allow" value="&quot;Allow&quot;"/>
                        <item name="Deny" value="&quot;Deny&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<string>" var="@RouteFilter_update.properties.rules[].properties.communities" options="communities" group="Properties">
                      <help short="The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']"/>
                      <item nullable="True" type="string"/>
                    </arg>
                    <arg type="string" var="@RouteFilter_update.properties.rules[].properties.routeFilterRuleType" options="route-filter-rule-type" group="Properties">
                      <help short="The rule type of the rule. Valid value is: 'Community'"/>
                      <enum>
                        <item name="Community" value="&quot;Community&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="object" var="@RouteFilter_update.tags" options="tags">
                  <help short="Resource tags."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
                <help short="The secondary address prefix."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state" options="state">
                <help short="The state of peering. Possible values are: 'Disabled' and 'Enabled'"/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.lastModifiedBy" options="last-modified-by" group="Properties">
              <help short="Gets whether the provider or the customer last modified the peering."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.microsoftPeeringConfig" options="microsoft-peering-config" group="Properties" cls="ExpressRouteCircuitPeeringConfig_update">
              <help short="The Microsoft peering configuration."/>
              <arg nullable="True" type="array<string>" var="@ExpressRouteCircuitPeeringConfig_update.advertisedCommunities" options="advertised-communities">
                <help short="The communities of bgp peering. Specified for microsoft peering"/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="array<string>" var="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixes" options="advertised-public-prefixes">
                <help short="The reference of AdvertisedPublicPrefixes."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixesState" options="advertised-public-prefixes-state">
                <help short="AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'."/>
                <enum>
                  <item name="Configured" value="&quot;Configured&quot;"/>
                  <item name="Configuring" value="&quot;Configuring&quot;"/>
                  <item name="NotConfigured" value="&quot;NotConfigured&quot;"/>
                  <item name="ValidationNeeded" value="&quot;ValidationNeeded&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="integer32" var="@ExpressRouteCircuitPeeringConfig_update.customerASN" options="customer-asn">
                <help short="The CustomerASN of the peering."/>
              </arg>
              <arg nullable="True" type="integer32" var="@ExpressRouteCircuitPeeringConfig_update.legacyMode" options="legacy-mode">
                <help short="The legacy mode of the peering."/>
              </arg>
              <arg nullable="True" type="string" var="@ExpressRouteCircuitPeeringConfig_update.routingRegistryName" options="routing-registry-name">
                <help short="The RoutingRegistryName of the configuration."/>
              </arg>
            </arg>
            <arg nullable="True" type="integer64" var="$parameters.properties.peerings[].properties.peerASN" options="peer-asn" group="Properties">
              <help short="The peer ASN."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.peeringType" options="peering-type" group="Properties">
              <help short="The peering type."/>
              <enum>
                <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
                <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
                <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix" options="primary-peer-address-prefix" group="Properties">
              <help short="The primary address prefix."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix" group="Properties">
              <help short="The secondary address prefix."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.sharedKey" options="shared-key" group="Properties">
              <help short="The shared key."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.state" options="state" group="Properties">
              <help short="The peering state."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.peerings[].properties.vlanId" options="vlan-id" group="Properties">
              <help short="The VLAN ID."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCrossConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}">
          <request method="get">
            <path>
              <param type="string" name="crossConnectionName" arg="$Path.crossConnectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRouteCrossConnection_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="bandwidthInMbps"/>
                    <prop type="object" name="expressRouteCircuit">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="peeringLocation"/>
                    <prop type="array<object>" name="peerings">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="integer32" name="azureASN"/>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig" cls="Ipv6ExpressRouteCircuitPeeringConfig_read">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="object" name="routeFilter" cls="RouteFilter_read">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" required="True"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="array<object>" name="peerings">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                                    </prop>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="integer32" name="azureASN"/>
                                      <prop type="array<object>" name="connections">
                                        <item type="object">
                                          <prop readOnly="True" type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                                          </prop>
                                          <prop type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop type="string" name="addressPrefix"/>
                                            <prop type="string" name="authorizationKey"/>
                                            <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                              <enum>
                                                <item value="&quot;Connected&quot;"/>
                                                <item value="&quot;Connecting&quot;"/>
                                                <item value="&quot;Disconnected&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="object" name="expressRouteCircuitPeering" cls="SubResource_read">
                                              <prop type="string" name="id"/>
                                            </prop>
                                            <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                            <prop readOnly="True" type="string" name="provisioningState"/>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="string" name="gatewayManagerEtag"/>
                                      <prop type="@Ipv6ExpressRouteCircuitPeeringConfig_read" name="ipv6PeeringConfig"/>
                                      <prop type="string" name="lastModifiedBy"/>
                                      <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                                      <prop type="integer64" name="peerASN">
                                        <format maximum="4294967295" minimum="1"/>
                                      </prop>
                                      <prop type="string" name="peeringType">
                                        <enum>
                                          <item value="&quot;AzurePrivatePeering&quot;"/>
                                          <item value="&quot;AzurePublicPeering&quot;"/>
                                          <item value="&quot;MicrosoftPeering&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="primaryAzurePort"/>
                                      <prop type="string" name="primaryPeerAddressPrefix"/>
                                      <prop type="string" name="provisioningState"/>
                                      <prop type="@RouteFilter_read" name="routeFilter"/>
                                      <prop type="string" name="secondaryAzurePort"/>
                                      <prop type="string" name="secondaryPeerAddressPrefix"/>
                                      <prop type="string" name="sharedKey"/>
                                      <prop type="string" name="state">
                                        <enum>
                                          <item value="&quot;Disabled&quot;"/>
                                          <item value="&quot;Enabled&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="stats">
                                        <prop type="integer64" name="primarybytesIn"/>
                                        <prop type="integer64" name="primarybytesOut"/>
                                        <prop type="integer64" name="secondarybytesIn"/>
                                        <prop type="integer64" name="secondarybytesOut"/>
                                      </prop>
                                      <prop type="integer32" name="vlanId"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="provisioningState"/>
                                <prop type="array<object>" name="rules">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="array<string>" name="communities" required="True">
                                        <item type="string"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState"/>
                                      <prop type="string" name="routeFilterRuleType" required="True">
                                        <enum>
                                          <item value="&quot;Community&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </item>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop readOnly="True" type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="primaryAzurePort"/>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="integer" name="sTag"/>
                    <prop readOnly="True" type="string" name="secondaryAzurePort"/>
                    <prop type="string" name="serviceProviderNotes"/>
                    <prop type="string" name="serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="integer32" name="bandwidthInMbps" arg="$parameters.properties.bandwidthInMbps"/>
                <prop type="object" name="expressRouteCircuit" arg="$parameters.properties.expressRouteCircuit">
                  <prop type="string" name="id" arg="$parameters.properties.expressRouteCircuit.id"/>
                </prop>
                <prop type="string" name="peeringLocation" arg="$parameters.properties.peeringLocation"/>
                <prop type="array<object>" name="peerings" arg="$parameters.properties.peerings">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$parameters.properties.peerings[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCrossConnections/{}/peerings/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.peerings[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="gatewayManagerEtag" arg="$parameters.properties.peerings[].properties.gatewayManagerEtag"/>
                      <prop type="object" name="ipv6PeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig">
                        <prop type="@ExpressRouteCircuitPeeringConfig_update" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig"/>
                        <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix"/>
                        <prop type="object" name="routeFilter" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter" cls="RouteFilter_update">
                          <prop type="ResourceId" name="id" arg="@RouteFilter_update.id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location" arg="@RouteFilter_update.location" required="True"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="array<object>" name="peerings" arg="@RouteFilter_update.properties.peerings">
                              <item type="object">
                                <prop type="ResourceId" name="id" arg="@RouteFilter_update.properties.peerings[].id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                                </prop>
                                <prop type="string" name="name" arg="@RouteFilter_update.properties.peerings[].name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="integer32" name="azureASN" arg="@RouteFilter_update.properties.peerings[].properties.azureASN"/>
                                  <prop type="array<object>" name="connections" arg="@RouteFilter_update.properties.peerings[].properties.connections">
                                    <item type="object">
                                      <prop type="ResourceId" name="id" arg="@RouteFilter_update.properties.peerings[].properties.connections[].id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@RouteFilter_update.properties.peerings[].properties.connections[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="addressPrefix" arg="@RouteFilter_update.properties.peerings[].properties.connections[].properties.addressPrefix"/>
                                        <prop type="string" name="authorizationKey" arg="@RouteFilter_update.properties.peerings[].properties.connections[].properties.authorizationKey"/>
                                        <prop type="object" name="expressRouteCircuitPeering" arg="@RouteFilter_update.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering" cls="SubResource_update">
                                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                                        </prop>
                                        <prop type="@SubResource_update" name="peerExpressRouteCircuitPeering" arg="@RouteFilter_update.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="string" name="gatewayManagerEtag" arg="@RouteFilter_update.properties.peerings[].properties.gatewayManagerEtag"/>
                                  <prop type="object" name="ipv6PeeringConfig" arg="@RouteFilter_update.properties.peerings[].properties.ipv6PeeringConfig" cls="Ipv6ExpressRouteCircuitPeeringConfig_update">
                                    <prop type="@ExpressRouteCircuitPeeringConfig_update" name="microsoftPeeringConfig" arg="@Ipv6ExpressRouteCircuitPeeringConfig_update.microsoftPeeringConfig"/>
                                    <prop type="string" name="primaryPeerAddressPrefix" arg="@Ipv6ExpressRouteCircuitPeeringConfig_update.primaryPeerAddressPrefix"/>
                                    <prop type="@RouteFilter_update" name="routeFilter" arg="@Ipv6ExpressRouteCircuitPeeringConfig_update.routeFilter"/>
                                    <prop type="string" name="secondaryPeerAddressPrefix" arg="@Ipv6ExpressRouteCircuitPeeringConfig_update.secondaryPeerAddressPrefix"/>
                                    <prop type="string" name="state" arg="@Ipv6ExpressRouteCircuitPeeringConfig_update.state">
                                      <enum>
                                        <item value="&quot;Disabled&quot;"/>
                                        <item value="&quot;Enabled&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="lastModifiedBy" arg="@RouteFilter_update.properties.peerings[].properties.lastModifiedBy"/>
                                  <prop type="@ExpressRouteCircuitPeeringConfig_update" name="microsoftPeeringConfig" arg="@RouteFilter_update.properties.peerings[].properties.microsoftPeeringConfig"/>
                                  <prop type="integer64" name="peerASN" arg="@RouteFilter_update.properties.peerings[].properties.peerASN">
                                    <format maximum="4294967295" minimum="1"/>
                                  </prop>
                                  <prop type="string" name="peeringType" arg="@RouteFilter_update.properties.peerings[].properties.peeringType">
                                    <enum>
                                      <item value="&quot;AzurePrivatePeering&quot;"/>
                                      <item value="&quot;AzurePublicPeering&quot;"/>
                                      <item value="&quot;MicrosoftPeering&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="primaryAzurePort" arg="@RouteFilter_update.properties.peerings[].properties.primaryAzurePort"/>
                                  <prop type="string" name="primaryPeerAddressPrefix" arg="@RouteFilter_update.properties.peerings[].properties.primaryPeerAddressPrefix"/>
                                  <prop type="string" name="provisioningState" arg="@RouteFilter_update.properties.peerings[].properties.provisioningState"/>
                                  <prop type="@RouteFilter_update" name="routeFilter" arg="@RouteFilter_update.properties.peerings[].properties.routeFilter"/>
                                  <prop type="string" name="secondaryAzurePort" arg="@RouteFilter_update.properties.peerings[].properties.secondaryAzurePort"/>
                                  <prop type="string" name="secondaryPeerAddressPrefix" arg="@RouteFilter_update.properties.peerings[].properties.secondaryPeerAddressPrefix"/>
                                  <prop type="string" name="sharedKey" arg="@RouteFilter_update.properties.peerings[].properties.sharedKey"/>
                                  <prop type="string" name="state" arg="@RouteFilter_update.properties.peerings[].properties.state">
                                    <enum>
                                      <item value="&quot;Disabled&quot;"/>
                                      <item value="&quot;Enabled&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="stats" arg="@RouteFilter_update.properties.peerings[].properties.stats">
                                    <prop type="integer64" name="primarybytesIn" arg="@RouteFilter_update.properties.peerings[].properties.stats.primarybytesIn"/>
                                    <prop type="integer64" name="primarybytesOut" arg="@RouteFilter_update.properties.peerings[].properties.stats.primarybytesOut"/>
                                    <prop type="integer64" name="secondarybytesIn" arg="@RouteFilter_update.properties.peerings[].properties.stats.secondarybytesIn"/>
                                    <prop type="integer64" name="secondarybytesOut" arg="@RouteFilter_update.properties.peerings[].properties.stats.secondarybytesOut"/>
                                  </prop>
                                  <prop type="integer32" name="vlanId" arg="@RouteFilter_update.properties.peerings[].properties.vlanId"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="rules" arg="@RouteFilter_update.properties.rules">
                              <item type="object">
                                <prop type="ResourceId" name="id" arg="@RouteFilter_update.properties.rules[].id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location" arg="@RouteFilter_update.properties.rules[].location"/>
                                <prop type="string" name="name" arg="@RouteFilter_update.properties.rules[].name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" arg="@RouteFilter_update.properties.rules[].properties.access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="array<string>" name="communities" arg="@RouteFilter_update.properties.rules[].properties.communities" required="True">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="routeFilterRuleType" arg="@RouteFilter_update.properties.rules[].properties.routeFilterRuleType" required="True">
                                    <enum>
                                      <item value="&quot;Community&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags" arg="@RouteFilter_update.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </prop>
                        <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix"/>
                        <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="lastModifiedBy" arg="$parameters.properties.peerings[].properties.lastModifiedBy"/>
                      <prop type="object" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_update">
                        <prop type="array<string>" name="advertisedCommunities" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedCommunities">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="advertisedPublicPrefixes" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="advertisedPublicPrefixesState" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixesState">
                          <enum>
                            <item value="&quot;Configured&quot;"/>
                            <item value="&quot;Configuring&quot;"/>
                            <item value="&quot;NotConfigured&quot;"/>
                            <item value="&quot;ValidationNeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="customerASN" arg="@ExpressRouteCircuitPeeringConfig_update.customerASN"/>
                        <prop type="integer32" name="legacyMode" arg="@ExpressRouteCircuitPeeringConfig_update.legacyMode"/>
                        <prop type="string" name="routingRegistryName" arg="@ExpressRouteCircuitPeeringConfig_update.routingRegistryName"/>
                      </prop>
                      <prop type="integer64" name="peerASN" arg="$parameters.properties.peerings[].properties.peerASN">
                        <format maximum="4294967295" minimum="1"/>
                      </prop>
                      <prop type="string" name="peeringType" arg="$parameters.properties.peerings[].properties.peeringType">
                        <enum>
                          <item value="&quot;AzurePrivatePeering&quot;"/>
                          <item value="&quot;AzurePublicPeering&quot;"/>
                          <item value="&quot;MicrosoftPeering&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix"/>
                      <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix"/>
                      <prop type="string" name="sharedKey" arg="$parameters.properties.peerings[].properties.sharedKey"/>
                      <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="vlanId" arg="$parameters.properties.peerings[].properties.vlanId"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="serviceProviderNotes" arg="$parameters.properties.serviceProviderNotes"/>
                <prop type="string" name="serviceProviderProvisioningState" arg="$parameters.properties.serviceProviderProvisioningState">
                  <enum>
                    <item value="&quot;Deprovisioning&quot;"/>
                    <item value="&quot;NotProvisioned&quot;"/>
                    <item value="&quot;Provisioned&quot;"/>
                    <item value="&quot;Provisioning&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRouteCrossConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}">
          <request method="put">
            <path>
              <param type="string" name="crossConnectionName" arg="$Path.crossConnectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRouteCrossConnection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
