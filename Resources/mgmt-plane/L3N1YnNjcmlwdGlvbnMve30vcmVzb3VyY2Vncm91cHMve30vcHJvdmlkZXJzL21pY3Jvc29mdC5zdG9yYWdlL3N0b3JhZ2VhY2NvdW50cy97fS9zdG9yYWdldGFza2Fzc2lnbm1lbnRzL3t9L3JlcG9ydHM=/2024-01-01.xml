<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}/reports" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfS9yZXBvcnRz/V/MjAyNC0wMS0wMQ=="/>
  <commandGroup name="storage account task-assignment">
    <command name="list-report" version="2024-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/storagetaskassignments/{}/reports" version="2024-01-01" swagger="mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9zdG9yYWdlVGFza0Fzc2lnbm1lbnRzL3tzdG9yYWdlVGFza0Fzc2lnbm1lbnROYW1lfS9yZXBvcnRz/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageTaskAssignmentName" options="storage-task-assignment-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only."/>
          <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="Optional. When specified, it can be used to query using reporting properties. See [Constructing Filter Strings](https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#constructing-filter-strings) for details."/>
        </arg>
        <arg type="integer32" var="$Query.maxpagesize" options="maxpagesize">
          <help short="Optional, specifies the maximum number of storage task assignment instances to be included in the list response."/>
        </arg>
      </argGroup>
      <operation operationId="StorageTaskAssignmentInstancesReport_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}/reports">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-z0-9]+$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageTaskAssignmentName" arg="$Path.storageTaskAssignmentName" required="True">
                <format pattern="^[a-z0-9]{3,24}$" maxLength="24" minLength="3"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="integer32" name="$maxpagesize" arg="$Query.maxpagesize"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop readOnly="True" type="string" name="finishTime"/>
                        <prop readOnly="True" type="string" name="objectFailedCount"/>
                        <prop readOnly="True" type="string" name="objectsOperatedOnCount"/>
                        <prop readOnly="True" type="string" name="objectsSucceededCount"/>
                        <prop readOnly="True" type="string" name="objectsTargetedCount"/>
                        <prop readOnly="True" type="string" name="runResult">
                          <enum>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="runStatusEnum">
                          <enum>
                            <item value="&quot;Finished&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="runStatusError"/>
                        <prop readOnly="True" type="string" name="startTime"/>
                        <prop readOnly="True" type="ResourceId" name="storageAccountId"/>
                        <prop readOnly="True" type="string" name="summaryReportPath"/>
                        <prop readOnly="True" type="ResourceId" name="taskAssignmentId"/>
                        <prop readOnly="True" type="ResourceId" name="taskId"/>
                        <prop readOnly="True" type="string" name="taskVersion"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
