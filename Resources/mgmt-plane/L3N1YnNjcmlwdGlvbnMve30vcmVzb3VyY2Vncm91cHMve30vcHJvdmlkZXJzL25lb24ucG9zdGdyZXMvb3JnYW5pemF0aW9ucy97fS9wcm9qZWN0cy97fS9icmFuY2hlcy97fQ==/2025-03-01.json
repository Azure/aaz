{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches/{}", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXMve2JyYW5jaE5hbWV9/V/MjAyNS0wMy0wMQ=="}], "commandGroups": [{"name": "neon postgres branch", "commands": [{"name": "show", "version": "2025-03-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches/{}", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXMve2JyYW5jaE5hbWV9/V/MjAyNS0wMy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.branchName", "options": ["branch-id"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "Id of the Neon branch"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Neon organization."}, "prompt": {"msg": "Please provide Neon Organization name:"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["project-id"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Id of the Neon project"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the Azure resource group."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Id of the Azure Subscription"}}]}], "operations": [{"operationId": "Branches_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}/branches/{branchName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "branchName", "arg": "$Path.branchName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Neon.Postgres/organizations/{}/projects/{}/branches/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "Attributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2025-03-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches/{}", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXMve2JyYW5jaE5hbWV9/V/MjAyNS0wMy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.branchName", "options": ["branch-id"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "Id of the Neon branch"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Neon organization."}, "prompt": {"msg": "Please provide Neon Organization name:"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["project-id"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Id of the Neon project"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the Azure resource group."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Id of the Azure Subscription"}}]}], "operations": [{"operationId": "Branches_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}/branches/{branchName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "branchName", "arg": "$Path.branchName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2025-03-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches/{}", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXMve2JyYW5jaE5hbWV9/V/MjAyNS0wMy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.branchName", "options": ["n", "name", "branch-name"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "Name of the Neon branch."}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Neon organization."}, "prompt": {"msg": "Please provide Neon Organization name:"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["project-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the Neon project."}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the Azure resource group."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Id of the Azure Subscription"}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$resource.properties.attributes", "options": ["attributes"], "hide": true, "group": "Properties", "help": {"short": "Additional attributes for the entity"}, "item": {"type": "object", "args": [{"type": "string", "var": "@Attributes_create.name", "options": ["name"], "required": true, "help": {"short": "Name of the attribute"}}, {"type": "string", "var": "@Attributes_create.value", "options": ["value"], "required": true, "help": {"short": "Value of the attribute"}}], "cls": "Attributes_create"}}, {"type": "string", "var": "$resource.properties.databaseName", "options": ["database-name"], "group": "Properties", "help": {"short": "Neon Database name associated with the branch"}}, {"type": "array<object>", "var": "$resource.properties.databases", "options": ["databases"], "hide": true, "group": "Properties", "help": {"short": "Neon Databases associated with the branch"}, "item": {"type": "object", "args": [{"type": "array<@Attributes_create>", "var": "$resource.properties.databases[].attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@Attributes_create"}}, {"type": "string", "var": "$resource.properties.databases[].branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this database belongs to"}}, {"type": "string", "var": "$resource.properties.databases[].entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$resource.properties.databases[].ownerName", "options": ["owner-name"], "help": {"short": "The name of the role that owns the database"}}]}}, {"type": "array<object>", "var": "$resource.properties.endpoints", "options": ["endpoints"], "hide": true, "group": "Properties", "help": {"short": "Endpoints associated with the branch"}, "item": {"type": "object", "args": [{"type": "array<@Attributes_create>", "var": "$resource.properties.endpoints[].attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@Attributes_create"}}, {"type": "string", "var": "$resource.properties.endpoints[].branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this endpoint belongs to"}}, {"type": "string", "var": "$resource.properties.endpoints[].endpointType", "options": ["endpoint-type"], "help": {"short": "The type of the endpoint"}, "enum": {"items": [{"name": "read_only", "value": "read_only"}, {"name": "read_write", "value": "read_write"}]}}, {"type": "string", "var": "$resource.properties.endpoints[].entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$resource.properties.endpoints[].projectId", "options": ["project-id"], "help": {"short": "The ID of the project this endpoint belongs to"}}]}}, {"type": "string", "var": "$resource.properties.entityName", "options": ["entity-name"], "group": "Properties", "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$resource.properties.parentId", "options": ["parent-id"], "group": "Properties", "help": {"short": "The ID of the parent branch"}, "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "var": "$resource.properties.projectId", "options": ["project-id"], "hide": true, "group": "Properties", "help": {"short": "The ID of the project this branch belongs to"}}, {"type": "string", "var": "$resource.properties.roleName", "options": ["role-name"], "group": "Properties", "help": {"short": "Role name associated with the branch"}}, {"type": "array<object>", "var": "$resource.properties.roles", "options": ["roles"], "hide": true, "group": "Properties", "help": {"short": "Roles associated with the branch"}, "item": {"type": "object", "args": [{"type": "array<@Attributes_create>", "var": "$resource.properties.roles[].attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"type": "@Attributes_create"}}, {"type": "string", "var": "$resource.properties.roles[].branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this role belongs to"}}, {"type": "string", "var": "$resource.properties.roles[].entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "var": "$resource.properties.roles[].isSuperUser", "options": ["is-super-user"], "help": {"short": "Indicates whether the role has superuser privileges"}}, {"type": "array<string>", "var": "$resource.properties.roles[].permissions", "options": ["permissions"], "help": {"short": "Permissions assigned to the role"}, "item": {"type": "string"}}]}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Branches_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}/branches/{branchName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "branchName", "arg": "$Path.branchName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "arg": "$resource.properties.attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "@Attributes_create.name", "required": true}, {"type": "string", "name": "value", "arg": "@Attributes_create.value", "required": true}], "cls": "Attributes_create"}}, {"type": "string", "name": "databaseName", "arg": "$resource.properties.databaseName"}, {"type": "array<object>", "name": "databases", "arg": "$resource.properties.databases", "item": {"type": "object", "props": [{"type": "array<@Attributes_create>", "name": "attributes", "arg": "$resource.properties.databases[].attributes", "item": {"type": "@Attributes_create"}}, {"type": "string", "name": "branchId", "arg": "$resource.properties.databases[].branchId"}, {"type": "string", "name": "entityName", "arg": "$resource.properties.databases[].entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName", "arg": "$resource.properties.databases[].ownerName"}]}}, {"type": "array<object>", "name": "endpoints", "arg": "$resource.properties.endpoints", "item": {"type": "object", "props": [{"type": "array<@Attributes_create>", "name": "attributes", "arg": "$resource.properties.endpoints[].attributes", "item": {"type": "@Attributes_create"}}, {"type": "string", "name": "branchId", "arg": "$resource.properties.endpoints[].branchId"}, {"type": "string", "name": "endpointType", "arg": "$resource.properties.endpoints[].endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.endpoints[].entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId", "arg": "$resource.properties.endpoints[].projectId"}]}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "arg": "$resource.properties.parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId", "arg": "$resource.properties.projectId"}, {"type": "string", "name": "roleName", "arg": "$resource.properties.roleName"}, {"type": "array<object>", "name": "roles", "arg": "$resource.properties.roles", "item": {"type": "object", "props": [{"type": "array<@Attributes_create>", "name": "attributes", "arg": "$resource.properties.roles[].attributes", "item": {"type": "@Attributes_create"}}, {"type": "string", "name": "branchId", "arg": "$resource.properties.roles[].branchId"}, {"type": "string", "name": "entityName", "arg": "$resource.properties.roles[].entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser", "arg": "$resource.properties.roles[].isSuperUser"}, {"type": "array<string>", "name": "permissions", "arg": "$resource.properties.roles[].permissions", "item": {"type": "string"}}]}}]}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Neon.Postgres/organizations/{}/projects/{}/branches/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "Attributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2025-03-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects/{}/branches/{}", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vYnJhbmNoZXMve2JyYW5jaE5hbWV9/V/MjAyNS0wMy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.branchName", "options": ["n", "name", "branch-name"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "Name of the Neon branch."}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Neon organization."}, "prompt": {"msg": "Please provide Neon Organization name:"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.projectName", "options": ["project-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the Neon project."}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the Azure resource group."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Id of the Azure Subscription"}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$resource.properties.attributes", "options": ["attributes"], "hide": true, "group": "Properties", "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "@Attributes_update.name", "options": ["name"], "help": {"short": "Name of the attribute"}}, {"type": "string", "var": "@Attributes_update.value", "options": ["value"], "help": {"short": "Value of the attribute"}}], "cls": "Attributes_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.databaseName", "options": ["database-name"], "group": "Properties", "help": {"short": "Neon Database name associated with the branch"}}, {"nullable": true, "type": "array<object>", "var": "$resource.properties.databases", "options": ["databases"], "hide": true, "group": "Properties", "help": {"short": "Neon Databases associated with the branch"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<@Attributes_update>", "var": "$resource.properties.databases[].attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@Attributes_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.databases[].branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this database belongs to"}}, {"nullable": true, "type": "string", "var": "$resource.properties.databases[].entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "string", "var": "$resource.properties.databases[].ownerName", "options": ["owner-name"], "help": {"short": "The name of the role that owns the database"}}]}}, {"nullable": true, "type": "array<object>", "var": "$resource.properties.endpoints", "options": ["endpoints"], "hide": true, "group": "Properties", "help": {"short": "Endpoints associated with the branch"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<@Attributes_update>", "var": "$resource.properties.endpoints[].attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@Attributes_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.endpoints[].branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this endpoint belongs to"}}, {"nullable": true, "type": "string", "var": "$resource.properties.endpoints[].endpointType", "options": ["endpoint-type"], "help": {"short": "The type of the endpoint"}, "enum": {"items": [{"name": "read_only", "value": "read_only"}, {"name": "read_write", "value": "read_write"}]}}, {"nullable": true, "type": "string", "var": "$resource.properties.endpoints[].entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "string", "var": "$resource.properties.endpoints[].projectId", "options": ["project-id"], "help": {"short": "The ID of the project this endpoint belongs to"}}]}}, {"nullable": true, "type": "string", "var": "$resource.properties.entityName", "options": ["entity-name"], "group": "Properties", "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "string", "var": "$resource.properties.parentId", "options": ["parent-id"], "group": "Properties", "help": {"short": "The ID of the parent branch"}, "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"nullable": true, "type": "string", "var": "$resource.properties.projectId", "options": ["project-id"], "hide": true, "group": "Properties", "help": {"short": "The ID of the project this branch belongs to"}}, {"nullable": true, "type": "string", "var": "$resource.properties.roleName", "options": ["role-name"], "group": "Properties", "help": {"short": "Role name associated with the branch"}}, {"nullable": true, "type": "array<object>", "var": "$resource.properties.roles", "options": ["roles"], "hide": true, "group": "Properties", "help": {"short": "Roles associated with the branch"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<@Attributes_update>", "var": "$resource.properties.roles[].attributes", "options": ["attributes"], "help": {"short": "Additional attributes for the entity"}, "item": {"nullable": true, "type": "@Attributes_update"}}, {"nullable": true, "type": "string", "var": "$resource.properties.roles[].branchId", "options": ["branch-id"], "help": {"short": "The ID of the branch this role belongs to"}}, {"nullable": true, "type": "string", "var": "$resource.properties.roles[].entityName", "options": ["entity-name"], "help": {"short": "Name of the resource"}, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"nullable": true, "type": "boolean", "var": "$resource.properties.roles[].isSuperUser", "options": ["is-super-user"], "help": {"short": "Indicates whether the role has superuser privileges"}}, {"nullable": true, "type": "array<string>", "var": "$resource.properties.roles[].permissions", "options": ["permissions"], "help": {"short": "Permissions assigned to the role"}, "item": {"nullable": true, "type": "string"}}]}}]}], "operations": [{"operationId": "Branches_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}/branches/{branchName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "branchName", "arg": "$Path.branchName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Neon.Postgres/organizations/{}/projects/{}/branches/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "Attributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Branch_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "arg": "$resource.properties.attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "@Attributes_update.name", "required": true}, {"type": "string", "name": "value", "arg": "@Attributes_update.value", "required": true}], "cls": "Attributes_update"}}, {"type": "string", "name": "databaseName", "arg": "$resource.properties.databaseName"}, {"type": "array<object>", "name": "databases", "arg": "$resource.properties.databases", "item": {"type": "object", "props": [{"type": "array<@Attributes_update>", "name": "attributes", "arg": "$resource.properties.databases[].attributes", "item": {"type": "@Attributes_update"}}, {"type": "string", "name": "branchId", "arg": "$resource.properties.databases[].branchId"}, {"type": "string", "name": "entityName", "arg": "$resource.properties.databases[].entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName", "arg": "$resource.properties.databases[].ownerName"}]}}, {"type": "array<object>", "name": "endpoints", "arg": "$resource.properties.endpoints", "item": {"type": "object", "props": [{"type": "array<@Attributes_update>", "name": "attributes", "arg": "$resource.properties.endpoints[].attributes", "item": {"type": "@Attributes_update"}}, {"type": "string", "name": "branchId", "arg": "$resource.properties.endpoints[].branchId"}, {"type": "string", "name": "endpointType", "arg": "$resource.properties.endpoints[].endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.endpoints[].entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId", "arg": "$resource.properties.endpoints[].projectId"}]}}, {"type": "string", "name": "entityName", "arg": "$resource.properties.entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "arg": "$resource.properties.parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId", "arg": "$resource.properties.projectId"}, {"type": "string", "name": "roleName", "arg": "$resource.properties.roleName"}, {"type": "array<object>", "name": "roles", "arg": "$resource.properties.roles", "item": {"type": "object", "props": [{"type": "array<@Attributes_update>", "name": "attributes", "arg": "$resource.properties.roles[].attributes", "item": {"type": "@Attributes_update"}}, {"type": "string", "name": "branchId", "arg": "$resource.properties.roles[].branchId"}, {"type": "string", "name": "entityName", "arg": "$resource.properties.roles[].entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser", "arg": "$resource.properties.roles[].isSuperUser"}, {"type": "array<string>", "name": "permissions", "arg": "$resource.properties.roles[].permissions", "item": {"type": "string"}}]}}]}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Branches_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects/{projectName}/branches/{branchName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "branchName", "arg": "$Path.branchName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "projectName", "arg": "$Path.projectName", "required": true, "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Branch_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}