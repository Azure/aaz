{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="}], "commandGroups": [{"name": "network virtual-appliance", "commands": [{"name": "show", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkVirtualApplianceName", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of Network Virtual Appliance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Query.expand", "options": ["expand"], "help": {"short": "Expands referenced resources. Default value is None."}}]}], "operations": [{"operationId": "NetworkVirtualAppliances_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "networkVirtualApplianceName", "arg": "$Path.networkVirtualApplianceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "additionalNics", "item": {"type": "object", "props": [{"type": "boolean", "name": "hasPublicIp"}, {"type": "string", "name": "name"}]}}, {"readOnly": true, "type": "string", "name": "addressPrefix"}, {"type": "array<string>", "name": "bootStrapConfigurationBlobs", "item": {"type": "string"}}, {"type": "string", "name": "cloudInitConfiguration"}, {"type": "array<string>", "name": "cloudInitConfigurationBlobs", "item": {"type": "string"}}, {"type": "object", "name": "delegation", "props": [{"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "string", "name": "serviceName"}]}, {"readOnly": true, "type": "string", "name": "deploymentType"}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundSecurityRules", "item": {"type": "@SubResource_read"}}, {"type": "array<object>", "name": "internetIngressPublicIps", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}]}}, {"type": "object", "name": "networkProfile", "props": [{"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "primary"}]}]}}]}, {"type": "string", "name": "type", "enum": {"items": [{"value": "PrivateNic"}, {"value": "PublicNic"}]}}]}}]}, {"type": "object", "name": "nvaSku", "props": [{"type": "string", "name": "bundledScaleUnit"}, {"type": "string", "name": "marketPlaceVersion"}, {"type": "string", "name": "vendor"}]}, {"type": "object", "name": "partnerManagedResource", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "ResourceId", "name": "internalLoadBalancerId"}, {"readOnly": true, "type": "ResourceId", "name": "standardLoadBalancerId"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "string", "name": "sshPublicKey"}, {"type": "integer64", "name": "virtualApplianceAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "virtualApplianceConnections", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<object>", "name": "virtualApplianceNics", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "instanceName"}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "nicType", "enum": {"items": [{"value": "AdditionalNic"}, {"value": "PrivateNic"}, {"value": "PublicNic"}]}}, {"readOnly": true, "type": "string", "name": "privateIpAddress"}, {"readOnly": true, "type": "string", "name": "publicIpAddress"}]}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "virtualApplianceSites", "item": {"type": "@SubResource_read"}}, {"type": "object", "name": "virtualHub", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkVirtualApplianceName", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of Network Virtual Appliance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "NetworkVirtualAppliances_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "networkVirtualApplianceName", "arg": "$Path.networkVirtualApplianceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkVirtualApplianceName", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of Network Virtual Appliance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"type": "ResourceId", "var": "$parameters.id", "options": ["id"], "hide": true, "group": "Parameters", "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"type": "object", "var": "$parameters.identity", "options": ["identity"], "hide": true, "group": "Parameters", "help": {"short": "The service principal that has read access to cloud-init and config blob."}, "args": [{"type": "string", "var": "$parameters.identity.type", "options": ["type"], "help": {"short": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "group": "Parameters", "help": {"short": "Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."}}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$parameters.properties.additionalNics", "options": ["additional-nics"], "group": "Properties", "help": {"short": "Details required for Additional Network Interface."}, "item": {"type": "object", "args": [{"type": "boolean", "var": "$parameters.properties.additionalNics[].hasPublicIp", "options": ["has-public-ip"], "help": {"short": "Flag (true or false) for Intent for Public Ip on additional nic"}}, {"type": "string", "var": "$parameters.properties.additionalNics[].name", "options": ["name"], "help": {"short": "Name of additional nic"}}]}}, {"type": "array<string>", "var": "$parameters.properties.bootStrapConfigurationBlobs", "options": ["boot-blobs", "boot-strap-config-blobs"], "group": "Properties", "help": {"short": "Space-separated list of BootStrapConfigurationBlobs storage URLs."}, "item": {"type": "string"}}, {"type": "string", "var": "$parameters.properties.cloudInitConfiguration", "options": ["init-config", "cloud-init-config"], "group": "Properties", "help": {"short": "CloudInitConfiguration scripts that will be run during cloud initialization."}}, {"type": "array<string>", "var": "$parameters.properties.cloudInitConfigurationBlobs", "options": ["cloud-blobs", "cloud-init-config-blobs"], "group": "Properties", "help": {"short": "Space-separated list of CloudInitConfigurationBlob storage URLs."}, "item": {"type": "string"}}, {"type": "object", "var": "$parameters.properties.delegation", "options": ["delegation"], "group": "Properties", "help": {"short": "The delegation for the Virtual Appliance"}, "args": [{"type": "string", "var": "$parameters.properties.delegation.serviceName", "options": ["service-name"], "help": {"short": "The service name to which the NVA is delegated."}}]}, {"type": "array<object>", "var": "$parameters.properties.internetIngressPublicIps", "options": ["internet-ingress-public-ips"], "group": "Properties", "help": {"short": "List of Resource Uri of Public IPs for Internet Ingress Scenario."}, "item": {"type": "object", "args": [{"type": "ResourceId", "var": "$parameters.properties.internetIngressPublicIps[].id", "options": ["id"], "help": {"short": "Resource Uri of Public Ip"}}]}}, {"type": "object", "var": "$parameters.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "Network Profile containing configurations for Public and Private NIC."}, "args": [{"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "options": ["network-interface-configurations"], "item": {"type": "object", "args": [{"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "options": ["ip-configurations"], "group": "Properties", "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name", "options": ["name"], "help": {"short": "Name of the IP configuration."}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Whether or not this is primary IP configuration of the NIC."}}]}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].type", "options": ["type"], "help": {"short": "NIC type. This should be either PublicNic or PrivateNic."}, "enum": {"items": [{"name": "PrivateNic", "value": "PrivateNic"}, {"name": "PublicNic", "value": "PublicNic"}]}}]}}]}, {"type": "string", "var": "$parameters.properties.sshPublicKey", "options": ["ssh-public-key"], "hide": true, "group": "Properties", "help": {"short": "Public key for SSH login."}}, {"type": "integer64", "var": "$parameters.properties.virtualApplianceAsn", "options": ["asn"], "group": "Properties", "help": {"short": "VirtualAppliance ASN. The valid value ranges from 1 to 4294967295."}, "format": {"maximum": 4294967295, "minimum": 0}}]}, {"name": "Sku", "args": [{"type": "string", "var": "$parameters.properties.nvaSku.bundledScaleUnit", "options": ["scale-unit"], "group": "Sku", "help": {"short": "Virtual Appliance Scale Unit."}}, {"type": "string", "var": "$parameters.properties.nvaSku.marketPlaceVersion", "options": ["v", "version"], "group": "Sku", "help": {"short": "Virtual Appliance Version."}}, {"type": "string", "var": "$parameters.properties.nvaSku.vendor", "options": ["vendor"], "group": "Sku", "help": {"short": "Virtual Appliance Vendor."}}]}, {"name": "VirtualHub", "args": [{"type": "string", "var": "$parameters.properties.virtualHub.id", "options": ["vhub"], "group": "VirtualHub", "help": {"short": "Name or ID of the virtual hub to which the Security Partner Provider belongs."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "NetworkVirtualAppliances_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "networkVirtualApplianceName", "arg": "$Path.networkVirtualApplianceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "ResourceId", "name": "id", "arg": "$parameters.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"type": "IdentityObject", "name": "identity", "arg": "$parameters.identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "additionalNics", "arg": "$parameters.properties.additionalNics", "item": {"type": "object", "props": [{"type": "boolean", "name": "hasPublicIp", "arg": "$parameters.properties.additionalNics[].hasPublicIp"}, {"type": "string", "name": "name", "arg": "$parameters.properties.additionalNics[].name"}]}}, {"type": "array<string>", "name": "bootStrapConfigurationBlobs", "arg": "$parameters.properties.bootStrapConfigurationBlobs", "item": {"type": "string"}}, {"type": "string", "name": "cloudInitConfiguration", "arg": "$parameters.properties.cloudInitConfiguration"}, {"type": "array<string>", "name": "cloudInitConfigurationBlobs", "arg": "$parameters.properties.cloudInitConfigurationBlobs", "item": {"type": "string"}}, {"type": "object", "name": "delegation", "arg": "$parameters.properties.delegation", "props": [{"type": "string", "name": "serviceName", "arg": "$parameters.properties.delegation.serviceName"}]}, {"type": "array<object>", "name": "internetIngressPublicIps", "arg": "$parameters.properties.internetIngressPublicIps", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "$parameters.properties.internetIngressPublicIps[].id"}]}}, {"type": "object", "name": "networkProfile", "arg": "$parameters.properties.networkProfile", "props": [{"type": "array<object>", "name": "networkInterfaceConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "ipConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"}]}]}}]}, {"type": "string", "name": "type", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].type", "enum": {"items": [{"value": "PrivateNic"}, {"value": "PublicNic"}]}}]}}]}, {"type": "object", "name": "nvaSku", "props": [{"type": "string", "name": "bundledScaleUnit", "arg": "$parameters.properties.nvaSku.bundledScaleUnit"}, {"type": "string", "name": "marketPlaceVersion", "arg": "$parameters.properties.nvaSku.marketPlaceVersion"}, {"type": "string", "name": "vendor", "arg": "$parameters.properties.nvaSku.vendor"}]}, {"type": "string", "name": "sshPublicKey", "arg": "$parameters.properties.sshPublicKey"}, {"type": "integer64", "name": "virtualApplianceAsn", "arg": "$parameters.properties.virtualApplianceAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "object", "name": "virtualHub", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.virtualHub.id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "additionalNics", "item": {"type": "object", "props": [{"type": "boolean", "name": "hasPublicIp"}, {"type": "string", "name": "name"}]}}, {"readOnly": true, "type": "string", "name": "addressPrefix"}, {"type": "array<string>", "name": "bootStrapConfigurationBlobs", "item": {"type": "string"}}, {"type": "string", "name": "cloudInitConfiguration"}, {"type": "array<string>", "name": "cloudInitConfigurationBlobs", "item": {"type": "string"}}, {"type": "object", "name": "delegation", "props": [{"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "string", "name": "serviceName"}]}, {"readOnly": true, "type": "string", "name": "deploymentType"}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundSecurityRules", "item": {"type": "@SubResource_read"}}, {"type": "array<object>", "name": "internetIngressPublicIps", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}]}}, {"type": "object", "name": "networkProfile", "props": [{"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "primary"}]}]}}]}, {"type": "string", "name": "type", "enum": {"items": [{"value": "PrivateNic"}, {"value": "PublicNic"}]}}]}}]}, {"type": "object", "name": "nvaSku", "props": [{"type": "string", "name": "bundledScaleUnit"}, {"type": "string", "name": "marketPlaceVersion"}, {"type": "string", "name": "vendor"}]}, {"type": "object", "name": "partnerManagedResource", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "ResourceId", "name": "internalLoadBalancerId"}, {"readOnly": true, "type": "ResourceId", "name": "standardLoadBalancerId"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "string", "name": "sshPublicKey"}, {"type": "integer64", "name": "virtualApplianceAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "virtualApplianceConnections", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<object>", "name": "virtualApplianceNics", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "instanceName"}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "nicType", "enum": {"items": [{"value": "AdditionalNic"}, {"value": "PrivateNic"}, {"value": "PublicNic"}]}}, {"readOnly": true, "type": "string", "name": "privateIpAddress"}, {"readOnly": true, "type": "string", "name": "publicIpAddress"}]}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "virtualApplianceSites", "item": {"type": "@SubResource_read"}}, {"type": "object", "name": "virtualHub", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkVirtualApplianceName", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of Network Virtual Appliance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "ResourceId", "var": "$parameters.id", "options": ["id"], "hide": true, "group": "Parameters", "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"nullable": true, "type": "object", "var": "$parameters.identity", "options": ["identity"], "hide": true, "group": "Parameters", "help": {"short": "The service principal that has read access to cloud-init and config blob."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.identity.type", "options": ["type"], "help": {"short": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"nullable": true, "type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "group": "Parameters", "help": {"short": "Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."}}, {"nullable": true, "type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.additionalNics", "options": ["additional-nics"], "group": "Properties", "help": {"short": "Details required for Additional Network Interface."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.additionalNics[].hasPublicIp", "options": ["has-public-ip"], "help": {"short": "Flag (true or false) for Intent for Public Ip on additional nic"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.additionalNics[].name", "options": ["name"], "help": {"short": "Name of additional nic"}}]}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.bootStrapConfigurationBlobs", "options": ["boot-blobs", "boot-strap-config-blobs"], "group": "Properties", "help": {"short": "Space-separated list of BootStrapConfigurationBlobs storage URLs."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.cloudInitConfiguration", "options": ["init-config", "cloud-init-config"], "group": "Properties", "help": {"short": "CloudInitConfiguration scripts that will be run during cloud initialization."}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.cloudInitConfigurationBlobs", "options": ["cloud-blobs", "cloud-init-config-blobs"], "group": "Properties", "help": {"short": "Space-separated list of CloudInitConfigurationBlob storage URLs."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "object", "var": "$parameters.properties.delegation", "options": ["delegation"], "group": "Properties", "help": {"short": "The delegation for the Virtual Appliance"}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.delegation.serviceName", "options": ["service-name"], "help": {"short": "The service name to which the NVA is delegated."}}]}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.internetIngressPublicIps", "options": ["internet-ingress-public-ips"], "group": "Properties", "help": {"short": "List of Resource Uri of Public IPs for Internet Ingress Scenario."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "ResourceId", "var": "$parameters.properties.internetIngressPublicIps[].id", "options": ["id"], "help": {"short": "Resource Uri of Public Ip"}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "Network Profile containing configurations for Public and Private NIC."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "options": ["network-interface-configurations"], "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "options": ["ip-configurations"], "group": "Properties", "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name", "options": ["name"], "help": {"short": "Name of the IP configuration."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Whether or not this is primary IP configuration of the NIC."}}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].type", "options": ["type"], "help": {"short": "NIC type. This should be either PublicNic or PrivateNic."}, "enum": {"items": [{"name": "PrivateNic", "value": "PrivateNic"}, {"name": "PublicNic", "value": "PublicNic"}]}}]}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.sshPublicKey", "options": ["ssh-public-key"], "hide": true, "group": "Properties", "help": {"short": "Public key for SSH login."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.virtualApplianceAsn", "options": ["asn"], "group": "Properties", "help": {"short": "VirtualAppliance ASN. The valid value ranges from 1 to 4294967295."}, "format": {"maximum": 4294967295, "minimum": 0}}]}, {"name": "Sku", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.nvaSku.bundledScaleUnit", "options": ["scale-unit"], "group": "Sku", "help": {"short": "Virtual Appliance Scale Unit."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.nvaSku.marketPlaceVersion", "options": ["v", "version"], "group": "Sku", "help": {"short": "Virtual Appliance Version."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.nvaSku.vendor", "options": ["vendor"], "group": "Sku", "help": {"short": "Virtual Appliance Vendor."}}]}, {"name": "VirtualHub", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.virtualHub.id", "options": ["vhub"], "group": "VirtualHub", "help": {"short": "Name or ID of the virtual hub to which the Security Partner Provider belongs."}}]}], "operations": [{"operationId": "NetworkVirtualAppliances_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "networkVirtualApplianceName", "arg": "$Path.networkVirtualApplianceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "additionalNics", "item": {"type": "object", "props": [{"type": "boolean", "name": "hasPublicIp"}, {"type": "string", "name": "name"}]}}, {"readOnly": true, "type": "string", "name": "addressPrefix"}, {"type": "array<string>", "name": "bootStrapConfigurationBlobs", "item": {"type": "string"}}, {"type": "string", "name": "cloudInitConfiguration"}, {"type": "array<string>", "name": "cloudInitConfigurationBlobs", "item": {"type": "string"}}, {"type": "object", "name": "delegation", "props": [{"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "string", "name": "serviceName"}]}, {"readOnly": true, "type": "string", "name": "deploymentType"}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundSecurityRules", "item": {"type": "@SubResource_read"}}, {"type": "array<object>", "name": "internetIngressPublicIps", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}]}}, {"type": "object", "name": "networkProfile", "props": [{"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "primary"}]}]}}]}, {"type": "string", "name": "type", "enum": {"items": [{"value": "PrivateNic"}, {"value": "PublicNic"}]}}]}}]}, {"type": "object", "name": "nvaSku", "props": [{"type": "string", "name": "bundledScaleUnit"}, {"type": "string", "name": "marketPlaceVersion"}, {"type": "string", "name": "vendor"}]}, {"type": "object", "name": "partnerManagedResource", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "ResourceId", "name": "internalLoadBalancerId"}, {"readOnly": true, "type": "ResourceId", "name": "standardLoadBalancerId"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "string", "name": "sshPublicKey"}, {"type": "integer64", "name": "virtualApplianceAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "virtualApplianceConnections", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<object>", "name": "virtualApplianceNics", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "instanceName"}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "nicType", "enum": {"items": [{"value": "AdditionalNic"}, {"value": "PrivateNic"}, {"value": "PublicNic"}]}}, {"readOnly": true, "type": "string", "name": "privateIpAddress"}, {"readOnly": true, "type": "string", "name": "publicIpAddress"}]}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "virtualApplianceSites", "item": {"type": "@SubResource_read"}}, {"type": "object", "name": "virtualHub", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkVirtualAppliance_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "ResourceId", "name": "id", "arg": "$parameters.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"}}, {"type": "IdentityObject", "name": "identity", "arg": "$parameters.identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "additionalNics", "arg": "$parameters.properties.additionalNics", "item": {"type": "object", "props": [{"type": "boolean", "name": "hasPublicIp", "arg": "$parameters.properties.additionalNics[].hasPublicIp"}, {"type": "string", "name": "name", "arg": "$parameters.properties.additionalNics[].name"}]}}, {"type": "array<string>", "name": "bootStrapConfigurationBlobs", "arg": "$parameters.properties.bootStrapConfigurationBlobs", "item": {"type": "string"}}, {"type": "string", "name": "cloudInitConfiguration", "arg": "$parameters.properties.cloudInitConfiguration"}, {"type": "array<string>", "name": "cloudInitConfigurationBlobs", "arg": "$parameters.properties.cloudInitConfigurationBlobs", "item": {"type": "string"}}, {"type": "object", "name": "delegation", "arg": "$parameters.properties.delegation", "props": [{"type": "string", "name": "serviceName", "arg": "$parameters.properties.delegation.serviceName"}]}, {"type": "array<object>", "name": "internetIngressPublicIps", "arg": "$parameters.properties.internetIngressPublicIps", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "$parameters.properties.internetIngressPublicIps[].id"}]}}, {"type": "object", "name": "networkProfile", "arg": "$parameters.properties.networkProfile", "props": [{"type": "array<object>", "name": "networkInterfaceConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "ipConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"}]}]}}]}, {"type": "string", "name": "type", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].type", "enum": {"items": [{"value": "PrivateNic"}, {"value": "PublicNic"}]}}]}}]}, {"type": "object", "name": "nvaSku", "props": [{"type": "string", "name": "bundledScaleUnit", "arg": "$parameters.properties.nvaSku.bundledScaleUnit"}, {"type": "string", "name": "marketPlaceVersion", "arg": "$parameters.properties.nvaSku.marketPlaceVersion"}, {"type": "string", "name": "vendor", "arg": "$parameters.properties.nvaSku.vendor"}]}, {"type": "string", "name": "sshPublicKey", "arg": "$parameters.properties.sshPublicKey"}, {"type": "integer64", "name": "virtualApplianceAsn", "arg": "$parameters.properties.virtualApplianceAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "object", "name": "virtualHub", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.virtualHub.id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "NetworkVirtualAppliances_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "networkVirtualApplianceName", "arg": "$Path.networkVirtualApplianceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@NetworkVirtualAppliance_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}