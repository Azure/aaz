<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
  <commandGroup name="network virtual-appliance">
    <command name="show" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkVirtualApplianceName" options="name n" required="True" idPart="name">
          <help short="The name of Network Virtual Appliance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Expands referenced resources. Default value is None."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkVirtualAppliances_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}">
          <request method="get">
            <path>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalNics">
                      <item type="object">
                        <prop type="boolean" name="hasPublicIp"/>
                        <prop type="string" name="name"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="addressPrefix"/>
                    <prop type="array<string>" name="bootStrapConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="cloudInitConfiguration"/>
                    <prop type="array<string>" name="cloudInitConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="delegation">
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceName"/>
                    </prop>
                    <prop readOnly="True" type="string" name="deploymentType"/>
                    <prop readOnly="True" type="array<@SubResource_read>" name="inboundSecurityRules">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop type="array<object>" name="internetIngressPublicIps">
                      <item type="object">
                        <prop type="ResourceId" name="id"/>
                      </item>
                    </prop>
                    <prop type="object" name="networkProfile">
                      <prop type="array<object>" name="networkInterfaceConfigurations">
                        <item type="object">
                          <prop type="object" name="properties">
                            <prop type="array<object>" name="ipConfigurations">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties">
                                  <prop type="boolean" name="primary"/>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;PrivateNic&quot;"/>
                              <item value="&quot;PublicNic&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="nvaSku">
                      <prop type="string" name="bundledScaleUnit"/>
                      <prop type="string" name="marketPlaceVersion"/>
                      <prop type="string" name="vendor"/>
                    </prop>
                    <prop type="object" name="partnerManagedResource">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="ResourceId" name="internalLoadBalancerId"/>
                      <prop readOnly="True" type="ResourceId" name="standardLoadBalancerId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sshPublicKey"/>
                    <prop type="integer64" name="virtualApplianceAsn">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="array<@SubResource_read>" name="virtualApplianceConnections">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="virtualApplianceNics">
                      <item type="object">
                        <prop readOnly="True" type="string" name="instanceName"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="string" name="nicType">
                          <enum>
                            <item value="&quot;AdditionalNic&quot;"/>
                            <item value="&quot;PrivateNic&quot;"/>
                            <item value="&quot;PublicNic&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="privateIpAddress"/>
                        <prop readOnly="True" type="string" name="publicIpAddress"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<@SubResource_read>" name="virtualApplianceSites">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop type="object" name="virtualHub" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkVirtualApplianceName" options="name n" required="True" idPart="name">
          <help short="The name of Network Virtual Appliance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkVirtualAppliances_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}">
          <request method="delete">
            <path>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkVirtualApplianceName" options="name n" required="True" idPart="name">
          <help short="The name of Network Virtual Appliance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
        </arg>
        <arg type="object" var="$parameters.identity" options="identity" hide="True" group="Parameters">
          <help short="The service principal that has read access to cloud-init and config blob."/>
          <arg type="string" var="$parameters.identity.type" options="type">
            <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.additionalNics" options="additional-nics" group="Properties">
          <help short="Details required for Additional Network Interface."/>
          <item type="object">
            <arg type="boolean" var="$parameters.properties.additionalNics[].hasPublicIp" options="has-public-ip">
              <help short="Flag (true or false) for Intent for Public Ip on additional nic"/>
            </arg>
            <arg type="string" var="$parameters.properties.additionalNics[].name" options="name">
              <help short="Name of additional nic"/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$parameters.properties.bootStrapConfigurationBlobs" options="boot-strap-config-blobs boot-blobs" group="Properties">
          <help short="Space-separated list of BootStrapConfigurationBlobs storage URLs."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$parameters.properties.cloudInitConfiguration" options="cloud-init-config init-config" group="Properties">
          <help short="CloudInitConfiguration scripts that will be run during cloud initialization."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.cloudInitConfigurationBlobs" options="cloud-init-config-blobs cloud-blobs" group="Properties">
          <help short="Space-separated list of CloudInitConfigurationBlob storage URLs."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$parameters.properties.delegation" options="delegation" group="Properties">
          <help short="The delegation for the Virtual Appliance"/>
          <arg type="string" var="$parameters.properties.delegation.serviceName" options="service-name">
            <help short="The service name to which the NVA is delegated."/>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.internetIngressPublicIps" options="internet-ingress-public-ips" group="Properties">
          <help short="List of Resource Uri of Public IPs for Internet Ingress Scenario."/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.internetIngressPublicIps[].id" options="id">
              <help short="Resource Uri of Public Ip"/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.networkProfile" options="network-profile" group="Properties">
          <help short="Network Profile containing configurations for Public and Private NIC."/>
          <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
            <item type="object">
              <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                <item type="object">
                  <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name">
                    <help short="Name of the IP configuration."/>
                  </arg>
                  <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                    <help short="Whether or not this is primary IP configuration of the NIC."/>
                  </arg>
                </item>
              </arg>
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].type" options="type">
                <help short="NIC type. This should be either PublicNic or PrivateNic."/>
                <enum>
                  <item name="PrivateNic" value="&quot;PrivateNic&quot;"/>
                  <item name="PublicNic" value="&quot;PublicNic&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.sshPublicKey" options="ssh-public-key" hide="True" group="Properties">
          <help short="Public key for SSH login."/>
        </arg>
        <arg type="integer64" var="$parameters.properties.virtualApplianceAsn" options="asn" group="Properties">
          <help short="VirtualAppliance ASN. The valid value ranges from 1 to 4294967295."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="string" var="$parameters.properties.nvaSku.bundledScaleUnit" options="scale-unit" group="Sku">
          <help short="Virtual Appliance Scale Unit."/>
        </arg>
        <arg type="string" var="$parameters.properties.nvaSku.marketPlaceVersion" options="version v" group="Sku">
          <help short="Virtual Appliance Version."/>
        </arg>
        <arg type="string" var="$parameters.properties.nvaSku.vendor" options="vendor" group="Sku">
          <help short="Virtual Appliance Vendor."/>
        </arg>
      </argGroup>
      <argGroup name="VirtualHub">
        <arg type="string" var="$parameters.properties.virtualHub.id" options="vhub" group="VirtualHub">
          <help short="Name or ID of the virtual hub to which the Security Partner Provider belongs."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkVirtualAppliances_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}">
          <request method="put">
            <path>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity" arg="$parameters.identity">
                    <prop type="string" name="type" arg="$parameters.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalNics" arg="$parameters.properties.additionalNics">
                      <item type="object">
                        <prop type="boolean" name="hasPublicIp" arg="$parameters.properties.additionalNics[].hasPublicIp"/>
                        <prop type="string" name="name" arg="$parameters.properties.additionalNics[].name"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="bootStrapConfigurationBlobs" arg="$parameters.properties.bootStrapConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="cloudInitConfiguration" arg="$parameters.properties.cloudInitConfiguration"/>
                    <prop type="array<string>" name="cloudInitConfigurationBlobs" arg="$parameters.properties.cloudInitConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="delegation" arg="$parameters.properties.delegation">
                      <prop type="string" name="serviceName" arg="$parameters.properties.delegation.serviceName"/>
                    </prop>
                    <prop type="array<object>" name="internetIngressPublicIps" arg="$parameters.properties.internetIngressPublicIps">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.internetIngressPublicIps[].id"/>
                      </item>
                    </prop>
                    <prop type="object" name="networkProfile" arg="$parameters.properties.networkProfile">
                      <prop type="array<object>" name="networkInterfaceConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations">
                        <item type="object">
                          <prop type="object" name="properties">
                            <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations">
                              <item type="object">
                                <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name"/>
                                <prop type="object" name="properties">
                                  <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="type" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].type">
                            <enum>
                              <item value="&quot;PrivateNic&quot;"/>
                              <item value="&quot;PublicNic&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="nvaSku">
                      <prop type="string" name="bundledScaleUnit" arg="$parameters.properties.nvaSku.bundledScaleUnit"/>
                      <prop type="string" name="marketPlaceVersion" arg="$parameters.properties.nvaSku.marketPlaceVersion"/>
                      <prop type="string" name="vendor" arg="$parameters.properties.nvaSku.vendor"/>
                    </prop>
                    <prop type="string" name="sshPublicKey" arg="$parameters.properties.sshPublicKey"/>
                    <prop type="integer64" name="virtualApplianceAsn" arg="$parameters.properties.virtualApplianceAsn">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="object" name="virtualHub">
                      <prop type="string" name="id" arg="$parameters.properties.virtualHub.id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalNics">
                      <item type="object">
                        <prop type="boolean" name="hasPublicIp"/>
                        <prop type="string" name="name"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="addressPrefix"/>
                    <prop type="array<string>" name="bootStrapConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="cloudInitConfiguration"/>
                    <prop type="array<string>" name="cloudInitConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="delegation">
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceName"/>
                    </prop>
                    <prop readOnly="True" type="string" name="deploymentType"/>
                    <prop readOnly="True" type="array<@SubResource_read>" name="inboundSecurityRules">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop type="array<object>" name="internetIngressPublicIps">
                      <item type="object">
                        <prop type="ResourceId" name="id"/>
                      </item>
                    </prop>
                    <prop type="object" name="networkProfile">
                      <prop type="array<object>" name="networkInterfaceConfigurations">
                        <item type="object">
                          <prop type="object" name="properties">
                            <prop type="array<object>" name="ipConfigurations">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties">
                                  <prop type="boolean" name="primary"/>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;PrivateNic&quot;"/>
                              <item value="&quot;PublicNic&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="nvaSku">
                      <prop type="string" name="bundledScaleUnit"/>
                      <prop type="string" name="marketPlaceVersion"/>
                      <prop type="string" name="vendor"/>
                    </prop>
                    <prop type="object" name="partnerManagedResource">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="ResourceId" name="internalLoadBalancerId"/>
                      <prop readOnly="True" type="ResourceId" name="standardLoadBalancerId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sshPublicKey"/>
                    <prop type="integer64" name="virtualApplianceAsn">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="array<@SubResource_read>" name="virtualApplianceConnections">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="virtualApplianceNics">
                      <item type="object">
                        <prop readOnly="True" type="string" name="instanceName"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="string" name="nicType">
                          <enum>
                            <item value="&quot;AdditionalNic&quot;"/>
                            <item value="&quot;PrivateNic&quot;"/>
                            <item value="&quot;PublicNic&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="privateIpAddress"/>
                        <prop readOnly="True" type="string" name="publicIpAddress"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<@SubResource_read>" name="virtualApplianceSites">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop type="object" name="virtualHub" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkVirtualApplianceName" options="name n" required="True" idPart="name">
          <help short="The name of Network Virtual Appliance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.identity" options="identity" hide="True" group="Parameters">
          <help short="The service principal that has read access to cloud-init and config blob."/>
          <arg nullable="True" type="string" var="$parameters.identity.type" options="type">
            <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.additionalNics" options="additional-nics" group="Properties">
          <help short="Details required for Additional Network Interface."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="boolean" var="$parameters.properties.additionalNics[].hasPublicIp" options="has-public-ip">
              <help short="Flag (true or false) for Intent for Public Ip on additional nic"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.additionalNics[].name" options="name">
              <help short="Name of additional nic"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.bootStrapConfigurationBlobs" options="boot-strap-config-blobs boot-blobs" group="Properties">
          <help short="Space-separated list of BootStrapConfigurationBlobs storage URLs."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.cloudInitConfiguration" options="cloud-init-config init-config" group="Properties">
          <help short="CloudInitConfiguration scripts that will be run during cloud initialization."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.cloudInitConfigurationBlobs" options="cloud-init-config-blobs cloud-blobs" group="Properties">
          <help short="Space-separated list of CloudInitConfigurationBlob storage URLs."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.delegation" options="delegation" group="Properties">
          <help short="The delegation for the Virtual Appliance"/>
          <arg nullable="True" type="string" var="$parameters.properties.delegation.serviceName" options="service-name">
            <help short="The service name to which the NVA is delegated."/>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.internetIngressPublicIps" options="internet-ingress-public-ips" group="Properties">
          <help short="List of Resource Uri of Public IPs for Internet Ingress Scenario."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$parameters.properties.internetIngressPublicIps[].id" options="id">
              <help short="Resource Uri of Public Ip"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.networkProfile" options="network-profile" group="Properties">
          <help short="Network Profile containing configurations for Public and Private NIC."/>
          <arg nullable="True" type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
            <item nullable="True" type="object">
              <arg nullable="True" type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name">
                    <help short="Name of the IP configuration."/>
                  </arg>
                  <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                    <help short="Whether or not this is primary IP configuration of the NIC."/>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].type" options="type">
                <help short="NIC type. This should be either PublicNic or PrivateNic."/>
                <enum>
                  <item name="PrivateNic" value="&quot;PrivateNic&quot;"/>
                  <item name="PublicNic" value="&quot;PublicNic&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.sshPublicKey" options="ssh-public-key" hide="True" group="Properties">
          <help short="Public key for SSH login."/>
        </arg>
        <arg nullable="True" type="integer64" var="$parameters.properties.virtualApplianceAsn" options="asn" group="Properties">
          <help short="VirtualAppliance ASN. The valid value ranges from 1 to 4294967295."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg nullable="True" type="string" var="$parameters.properties.nvaSku.bundledScaleUnit" options="scale-unit" group="Sku">
          <help short="Virtual Appliance Scale Unit."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.nvaSku.marketPlaceVersion" options="version v" group="Sku">
          <help short="Virtual Appliance Version."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.nvaSku.vendor" options="vendor" group="Sku">
          <help short="Virtual Appliance Vendor."/>
        </arg>
      </argGroup>
      <argGroup name="VirtualHub">
        <arg nullable="True" type="string" var="$parameters.properties.virtualHub.id" options="vhub" group="VirtualHub">
          <help short="Name or ID of the virtual hub to which the Security Partner Provider belongs."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkVirtualAppliances_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}">
          <request method="get">
            <path>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkVirtualAppliance_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalNics">
                      <item type="object">
                        <prop type="boolean" name="hasPublicIp"/>
                        <prop type="string" name="name"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="addressPrefix"/>
                    <prop type="array<string>" name="bootStrapConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="cloudInitConfiguration"/>
                    <prop type="array<string>" name="cloudInitConfigurationBlobs">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="delegation">
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceName"/>
                    </prop>
                    <prop readOnly="True" type="string" name="deploymentType"/>
                    <prop readOnly="True" type="array<@SubResource_read>" name="inboundSecurityRules">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop type="array<object>" name="internetIngressPublicIps">
                      <item type="object">
                        <prop type="ResourceId" name="id"/>
                      </item>
                    </prop>
                    <prop type="object" name="networkProfile">
                      <prop type="array<object>" name="networkInterfaceConfigurations">
                        <item type="object">
                          <prop type="object" name="properties">
                            <prop type="array<object>" name="ipConfigurations">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties">
                                  <prop type="boolean" name="primary"/>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;PrivateNic&quot;"/>
                              <item value="&quot;PublicNic&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="nvaSku">
                      <prop type="string" name="bundledScaleUnit"/>
                      <prop type="string" name="marketPlaceVersion"/>
                      <prop type="string" name="vendor"/>
                    </prop>
                    <prop type="object" name="partnerManagedResource">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="ResourceId" name="internalLoadBalancerId"/>
                      <prop readOnly="True" type="ResourceId" name="standardLoadBalancerId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sshPublicKey"/>
                    <prop type="integer64" name="virtualApplianceAsn">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="array<@SubResource_read>" name="virtualApplianceConnections">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="virtualApplianceNics">
                      <item type="object">
                        <prop readOnly="True" type="string" name="instanceName"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="string" name="nicType">
                          <enum>
                            <item value="&quot;AdditionalNic&quot;"/>
                            <item value="&quot;PrivateNic&quot;"/>
                            <item value="&quot;PublicNic&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="privateIpAddress"/>
                        <prop readOnly="True" type="string" name="publicIpAddress"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<@SubResource_read>" name="virtualApplianceSites">
                      <item type="@SubResource_read"/>
                    </prop>
                    <prop type="object" name="virtualHub" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}"/>
              </prop>
              <prop type="IdentityObject" name="identity" arg="$parameters.identity">
                <prop type="string" name="type" arg="$parameters.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<object>" name="additionalNics" arg="$parameters.properties.additionalNics">
                  <item type="object">
                    <prop type="boolean" name="hasPublicIp" arg="$parameters.properties.additionalNics[].hasPublicIp"/>
                    <prop type="string" name="name" arg="$parameters.properties.additionalNics[].name"/>
                  </item>
                </prop>
                <prop type="array<string>" name="bootStrapConfigurationBlobs" arg="$parameters.properties.bootStrapConfigurationBlobs">
                  <item type="string"/>
                </prop>
                <prop type="string" name="cloudInitConfiguration" arg="$parameters.properties.cloudInitConfiguration"/>
                <prop type="array<string>" name="cloudInitConfigurationBlobs" arg="$parameters.properties.cloudInitConfigurationBlobs">
                  <item type="string"/>
                </prop>
                <prop type="object" name="delegation" arg="$parameters.properties.delegation">
                  <prop type="string" name="serviceName" arg="$parameters.properties.delegation.serviceName"/>
                </prop>
                <prop type="array<object>" name="internetIngressPublicIps" arg="$parameters.properties.internetIngressPublicIps">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$parameters.properties.internetIngressPublicIps[].id"/>
                  </item>
                </prop>
                <prop type="object" name="networkProfile" arg="$parameters.properties.networkProfile">
                  <prop type="array<object>" name="networkInterfaceConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations">
                    <item type="object">
                      <prop type="object" name="properties">
                        <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations">
                          <item type="object">
                            <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name"/>
                            <prop type="object" name="properties">
                              <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="type" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].type">
                        <enum>
                          <item value="&quot;PrivateNic&quot;"/>
                          <item value="&quot;PublicNic&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="nvaSku">
                  <prop type="string" name="bundledScaleUnit" arg="$parameters.properties.nvaSku.bundledScaleUnit"/>
                  <prop type="string" name="marketPlaceVersion" arg="$parameters.properties.nvaSku.marketPlaceVersion"/>
                  <prop type="string" name="vendor" arg="$parameters.properties.nvaSku.vendor"/>
                </prop>
                <prop type="string" name="sshPublicKey" arg="$parameters.properties.sshPublicKey"/>
                <prop type="integer64" name="virtualApplianceAsn" arg="$parameters.properties.virtualApplianceAsn">
                  <format maximum="4294967295" minimum="0"/>
                </prop>
                <prop type="object" name="virtualHub">
                  <prop type="string" name="id" arg="$parameters.properties.virtualHub.id"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NetworkVirtualAppliances_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}">
          <request method="put">
            <path>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NetworkVirtualAppliance_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
