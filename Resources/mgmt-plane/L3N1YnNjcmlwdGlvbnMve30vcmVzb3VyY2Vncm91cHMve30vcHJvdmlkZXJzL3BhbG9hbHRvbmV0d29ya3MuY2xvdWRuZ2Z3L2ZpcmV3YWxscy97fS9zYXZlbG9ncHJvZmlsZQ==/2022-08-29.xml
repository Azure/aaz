<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}/savelogprofile" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0vc2F2ZUxvZ1Byb2ZpbGU=/V/MjAyMi0wOC0yOQ=="/>
  <commandGroup name="palo-alto cloudngfw firewall">
    <command name="save-log-profile" version="2022-08-29" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}/savelogprofile" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0vc2F2ZUxvZ1Byb2ZpbGU=/V/MjAyMi0wOC0yOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallName" options="firewall-name name n" required="True" group="" idPart="name">
          <help short="Firewall resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="LogSettings">
        <arg type="object" var="$logSettings.applicationInsights" options="application-insights" group="LogSettings">
          <help short="Application Insight details"/>
          <arg type="string" var="$logSettings.applicationInsights.id" options="id">
            <help short="Resource id for Application Insights"/>
          </arg>
          <arg type="string" var="$logSettings.applicationInsights.key" options="key">
            <help short="Application Insights key"/>
          </arg>
        </arg>
        <arg type="object" var="$logSettings.commonDestination" options="common-destination" group="LogSettings" cls="LogDestination_create">
          <help short="Common destination configurations"/>
          <arg type="object" var="@LogDestination_create.eventHubConfigurations" options="event-hub-configurations">
            <help short="Event Hub configurations"/>
            <arg type="string" var="@LogDestination_create.eventHubConfigurations.id" options="id">
              <help short="Resource ID of EventHub"/>
            </arg>
            <arg type="string" var="@LogDestination_create.eventHubConfigurations.name" options="name">
              <help short="EventHub name"/>
            </arg>
            <arg type="string" var="@LogDestination_create.eventHubConfigurations.nameSpace" options="name-space">
              <help short="EventHub namespace"/>
            </arg>
            <arg type="string" var="@LogDestination_create.eventHubConfigurations.policyName" options="policy-name">
              <help short="EventHub policy name"/>
            </arg>
            <arg type="string" var="@LogDestination_create.eventHubConfigurations.subscriptionId" options="subscription-id">
              <help short="Subscription Id"/>
            </arg>
          </arg>
          <arg type="object" var="@LogDestination_create.monitorConfigurations" options="monitor-configurations">
            <help short="Monitor Log configurations"/>
            <arg type="string" var="@LogDestination_create.monitorConfigurations.id" options="id">
              <help short="Resource ID of MonitorLog"/>
            </arg>
            <arg type="string" var="@LogDestination_create.monitorConfigurations.primaryKey" options="primary-key">
              <help short="Primary Key value for Monitor"/>
            </arg>
            <arg type="string" var="@LogDestination_create.monitorConfigurations.secondaryKey" options="secondary-key">
              <help short="Secondary Key value for Monitor"/>
            </arg>
            <arg type="string" var="@LogDestination_create.monitorConfigurations.subscriptionId" options="subscription-id">
              <help short="Subscription Id"/>
            </arg>
            <arg type="string" var="@LogDestination_create.monitorConfigurations.workspace" options="workspace">
              <help short="MonitorLog workspace"/>
            </arg>
          </arg>
          <arg type="object" var="@LogDestination_create.storageConfigurations" options="storage-configurations">
            <help short="Storage account configurations"/>
            <arg type="string" var="@LogDestination_create.storageConfigurations.accountName" options="account-name">
              <help short="Storage account name"/>
            </arg>
            <arg type="string" var="@LogDestination_create.storageConfigurations.id" options="id">
              <help short="Resource ID of storage account"/>
            </arg>
            <arg type="string" var="@LogDestination_create.storageConfigurations.subscriptionId" options="subscription-id">
              <help short="Subscription Id"/>
            </arg>
          </arg>
        </arg>
        <arg type="@LogDestination_create" var="$logSettings.decryptLogDestination" options="decrypt-log-destination decrypt-destination" group="LogSettings">
          <help short="Decrypt destination configurations"/>
        </arg>
        <arg type="string" var="$logSettings.logOption" options="log-option" group="LogSettings">
          <help short="Log option SAME/INDIVIDUAL"/>
          <enum>
            <item name="INDIVIDUAL_DESTINATION" value="&quot;INDIVIDUAL_DESTINATION&quot;"/>
            <item name="SAME_DESTINATION" value="&quot;SAME_DESTINATION&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$logSettings.logType" options="log-type" group="LogSettings">
          <help short="One of possible log type"/>
          <enum>
            <item name="AUDIT" value="&quot;AUDIT&quot;"/>
            <item name="DECRYPTION" value="&quot;DECRYPTION&quot;"/>
            <item name="DLP" value="&quot;DLP&quot;"/>
            <item name="THREAT" value="&quot;THREAT&quot;"/>
            <item name="TRAFFIC" value="&quot;TRAFFIC&quot;"/>
            <item name="WILDFIRE" value="&quot;WILDFIRE&quot;"/>
          </enum>
        </arg>
        <arg type="@LogDestination_create" var="$logSettings.threatLogDestination" options="threat-log-destination threat-destination" group="LogSettings">
          <help short="Threat destination configurations"/>
        </arg>
        <arg type="@LogDestination_create" var="$logSettings.trafficLogDestination" options="traffic-log-destination traffic-destination" group="LogSettings">
          <help short="Traffic destination configurations"/>
        </arg>
      </argGroup>
      <operation operationId="Firewalls_saveLogProfile">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}/saveLogProfile">
          <request method="post">
            <path>
              <param type="string" name="firewallName" arg="$Path.firewallName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="logSettings" clientFlatten="True">
                  <prop type="object" name="applicationInsights" arg="$logSettings.applicationInsights">
                    <prop type="string" name="id" arg="$logSettings.applicationInsights.id"/>
                    <prop type="string" name="key" arg="$logSettings.applicationInsights.key"/>
                  </prop>
                  <prop type="object" name="commonDestination" arg="$logSettings.commonDestination" cls="LogDestination_create">
                    <prop type="object" name="eventHubConfigurations" arg="@LogDestination_create.eventHubConfigurations">
                      <prop type="string" name="id" arg="@LogDestination_create.eventHubConfigurations.id"/>
                      <prop type="string" name="name" arg="@LogDestination_create.eventHubConfigurations.name"/>
                      <prop type="string" name="nameSpace" arg="@LogDestination_create.eventHubConfigurations.nameSpace"/>
                      <prop type="string" name="policyName" arg="@LogDestination_create.eventHubConfigurations.policyName"/>
                      <prop type="string" name="subscriptionId" arg="@LogDestination_create.eventHubConfigurations.subscriptionId"/>
                    </prop>
                    <prop type="object" name="monitorConfigurations" arg="@LogDestination_create.monitorConfigurations">
                      <prop type="string" name="id" arg="@LogDestination_create.monitorConfigurations.id"/>
                      <prop type="string" name="primaryKey" arg="@LogDestination_create.monitorConfigurations.primaryKey"/>
                      <prop type="string" name="secondaryKey" arg="@LogDestination_create.monitorConfigurations.secondaryKey"/>
                      <prop type="string" name="subscriptionId" arg="@LogDestination_create.monitorConfigurations.subscriptionId"/>
                      <prop type="string" name="workspace" arg="@LogDestination_create.monitorConfigurations.workspace"/>
                    </prop>
                    <prop type="object" name="storageConfigurations" arg="@LogDestination_create.storageConfigurations">
                      <prop type="string" name="accountName" arg="@LogDestination_create.storageConfigurations.accountName"/>
                      <prop type="string" name="id" arg="@LogDestination_create.storageConfigurations.id"/>
                      <prop type="string" name="subscriptionId" arg="@LogDestination_create.storageConfigurations.subscriptionId"/>
                    </prop>
                  </prop>
                  <prop type="@LogDestination_create" name="decryptLogDestination" arg="$logSettings.decryptLogDestination"/>
                  <prop type="string" name="logOption" arg="$logSettings.logOption">
                    <enum>
                      <item value="&quot;INDIVIDUAL_DESTINATION&quot;"/>
                      <item value="&quot;SAME_DESTINATION&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="logType" arg="$logSettings.logType">
                    <enum>
                      <item value="&quot;AUDIT&quot;"/>
                      <item value="&quot;DECRYPTION&quot;"/>
                      <item value="&quot;DLP&quot;"/>
                      <item value="&quot;THREAT&quot;"/>
                      <item value="&quot;TRAFFIC&quot;"/>
                      <item value="&quot;WILDFIRE&quot;"/>
                    </enum>
                  </prop>
                  <prop type="@LogDestination_create" name="threatLogDestination" arg="$logSettings.threatLogDestination"/>
                  <prop type="@LogDestination_create" name="trafficLogDestination" arg="$logSettings.trafficLogDestination"/>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
  </commandGroup>
</CodeGen>
