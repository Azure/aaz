<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}/environmentdefinitions/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0vZW52aXJvbm1lbnREZWZpbml0aW9ucy97ZW52aXJvbm1lbnREZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin environment-definition">
    <command name="show" version="2024-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs/{}/environmentdefinitions/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dzL3tjYXRhbG9nTmFtZX0vZW52aXJvbm1lbnREZWZpbml0aW9ucy97ZW52aXJvbm1lbnREZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the catalog."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.environmentDefinitionName" options="environment-definition-name name n" required="True" group="" idPart="child_name_2">
          <help short="The name of the environment definition."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="EnvironmentDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="environmentDefinitionName" arg="$Path.environmentDefinitionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="description"/>
                    <prop readOnly="True" type="array<object>" name="parameters">
                      <item type="object">
                        <prop readOnly="True" type="string" name="description"/>
                        <prop readOnly="True" type="string" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="boolean" name="readOnly"/>
                        <prop readOnly="True" type="boolean" name="required"/>
                        <prop readOnly="True" type="string" name="type">
                          <enum>
                            <item value="&quot;array&quot;"/>
                            <item value="&quot;boolean&quot;"/>
                            <item value="&quot;integer&quot;"/>
                            <item value="&quot;number&quot;"/>
                            <item value="&quot;object&quot;"/>
                            <item value="&quot;string&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="templatePath"/>
                    <prop type="string" name="validationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
