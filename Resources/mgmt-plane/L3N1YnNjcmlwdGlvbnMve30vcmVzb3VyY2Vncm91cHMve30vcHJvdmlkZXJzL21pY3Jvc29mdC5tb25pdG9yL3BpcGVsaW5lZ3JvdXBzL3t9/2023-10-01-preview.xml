<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups/{}" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcy97cGlwZWxpbmVHcm91cE5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="monitor pipeline-group">
    <command name="show" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups/{}" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcy97cGlwZWxpbmVHcm91cE5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineGroupName" options="pipeline-group-name name n" required="True" idPart="name">
          <help short="The name of pipeline group. The name is case insensitive."/>
          <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PipelineGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/pipelineGroups/{pipelineGroupName}">
          <request method="get">
            <path>
              <param type="string" name="pipelineGroupName" arg="$Path.pipelineGroupName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/pipelineGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="exporters" required="True">
                      <item type="object">
                        <prop type="object" name="azureMonitorWorkspaceLogs">
                          <prop type="object" name="api" required="True">
                            <prop type="string" name="dataCollectionEndpointUrl" required="True">
                              <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                            </prop>
                            <prop type="string" name="dataCollectionRule" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                            </prop>
                            <prop type="object" name="schema" required="True">
                              <prop type="array<object>" name="recordMap" required="True">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="resourceMap">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="scopeMap">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="string" name="stream" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                            </prop>
                          </prop>
                          <prop type="object" name="cache">
                            <prop type="integer32" name="maxStorageUsage"/>
                            <prop type="integer32" name="retentionPeriod"/>
                          </prop>
                          <prop type="object" name="concurrency">
                            <prop type="integer32" name="batchQueueSize">
                              <default value="100"/>
                            </prop>
                            <prop type="integer32" name="workerCount">
                              <default value="4"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="tcp">
                          <prop type="string" name="url" required="True">
                            <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                          </prop>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="networkingConfigurations">
                      <item type="object">
                        <prop type="string" name="externalNetworkingMode" required="True">
                          <enum>
                            <item value="&quot;LoadBalancerOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="host">
                          <format pattern="^[a-zA-Z0-9-\.]+$"/>
                        </prop>
                        <prop type="array<object>" name="routes" required="True">
                          <item type="object">
                            <prop type="string" name="path">
                              <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                            </prop>
                            <prop type="integer32" name="port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                            <prop type="string" name="receiver" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="string" name="subdomain">
                              <format pattern="^[a-zA-Z0-9-\.]+$"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="processors" required="True">
                      <item type="object">
                        <prop type="object" name="batch">
                          <prop type="integer32" name="batchSize">
                            <default value="8192"/>
                            <format maximum="100000" minimum="10"/>
                          </prop>
                          <prop type="integer32" name="timeout">
                            <default value="200"/>
                            <format maximum="60000" minimum="10"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;Batch&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="receivers" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="otlp">
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                        </prop>
                        <prop type="object" name="syslog">
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="string" name="protocol">
                            <default value="&quot;rfc3164&quot;"/>
                            <enum>
                              <item value="&quot;rfc3164&quot;"/>
                              <item value="&quot;rfc5424&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;Ama&quot;"/>
                            <item value="&quot;OTLP&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                            <item value="&quot;Syslog&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="udp">
                          <prop type="string" name="encoding">
                            <default value="&quot;nop&quot;"/>
                            <enum>
                              <item value="&quot;ascii&quot;"/>
                              <item value="&quot;big5&quot;"/>
                              <item value="&quot;nop&quot;"/>
                              <item value="&quot;utf-16be&quot;"/>
                              <item value="&quot;utf-16le&quot;"/>
                              <item value="&quot;utf-8&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="integer32" name="readQueueLength">
                            <default value="1000"/>
                            <format maximum="100000" minimum="100"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="integer32" name="replicas"/>
                    <prop type="object" name="service" required="True">
                      <prop type="object" name="persistence">
                        <prop type="string" name="persistentVolumeName" required="True"/>
                      </prop>
                      <prop type="array<object>" name="pipelines" required="True">
                        <item type="object">
                          <prop type="array<string>" name="exporters" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" required="True">
                            <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                          </prop>
                          <prop type="array<string>" name="processors">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="receivers" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;logs&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-10-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups/{}" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcy97cGlwZWxpbmVHcm91cE5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineGroupName" options="pipeline-group-name name n" required="True" idPart="name">
          <help short="The name of pipeline group. The name is case insensitive."/>
          <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PipelineGroups_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/pipelineGroups/{pipelineGroupName}">
          <request method="delete">
            <path>
              <param type="string" name="pipelineGroupName" arg="$Path.pipelineGroupName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups/{}" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcy97cGlwZWxpbmVHcm91cE5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineGroupName" options="pipeline-group-name name n" required="True" idPart="name">
          <help short="The name of pipeline group. The name is case insensitive."/>
          <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$resource.properties.exporters" options="exporters" group="Properties">
          <help short="The exporters specified for a pipeline group instance."/>
          <item type="object">
            <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs" options="azure-monitor-workspace-logs">
              <help short="Azure Monitor Workspace Logs specific configurations."/>
              <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api" options="api" required="True">
                <help short="API configurations for Azure Monitor workspace exporter."/>
                <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionEndpointUrl" options="data-collection-endpoint-url" required="True">
                  <help short="Data collection endpoint ingestion url."/>
                  <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                </arg>
                <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionRule" options="data-collection-rule" required="True">
                  <help short="Data Collection Rule (DCR) immutable id."/>
                  <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                </arg>
                <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema" options="schema" required="True">
                  <help short="The schema mapping for incoming data."/>
                  <arg type="array<object>" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap" options="record-map" required="True">
                    <help short="Record Map."/>
                    <item type="object">
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].from" options="from" required="True">
                        <help short="Record Map Key."/>
                      </arg>
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].to" options="to" required="True">
                        <help short="Record Map Value."/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="array<object>" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap" options="resource-map">
                    <help short="Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container or an application running in the process."/>
                    <item type="object">
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].from" options="from" required="True">
                        <help short="Resource Map Key."/>
                      </arg>
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].to" options="to" required="True">
                        <help short="Resource Map Value."/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="array<object>" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap" options="scope-map">
                    <help short="A scope map is a logical unit of the application code with which the emitted telemetry can be associated."/>
                    <item type="object">
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].from" options="from" required="True">
                        <help short="Scope Map Key."/>
                      </arg>
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].to" options="to" required="True">
                        <help short="Scope Map Value."/>
                      </arg>
                    </item>
                  </arg>
                </arg>
                <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.stream" options="stream" required="True">
                  <help short="Stream name in destination. Azure Monitor stream is related to the destination table."/>
                  <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                </arg>
              </arg>
              <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache" options="cache">
                <help short="Cache configurations."/>
                <arg type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.maxStorageUsage" options="max-storage-usage">
                  <help short="Max storage usage in megabytes."/>
                </arg>
                <arg type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.retentionPeriod" options="retention-period">
                  <help short="Retention period in minutes."/>
                </arg>
              </arg>
              <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency" options="concurrency">
                <help short="Concurrency configuration for the exporter."/>
                <arg type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.batchQueueSize" options="batch-queue-size">
                  <help short="Size of the queue for log batches."/>
                  <default value="100"/>
                </arg>
                <arg type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.workerCount" options="worker-count">
                  <help short="Number of parallel workers processing the log queues."/>
                  <default value="4"/>
                </arg>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.exporters[].name" options="name" required="True">
              <help short="The name of exporter."/>
              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
            </arg>
            <arg type="object" var="$resource.properties.exporters[].tcp" options="tcp">
              <help short="TCP based exporter. Used for pipelineGroup exporter."/>
              <arg type="string" var="$resource.properties.exporters[].tcp.url" options="url" required="True">
                <help short="TCP url to export."/>
                <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.exporters[].type" options="type" required="True">
              <help short="The type of exporter."/>
              <enum>
                <item name="AzureMonitorWorkspaceLogs" value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                <item name="PipelineGroup" value="&quot;PipelineGroup&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$resource.properties.networkingConfigurations" options="network-config" group="Properties">
          <help short="Networking configurations for the pipeline group instance."/>
          <item type="object">
            <arg type="string" var="$resource.properties.networkingConfigurations[].externalNetworkingMode" options="external-networking-mode" required="True">
              <help short="External networking mode."/>
              <enum>
                <item name="LoadBalancerOnly" value="&quot;LoadBalancerOnly&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$resource.properties.networkingConfigurations[].host" options="host">
              <help short="The address exposed on the cluster. Example: azuremonitorpipeline.contoso.com."/>
              <format pattern="^[a-zA-Z0-9-\.]+$"/>
            </arg>
            <arg type="array<object>" var="$resource.properties.networkingConfigurations[].routes" options="routes" required="True">
              <help short="Networking routes configuration."/>
              <item type="object">
                <arg type="string" var="$resource.properties.networkingConfigurations[].routes[].path" options="path">
                  <help short="Route path."/>
                  <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                </arg>
                <arg type="integer32" var="$resource.properties.networkingConfigurations[].routes[].port" options="port">
                  <help short="The port that will be configured externally. If not specified, it will use the port from the receiver definition."/>
                  <format maximum="65535" minimum="1"/>
                </arg>
                <arg type="string" var="$resource.properties.networkingConfigurations[].routes[].receiver" options="receiver" required="True">
                  <help short="The name of the previously defined receiver."/>
                  <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                </arg>
                <arg type="string" var="$resource.properties.networkingConfigurations[].routes[].subdomain" options="subdomain">
                  <help short="Route subdomain."/>
                  <format pattern="^[a-zA-Z0-9-\.]+$"/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$resource.properties.processors" options="processors" group="Properties">
          <help short="The processors specified for a pipeline group instance."/>
          <item type="object">
            <arg type="object" var="$resource.properties.processors[].batch" options="batch">
              <help short="Batch processor configurations."/>
              <arg type="integer32" var="$resource.properties.processors[].batch.batchSize" options="batch-size">
                <help short="Size of the batch."/>
                <default value="8192"/>
                <format maximum="100000" minimum="10"/>
              </arg>
              <arg type="integer32" var="$resource.properties.processors[].batch.timeout" options="timeout">
                <help short="Timeout in milliseconds."/>
                <default value="200"/>
                <format maximum="60000" minimum="10"/>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.processors[].name" options="name" required="True">
              <help short="The name of processor."/>
              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
            </arg>
            <arg type="string" var="$resource.properties.processors[].type" options="type" required="True">
              <help short="The type of processor."/>
              <enum>
                <item name="Batch" value="&quot;Batch&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$resource.properties.receivers" options="receivers" group="Properties">
          <help short="The receivers specified for a pipeline group instance."/>
          <item type="object">
            <arg type="string" var="$resource.properties.receivers[].name" options="name" required="True">
              <help short="The name of receiver."/>
              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
            </arg>
            <arg type="object" var="$resource.properties.receivers[].otlp" options="otlp">
              <help short="OTLP receiver configurations. This field is mandatory for OTLP and pipelineGroup receivers."/>
              <arg type="string" var="$resource.properties.receivers[].otlp.endpoint" options="endpoint" required="True">
                <help short="OTLP GRPC endpoint definition. Example: 0.0.0.0:<port>."/>
                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
              </arg>
            </arg>
            <arg type="object" var="$resource.properties.receivers[].syslog" options="syslog">
              <help short="Syslog configurations. This field is mandatory for syslog type receivers."/>
              <arg type="string" var="$resource.properties.receivers[].syslog.endpoint" options="endpoint" required="True">
                <help short="Syslog receiver endpoint definition. Example: 0.0.0.0:<port>."/>
                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
              </arg>
              <arg type="string" var="$resource.properties.receivers[].syslog.protocol" options="protocol">
                <help short="Protocol to parse syslog messages. Default rfc3164"/>
                <default value="&quot;rfc3164&quot;"/>
                <enum>
                  <item name="rfc3164" value="&quot;rfc3164&quot;"/>
                  <item name="rfc5424" value="&quot;rfc5424&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.receivers[].type" options="type" required="True">
              <help short="The type of receiver."/>
              <enum>
                <item name="Ama" value="&quot;Ama&quot;"/>
                <item name="OTLP" value="&quot;OTLP&quot;"/>
                <item name="PipelineGroup" value="&quot;PipelineGroup&quot;"/>
                <item name="Syslog" value="&quot;Syslog&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$resource.properties.receivers[].udp" options="udp">
              <help short="UDP receiver configurations. This field is mandatory for UDP receivers."/>
              <arg type="string" var="$resource.properties.receivers[].udp.encoding" options="encoding">
                <help short="The encoding of the stream being received."/>
                <default value="&quot;nop&quot;"/>
                <enum>
                  <item name="ascii" value="&quot;ascii&quot;"/>
                  <item name="big5" value="&quot;big5&quot;"/>
                  <item name="nop" value="&quot;nop&quot;"/>
                  <item name="utf-16be" value="&quot;utf-16be&quot;"/>
                  <item name="utf-16le" value="&quot;utf-16le&quot;"/>
                  <item name="utf-8" value="&quot;utf-8&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$resource.properties.receivers[].udp.endpoint" options="endpoint" required="True">
                <help short="TCP endpoint definition. Example: 0.0.0.0:<port>."/>
                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
              </arg>
              <arg type="integer32" var="$resource.properties.receivers[].udp.readQueueLength" options="read-queue-length">
                <help short="Max read queue length."/>
                <default value="1000"/>
                <format maximum="100000" minimum="100"/>
              </arg>
            </arg>
          </item>
        </arg>
        <arg type="integer32" var="$resource.properties.replicas" options="replicas" group="Properties">
          <help short="Defines the amount of replicas of the pipeline group instance."/>
        </arg>
        <arg type="object" var="$resource.properties.service" options="service" group="Properties">
          <help short="The service section for a given pipeline group instance."/>
          <arg type="object" var="$resource.properties.service.persistence" options="persistence">
            <help short="Persistence options to all pipelines in the instance."/>
            <arg type="string" var="$resource.properties.service.persistence.persistentVolumeName" options="persistent-volume-name" required="True">
              <help short="The name of the mounted persistent volume."/>
            </arg>
          </arg>
          <arg type="array<object>" var="$resource.properties.service.pipelines" options="pipelines" required="True">
            <help short="Pipelines belonging to a given pipeline group."/>
            <item type="object">
              <arg type="array<string>" var="$resource.properties.service.pipelines[].exporters" options="exporters" required="True">
                <help short="Reference to exporters configured for the pipeline."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$resource.properties.service.pipelines[].name" options="name" required="True">
                <help short="Name of the pipeline."/>
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
              </arg>
              <arg type="array<string>" var="$resource.properties.service.pipelines[].processors" options="processors">
                <help short="Reference to processors configured for the pipeline."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$resource.properties.service.pipelines[].receivers" options="receivers" required="True">
                <help short="Reference to receivers configured for the pipeline."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$resource.properties.service.pipelines[].type" options="type" required="True">
                <help short="The type of pipeline"/>
                <enum>
                  <item name="logs" value="&quot;logs&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.extendedLocation" options="extended-location" group="Resource">
          <help short="The extended location for given pipeline group."/>
          <arg type="string" var="$resource.extendedLocation.name" options="name" required="True">
            <help short="The name of the extended location."/>
          </arg>
          <arg type="string" var="$resource.extendedLocation.type" options="type" required="True">
            <help short="The type of the extended location."/>
            <enum>
              <item name="CustomLocation" value="&quot;CustomLocation&quot;"/>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="PipelineGroups_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/pipelineGroups/{pipelineGroupName}">
          <request method="put">
            <path>
              <param type="string" name="pipelineGroupName" arg="$Path.pipelineGroupName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$resource.extendedLocation">
                    <prop type="string" name="name" arg="$resource.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$resource.extendedLocation.type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="exporters" arg="$resource.properties.exporters" required="True">
                      <item type="object">
                        <prop type="object" name="azureMonitorWorkspaceLogs" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs">
                          <prop type="object" name="api" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api" required="True">
                            <prop type="string" name="dataCollectionEndpointUrl" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionEndpointUrl" required="True">
                              <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                            </prop>
                            <prop type="string" name="dataCollectionRule" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionRule" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                            </prop>
                            <prop type="object" name="schema" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema" required="True">
                              <prop type="array<object>" name="recordMap" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap" required="True">
                                <item type="object">
                                  <prop type="string" name="from" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].from" required="True"/>
                                  <prop type="string" name="to" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="resourceMap" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap">
                                <item type="object">
                                  <prop type="string" name="from" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].from" required="True"/>
                                  <prop type="string" name="to" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="scopeMap" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap">
                                <item type="object">
                                  <prop type="string" name="from" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].from" required="True"/>
                                  <prop type="string" name="to" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].to" required="True"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="string" name="stream" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.stream" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                            </prop>
                          </prop>
                          <prop type="object" name="cache" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache">
                            <prop type="integer32" name="maxStorageUsage" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.maxStorageUsage"/>
                            <prop type="integer32" name="retentionPeriod" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.retentionPeriod"/>
                          </prop>
                          <prop type="object" name="concurrency" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency">
                            <prop type="integer32" name="batchQueueSize" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.batchQueueSize">
                              <default value="100"/>
                            </prop>
                            <prop type="integer32" name="workerCount" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.workerCount">
                              <default value="4"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="name" arg="$resource.properties.exporters[].name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="tcp" arg="$resource.properties.exporters[].tcp">
                          <prop type="string" name="url" arg="$resource.properties.exporters[].tcp.url" required="True">
                            <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                          </prop>
                        </prop>
                        <prop type="string" name="type" arg="$resource.properties.exporters[].type" required="True">
                          <enum>
                            <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="networkingConfigurations" arg="$resource.properties.networkingConfigurations">
                      <item type="object">
                        <prop type="string" name="externalNetworkingMode" arg="$resource.properties.networkingConfigurations[].externalNetworkingMode" required="True">
                          <enum>
                            <item value="&quot;LoadBalancerOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="host" arg="$resource.properties.networkingConfigurations[].host">
                          <format pattern="^[a-zA-Z0-9-\.]+$"/>
                        </prop>
                        <prop type="array<object>" name="routes" arg="$resource.properties.networkingConfigurations[].routes" required="True">
                          <item type="object">
                            <prop type="string" name="path" arg="$resource.properties.networkingConfigurations[].routes[].path">
                              <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                            </prop>
                            <prop type="integer32" name="port" arg="$resource.properties.networkingConfigurations[].routes[].port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                            <prop type="string" name="receiver" arg="$resource.properties.networkingConfigurations[].routes[].receiver" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="string" name="subdomain" arg="$resource.properties.networkingConfigurations[].routes[].subdomain">
                              <format pattern="^[a-zA-Z0-9-\.]+$"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="processors" arg="$resource.properties.processors" required="True">
                      <item type="object">
                        <prop type="object" name="batch" arg="$resource.properties.processors[].batch">
                          <prop type="integer32" name="batchSize" arg="$resource.properties.processors[].batch.batchSize">
                            <default value="8192"/>
                            <format maximum="100000" minimum="10"/>
                          </prop>
                          <prop type="integer32" name="timeout" arg="$resource.properties.processors[].batch.timeout">
                            <default value="200"/>
                            <format maximum="60000" minimum="10"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name" arg="$resource.properties.processors[].name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="string" name="type" arg="$resource.properties.processors[].type" required="True">
                          <enum>
                            <item value="&quot;Batch&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="receivers" arg="$resource.properties.receivers" required="True">
                      <item type="object">
                        <prop type="string" name="name" arg="$resource.properties.receivers[].name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="otlp" arg="$resource.properties.receivers[].otlp">
                          <prop type="string" name="endpoint" arg="$resource.properties.receivers[].otlp.endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                        </prop>
                        <prop type="object" name="syslog" arg="$resource.properties.receivers[].syslog">
                          <prop type="string" name="endpoint" arg="$resource.properties.receivers[].syslog.endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="string" name="protocol" arg="$resource.properties.receivers[].syslog.protocol">
                            <default value="&quot;rfc3164&quot;"/>
                            <enum>
                              <item value="&quot;rfc3164&quot;"/>
                              <item value="&quot;rfc5424&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="type" arg="$resource.properties.receivers[].type" required="True">
                          <enum>
                            <item value="&quot;Ama&quot;"/>
                            <item value="&quot;OTLP&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                            <item value="&quot;Syslog&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="udp" arg="$resource.properties.receivers[].udp">
                          <prop type="string" name="encoding" arg="$resource.properties.receivers[].udp.encoding">
                            <default value="&quot;nop&quot;"/>
                            <enum>
                              <item value="&quot;ascii&quot;"/>
                              <item value="&quot;big5&quot;"/>
                              <item value="&quot;nop&quot;"/>
                              <item value="&quot;utf-16be&quot;"/>
                              <item value="&quot;utf-16le&quot;"/>
                              <item value="&quot;utf-8&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="endpoint" arg="$resource.properties.receivers[].udp.endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="integer32" name="readQueueLength" arg="$resource.properties.receivers[].udp.readQueueLength">
                            <default value="1000"/>
                            <format maximum="100000" minimum="100"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="integer32" name="replicas" arg="$resource.properties.replicas"/>
                    <prop type="object" name="service" arg="$resource.properties.service" required="True">
                      <prop type="object" name="persistence" arg="$resource.properties.service.persistence">
                        <prop type="string" name="persistentVolumeName" arg="$resource.properties.service.persistence.persistentVolumeName" required="True"/>
                      </prop>
                      <prop type="array<object>" name="pipelines" arg="$resource.properties.service.pipelines" required="True">
                        <item type="object">
                          <prop type="array<string>" name="exporters" arg="$resource.properties.service.pipelines[].exporters" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" arg="$resource.properties.service.pipelines[].name" required="True">
                            <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                          </prop>
                          <prop type="array<string>" name="processors" arg="$resource.properties.service.pipelines[].processors">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="receivers" arg="$resource.properties.service.pipelines[].receivers" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="type" arg="$resource.properties.service.pipelines[].type" required="True">
                            <enum>
                              <item value="&quot;logs&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/pipelineGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="exporters" required="True">
                      <item type="object">
                        <prop type="object" name="azureMonitorWorkspaceLogs">
                          <prop type="object" name="api" required="True">
                            <prop type="string" name="dataCollectionEndpointUrl" required="True">
                              <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                            </prop>
                            <prop type="string" name="dataCollectionRule" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                            </prop>
                            <prop type="object" name="schema" required="True">
                              <prop type="array<object>" name="recordMap" required="True">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="resourceMap">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="scopeMap">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="string" name="stream" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                            </prop>
                          </prop>
                          <prop type="object" name="cache">
                            <prop type="integer32" name="maxStorageUsage"/>
                            <prop type="integer32" name="retentionPeriod"/>
                          </prop>
                          <prop type="object" name="concurrency">
                            <prop type="integer32" name="batchQueueSize">
                              <default value="100"/>
                            </prop>
                            <prop type="integer32" name="workerCount">
                              <default value="4"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="tcp">
                          <prop type="string" name="url" required="True">
                            <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                          </prop>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="networkingConfigurations">
                      <item type="object">
                        <prop type="string" name="externalNetworkingMode" required="True">
                          <enum>
                            <item value="&quot;LoadBalancerOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="host">
                          <format pattern="^[a-zA-Z0-9-\.]+$"/>
                        </prop>
                        <prop type="array<object>" name="routes" required="True">
                          <item type="object">
                            <prop type="string" name="path">
                              <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                            </prop>
                            <prop type="integer32" name="port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                            <prop type="string" name="receiver" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="string" name="subdomain">
                              <format pattern="^[a-zA-Z0-9-\.]+$"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="processors" required="True">
                      <item type="object">
                        <prop type="object" name="batch">
                          <prop type="integer32" name="batchSize">
                            <default value="8192"/>
                            <format maximum="100000" minimum="10"/>
                          </prop>
                          <prop type="integer32" name="timeout">
                            <default value="200"/>
                            <format maximum="60000" minimum="10"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;Batch&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="receivers" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="otlp">
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                        </prop>
                        <prop type="object" name="syslog">
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="string" name="protocol">
                            <default value="&quot;rfc3164&quot;"/>
                            <enum>
                              <item value="&quot;rfc3164&quot;"/>
                              <item value="&quot;rfc5424&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;Ama&quot;"/>
                            <item value="&quot;OTLP&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                            <item value="&quot;Syslog&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="udp">
                          <prop type="string" name="encoding">
                            <default value="&quot;nop&quot;"/>
                            <enum>
                              <item value="&quot;ascii&quot;"/>
                              <item value="&quot;big5&quot;"/>
                              <item value="&quot;nop&quot;"/>
                              <item value="&quot;utf-16be&quot;"/>
                              <item value="&quot;utf-16le&quot;"/>
                              <item value="&quot;utf-8&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="integer32" name="readQueueLength">
                            <default value="1000"/>
                            <format maximum="100000" minimum="100"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="integer32" name="replicas"/>
                    <prop type="object" name="service" required="True">
                      <prop type="object" name="persistence">
                        <prop type="string" name="persistentVolumeName" required="True"/>
                      </prop>
                      <prop type="array<object>" name="pipelines" required="True">
                        <item type="object">
                          <prop type="array<string>" name="exporters" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" required="True">
                            <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                          </prop>
                          <prop type="array<string>" name="processors">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="receivers" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;logs&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups/{}" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcy97cGlwZWxpbmVHcm91cE5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.pipelineGroupName" options="pipeline-group-name name n" required="True" idPart="name">
          <help short="The name of pipeline group. The name is case insensitive."/>
          <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$resource.properties.exporters" options="exporters" group="Properties">
          <help short="The exporters specified for a pipeline group instance."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs" options="azure-monitor-workspace-logs">
              <help short="Azure Monitor Workspace Logs specific configurations."/>
              <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api" options="api">
                <help short="API configurations for Azure Monitor workspace exporter."/>
                <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionEndpointUrl" options="data-collection-endpoint-url">
                  <help short="Data collection endpoint ingestion url."/>
                  <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                </arg>
                <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionRule" options="data-collection-rule">
                  <help short="Data Collection Rule (DCR) immutable id."/>
                  <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                </arg>
                <arg type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema" options="schema">
                  <help short="The schema mapping for incoming data."/>
                  <arg type="array<object>" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap" options="record-map">
                    <help short="Record Map."/>
                    <item nullable="True" type="object">
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].from" options="from">
                        <help short="Record Map Key."/>
                      </arg>
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].to" options="to">
                        <help short="Record Map Value."/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="array<object>" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap" options="resource-map">
                    <help short="Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container or an application running in the process."/>
                    <item nullable="True" type="object">
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].from" options="from">
                        <help short="Resource Map Key."/>
                      </arg>
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].to" options="to">
                        <help short="Resource Map Value."/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="array<object>" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap" options="scope-map">
                    <help short="A scope map is a logical unit of the application code with which the emitted telemetry can be associated."/>
                    <item nullable="True" type="object">
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].from" options="from">
                        <help short="Scope Map Key."/>
                      </arg>
                      <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].to" options="to">
                        <help short="Scope Map Value."/>
                      </arg>
                    </item>
                  </arg>
                </arg>
                <arg type="string" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.stream" options="stream">
                  <help short="Stream name in destination. Azure Monitor stream is related to the destination table."/>
                  <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache" options="cache">
                <help short="Cache configurations."/>
                <arg nullable="True" type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.maxStorageUsage" options="max-storage-usage">
                  <help short="Max storage usage in megabytes."/>
                </arg>
                <arg nullable="True" type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.retentionPeriod" options="retention-period">
                  <help short="Retention period in minutes."/>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency" options="concurrency">
                <help short="Concurrency configuration for the exporter."/>
                <arg nullable="True" type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.batchQueueSize" options="batch-queue-size">
                  <help short="Size of the queue for log batches."/>
                </arg>
                <arg nullable="True" type="integer32" var="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.workerCount" options="worker-count">
                  <help short="Number of parallel workers processing the log queues."/>
                </arg>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.exporters[].name" options="name">
              <help short="The name of exporter."/>
              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.exporters[].tcp" options="tcp">
              <help short="TCP based exporter. Used for pipelineGroup exporter."/>
              <arg type="string" var="$resource.properties.exporters[].tcp.url" options="url">
                <help short="TCP url to export."/>
                <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.exporters[].type" options="type">
              <help short="The type of exporter."/>
              <enum>
                <item name="AzureMonitorWorkspaceLogs" value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                <item name="PipelineGroup" value="&quot;PipelineGroup&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$resource.properties.networkingConfigurations" options="network-config" group="Properties">
          <help short="Networking configurations for the pipeline group instance."/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.networkingConfigurations[].externalNetworkingMode" options="external-networking-mode">
              <help short="External networking mode."/>
              <enum>
                <item name="LoadBalancerOnly" value="&quot;LoadBalancerOnly&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$resource.properties.networkingConfigurations[].host" options="host">
              <help short="The address exposed on the cluster. Example: azuremonitorpipeline.contoso.com."/>
              <format pattern="^[a-zA-Z0-9-\.]+$"/>
            </arg>
            <arg type="array<object>" var="$resource.properties.networkingConfigurations[].routes" options="routes">
              <help short="Networking routes configuration."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$resource.properties.networkingConfigurations[].routes[].path" options="path">
                  <help short="Route path."/>
                  <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                </arg>
                <arg nullable="True" type="integer32" var="$resource.properties.networkingConfigurations[].routes[].port" options="port">
                  <help short="The port that will be configured externally. If not specified, it will use the port from the receiver definition."/>
                  <format maximum="65535" minimum="1"/>
                </arg>
                <arg type="string" var="$resource.properties.networkingConfigurations[].routes[].receiver" options="receiver">
                  <help short="The name of the previously defined receiver."/>
                  <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                </arg>
                <arg nullable="True" type="string" var="$resource.properties.networkingConfigurations[].routes[].subdomain" options="subdomain">
                  <help short="Route subdomain."/>
                  <format pattern="^[a-zA-Z0-9-\.]+$"/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$resource.properties.processors" options="processors" group="Properties">
          <help short="The processors specified for a pipeline group instance."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="object" var="$resource.properties.processors[].batch" options="batch">
              <help short="Batch processor configurations."/>
              <arg nullable="True" type="integer32" var="$resource.properties.processors[].batch.batchSize" options="batch-size">
                <help short="Size of the batch."/>
                <format maximum="100000" minimum="10"/>
              </arg>
              <arg nullable="True" type="integer32" var="$resource.properties.processors[].batch.timeout" options="timeout">
                <help short="Timeout in milliseconds."/>
                <format maximum="60000" minimum="10"/>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.processors[].name" options="name">
              <help short="The name of processor."/>
              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
            </arg>
            <arg type="string" var="$resource.properties.processors[].type" options="type">
              <help short="The type of processor."/>
              <enum>
                <item name="Batch" value="&quot;Batch&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$resource.properties.receivers" options="receivers" group="Properties">
          <help short="The receivers specified for a pipeline group instance."/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.receivers[].name" options="name">
              <help short="The name of receiver."/>
              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.receivers[].otlp" options="otlp">
              <help short="OTLP receiver configurations. This field is mandatory for OTLP and pipelineGroup receivers."/>
              <arg type="string" var="$resource.properties.receivers[].otlp.endpoint" options="endpoint">
                <help short="OTLP GRPC endpoint definition. Example: 0.0.0.0:<port>."/>
                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.receivers[].syslog" options="syslog">
              <help short="Syslog configurations. This field is mandatory for syslog type receivers."/>
              <arg type="string" var="$resource.properties.receivers[].syslog.endpoint" options="endpoint">
                <help short="Syslog receiver endpoint definition. Example: 0.0.0.0:<port>."/>
                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
              </arg>
              <arg nullable="True" type="string" var="$resource.properties.receivers[].syslog.protocol" options="protocol">
                <help short="Protocol to parse syslog messages. Default rfc3164"/>
                <enum>
                  <item name="rfc3164" value="&quot;rfc3164&quot;"/>
                  <item name="rfc5424" value="&quot;rfc5424&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.receivers[].type" options="type">
              <help short="The type of receiver."/>
              <enum>
                <item name="Ama" value="&quot;Ama&quot;"/>
                <item name="OTLP" value="&quot;OTLP&quot;"/>
                <item name="PipelineGroup" value="&quot;PipelineGroup&quot;"/>
                <item name="Syslog" value="&quot;Syslog&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.receivers[].udp" options="udp">
              <help short="UDP receiver configurations. This field is mandatory for UDP receivers."/>
              <arg nullable="True" type="string" var="$resource.properties.receivers[].udp.encoding" options="encoding">
                <help short="The encoding of the stream being received."/>
                <enum>
                  <item name="ascii" value="&quot;ascii&quot;"/>
                  <item name="big5" value="&quot;big5&quot;"/>
                  <item name="nop" value="&quot;nop&quot;"/>
                  <item name="utf-16be" value="&quot;utf-16be&quot;"/>
                  <item name="utf-16le" value="&quot;utf-16le&quot;"/>
                  <item name="utf-8" value="&quot;utf-8&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$resource.properties.receivers[].udp.endpoint" options="endpoint">
                <help short="TCP endpoint definition. Example: 0.0.0.0:<port>."/>
                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
              </arg>
              <arg nullable="True" type="integer32" var="$resource.properties.receivers[].udp.readQueueLength" options="read-queue-length">
                <help short="Max read queue length."/>
                <format maximum="100000" minimum="100"/>
              </arg>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="integer32" var="$resource.properties.replicas" options="replicas" group="Properties">
          <help short="Defines the amount of replicas of the pipeline group instance."/>
        </arg>
        <arg type="object" var="$resource.properties.service" options="service" group="Properties">
          <help short="The service section for a given pipeline group instance."/>
          <arg nullable="True" type="object" var="$resource.properties.service.persistence" options="persistence">
            <help short="Persistence options to all pipelines in the instance."/>
            <arg type="string" var="$resource.properties.service.persistence.persistentVolumeName" options="persistent-volume-name">
              <help short="The name of the mounted persistent volume."/>
            </arg>
          </arg>
          <arg type="array<object>" var="$resource.properties.service.pipelines" options="pipelines">
            <help short="Pipelines belonging to a given pipeline group."/>
            <item nullable="True" type="object">
              <arg type="array<string>" var="$resource.properties.service.pipelines[].exporters" options="exporters">
                <help short="Reference to exporters configured for the pipeline."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg type="string" var="$resource.properties.service.pipelines[].name" options="name">
                <help short="Name of the pipeline."/>
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
              </arg>
              <arg nullable="True" type="array<string>" var="$resource.properties.service.pipelines[].processors" options="processors">
                <help short="Reference to processors configured for the pipeline."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg type="array<string>" var="$resource.properties.service.pipelines[].receivers" options="receivers">
                <help short="Reference to receivers configured for the pipeline."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg type="string" var="$resource.properties.service.pipelines[].type" options="type">
                <help short="The type of pipeline"/>
                <enum>
                  <item name="logs" value="&quot;logs&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="PipelineGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/pipelineGroups/{pipelineGroupName}">
          <request method="get">
            <path>
              <param type="string" name="pipelineGroupName" arg="$Path.pipelineGroupName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PipelineGroup_read">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/pipelineGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="exporters" required="True">
                      <item type="object">
                        <prop type="object" name="azureMonitorWorkspaceLogs">
                          <prop type="object" name="api" required="True">
                            <prop type="string" name="dataCollectionEndpointUrl" required="True">
                              <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                            </prop>
                            <prop type="string" name="dataCollectionRule" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                            </prop>
                            <prop type="object" name="schema" required="True">
                              <prop type="array<object>" name="recordMap" required="True">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="resourceMap">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                              <prop type="array<object>" name="scopeMap">
                                <item type="object">
                                  <prop type="string" name="from" required="True"/>
                                  <prop type="string" name="to" required="True"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="string" name="stream" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                            </prop>
                          </prop>
                          <prop type="object" name="cache">
                            <prop type="integer32" name="maxStorageUsage"/>
                            <prop type="integer32" name="retentionPeriod"/>
                          </prop>
                          <prop type="object" name="concurrency">
                            <prop type="integer32" name="batchQueueSize">
                              <default value="100"/>
                            </prop>
                            <prop type="integer32" name="workerCount">
                              <default value="4"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="tcp">
                          <prop type="string" name="url" required="True">
                            <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                          </prop>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="networkingConfigurations">
                      <item type="object">
                        <prop type="string" name="externalNetworkingMode" required="True">
                          <enum>
                            <item value="&quot;LoadBalancerOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="host">
                          <format pattern="^[a-zA-Z0-9-\.]+$"/>
                        </prop>
                        <prop type="array<object>" name="routes" required="True">
                          <item type="object">
                            <prop type="string" name="path">
                              <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                            </prop>
                            <prop type="integer32" name="port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                            <prop type="string" name="receiver" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="string" name="subdomain">
                              <format pattern="^[a-zA-Z0-9-\.]+$"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="processors" required="True">
                      <item type="object">
                        <prop type="object" name="batch">
                          <prop type="integer32" name="batchSize">
                            <default value="8192"/>
                            <format maximum="100000" minimum="10"/>
                          </prop>
                          <prop type="integer32" name="timeout">
                            <default value="200"/>
                            <format maximum="60000" minimum="10"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;Batch&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="receivers" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="object" name="otlp">
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                        </prop>
                        <prop type="object" name="syslog">
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="string" name="protocol">
                            <default value="&quot;rfc3164&quot;"/>
                            <enum>
                              <item value="&quot;rfc3164&quot;"/>
                              <item value="&quot;rfc5424&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;Ama&quot;"/>
                            <item value="&quot;OTLP&quot;"/>
                            <item value="&quot;PipelineGroup&quot;"/>
                            <item value="&quot;Syslog&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="udp">
                          <prop type="string" name="encoding">
                            <default value="&quot;nop&quot;"/>
                            <enum>
                              <item value="&quot;ascii&quot;"/>
                              <item value="&quot;big5&quot;"/>
                              <item value="&quot;nop&quot;"/>
                              <item value="&quot;utf-16be&quot;"/>
                              <item value="&quot;utf-16le&quot;"/>
                              <item value="&quot;utf-8&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="endpoint" required="True">
                            <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                          </prop>
                          <prop type="integer32" name="readQueueLength">
                            <default value="1000"/>
                            <format maximum="100000" minimum="100"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="integer32" name="replicas"/>
                    <prop type="object" name="service" required="True">
                      <prop type="object" name="persistence">
                        <prop type="string" name="persistentVolumeName" required="True"/>
                      </prop>
                      <prop type="array<object>" name="pipelines" required="True">
                        <item type="object">
                          <prop type="array<string>" name="exporters" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" required="True">
                            <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                          </prop>
                          <prop type="array<string>" name="processors">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="receivers" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;logs&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<object>" name="exporters" arg="$resource.properties.exporters" required="True">
                  <item type="object">
                    <prop type="object" name="azureMonitorWorkspaceLogs" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs">
                      <prop type="object" name="api" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api" required="True">
                        <prop type="string" name="dataCollectionEndpointUrl" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionEndpointUrl" required="True">
                          <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                        </prop>
                        <prop type="string" name="dataCollectionRule" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.dataCollectionRule" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                        </prop>
                        <prop type="object" name="schema" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema" required="True">
                          <prop type="array<object>" name="recordMap" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap" required="True">
                            <item type="object">
                              <prop type="string" name="from" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].from" required="True"/>
                              <prop type="string" name="to" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.recordMap[].to" required="True"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="resourceMap" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap">
                            <item type="object">
                              <prop type="string" name="from" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].from" required="True"/>
                              <prop type="string" name="to" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.resourceMap[].to" required="True"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="scopeMap" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap">
                            <item type="object">
                              <prop type="string" name="from" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].from" required="True"/>
                              <prop type="string" name="to" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.schema.scopeMap[].to" required="True"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="string" name="stream" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.api.stream" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                        </prop>
                      </prop>
                      <prop type="object" name="cache" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache">
                        <prop type="integer32" name="maxStorageUsage" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.maxStorageUsage"/>
                        <prop type="integer32" name="retentionPeriod" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.cache.retentionPeriod"/>
                      </prop>
                      <prop type="object" name="concurrency" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency">
                        <prop type="integer32" name="batchQueueSize" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.batchQueueSize">
                          <default value="100"/>
                        </prop>
                        <prop type="integer32" name="workerCount" arg="$resource.properties.exporters[].azureMonitorWorkspaceLogs.concurrency.workerCount">
                          <default value="4"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="name" arg="$resource.properties.exporters[].name" required="True">
                      <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                    </prop>
                    <prop type="object" name="tcp" arg="$resource.properties.exporters[].tcp">
                      <prop type="string" name="url" arg="$resource.properties.exporters[].tcp.url" required="True">
                        <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                      </prop>
                    </prop>
                    <prop type="string" name="type" arg="$resource.properties.exporters[].type" required="True">
                      <enum>
                        <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                        <item value="&quot;PipelineGroup&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="networkingConfigurations" arg="$resource.properties.networkingConfigurations">
                  <item type="object">
                    <prop type="string" name="externalNetworkingMode" arg="$resource.properties.networkingConfigurations[].externalNetworkingMode" required="True">
                      <enum>
                        <item value="&quot;LoadBalancerOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="host" arg="$resource.properties.networkingConfigurations[].host">
                      <format pattern="^[a-zA-Z0-9-\.]+$"/>
                    </prop>
                    <prop type="array<object>" name="routes" arg="$resource.properties.networkingConfigurations[].routes" required="True">
                      <item type="object">
                        <prop type="string" name="path" arg="$resource.properties.networkingConfigurations[].routes[].path">
                          <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                        </prop>
                        <prop type="integer32" name="port" arg="$resource.properties.networkingConfigurations[].routes[].port">
                          <format maximum="65535" minimum="1"/>
                        </prop>
                        <prop type="string" name="receiver" arg="$resource.properties.networkingConfigurations[].routes[].receiver" required="True">
                          <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                        </prop>
                        <prop type="string" name="subdomain" arg="$resource.properties.networkingConfigurations[].routes[].subdomain">
                          <format pattern="^[a-zA-Z0-9-\.]+$"/>
                        </prop>
                      </item>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="processors" arg="$resource.properties.processors" required="True">
                  <item type="object">
                    <prop type="object" name="batch" arg="$resource.properties.processors[].batch">
                      <prop type="integer32" name="batchSize" arg="$resource.properties.processors[].batch.batchSize">
                        <default value="8192"/>
                        <format maximum="100000" minimum="10"/>
                      </prop>
                      <prop type="integer32" name="timeout" arg="$resource.properties.processors[].batch.timeout">
                        <default value="200"/>
                        <format maximum="60000" minimum="10"/>
                      </prop>
                    </prop>
                    <prop type="string" name="name" arg="$resource.properties.processors[].name" required="True">
                      <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                    </prop>
                    <prop type="string" name="type" arg="$resource.properties.processors[].type" required="True">
                      <enum>
                        <item value="&quot;Batch&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="receivers" arg="$resource.properties.receivers" required="True">
                  <item type="object">
                    <prop type="string" name="name" arg="$resource.properties.receivers[].name" required="True">
                      <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                    </prop>
                    <prop type="object" name="otlp" arg="$resource.properties.receivers[].otlp">
                      <prop type="string" name="endpoint" arg="$resource.properties.receivers[].otlp.endpoint" required="True">
                        <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                      </prop>
                    </prop>
                    <prop type="object" name="syslog" arg="$resource.properties.receivers[].syslog">
                      <prop type="string" name="endpoint" arg="$resource.properties.receivers[].syslog.endpoint" required="True">
                        <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                      </prop>
                      <prop type="string" name="protocol" arg="$resource.properties.receivers[].syslog.protocol">
                        <default value="&quot;rfc3164&quot;"/>
                        <enum>
                          <item value="&quot;rfc3164&quot;"/>
                          <item value="&quot;rfc5424&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="type" arg="$resource.properties.receivers[].type" required="True">
                      <enum>
                        <item value="&quot;Ama&quot;"/>
                        <item value="&quot;OTLP&quot;"/>
                        <item value="&quot;PipelineGroup&quot;"/>
                        <item value="&quot;Syslog&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="udp" arg="$resource.properties.receivers[].udp">
                      <prop type="string" name="encoding" arg="$resource.properties.receivers[].udp.encoding">
                        <default value="&quot;nop&quot;"/>
                        <enum>
                          <item value="&quot;ascii&quot;"/>
                          <item value="&quot;big5&quot;"/>
                          <item value="&quot;nop&quot;"/>
                          <item value="&quot;utf-16be&quot;"/>
                          <item value="&quot;utf-16le&quot;"/>
                          <item value="&quot;utf-8&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="endpoint" arg="$resource.properties.receivers[].udp.endpoint" required="True">
                        <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                      </prop>
                      <prop type="integer32" name="readQueueLength" arg="$resource.properties.receivers[].udp.readQueueLength">
                        <default value="1000"/>
                        <format maximum="100000" minimum="100"/>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="integer32" name="replicas" arg="$resource.properties.replicas"/>
                <prop type="object" name="service" arg="$resource.properties.service" required="True">
                  <prop type="object" name="persistence" arg="$resource.properties.service.persistence">
                    <prop type="string" name="persistentVolumeName" arg="$resource.properties.service.persistence.persistentVolumeName" required="True"/>
                  </prop>
                  <prop type="array<object>" name="pipelines" arg="$resource.properties.service.pipelines" required="True">
                    <item type="object">
                      <prop type="array<string>" name="exporters" arg="$resource.properties.service.pipelines[].exporters" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="name" arg="$resource.properties.service.pipelines[].name" required="True">
                        <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                      </prop>
                      <prop type="array<string>" name="processors" arg="$resource.properties.service.pipelines[].processors">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="receivers" arg="$resource.properties.service.pipelines[].receivers" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="type" arg="$resource.properties.service.pipelines[].type" required="True">
                        <enum>
                          <item value="&quot;logs&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="PipelineGroups_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/pipelineGroups/{pipelineGroupName}">
          <request method="put">
            <path>
              <param type="string" name="pipelineGroupName" arg="$Path.pipelineGroupName" required="True">
                <format pattern="^(?!-)[a-zA-Z0-9-]{3,10}[^-]$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@PipelineGroup_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
