<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}/moveresources" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0vbW92ZVJlc291cmNlcw==/V/MjAyMy0wOC0wMQ=="/>
  <commandGroup name="resource-mover move-resource">
    <command name="list" version="2023-08-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.migrate/movecollections/{}/moveresources" version="2023-08-01" swagger="mgmt-plane/resourcemover/ResourceProviders/Microsoft.Migrate/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWlncmF0ZS9tb3ZlQ29sbGVjdGlvbnMve21vdmVDb2xsZWN0aW9uTmFtZX0vbW92ZVJlc291cmNlcw==/V/MjAyMy0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.moveCollectionName" options="move-collection-name name n" required="True" group="" idPart="name">
          <help short="The Move Collection Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="The filter to apply on the operation. For example, you can use $filter=Properties/ProvisioningState eq 'Succeeded'."/>
        </arg>
      </argGroup>
      <operation operationId="MoveResources_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/moveResources">
          <request method="get">
            <path>
              <param type="string" name="moveCollectionName" arg="$Path.moveCollectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="object" name="summaryCollection">
                    <prop type="string" name="fieldName"/>
                    <prop type="array<object>" name="summary" identifiers="item">
                      <item type="object">
                        <prop type="integer32" name="count"/>
                        <prop type="string" name="item"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="integer64" name="totalCount"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Migrate/moveCollections/{}/moveResources/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop readOnly="True" type="array<object>" name="dependsOn">
                          <item type="object">
                            <prop type="object" name="automaticResolution">
                              <prop type="string" name="moveResourceId"/>
                            </prop>
                            <prop type="string" name="dependencyType">
                              <enum>
                                <item value="&quot;RequiredForMove&quot;"/>
                                <item value="&quot;RequiredForPrepare&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="id"/>
                            <prop type="string" name="isOptional"/>
                            <prop type="object" name="manualResolution">
                              <prop type="string" name="targetId"/>
                            </prop>
                            <prop type="string" name="resolutionStatus"/>
                            <prop type="string" name="resolutionType">
                              <enum>
                                <item value="&quot;Automatic&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="dependsOnOverrides">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="targetId"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="object" name="errors">
                          <prop type="@MoveResourceErrorBody_read" name="properties"/>
                        </prop>
                        <prop type="string" name="existingTargetId"/>
                        <prop readOnly="True" type="boolean" name="isResolveRequired"/>
                        <prop readOnly="True" type="object" name="moveStatus">
                          <prop type="object" name="errors">
                            <prop type="object" name="properties" cls="MoveResourceErrorBody_read">
                              <prop readOnly="True" type="string" name="code"/>
                              <prop readOnly="True" type="array<@MoveResourceErrorBody_read>" name="details">
                                <item type="@MoveResourceErrorBody_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="message"/>
                              <prop readOnly="True" type="string" name="target"/>
                            </prop>
                          </prop>
                          <prop type="object" name="jobStatus">
                            <prop readOnly="True" type="string" name="jobName">
                              <enum>
                                <item value="&quot;InitialSync&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="jobProgress"/>
                          </prop>
                          <prop readOnly="True" type="string" name="moveState">
                            <enum>
                              <item value="&quot;AssignmentPending&quot;"/>
                              <item value="&quot;CommitFailed&quot;"/>
                              <item value="&quot;CommitInProgress&quot;"/>
                              <item value="&quot;CommitPending&quot;"/>
                              <item value="&quot;Committed&quot;"/>
                              <item value="&quot;DeleteSourcePending&quot;"/>
                              <item value="&quot;DiscardFailed&quot;"/>
                              <item value="&quot;DiscardInProgress&quot;"/>
                              <item value="&quot;MoveFailed&quot;"/>
                              <item value="&quot;MoveInProgress&quot;"/>
                              <item value="&quot;MovePending&quot;"/>
                              <item value="&quot;PrepareFailed&quot;"/>
                              <item value="&quot;PrepareInProgress&quot;"/>
                              <item value="&quot;PreparePending&quot;"/>
                              <item value="&quot;ResourceMoveCompleted&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="resourceSettings" cls="ResourceSettings_read">
                          <prop type="string" name="resourceType" required="True">
                            <enum>
                              <item value="&quot;Microsoft.Compute/availabilitySets&quot;"/>
                              <item value="&quot;Microsoft.Compute/diskEncryptionSets&quot;"/>
                              <item value="&quot;Microsoft.Compute/virtualMachines&quot;"/>
                              <item value="&quot;Microsoft.KeyVault/vaults&quot;"/>
                              <item value="&quot;Microsoft.Network/loadBalancers&quot;"/>
                              <item value="&quot;Microsoft.Network/networkInterfaces&quot;"/>
                              <item value="&quot;Microsoft.Network/networkSecurityGroups&quot;"/>
                              <item value="&quot;Microsoft.Network/publicIPAddresses&quot;"/>
                              <item value="&quot;Microsoft.Network/virtualNetworks&quot;"/>
                              <item value="&quot;Microsoft.Sql/servers&quot;"/>
                              <item value="&quot;Microsoft.Sql/servers/databases&quot;"/>
                              <item value="&quot;Microsoft.Sql/servers/elasticPools&quot;"/>
                              <item value="&quot;resourceGroups&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="targetResourceGroupName"/>
                          <prop type="string" name="targetResourceName"/>
                          <discriminator property="resourceType" value="Microsoft.Compute/availabilitySets">
                            <prop nullable="True" type="integer32" name="faultDomain">
                              <format minimum="1"/>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop nullable="True" type="integer32" name="updateDomain">
                              <format maximum="20" minimum="1"/>
                            </prop>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Compute/virtualMachines">
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="targetAvailabilitySetId"/>
                            <prop type="string" name="targetAvailabilityZone">
                              <enum>
                                <item value="&quot;1&quot;"/>
                                <item value="&quot;2&quot;"/>
                                <item value="&quot;3&quot;"/>
                                <item value="&quot;NA&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="targetVmSize"/>
                            <prop type="array<string>" name="userManagedIdentities">
                              <item type="string"/>
                            </prop>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Network/loadBalancers">
                            <prop type="array<object>" name="backendAddressPools" identifiers="name">
                              <item type="object">
                                <prop type="string" name="name"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="frontendIPConfigurations">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="string" name="privateIpAddress"/>
                                <prop type="string" name="privateIpAllocationMethod"/>
                                <prop type="@SubnetReference_read" name="subnet"/>
                                <prop type="string" name="zones"/>
                              </item>
                            </prop>
                            <prop type="string" name="sku"/>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="zones"/>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Network/networkInterfaces">
                            <prop nullable="True" type="boolean" name="enableAcceleratedNetworking"/>
                            <prop type="array<object>" name="ipConfigurations" identifiers="name">
                              <item type="object">
                                <prop type="array<object>" name="loadBalancerBackendAddressPools" identifiers="sourceArmResourceId">
                                  <item type="object">
                                    <prop type="string" name="name"/>
                                    <prop type="string" name="sourceArmResourceId" required="True"/>
                                  </item>
                                </prop>
                                <prop type="array<object>" name="loadBalancerNatRules" identifiers="sourceArmResourceId">
                                  <item type="object">
                                    <prop type="string" name="name"/>
                                    <prop type="string" name="sourceArmResourceId" required="True"/>
                                  </item>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="boolean" name="primary"/>
                                <prop type="string" name="privateIpAddress"/>
                                <prop type="string" name="privateIpAllocationMethod"/>
                                <prop type="object" name="publicIp">
                                  <prop type="string" name="sourceArmResourceId" required="True"/>
                                </prop>
                                <prop type="object" name="subnet" cls="SubnetReference_read">
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="sourceArmResourceId" required="True"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Network/networkSecurityGroups">
                            <prop type="array<object>" name="securityRules" identifiers="name">
                              <item type="object">
                                <prop type="string" name="access"/>
                                <prop type="string" name="description"/>
                                <prop type="string" name="destinationAddressPrefix"/>
                                <prop type="string" name="destinationPortRange"/>
                                <prop type="string" name="direction"/>
                                <prop type="string" name="name"/>
                                <prop type="integer32" name="priority"/>
                                <prop type="string" name="protocol"/>
                                <prop type="string" name="sourceAddressPrefix"/>
                                <prop type="string" name="sourcePortRange"/>
                              </item>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Network/publicIPAddresses">
                            <prop type="string" name="domainNameLabel"/>
                            <prop type="string" name="fqdn"/>
                            <prop type="string" name="publicIpAllocationMethod"/>
                            <prop type="string" name="sku"/>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="zones"/>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Network/virtualNetworks">
                            <prop type="array<string>" name="addressSpace">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="dnsServers">
                              <item type="string"/>
                            </prop>
                            <prop nullable="True" type="boolean" name="enableDdosProtection"/>
                            <prop type="array<object>" name="subnets">
                              <item type="object">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="networkSecurityGroup">
                                  <prop type="string" name="sourceArmResourceId" required="True"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Sql/servers/databases">
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="zoneRedundant">
                              <enum>
                                <item value="&quot;Disable&quot;"/>
                                <item value="&quot;Enable&quot;"/>
                              </enum>
                            </prop>
                          </discriminator>
                          <discriminator property="resourceType" value="Microsoft.Sql/servers/elasticPools">
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="zoneRedundant">
                              <enum>
                                <item value="&quot;Disable&quot;"/>
                                <item value="&quot;Enable&quot;"/>
                              </enum>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="string" name="sourceId" required="True"/>
                        <prop readOnly="True" type="@ResourceSettings_read" name="sourceResourceSettings"/>
                        <prop readOnly="True" type="string" name="targetId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
