<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.alertsmanagement/prometheusrulegroups/{}" version="2023-03-01" swagger="mgmt-plane/alertsmanagement/ResourceProviders/Microsoft.AlertsManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQWxlcnRzTWFuYWdlbWVudC9wcm9tZXRoZXVzUnVsZUdyb3Vwcy97cnVsZUdyb3VwTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
  <commandGroup name="alerts-management prometheus-rule-group">
    <command name="show" version="2023-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.alertsmanagement/prometheusrulegroups/{}" version="2023-03-01" swagger="mgmt-plane/alertsmanagement/ResourceProviders/Microsoft.AlertsManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQWxlcnRzTWFuYWdlbWVudC9wcm9tZXRoZXVzUnVsZUdyb3Vwcy97cnVsZUdyb3VwTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the rule group."/>
          <format pattern="^[^:@/#{}%&+*<>?]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PrometheusRuleGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{ruleGroupName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleGroupName" arg="$Path.ruleGroupName" required="True">
                <format pattern="^[^:@/#{}%&+*<>?]+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="clusterName"/>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled"/>
                    <prop type="duration" name="interval"/>
                    <prop type="array<object>" name="rules" required="True">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="string" name="actionGroupId"/>
                            <prop type="object" name="actionProperties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="alert"/>
                        <prop type="object" name="annotations">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="expression" required="True"/>
                        <prop type="duration" name="for"/>
                        <prop type="object" name="labels">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="string" name="record"/>
                        <prop type="object" name="resolveConfiguration">
                          <prop type="boolean" name="autoResolved"/>
                          <prop type="duration" name="timeToResolve"/>
                        </prop>
                        <prop type="integer32" name="severity"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.alertsmanagement/prometheusrulegroups/{}" version="2023-03-01" swagger="mgmt-plane/alertsmanagement/ResourceProviders/Microsoft.AlertsManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQWxlcnRzTWFuYWdlbWVudC9wcm9tZXRoZXVzUnVsZUdyb3Vwcy97cnVsZUdyb3VwTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the rule group."/>
          <format pattern="^[^:@/#{}%&+*<>?]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PrometheusRuleGroups_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{ruleGroupName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleGroupName" arg="$Path.ruleGroupName" required="True">
                <format pattern="^[^:@/#{}%&+*<>?]+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.alertsmanagement/prometheusrulegroups/{}" version="2023-03-01" swagger="mgmt-plane/alertsmanagement/ResourceProviders/Microsoft.AlertsManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQWxlcnRzTWFuYWdlbWVudC9wcm9tZXRoZXVzUnVsZUdyb3Vwcy97cnVsZUdyb3VwTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the rule group."/>
          <format pattern="^[^:@/#{}%&+*<>?]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.clusterName" options="cluster-name" group="Properties">
          <help short="Apply rule to data from a specific cluster."/>
        </arg>
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Rule group description."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" group="Properties">
          <help short="Enable/disable rule group."/>
        </arg>
        <arg type="duration" var="$parameters.properties.interval" options="interval" group="Properties">
          <help short="The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.rules" options="rules" required="True" group="Properties">
          <help short="Defines the rules in the Prometheus rule group."/>
          <item type="object">
            <arg type="array<object>" var="$parameters.properties.rules[].actions" options="actions">
              <help short="Actions that are performed when the alert rule becomes active, and when an alert condition is resolved."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.rules[].actions[].actionGroupId" options="action-group-id">
                  <help short="The resource id of the action group to use."/>
                </arg>
                <arg type="object" var="$parameters.properties.rules[].actions[].actionProperties" options="action-properties">
                  <help short="The properties of an action group object."/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.rules[].alert" options="alert">
              <help short="Alert rule name."/>
            </arg>
            <arg type="object" var="$parameters.properties.rules[].annotations" options="annotations">
              <help short="The annotations clause specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links. The annotation values can be templated."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
            <arg type="boolean" var="$parameters.properties.rules[].enabled" options="enabled">
              <help short="Enable/disable rule."/>
            </arg>
            <arg type="string" var="$parameters.properties.rules[].expression" options="expression" required="True">
              <help short="The PromQL expression to evaluate. https://prometheus.io/docs/prometheus/latest/querying/basics/. Evaluated periodically as given by 'interval', and the result recorded as a new set of time series with the metric name as given by 'record'."/>
            </arg>
            <arg type="duration" var="$parameters.properties.rules[].for" options="for">
              <help short="The amount of time alert must be active before firing."/>
            </arg>
            <arg type="object" var="$parameters.properties.rules[].labels" options="labels">
              <help short="Labels to add or overwrite before storing the result."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
            <arg type="string" var="$parameters.properties.rules[].record" options="record">
              <help short="Recorded metrics name."/>
            </arg>
            <arg type="object" var="$parameters.properties.rules[].resolveConfiguration" options="resolve-configuration">
              <help short="Defines the configuration for resolving fired alerts. Only relevant for alerts."/>
              <arg type="boolean" var="$parameters.properties.rules[].resolveConfiguration.autoResolved" options="auto-resolved">
                <help short="Enable alert auto-resolution."/>
              </arg>
              <arg type="duration" var="$parameters.properties.rules[].resolveConfiguration.timeToResolve" options="time-to-resolve">
                <help short="Alert auto-resolution timeout."/>
              </arg>
            </arg>
            <arg type="integer32" var="$parameters.properties.rules[].severity" options="severity">
              <help short="The severity of the alerts fired by the rule. Must be between 0 and 4."/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$parameters.properties.scopes" options="scopes" required="True" group="Properties">
          <help short="Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope. This may change in future."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="PrometheusRuleGroups_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{ruleGroupName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleGroupName" arg="$Path.ruleGroupName" required="True">
                <format pattern="^[^:@/#{}%&+*<>?]+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="clusterName" arg="$parameters.properties.clusterName"/>
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.enabled"/>
                    <prop type="duration" name="interval" arg="$parameters.properties.interval"/>
                    <prop type="array<object>" name="rules" arg="$parameters.properties.rules" required="True">
                      <item type="object">
                        <prop type="array<object>" name="actions" arg="$parameters.properties.rules[].actions">
                          <item type="object">
                            <prop type="string" name="actionGroupId" arg="$parameters.properties.rules[].actions[].actionGroupId"/>
                            <prop type="object" name="actionProperties" arg="$parameters.properties.rules[].actions[].actionProperties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="alert" arg="$parameters.properties.rules[].alert"/>
                        <prop type="object" name="annotations" arg="$parameters.properties.rules[].annotations">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="enabled" arg="$parameters.properties.rules[].enabled"/>
                        <prop type="string" name="expression" arg="$parameters.properties.rules[].expression" required="True"/>
                        <prop type="duration" name="for" arg="$parameters.properties.rules[].for"/>
                        <prop type="object" name="labels" arg="$parameters.properties.rules[].labels">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="string" name="record" arg="$parameters.properties.rules[].record"/>
                        <prop type="object" name="resolveConfiguration" arg="$parameters.properties.rules[].resolveConfiguration">
                          <prop type="boolean" name="autoResolved" arg="$parameters.properties.rules[].resolveConfiguration.autoResolved"/>
                          <prop type="duration" name="timeToResolve" arg="$parameters.properties.rules[].resolveConfiguration.timeToResolve"/>
                        </prop>
                        <prop type="integer32" name="severity" arg="$parameters.properties.rules[].severity"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="scopes" arg="$parameters.properties.scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="clusterName"/>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled"/>
                    <prop type="duration" name="interval"/>
                    <prop type="array<object>" name="rules" required="True">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="string" name="actionGroupId"/>
                            <prop type="object" name="actionProperties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="alert"/>
                        <prop type="object" name="annotations">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="expression" required="True"/>
                        <prop type="duration" name="for"/>
                        <prop type="object" name="labels">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="string" name="record"/>
                        <prop type="object" name="resolveConfiguration">
                          <prop type="boolean" name="autoResolved"/>
                          <prop type="duration" name="timeToResolve"/>
                        </prop>
                        <prop type="integer32" name="severity"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.alertsmanagement/prometheusrulegroups/{}" version="2023-03-01" swagger="mgmt-plane/alertsmanagement/ResourceProviders/Microsoft.AlertsManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQWxlcnRzTWFuYWdlbWVudC9wcm9tZXRoZXVzUnVsZUdyb3Vwcy97cnVsZUdyb3VwTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the rule group."/>
          <format pattern="^[^:@/#{}%&+*<>?]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.clusterName" options="cluster-name" group="Properties">
          <help short="Apply rule to data from a specific cluster."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Rule group description."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enabled" options="enabled" group="Properties">
          <help short="Enable/disable rule group."/>
        </arg>
        <arg nullable="True" type="duration" var="$parameters.properties.interval" options="interval" group="Properties">
          <help short="The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.rules" options="rules" group="Properties">
          <help short="Defines the rules in the Prometheus rule group."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<object>" var="$parameters.properties.rules[].actions" options="actions">
              <help short="Actions that are performed when the alert rule becomes active, and when an alert condition is resolved."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.rules[].actions[].actionGroupId" options="action-group-id">
                  <help short="The resource id of the action group to use."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.rules[].actions[].actionProperties" options="action-properties">
                  <help short="The properties of an action group object."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.rules[].alert" options="alert">
              <help short="Alert rule name."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.rules[].annotations" options="annotations">
              <help short="The annotations clause specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links. The annotation values can be templated."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.rules[].enabled" options="enabled">
              <help short="Enable/disable rule."/>
            </arg>
            <arg type="string" var="$parameters.properties.rules[].expression" options="expression">
              <help short="The PromQL expression to evaluate. https://prometheus.io/docs/prometheus/latest/querying/basics/. Evaluated periodically as given by 'interval', and the result recorded as a new set of time series with the metric name as given by 'record'."/>
            </arg>
            <arg nullable="True" type="duration" var="$parameters.properties.rules[].for" options="for">
              <help short="The amount of time alert must be active before firing."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.rules[].labels" options="labels">
              <help short="Labels to add or overwrite before storing the result."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.rules[].record" options="record">
              <help short="Recorded metrics name."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.rules[].resolveConfiguration" options="resolve-configuration">
              <help short="Defines the configuration for resolving fired alerts. Only relevant for alerts."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.rules[].resolveConfiguration.autoResolved" options="auto-resolved">
                <help short="Enable alert auto-resolution."/>
              </arg>
              <arg nullable="True" type="duration" var="$parameters.properties.rules[].resolveConfiguration.timeToResolve" options="time-to-resolve">
                <help short="Alert auto-resolution timeout."/>
              </arg>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.rules[].severity" options="severity">
              <help short="The severity of the alerts fired by the rule. Must be between 0 and 4."/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$parameters.properties.scopes" options="scopes" group="Properties">
          <help short="Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope. This may change in future."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <operation operationId="PrometheusRuleGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{ruleGroupName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleGroupName" arg="$Path.ruleGroupName" required="True">
                <format pattern="^[^:@/#{}%&+*<>?]+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PrometheusRuleGroupResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="clusterName"/>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled"/>
                    <prop type="duration" name="interval"/>
                    <prop type="array<object>" name="rules" required="True">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="string" name="actionGroupId"/>
                            <prop type="object" name="actionProperties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="alert"/>
                        <prop type="object" name="annotations">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="expression" required="True"/>
                        <prop type="duration" name="for"/>
                        <prop type="object" name="labels">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="string" name="record"/>
                        <prop type="object" name="resolveConfiguration">
                          <prop type="boolean" name="autoResolved"/>
                          <prop type="duration" name="timeToResolve"/>
                        </prop>
                        <prop type="integer32" name="severity"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="clusterName" arg="$parameters.properties.clusterName"/>
                <prop type="string" name="description" arg="$parameters.properties.description"/>
                <prop type="boolean" name="enabled" arg="$parameters.properties.enabled"/>
                <prop type="duration" name="interval" arg="$parameters.properties.interval"/>
                <prop type="array<object>" name="rules" arg="$parameters.properties.rules" required="True">
                  <item type="object">
                    <prop type="array<object>" name="actions" arg="$parameters.properties.rules[].actions">
                      <item type="object">
                        <prop type="string" name="actionGroupId" arg="$parameters.properties.rules[].actions[].actionGroupId"/>
                        <prop type="object" name="actionProperties" arg="$parameters.properties.rules[].actions[].actionProperties">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="alert" arg="$parameters.properties.rules[].alert"/>
                    <prop type="object" name="annotations" arg="$parameters.properties.rules[].annotations">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.rules[].enabled"/>
                    <prop type="string" name="expression" arg="$parameters.properties.rules[].expression" required="True"/>
                    <prop type="duration" name="for" arg="$parameters.properties.rules[].for"/>
                    <prop type="object" name="labels" arg="$parameters.properties.rules[].labels">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="record" arg="$parameters.properties.rules[].record"/>
                    <prop type="object" name="resolveConfiguration" arg="$parameters.properties.rules[].resolveConfiguration">
                      <prop type="boolean" name="autoResolved" arg="$parameters.properties.rules[].resolveConfiguration.autoResolved"/>
                      <prop type="duration" name="timeToResolve" arg="$parameters.properties.rules[].resolveConfiguration.timeToResolve"/>
                    </prop>
                    <prop type="integer32" name="severity" arg="$parameters.properties.rules[].severity"/>
                  </item>
                </prop>
                <prop type="array<string>" name="scopes" arg="$parameters.properties.scopes" required="True">
                  <item type="string"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="PrometheusRuleGroups_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{ruleGroupName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleGroupName" arg="$Path.ruleGroupName" required="True">
                <format pattern="^[^:@/#{}%&+*<>?]+$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@PrometheusRuleGroupResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
