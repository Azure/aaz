<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts/{}" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cy97aG9zdE5hbWV9/V/MjAyMi0xMS0wMQ=="/>
  <commandGroup name="vm host">
    <command name="show" version="2022-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts/{}" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cy97aG9zdE5hbWV9/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.hostGroupName" options="host-group-name host-group" required="True" group="" idPart="name">
          <help short="The name of the dedicated host group."/>
        </arg>
        <arg type="string" var="$Path.hostName" options="host-name name n" required="True" idPart="child_name_1">
          <help short="The name of the dedicated host."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the dedicated host. 'UserData' is not supported for dedicated host."/>
          <enum>
            <item name="instanceView" value="&quot;instanceView&quot;"/>
            <item name="userData" value="&quot;userData&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="DedicatedHosts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}">
          <request method="get">
            <path>
              <param type="string" name="hostGroupName" arg="$Path.hostGroupName" required="True"/>
              <param type="string" name="hostName" arg="$Path.hostName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand">
                <enum>
                  <item value="&quot;instanceView&quot;"/>
                  <item value="&quot;userData&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/hostGroups/{}/hosts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoReplaceOnFailure"/>
                    <prop readOnly="True" type="string" name="hostId"/>
                    <prop type="object" name="instanceView">
                      <prop readOnly="True" type="string" name="assetId"/>
                      <prop type="object" name="availableCapacity">
                        <prop type="array<object>" name="allocatableVMs">
                          <item type="object">
                            <prop type="float64" name="count"/>
                            <prop type="string" name="vmSize"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="statuses">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;Windows_Server_Hybrid&quot;"/>
                        <item value="&quot;Windows_Server_Perpetual&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="dateTime" name="provisioningTime"/>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="array<object>" name="virtualMachines">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer64" name="capacity"/>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts/{}" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cy97aG9zdE5hbWV9/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.hostGroupName" options="host-group-name host-group" required="True" group="" idPart="name">
          <help short="The name of the dedicated host group."/>
        </arg>
        <arg type="string" var="$Path.hostName" options="host-name name n" required="True" idPart="child_name_1">
          <help short="The name of the dedicated host."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <operation operationId="DedicatedHosts_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}">
          <request method="delete">
            <path>
              <param type="string" name="hostGroupName" arg="$Path.hostGroupName" required="True"/>
              <param type="string" name="hostName" arg="$Path.hostName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts/{}" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cy97aG9zdE5hbWV9/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.hostGroupName" options="host-group-name host-group" required="True" group="" idPart="name">
          <help short="The name of the dedicated host group."/>
        </arg>
        <arg type="string" var="$Path.hostName" options="host-name name n" required="True" idPart="child_name_1">
          <help short="The name of the dedicated host ."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" required="True" group="Parameters">
          <help short="SKU of the dedicated host for Hardware Generation and VM family. Only name is required to be set. List Microsoft.Compute SKUs for a list of possible values."/>
          <arg type="integer64" var="$parameters.sku.capacity" options="capacity">
            <help short="Specifies the number of virtual machines in the scale set."/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name">
            <help short="The sku name."/>
          </arg>
          <arg type="string" var="$parameters.sku.tier" options="tier">
            <help short="Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$parameters.properties.autoReplaceOnFailure" options="auto-replace-on-failure" group="Properties">
          <help short="Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided."/>
        </arg>
        <arg type="string" var="$parameters.properties.licenseType" options="license-type" group="Properties">
          <help short="Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**"/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="Windows_Server_Hybrid" value="&quot;Windows_Server_Hybrid&quot;"/>
            <item name="Windows_Server_Perpetual" value="&quot;Windows_Server_Perpetual&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$parameters.properties.platformFaultDomain" options="platform-fault-domain" group="Properties">
          <help short="Fault domain of the dedicated host within a dedicated host group."/>
          <format minimum="0"/>
        </arg>
      </argGroup>
      <operation operationId="DedicatedHosts_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}">
          <request method="put">
            <path>
              <param type="string" name="hostGroupName" arg="$Path.hostGroupName" required="True"/>
              <param type="string" name="hostName" arg="$Path.hostName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoReplaceOnFailure" arg="$parameters.properties.autoReplaceOnFailure"/>
                    <prop type="string" name="licenseType" arg="$parameters.properties.licenseType">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;Windows_Server_Hybrid&quot;"/>
                        <item value="&quot;Windows_Server_Perpetual&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain" arg="$parameters.properties.platformFaultDomain">
                      <format minimum="0"/>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$parameters.sku" required="True">
                    <prop type="integer64" name="capacity" arg="$parameters.sku.capacity"/>
                    <prop type="string" name="name" arg="$parameters.sku.name"/>
                    <prop type="string" name="tier" arg="$parameters.sku.tier"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/hostGroups/{}/hosts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoReplaceOnFailure"/>
                    <prop readOnly="True" type="string" name="hostId"/>
                    <prop type="object" name="instanceView">
                      <prop readOnly="True" type="string" name="assetId"/>
                      <prop type="object" name="availableCapacity">
                        <prop type="array<object>" name="allocatableVMs">
                          <item type="object">
                            <prop type="float64" name="count"/>
                            <prop type="string" name="vmSize"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="statuses">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;Windows_Server_Hybrid&quot;"/>
                        <item value="&quot;Windows_Server_Perpetual&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="dateTime" name="provisioningTime"/>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="array<object>" name="virtualMachines">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer64" name="capacity"/>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts/{}" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cy97aG9zdE5hbWV9/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.hostGroupName" options="host-group-name host-group" required="True" group="" idPart="name">
          <help short="The name of the dedicated host group."/>
        </arg>
        <arg type="string" var="$Path.hostName" options="host-name name n" required="True" idPart="child_name_1">
          <help short="The name of the dedicated host."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" group="Parameters">
          <help short="SKU of the dedicated host for Hardware Generation and VM family. Only name is required to be set. List Microsoft.Compute SKUs for a list of possible values."/>
          <arg nullable="True" type="integer64" var="$parameters.sku.capacity" options="capacity">
            <help short="Specifies the number of virtual machines in the scale set."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.name" options="name">
            <help short="The sku name."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.tier" options="tier">
            <help short="Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$parameters.properties.autoReplaceOnFailure" options="auto-replace-on-failure" group="Properties">
          <help short="Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.licenseType" options="license-type" group="Properties">
          <help short="Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**"/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="Windows_Server_Hybrid" value="&quot;Windows_Server_Hybrid&quot;"/>
            <item name="Windows_Server_Perpetual" value="&quot;Windows_Server_Perpetual&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.platformFaultDomain" options="platform-fault-domain" group="Properties">
          <help short="Fault domain of the dedicated host within a dedicated host group."/>
          <format minimum="0"/>
        </arg>
      </argGroup>
      <operation operationId="DedicatedHosts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}">
          <request method="get">
            <path>
              <param type="string" name="hostGroupName" arg="$Path.hostGroupName" required="True"/>
              <param type="string" name="hostName" arg="$Path.hostName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DedicatedHost_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/hostGroups/{}/hosts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoReplaceOnFailure"/>
                    <prop readOnly="True" type="string" name="hostId"/>
                    <prop type="object" name="instanceView">
                      <prop readOnly="True" type="string" name="assetId"/>
                      <prop type="object" name="availableCapacity">
                        <prop type="array<object>" name="allocatableVMs">
                          <item type="object">
                            <prop type="float64" name="count"/>
                            <prop type="string" name="vmSize"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="statuses">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;Windows_Server_Hybrid&quot;"/>
                        <item value="&quot;Windows_Server_Perpetual&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain">
                      <format minimum="0"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="dateTime" name="provisioningTime"/>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="array<object>" name="virtualMachines">
                      <item type="object">
                        <prop readOnly="True" type="string" name="id"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer64" name="capacity"/>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="autoReplaceOnFailure" arg="$parameters.properties.autoReplaceOnFailure"/>
                <prop type="string" name="licenseType" arg="$parameters.properties.licenseType">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;Windows_Server_Hybrid&quot;"/>
                    <item value="&quot;Windows_Server_Perpetual&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="platformFaultDomain" arg="$parameters.properties.platformFaultDomain">
                  <format minimum="0"/>
                </prop>
              </prop>
              <prop type="object" name="sku" arg="$parameters.sku" required="True">
                <prop type="integer64" name="capacity" arg="$parameters.sku.capacity"/>
                <prop type="string" name="name" arg="$parameters.sku.name"/>
                <prop type="string" name="tier" arg="$parameters.sku.tier"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DedicatedHosts_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}">
          <request method="put">
            <path>
              <param type="string" name="hostGroupName" arg="$Path.hostGroupName" required="True"/>
              <param type="string" name="hostName" arg="$Path.hostName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@DedicatedHost_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
