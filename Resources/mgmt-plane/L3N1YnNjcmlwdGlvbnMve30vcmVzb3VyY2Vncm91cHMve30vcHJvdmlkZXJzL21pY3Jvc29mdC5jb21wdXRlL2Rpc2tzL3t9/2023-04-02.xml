<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/disks/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrcy97ZGlza05hbWV9/V/MjAyMy0wNC0wMg=="/>
  <commandGroup name="disk">
    <command name="show" version="2023-04-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/disks/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrcy97ZGlza05hbWV9/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskName" options="disk-name name n" required="True" idPart="name">
          <help short="The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Disks_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}">
          <request method="get">
            <path>
              <param type="string" name="diskName" arg="$Path.diskName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/disks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="managedBy"/>
                  <prop readOnly="True" type="array<string>" name="managedByExtended">
                    <item type="string"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="LastOwnershipUpdateTime"/>
                    <prop type="boolean" name="burstingEnabled"/>
                    <prop readOnly="True" type="dateTime" name="burstingEnabledTime"/>
                    <prop type="float" name="completionPercent"/>
                    <prop type="object" name="creationData" required="True">
                      <prop type="string" name="createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Copy&quot;"/>
                          <item value="&quot;CopyFromSanSnapshot&quot;"/>
                          <item value="&quot;CopyStart&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                          <item value="&quot;Import&quot;"/>
                          <item value="&quot;ImportSecure&quot;"/>
                          <item value="&quot;Restore&quot;"/>
                          <item value="&quot;Upload&quot;"/>
                          <item value="&quot;UploadPreparedSecure&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="elasticSanResourceId"/>
                      <prop type="@ImageDiskReference_read" name="galleryImageReference"/>
                      <prop type="object" name="imageReference" cls="ImageDiskReference_read">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop type="string" name="id"/>
                        <prop type="integer32" name="lun"/>
                        <prop type="string" name="sharedGalleryImageId"/>
                      </prop>
                      <prop type="integer32" name="logicalSectorSize"/>
                      <prop type="boolean" name="performancePlus"/>
                      <prop type="string" name="securityDataUri"/>
                      <prop type="string" name="sourceResourceId"/>
                      <prop readOnly="True" type="string" name="sourceUniqueId"/>
                      <prop type="string" name="sourceUri"/>
                      <prop type="string" name="storageAccountId"/>
                      <prop type="integer64" name="uploadSizeBytes"/>
                    </prop>
                    <prop type="string" name="dataAccessAuthMode">
                      <enum>
                        <item value="&quot;AzureActiveDirectory&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="diskAccessId"/>
                    <prop type="integer64" name="diskIOPSReadOnly"/>
                    <prop type="integer64" name="diskIOPSReadWrite"/>
                    <prop type="integer64" name="diskMBpsReadOnly"/>
                    <prop type="integer64" name="diskMBpsReadWrite"/>
                    <prop readOnly="True" type="integer64" name="diskSizeBytes"/>
                    <prop type="integer32" name="diskSizeGB"/>
                    <prop readOnly="True" type="string" name="diskState">
                      <enum>
                        <item value="&quot;ActiveSAS&quot;"/>
                        <item value="&quot;ActiveSASFrozen&quot;"/>
                        <item value="&quot;ActiveUpload&quot;"/>
                        <item value="&quot;Attached&quot;"/>
                        <item value="&quot;Frozen&quot;"/>
                        <item value="&quot;ReadyToUpload&quot;"/>
                        <item value="&quot;Reserved&quot;"/>
                        <item value="&quot;Unattached&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="string" name="diskEncryptionSetId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="encryptionSettingsCollection">
                      <prop type="boolean" name="enabled" required="True"/>
                      <prop type="array<object>" name="encryptionSettings">
                        <item type="object">
                          <prop type="object" name="diskEncryptionKey">
                            <prop type="string" name="secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True" cls="SourceVault_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="@SourceVault_read" name="sourceVault" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="encryptionSettingsVersion"/>
                    </prop>
                    <prop type="string" name="hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="maxShares"/>
                    <prop type="string" name="networkAccessPolicy">
                      <enum>
                        <item value="&quot;AllowAll&quot;"/>
                        <item value="&quot;AllowPrivate&quot;"/>
                        <item value="&quot;DenyAll&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="optimizedForFrequentAttach"/>
                    <prop type="string" name="osType">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="propertyUpdatesInProgress">
                      <prop type="string" name="targetTier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan">
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="product" required="True"/>
                      <prop type="string" name="promotionCode"/>
                      <prop type="string" name="publisher" required="True"/>
                    </prop>
                    <prop type="object" name="securityProfile">
                      <prop type="string" name="secureVMDiskEncryptionSetId"/>
                      <prop type="string" name="securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="shareInfo" identifiers="vmUri">
                      <item type="object">
                        <prop readOnly="True" type="string" name="vmUri"/>
                      </item>
                    </prop>
                    <prop type="object" name="supportedCapabilities">
                      <prop type="boolean" name="acceleratedNetwork"/>
                      <prop type="string" name="architecture">
                        <enum>
                          <item value="&quot;Arm64&quot;"/>
                          <item value="&quot;x64&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="diskControllerTypes"/>
                    </prop>
                    <prop type="boolean" name="supportsHibernation"/>
                    <prop type="string" name="tier"/>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;PremiumV2_LRS&quot;"/>
                        <item value="&quot;Premium_LRS&quot;"/>
                        <item value="&quot;Premium_ZRS&quot;"/>
                        <item value="&quot;StandardSSD_LRS&quot;"/>
                        <item value="&quot;StandardSSD_ZRS&quot;"/>
                        <item value="&quot;Standard_LRS&quot;"/>
                        <item value="&quot;UltraSSD_LRS&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-04-02" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/disks/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrcy97ZGlza05hbWV9/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskName" options="disk-name name n" required="True" idPart="name">
          <help short="The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Disks_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}">
          <request method="delete">
            <path>
              <param type="string" name="diskName" arg="$Path.diskName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-04-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/disks/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrcy97ZGlza05hbWV9/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskName" options="disk-name name n" required="True" idPart="name">
          <help short="The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Disk">
        <arg type="object" var="$disk.extendedLocation" options="extended-location" group="Disk">
          <help short="The extended location where the disk will be created. Extended location cannot be changed."/>
          <arg type="string" var="$disk.extendedLocation.name" options="name">
            <help short="The name of the extended location."/>
          </arg>
          <arg type="string" var="$disk.extendedLocation.type" options="type">
            <help short="The type of the extended location."/>
            <enum>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$disk.location" options="location l" required="True" group="Disk">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$disk.sku" options="sku" group="Disk">
          <help short="The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, StandardSSD_ZRS, or PremiumV2_LRS."/>
          <arg type="string" var="$disk.sku.name" options="name">
            <help short="The sku name."/>
            <enum>
              <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
              <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
              <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
              <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
              <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$disk.tags" options="tags" group="Disk">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$disk.zones" options="zones" group="Disk">
          <help short="The Logical zone list for Disk."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$disk.properties.burstingEnabled" options="bursting-enabled" group="Properties">
          <help short="Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks."/>
        </arg>
        <arg type="float" var="$disk.properties.completionPercent" options="completion-percent" group="Properties">
          <help short="Percentage complete for the background copy when a resource is created via the CopyStart operation."/>
        </arg>
        <arg type="object" var="$disk.properties.creationData" options="creation-data" group="Properties">
          <help short="Disk source information. CreationData information cannot be changed after the disk has been created."/>
          <arg type="string" var="$disk.properties.creationData.createOption" options="create-option" required="True">
            <help short="This enumerates the possible sources of a disk's creation."/>
            <enum>
              <item name="Attach" value="&quot;Attach&quot;"/>
              <item name="Copy" value="&quot;Copy&quot;"/>
              <item name="CopyFromSanSnapshot" value="&quot;CopyFromSanSnapshot&quot;"/>
              <item name="CopyStart" value="&quot;CopyStart&quot;"/>
              <item name="Empty" value="&quot;Empty&quot;"/>
              <item name="FromImage" value="&quot;FromImage&quot;"/>
              <item name="Import" value="&quot;Import&quot;"/>
              <item name="ImportSecure" value="&quot;ImportSecure&quot;"/>
              <item name="Restore" value="&quot;Restore&quot;"/>
              <item name="Upload" value="&quot;Upload&quot;"/>
              <item name="UploadPreparedSecure" value="&quot;UploadPreparedSecure&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$disk.properties.creationData.elasticSanResourceId" options="elastic-san-resource-id">
            <help short="Required if createOption is CopyFromSanSnapshot. This is the ARM id of the source elastic san volume snapshot."/>
          </arg>
          <arg type="@ImageDiskReference_create" var="$disk.properties.creationData.galleryImageReference" options="gallery-image-reference">
            <help short="Required if creating from a Gallery Image. The id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk."/>
          </arg>
          <arg type="object" var="$disk.properties.creationData.imageReference" options="image-reference" cls="ImageDiskReference_create">
            <help short="Disk source information for PIR or user images."/>
            <arg type="string" var="@ImageDiskReference_create.communityGalleryImageId" options="community-gallery-image-id">
              <help short="A relative uri containing a community Azure Compute Gallery image reference."/>
            </arg>
            <arg type="string" var="@ImageDiskReference_create.id" options="id">
              <help short="A relative uri containing either a Platform Image Repository, user image, or Azure Compute Gallery image reference."/>
            </arg>
            <arg type="integer32" var="@ImageDiskReference_create.lun" options="lun">
              <help short="If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null."/>
            </arg>
            <arg type="string" var="@ImageDiskReference_create.sharedGalleryImageId" options="shared-gallery-image-id">
              <help short="A relative uri containing a direct shared Azure Compute Gallery image reference."/>
            </arg>
          </arg>
          <arg type="integer32" var="$disk.properties.creationData.logicalSectorSize" options="logical-sector-size">
            <help short="Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default."/>
          </arg>
          <arg type="boolean" var="$disk.properties.creationData.performancePlus" options="performance-plus">
            <help short="Set this flag to true to get a boost on the performance target of the disk deployed, see here on the respective performance target. This flag can only be set on disk creation time and cannot be disabled after enabled."/>
          </arg>
          <arg type="string" var="$disk.properties.creationData.securityDataUri" options="security-data-uri">
            <help short="If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state."/>
          </arg>
          <arg type="string" var="$disk.properties.creationData.sourceResourceId" options="source-resource-id">
            <help short="If createOption is Copy, this is the ARM id of the source snapshot or disk."/>
          </arg>
          <arg type="string" var="$disk.properties.creationData.sourceUri" options="source-uri">
            <help short="If createOption is Import, this is the URI of a blob to be imported into a managed disk."/>
          </arg>
          <arg type="string" var="$disk.properties.creationData.storageAccountId" options="storage-account-id">
            <help short="Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk."/>
          </arg>
          <arg type="integer64" var="$disk.properties.creationData.uploadSizeBytes" options="upload-size-bytes">
            <help short="If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer)."/>
          </arg>
        </arg>
        <arg type="string" var="$disk.properties.dataAccessAuthMode" options="data-access-auth-mode" group="Properties">
          <help short="Additional authentication requirements when exporting or uploading to a disk or snapshot."/>
          <enum>
            <item name="AzureActiveDirectory" value="&quot;AzureActiveDirectory&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$disk.properties.diskAccessId" options="disk-access-id" group="Properties">
          <help short="ARM id of the DiskAccess resource for using private endpoints on disks."/>
        </arg>
        <arg type="integer64" var="$disk.properties.diskIOPSReadOnly" options="disk-iops-read-only" group="Properties">
          <help short="The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes."/>
        </arg>
        <arg type="integer64" var="$disk.properties.diskIOPSReadWrite" options="disk-iops-read-write" group="Properties">
          <help short="The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes."/>
        </arg>
        <arg type="integer64" var="$disk.properties.diskMBpsReadOnly" options="disk-m-bps-read-only" group="Properties">
          <help short="The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."/>
        </arg>
        <arg type="integer64" var="$disk.properties.diskMBpsReadWrite" options="disk-m-bps-read-write" group="Properties">
          <help short="The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."/>
        </arg>
        <arg type="integer32" var="$disk.properties.diskSizeGB" options="disk-size-gb" group="Properties">
          <help short="If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."/>
        </arg>
        <arg type="object" var="$disk.properties.encryption" options="encryption" group="Properties">
          <help short="Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."/>
          <arg type="string" var="$disk.properties.encryption.diskEncryptionSetId" options="disk-encryption-set-id">
            <help short="ResourceId of the disk encryption set to use for enabling encryption at rest."/>
          </arg>
          <arg type="string" var="$disk.properties.encryption.type" options="type">
            <help short="The type of key used to encrypt the data of the disk."/>
            <enum>
              <item name="EncryptionAtRestWithCustomerKey" value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
              <item name="EncryptionAtRestWithPlatformAndCustomerKeys" value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
              <item name="EncryptionAtRestWithPlatformKey" value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$disk.properties.encryptionSettingsCollection" options="encryption-settings-collection" group="Properties">
          <help short="Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."/>
          <arg type="boolean" var="$disk.properties.encryptionSettingsCollection.enabled" options="enabled" required="True">
            <help short="Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged."/>
          </arg>
          <arg type="array<object>" var="$disk.properties.encryptionSettingsCollection.encryptionSettings" options="encryption-settings">
            <help short="A collection of encryption settings, one for each disk volume."/>
            <item type="object">
              <arg type="object" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey" options="disk-encryption-key">
                <help short="Key Vault Secret Url and vault id of the disk encryption key"/>
                <arg type="string" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.secretUrl" options="secret-url" required="True">
                  <help short="Url pointing to a key or secret in KeyVault"/>
                </arg>
                <arg type="object" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.sourceVault" options="source-vault" required="True" cls="SourceVault_create">
                  <help short="Resource id of the KeyVault containing the key or secret"/>
                  <arg type="string" var="@SourceVault_create.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
              </arg>
              <arg type="object" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey" options="key-encryption-key">
                <help short="Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key."/>
                <arg type="string" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.keyUrl" options="key-url" required="True">
                  <help short="Url pointing to a key or secret in KeyVault"/>
                </arg>
                <arg type="@SourceVault_create" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.sourceVault" options="source-vault" required="True">
                  <help short="Resource id of the KeyVault containing the key or secret"/>
                </arg>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$disk.properties.encryptionSettingsCollection.encryptionSettingsVersion" options="encryption-settings-version">
            <help short="Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption."/>
          </arg>
        </arg>
        <arg type="string" var="$disk.properties.hyperVGeneration" options="hyper-v-generation" group="Properties">
          <help short="The hypervisor generation of the Virtual Machine. Applicable to OS disks only."/>
          <enum>
            <item name="V1" value="&quot;V1&quot;"/>
            <item name="V2" value="&quot;V2&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$disk.properties.maxShares" options="max-shares" group="Properties">
          <help short="The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time."/>
        </arg>
        <arg type="string" var="$disk.properties.networkAccessPolicy" options="network-access-policy" group="Properties">
          <help short="Policy for accessing the disk via network."/>
          <enum>
            <item name="AllowAll" value="&quot;AllowAll&quot;"/>
            <item name="AllowPrivate" value="&quot;AllowPrivate&quot;"/>
            <item name="DenyAll" value="&quot;DenyAll&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$disk.properties.optimizedForFrequentAttach" options="optimized-for-frequent-attach" group="Properties">
          <help short="Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."/>
        </arg>
        <arg type="string" var="$disk.properties.osType" options="os-type" group="Properties">
          <help short="The Operating System type."/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$disk.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Policy for controlling export on the disk."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$disk.properties.purchasePlan" options="purchase-plan" group="Properties">
          <help short="Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}"/>
          <arg type="string" var="$disk.properties.purchasePlan.name" options="name" required="True">
            <help short="The plan ID."/>
          </arg>
          <arg type="string" var="$disk.properties.purchasePlan.product" options="product" required="True">
            <help short="Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."/>
          </arg>
          <arg type="string" var="$disk.properties.purchasePlan.promotionCode" options="promotion-code">
            <help short="The Offer Promotion Code."/>
          </arg>
          <arg type="string" var="$disk.properties.purchasePlan.publisher" options="publisher" required="True">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg type="object" var="$disk.properties.securityProfile" options="security-profile" group="Properties">
          <help short="Contains the security related information for the resource."/>
          <arg type="string" var="$disk.properties.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
            <help short="ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key"/>
          </arg>
          <arg type="string" var="$disk.properties.securityProfile.securityType" options="security-type">
            <help short="Specifies the SecurityType of the VM. Applicable for OS disks only."/>
            <enum>
              <item name="ConfidentialVM_DiskEncryptedWithCustomerKey" value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
              <item name="ConfidentialVM_DiskEncryptedWithPlatformKey" value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
              <item name="ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey" value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
              <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$disk.properties.supportedCapabilities" options="supported-capabilities" group="Properties">
          <help short="List of supported capabilities for the image from which the OS disk was created."/>
          <arg type="boolean" var="$disk.properties.supportedCapabilities.acceleratedNetwork" options="accelerated-network">
            <help short="True if the image from which the OS disk is created supports accelerated networking."/>
          </arg>
          <arg type="string" var="$disk.properties.supportedCapabilities.architecture" options="architecture">
            <help short="CPU architecture supported by an OS disk."/>
            <enum>
              <item name="Arm64" value="&quot;Arm64&quot;"/>
              <item name="x64" value="&quot;x64&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$disk.properties.supportedCapabilities.diskControllerTypes" options="disk-controller-types">
            <help short="The disk controllers that an OS disk supports. If set it can be SCSI or SCSI, NVME or NVME, SCSI."/>
          </arg>
        </arg>
        <arg type="boolean" var="$disk.properties.supportsHibernation" options="supports-hibernation" group="Properties">
          <help short="Indicates the OS on a disk supports hibernation."/>
        </arg>
        <arg type="string" var="$disk.properties.tier" options="tier" group="Properties">
          <help short="Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks."/>
        </arg>
      </argGroup>
      <operation operationId="Disks_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}">
          <request method="put">
            <path>
              <param type="string" name="diskName" arg="$Path.diskName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="disk" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$disk.extendedLocation">
                    <prop type="string" name="name" arg="$disk.extendedLocation.name"/>
                    <prop type="string" name="type" arg="$disk.extendedLocation.type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$disk.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="burstingEnabled" arg="$disk.properties.burstingEnabled"/>
                    <prop type="float" name="completionPercent" arg="$disk.properties.completionPercent"/>
                    <prop type="object" name="creationData" arg="$disk.properties.creationData" required="True">
                      <prop type="string" name="createOption" arg="$disk.properties.creationData.createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Copy&quot;"/>
                          <item value="&quot;CopyFromSanSnapshot&quot;"/>
                          <item value="&quot;CopyStart&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                          <item value="&quot;Import&quot;"/>
                          <item value="&quot;ImportSecure&quot;"/>
                          <item value="&quot;Restore&quot;"/>
                          <item value="&quot;Upload&quot;"/>
                          <item value="&quot;UploadPreparedSecure&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="elasticSanResourceId" arg="$disk.properties.creationData.elasticSanResourceId"/>
                      <prop type="@ImageDiskReference_create" name="galleryImageReference" arg="$disk.properties.creationData.galleryImageReference"/>
                      <prop type="object" name="imageReference" arg="$disk.properties.creationData.imageReference" cls="ImageDiskReference_create">
                        <prop type="string" name="communityGalleryImageId" arg="@ImageDiskReference_create.communityGalleryImageId"/>
                        <prop type="string" name="id" arg="@ImageDiskReference_create.id"/>
                        <prop type="integer32" name="lun" arg="@ImageDiskReference_create.lun"/>
                        <prop type="string" name="sharedGalleryImageId" arg="@ImageDiskReference_create.sharedGalleryImageId"/>
                      </prop>
                      <prop type="integer32" name="logicalSectorSize" arg="$disk.properties.creationData.logicalSectorSize"/>
                      <prop type="boolean" name="performancePlus" arg="$disk.properties.creationData.performancePlus"/>
                      <prop type="string" name="securityDataUri" arg="$disk.properties.creationData.securityDataUri"/>
                      <prop type="string" name="sourceResourceId" arg="$disk.properties.creationData.sourceResourceId"/>
                      <prop type="string" name="sourceUri" arg="$disk.properties.creationData.sourceUri"/>
                      <prop type="string" name="storageAccountId" arg="$disk.properties.creationData.storageAccountId"/>
                      <prop type="integer64" name="uploadSizeBytes" arg="$disk.properties.creationData.uploadSizeBytes"/>
                    </prop>
                    <prop type="string" name="dataAccessAuthMode" arg="$disk.properties.dataAccessAuthMode">
                      <enum>
                        <item value="&quot;AzureActiveDirectory&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="diskAccessId" arg="$disk.properties.diskAccessId"/>
                    <prop type="integer64" name="diskIOPSReadOnly" arg="$disk.properties.diskIOPSReadOnly"/>
                    <prop type="integer64" name="diskIOPSReadWrite" arg="$disk.properties.diskIOPSReadWrite"/>
                    <prop type="integer64" name="diskMBpsReadOnly" arg="$disk.properties.diskMBpsReadOnly"/>
                    <prop type="integer64" name="diskMBpsReadWrite" arg="$disk.properties.diskMBpsReadWrite"/>
                    <prop type="integer32" name="diskSizeGB" arg="$disk.properties.diskSizeGB"/>
                    <prop type="object" name="encryption" arg="$disk.properties.encryption">
                      <prop type="string" name="diskEncryptionSetId" arg="$disk.properties.encryption.diskEncryptionSetId"/>
                      <prop type="string" name="type" arg="$disk.properties.encryption.type">
                        <enum>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="encryptionSettingsCollection" arg="$disk.properties.encryptionSettingsCollection">
                      <prop type="boolean" name="enabled" arg="$disk.properties.encryptionSettingsCollection.enabled" required="True"/>
                      <prop type="array<object>" name="encryptionSettings" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings">
                        <item type="object">
                          <prop type="object" name="diskEncryptionKey" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey">
                            <prop type="string" name="secretUrl" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.sourceVault" required="True" cls="SourceVault_create">
                              <prop type="string" name="id" arg="@SourceVault_create.id"/>
                            </prop>
                          </prop>
                          <prop type="object" name="keyEncryptionKey" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey">
                            <prop type="string" name="keyUrl" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.keyUrl" required="True"/>
                            <prop type="@SourceVault_create" name="sourceVault" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.sourceVault" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="encryptionSettingsVersion" arg="$disk.properties.encryptionSettingsCollection.encryptionSettingsVersion"/>
                    </prop>
                    <prop type="string" name="hyperVGeneration" arg="$disk.properties.hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="maxShares" arg="$disk.properties.maxShares"/>
                    <prop type="string" name="networkAccessPolicy" arg="$disk.properties.networkAccessPolicy">
                      <enum>
                        <item value="&quot;AllowAll&quot;"/>
                        <item value="&quot;AllowPrivate&quot;"/>
                        <item value="&quot;DenyAll&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="optimizedForFrequentAttach" arg="$disk.properties.optimizedForFrequentAttach"/>
                    <prop type="string" name="osType" arg="$disk.properties.osType">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$disk.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan" arg="$disk.properties.purchasePlan">
                      <prop type="string" name="name" arg="$disk.properties.purchasePlan.name" required="True"/>
                      <prop type="string" name="product" arg="$disk.properties.purchasePlan.product" required="True"/>
                      <prop type="string" name="promotionCode" arg="$disk.properties.purchasePlan.promotionCode"/>
                      <prop type="string" name="publisher" arg="$disk.properties.purchasePlan.publisher" required="True"/>
                    </prop>
                    <prop type="object" name="securityProfile" arg="$disk.properties.securityProfile">
                      <prop type="string" name="secureVMDiskEncryptionSetId" arg="$disk.properties.securityProfile.secureVMDiskEncryptionSetId"/>
                      <prop type="string" name="securityType" arg="$disk.properties.securityProfile.securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="supportedCapabilities" arg="$disk.properties.supportedCapabilities">
                      <prop type="boolean" name="acceleratedNetwork" arg="$disk.properties.supportedCapabilities.acceleratedNetwork"/>
                      <prop type="string" name="architecture" arg="$disk.properties.supportedCapabilities.architecture">
                        <enum>
                          <item value="&quot;Arm64&quot;"/>
                          <item value="&quot;x64&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="diskControllerTypes" arg="$disk.properties.supportedCapabilities.diskControllerTypes"/>
                    </prop>
                    <prop type="boolean" name="supportsHibernation" arg="$disk.properties.supportsHibernation"/>
                    <prop type="string" name="tier" arg="$disk.properties.tier"/>
                  </prop>
                  <prop type="object" name="sku" arg="$disk.sku">
                    <prop type="string" name="name" arg="$disk.sku.name">
                      <enum>
                        <item value="&quot;PremiumV2_LRS&quot;"/>
                        <item value="&quot;Premium_LRS&quot;"/>
                        <item value="&quot;Premium_ZRS&quot;"/>
                        <item value="&quot;StandardSSD_LRS&quot;"/>
                        <item value="&quot;StandardSSD_ZRS&quot;"/>
                        <item value="&quot;Standard_LRS&quot;"/>
                        <item value="&quot;UltraSSD_LRS&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$disk.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$disk.zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Disk_read">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/disks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="managedBy"/>
                  <prop readOnly="True" type="array<string>" name="managedByExtended">
                    <item type="string"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="LastOwnershipUpdateTime"/>
                    <prop type="boolean" name="burstingEnabled"/>
                    <prop readOnly="True" type="dateTime" name="burstingEnabledTime"/>
                    <prop type="float" name="completionPercent"/>
                    <prop type="object" name="creationData" required="True">
                      <prop type="string" name="createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Copy&quot;"/>
                          <item value="&quot;CopyFromSanSnapshot&quot;"/>
                          <item value="&quot;CopyStart&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                          <item value="&quot;Import&quot;"/>
                          <item value="&quot;ImportSecure&quot;"/>
                          <item value="&quot;Restore&quot;"/>
                          <item value="&quot;Upload&quot;"/>
                          <item value="&quot;UploadPreparedSecure&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="elasticSanResourceId"/>
                      <prop type="@ImageDiskReference_read" name="galleryImageReference"/>
                      <prop type="object" name="imageReference" cls="ImageDiskReference_read">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop type="string" name="id"/>
                        <prop type="integer32" name="lun"/>
                        <prop type="string" name="sharedGalleryImageId"/>
                      </prop>
                      <prop type="integer32" name="logicalSectorSize"/>
                      <prop type="boolean" name="performancePlus"/>
                      <prop type="string" name="securityDataUri"/>
                      <prop type="string" name="sourceResourceId"/>
                      <prop readOnly="True" type="string" name="sourceUniqueId"/>
                      <prop type="string" name="sourceUri"/>
                      <prop type="string" name="storageAccountId"/>
                      <prop type="integer64" name="uploadSizeBytes"/>
                    </prop>
                    <prop type="string" name="dataAccessAuthMode">
                      <enum>
                        <item value="&quot;AzureActiveDirectory&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="diskAccessId"/>
                    <prop type="integer64" name="diskIOPSReadOnly"/>
                    <prop type="integer64" name="diskIOPSReadWrite"/>
                    <prop type="integer64" name="diskMBpsReadOnly"/>
                    <prop type="integer64" name="diskMBpsReadWrite"/>
                    <prop readOnly="True" type="integer64" name="diskSizeBytes"/>
                    <prop type="integer32" name="diskSizeGB"/>
                    <prop readOnly="True" type="string" name="diskState">
                      <enum>
                        <item value="&quot;ActiveSAS&quot;"/>
                        <item value="&quot;ActiveSASFrozen&quot;"/>
                        <item value="&quot;ActiveUpload&quot;"/>
                        <item value="&quot;Attached&quot;"/>
                        <item value="&quot;Frozen&quot;"/>
                        <item value="&quot;ReadyToUpload&quot;"/>
                        <item value="&quot;Reserved&quot;"/>
                        <item value="&quot;Unattached&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="string" name="diskEncryptionSetId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="encryptionSettingsCollection">
                      <prop type="boolean" name="enabled" required="True"/>
                      <prop type="array<object>" name="encryptionSettings">
                        <item type="object">
                          <prop type="object" name="diskEncryptionKey">
                            <prop type="string" name="secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True" cls="SourceVault_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="@SourceVault_read" name="sourceVault" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="encryptionSettingsVersion"/>
                    </prop>
                    <prop type="string" name="hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="maxShares"/>
                    <prop type="string" name="networkAccessPolicy">
                      <enum>
                        <item value="&quot;AllowAll&quot;"/>
                        <item value="&quot;AllowPrivate&quot;"/>
                        <item value="&quot;DenyAll&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="optimizedForFrequentAttach"/>
                    <prop type="string" name="osType">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="propertyUpdatesInProgress">
                      <prop type="string" name="targetTier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan">
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="product" required="True"/>
                      <prop type="string" name="promotionCode"/>
                      <prop type="string" name="publisher" required="True"/>
                    </prop>
                    <prop type="object" name="securityProfile">
                      <prop type="string" name="secureVMDiskEncryptionSetId"/>
                      <prop type="string" name="securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="shareInfo" identifiers="vmUri">
                      <item type="object">
                        <prop readOnly="True" type="string" name="vmUri"/>
                      </item>
                    </prop>
                    <prop type="object" name="supportedCapabilities">
                      <prop type="boolean" name="acceleratedNetwork"/>
                      <prop type="string" name="architecture">
                        <enum>
                          <item value="&quot;Arm64&quot;"/>
                          <item value="&quot;x64&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="diskControllerTypes"/>
                    </prop>
                    <prop type="boolean" name="supportsHibernation"/>
                    <prop type="string" name="tier"/>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;PremiumV2_LRS&quot;"/>
                        <item value="&quot;Premium_LRS&quot;"/>
                        <item value="&quot;Premium_ZRS&quot;"/>
                        <item value="&quot;StandardSSD_LRS&quot;"/>
                        <item value="&quot;StandardSSD_ZRS&quot;"/>
                        <item value="&quot;Standard_LRS&quot;"/>
                        <item value="&quot;UltraSSD_LRS&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@Disk_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-04-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/disks/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrcy97ZGlza05hbWV9/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskName" options="disk-name name n" required="True" idPart="name">
          <help short="The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Disk">
        <arg nullable="True" type="object" var="$disk.extendedLocation" options="extended-location" group="Disk">
          <help short="The extended location where the disk will be created. Extended location cannot be changed."/>
          <arg nullable="True" type="string" var="$disk.extendedLocation.name" options="name">
            <help short="The name of the extended location."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.extendedLocation.type" options="type">
            <help short="The type of the extended location."/>
            <enum>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$disk.location" options="location l" group="Disk">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$disk.sku" options="sku" group="Disk">
          <help short="The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, StandardSSD_ZRS, or PremiumV2_LRS."/>
          <arg nullable="True" type="string" var="$disk.sku.name" options="name">
            <help short="The sku name."/>
            <enum>
              <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
              <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
              <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
              <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
              <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$disk.tags" options="tags" group="Disk">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="array<string>" var="$disk.zones" options="zones" group="Disk">
          <help short="The Logical zone list for Disk."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$disk.properties.burstingEnabled" options="bursting-enabled" group="Properties">
          <help short="Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks."/>
        </arg>
        <arg nullable="True" type="float" var="$disk.properties.completionPercent" options="completion-percent" group="Properties">
          <help short="Percentage complete for the background copy when a resource is created via the CopyStart operation."/>
        </arg>
        <arg type="object" var="$disk.properties.creationData" options="creation-data" group="Properties">
          <help short="Disk source information. CreationData information cannot be changed after the disk has been created."/>
          <arg type="string" var="$disk.properties.creationData.createOption" options="create-option">
            <help short="This enumerates the possible sources of a disk's creation."/>
            <enum>
              <item name="Attach" value="&quot;Attach&quot;"/>
              <item name="Copy" value="&quot;Copy&quot;"/>
              <item name="CopyFromSanSnapshot" value="&quot;CopyFromSanSnapshot&quot;"/>
              <item name="CopyStart" value="&quot;CopyStart&quot;"/>
              <item name="Empty" value="&quot;Empty&quot;"/>
              <item name="FromImage" value="&quot;FromImage&quot;"/>
              <item name="Import" value="&quot;Import&quot;"/>
              <item name="ImportSecure" value="&quot;ImportSecure&quot;"/>
              <item name="Restore" value="&quot;Restore&quot;"/>
              <item name="Upload" value="&quot;Upload&quot;"/>
              <item name="UploadPreparedSecure" value="&quot;UploadPreparedSecure&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.creationData.elasticSanResourceId" options="elastic-san-resource-id">
            <help short="Required if createOption is CopyFromSanSnapshot. This is the ARM id of the source elastic san volume snapshot."/>
          </arg>
          <arg nullable="True" type="@ImageDiskReference_update" var="$disk.properties.creationData.galleryImageReference" options="gallery-image-reference">
            <help short="Required if creating from a Gallery Image. The id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk."/>
          </arg>
          <arg nullable="True" type="object" var="$disk.properties.creationData.imageReference" options="image-reference" cls="ImageDiskReference_update">
            <help short="Disk source information for PIR or user images."/>
            <arg nullable="True" type="string" var="@ImageDiskReference_update.communityGalleryImageId" options="community-gallery-image-id">
              <help short="A relative uri containing a community Azure Compute Gallery image reference."/>
            </arg>
            <arg nullable="True" type="string" var="@ImageDiskReference_update.id" options="id">
              <help short="A relative uri containing either a Platform Image Repository, user image, or Azure Compute Gallery image reference."/>
            </arg>
            <arg nullable="True" type="integer32" var="@ImageDiskReference_update.lun" options="lun">
              <help short="If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null."/>
            </arg>
            <arg nullable="True" type="string" var="@ImageDiskReference_update.sharedGalleryImageId" options="shared-gallery-image-id">
              <help short="A relative uri containing a direct shared Azure Compute Gallery image reference."/>
            </arg>
          </arg>
          <arg nullable="True" type="integer32" var="$disk.properties.creationData.logicalSectorSize" options="logical-sector-size">
            <help short="Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default."/>
          </arg>
          <arg nullable="True" type="boolean" var="$disk.properties.creationData.performancePlus" options="performance-plus">
            <help short="Set this flag to true to get a boost on the performance target of the disk deployed, see here on the respective performance target. This flag can only be set on disk creation time and cannot be disabled after enabled."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.creationData.securityDataUri" options="security-data-uri">
            <help short="If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.creationData.sourceResourceId" options="source-resource-id">
            <help short="If createOption is Copy, this is the ARM id of the source snapshot or disk."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.creationData.sourceUri" options="source-uri">
            <help short="If createOption is Import, this is the URI of a blob to be imported into a managed disk."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.creationData.storageAccountId" options="storage-account-id">
            <help short="Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk."/>
          </arg>
          <arg nullable="True" type="integer64" var="$disk.properties.creationData.uploadSizeBytes" options="upload-size-bytes">
            <help short="If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer)."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.dataAccessAuthMode" options="data-access-auth-mode" group="Properties">
          <help short="Additional authentication requirements when exporting or uploading to a disk or snapshot."/>
          <enum>
            <item name="AzureActiveDirectory" value="&quot;AzureActiveDirectory&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.diskAccessId" options="disk-access-id" group="Properties">
          <help short="ARM id of the DiskAccess resource for using private endpoints on disks."/>
        </arg>
        <arg nullable="True" type="integer64" var="$disk.properties.diskIOPSReadOnly" options="disk-iops-read-only" group="Properties">
          <help short="The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes."/>
        </arg>
        <arg nullable="True" type="integer64" var="$disk.properties.diskIOPSReadWrite" options="disk-iops-read-write" group="Properties">
          <help short="The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes."/>
        </arg>
        <arg nullable="True" type="integer64" var="$disk.properties.diskMBpsReadOnly" options="disk-m-bps-read-only" group="Properties">
          <help short="The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."/>
        </arg>
        <arg nullable="True" type="integer64" var="$disk.properties.diskMBpsReadWrite" options="disk-m-bps-read-write" group="Properties">
          <help short="The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."/>
        </arg>
        <arg nullable="True" type="integer32" var="$disk.properties.diskSizeGB" options="disk-size-gb" group="Properties">
          <help short="If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."/>
        </arg>
        <arg nullable="True" type="object" var="$disk.properties.encryption" options="encryption" group="Properties">
          <help short="Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."/>
          <arg nullable="True" type="string" var="$disk.properties.encryption.diskEncryptionSetId" options="disk-encryption-set-id">
            <help short="ResourceId of the disk encryption set to use for enabling encryption at rest."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.encryption.type" options="type">
            <help short="The type of key used to encrypt the data of the disk."/>
            <enum>
              <item name="EncryptionAtRestWithCustomerKey" value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
              <item name="EncryptionAtRestWithPlatformAndCustomerKeys" value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
              <item name="EncryptionAtRestWithPlatformKey" value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$disk.properties.encryptionSettingsCollection" options="encryption-settings-collection" group="Properties">
          <help short="Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."/>
          <arg type="boolean" var="$disk.properties.encryptionSettingsCollection.enabled" options="enabled">
            <help short="Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged."/>
          </arg>
          <arg nullable="True" type="array<object>" var="$disk.properties.encryptionSettingsCollection.encryptionSettings" options="encryption-settings">
            <help short="A collection of encryption settings, one for each disk volume."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="object" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey" options="disk-encryption-key">
                <help short="Key Vault Secret Url and vault id of the disk encryption key"/>
                <arg type="string" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.secretUrl" options="secret-url">
                  <help short="Url pointing to a key or secret in KeyVault"/>
                </arg>
                <arg type="object" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.sourceVault" options="source-vault" cls="SourceVault_update">
                  <help short="Resource id of the KeyVault containing the key or secret"/>
                  <arg nullable="True" type="string" var="@SourceVault_update.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey" options="key-encryption-key">
                <help short="Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key."/>
                <arg type="string" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.keyUrl" options="key-url">
                  <help short="Url pointing to a key or secret in KeyVault"/>
                </arg>
                <arg type="@SourceVault_update" var="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.sourceVault" options="source-vault">
                  <help short="Resource id of the KeyVault containing the key or secret"/>
                </arg>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.encryptionSettingsCollection.encryptionSettingsVersion" options="encryption-settings-version">
            <help short="Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.hyperVGeneration" options="hyper-v-generation" group="Properties">
          <help short="The hypervisor generation of the Virtual Machine. Applicable to OS disks only."/>
          <enum>
            <item name="V1" value="&quot;V1&quot;"/>
            <item name="V2" value="&quot;V2&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$disk.properties.maxShares" options="max-shares" group="Properties">
          <help short="The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time."/>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.networkAccessPolicy" options="network-access-policy" group="Properties">
          <help short="Policy for accessing the disk via network."/>
          <enum>
            <item name="AllowAll" value="&quot;AllowAll&quot;"/>
            <item name="AllowPrivate" value="&quot;AllowPrivate&quot;"/>
            <item name="DenyAll" value="&quot;DenyAll&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$disk.properties.optimizedForFrequentAttach" options="optimized-for-frequent-attach" group="Properties">
          <help short="Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."/>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.osType" options="os-type" group="Properties">
          <help short="The Operating System type."/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Policy for controlling export on the disk."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$disk.properties.purchasePlan" options="purchase-plan" group="Properties">
          <help short="Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}"/>
          <arg type="string" var="$disk.properties.purchasePlan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg type="string" var="$disk.properties.purchasePlan.product" options="product">
            <help short="Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.purchasePlan.promotionCode" options="promotion-code">
            <help short="The Offer Promotion Code."/>
          </arg>
          <arg type="string" var="$disk.properties.purchasePlan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$disk.properties.securityProfile" options="security-profile" group="Properties">
          <help short="Contains the security related information for the resource."/>
          <arg nullable="True" type="string" var="$disk.properties.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
            <help short="ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key"/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.securityProfile.securityType" options="security-type">
            <help short="Specifies the SecurityType of the VM. Applicable for OS disks only."/>
            <enum>
              <item name="ConfidentialVM_DiskEncryptedWithCustomerKey" value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
              <item name="ConfidentialVM_DiskEncryptedWithPlatformKey" value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
              <item name="ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey" value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
              <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$disk.properties.supportedCapabilities" options="supported-capabilities" group="Properties">
          <help short="List of supported capabilities for the image from which the OS disk was created."/>
          <arg nullable="True" type="boolean" var="$disk.properties.supportedCapabilities.acceleratedNetwork" options="accelerated-network">
            <help short="True if the image from which the OS disk is created supports accelerated networking."/>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.supportedCapabilities.architecture" options="architecture">
            <help short="CPU architecture supported by an OS disk."/>
            <enum>
              <item name="Arm64" value="&quot;Arm64&quot;"/>
              <item name="x64" value="&quot;x64&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$disk.properties.supportedCapabilities.diskControllerTypes" options="disk-controller-types">
            <help short="The disk controllers that an OS disk supports. If set it can be SCSI or SCSI, NVME or NVME, SCSI."/>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$disk.properties.supportsHibernation" options="supports-hibernation" group="Properties">
          <help short="Indicates the OS on a disk supports hibernation."/>
        </arg>
        <arg nullable="True" type="string" var="$disk.properties.tier" options="tier" group="Properties">
          <help short="Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks."/>
        </arg>
      </argGroup>
      <operation operationId="Disks_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}">
          <request method="get">
            <path>
              <param type="string" name="diskName" arg="$Path.diskName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Disk_read">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/disks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="managedBy"/>
                  <prop readOnly="True" type="array<string>" name="managedByExtended">
                    <item type="string"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="LastOwnershipUpdateTime"/>
                    <prop type="boolean" name="burstingEnabled"/>
                    <prop readOnly="True" type="dateTime" name="burstingEnabledTime"/>
                    <prop type="float" name="completionPercent"/>
                    <prop type="object" name="creationData" required="True">
                      <prop type="string" name="createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Copy&quot;"/>
                          <item value="&quot;CopyFromSanSnapshot&quot;"/>
                          <item value="&quot;CopyStart&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                          <item value="&quot;Import&quot;"/>
                          <item value="&quot;ImportSecure&quot;"/>
                          <item value="&quot;Restore&quot;"/>
                          <item value="&quot;Upload&quot;"/>
                          <item value="&quot;UploadPreparedSecure&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="elasticSanResourceId"/>
                      <prop type="@ImageDiskReference_read" name="galleryImageReference"/>
                      <prop type="object" name="imageReference" cls="ImageDiskReference_read">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop type="string" name="id"/>
                        <prop type="integer32" name="lun"/>
                        <prop type="string" name="sharedGalleryImageId"/>
                      </prop>
                      <prop type="integer32" name="logicalSectorSize"/>
                      <prop type="boolean" name="performancePlus"/>
                      <prop type="string" name="securityDataUri"/>
                      <prop type="string" name="sourceResourceId"/>
                      <prop readOnly="True" type="string" name="sourceUniqueId"/>
                      <prop type="string" name="sourceUri"/>
                      <prop type="string" name="storageAccountId"/>
                      <prop type="integer64" name="uploadSizeBytes"/>
                    </prop>
                    <prop type="string" name="dataAccessAuthMode">
                      <enum>
                        <item value="&quot;AzureActiveDirectory&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="diskAccessId"/>
                    <prop type="integer64" name="diskIOPSReadOnly"/>
                    <prop type="integer64" name="diskIOPSReadWrite"/>
                    <prop type="integer64" name="diskMBpsReadOnly"/>
                    <prop type="integer64" name="diskMBpsReadWrite"/>
                    <prop readOnly="True" type="integer64" name="diskSizeBytes"/>
                    <prop type="integer32" name="diskSizeGB"/>
                    <prop readOnly="True" type="string" name="diskState">
                      <enum>
                        <item value="&quot;ActiveSAS&quot;"/>
                        <item value="&quot;ActiveSASFrozen&quot;"/>
                        <item value="&quot;ActiveUpload&quot;"/>
                        <item value="&quot;Attached&quot;"/>
                        <item value="&quot;Frozen&quot;"/>
                        <item value="&quot;ReadyToUpload&quot;"/>
                        <item value="&quot;Reserved&quot;"/>
                        <item value="&quot;Unattached&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="string" name="diskEncryptionSetId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="encryptionSettingsCollection">
                      <prop type="boolean" name="enabled" required="True"/>
                      <prop type="array<object>" name="encryptionSettings">
                        <item type="object">
                          <prop type="object" name="diskEncryptionKey">
                            <prop type="string" name="secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True" cls="SourceVault_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="@SourceVault_read" name="sourceVault" required="True"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="encryptionSettingsVersion"/>
                    </prop>
                    <prop type="string" name="hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="maxShares"/>
                    <prop type="string" name="networkAccessPolicy">
                      <enum>
                        <item value="&quot;AllowAll&quot;"/>
                        <item value="&quot;AllowPrivate&quot;"/>
                        <item value="&quot;DenyAll&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="optimizedForFrequentAttach"/>
                    <prop type="string" name="osType">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="propertyUpdatesInProgress">
                      <prop type="string" name="targetTier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan">
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="product" required="True"/>
                      <prop type="string" name="promotionCode"/>
                      <prop type="string" name="publisher" required="True"/>
                    </prop>
                    <prop type="object" name="securityProfile">
                      <prop type="string" name="secureVMDiskEncryptionSetId"/>
                      <prop type="string" name="securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="shareInfo" identifiers="vmUri">
                      <item type="object">
                        <prop readOnly="True" type="string" name="vmUri"/>
                      </item>
                    </prop>
                    <prop type="object" name="supportedCapabilities">
                      <prop type="boolean" name="acceleratedNetwork"/>
                      <prop type="string" name="architecture">
                        <enum>
                          <item value="&quot;Arm64&quot;"/>
                          <item value="&quot;x64&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="diskControllerTypes"/>
                    </prop>
                    <prop type="boolean" name="supportsHibernation"/>
                    <prop type="string" name="tier"/>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;PremiumV2_LRS&quot;"/>
                        <item value="&quot;Premium_LRS&quot;"/>
                        <item value="&quot;Premium_ZRS&quot;"/>
                        <item value="&quot;StandardSSD_LRS&quot;"/>
                        <item value="&quot;StandardSSD_ZRS&quot;"/>
                        <item value="&quot;Standard_LRS&quot;"/>
                        <item value="&quot;UltraSSD_LRS&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="disk" required="True" clientFlatten="True">
              <prop type="object" name="extendedLocation" arg="$disk.extendedLocation">
                <prop type="string" name="name" arg="$disk.extendedLocation.name"/>
                <prop type="string" name="type" arg="$disk.extendedLocation.type">
                  <enum>
                    <item value="&quot;EdgeZone&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$disk.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="burstingEnabled" arg="$disk.properties.burstingEnabled"/>
                <prop type="float" name="completionPercent" arg="$disk.properties.completionPercent"/>
                <prop type="object" name="creationData" arg="$disk.properties.creationData" required="True">
                  <prop type="string" name="createOption" arg="$disk.properties.creationData.createOption" required="True">
                    <enum>
                      <item value="&quot;Attach&quot;"/>
                      <item value="&quot;Copy&quot;"/>
                      <item value="&quot;CopyFromSanSnapshot&quot;"/>
                      <item value="&quot;CopyStart&quot;"/>
                      <item value="&quot;Empty&quot;"/>
                      <item value="&quot;FromImage&quot;"/>
                      <item value="&quot;Import&quot;"/>
                      <item value="&quot;ImportSecure&quot;"/>
                      <item value="&quot;Restore&quot;"/>
                      <item value="&quot;Upload&quot;"/>
                      <item value="&quot;UploadPreparedSecure&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="elasticSanResourceId" arg="$disk.properties.creationData.elasticSanResourceId"/>
                  <prop type="@ImageDiskReference_update" name="galleryImageReference" arg="$disk.properties.creationData.galleryImageReference"/>
                  <prop type="object" name="imageReference" arg="$disk.properties.creationData.imageReference" cls="ImageDiskReference_update">
                    <prop type="string" name="communityGalleryImageId" arg="@ImageDiskReference_update.communityGalleryImageId"/>
                    <prop type="string" name="id" arg="@ImageDiskReference_update.id"/>
                    <prop type="integer32" name="lun" arg="@ImageDiskReference_update.lun"/>
                    <prop type="string" name="sharedGalleryImageId" arg="@ImageDiskReference_update.sharedGalleryImageId"/>
                  </prop>
                  <prop type="integer32" name="logicalSectorSize" arg="$disk.properties.creationData.logicalSectorSize"/>
                  <prop type="boolean" name="performancePlus" arg="$disk.properties.creationData.performancePlus"/>
                  <prop type="string" name="securityDataUri" arg="$disk.properties.creationData.securityDataUri"/>
                  <prop type="string" name="sourceResourceId" arg="$disk.properties.creationData.sourceResourceId"/>
                  <prop type="string" name="sourceUri" arg="$disk.properties.creationData.sourceUri"/>
                  <prop type="string" name="storageAccountId" arg="$disk.properties.creationData.storageAccountId"/>
                  <prop type="integer64" name="uploadSizeBytes" arg="$disk.properties.creationData.uploadSizeBytes"/>
                </prop>
                <prop type="string" name="dataAccessAuthMode" arg="$disk.properties.dataAccessAuthMode">
                  <enum>
                    <item value="&quot;AzureActiveDirectory&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="diskAccessId" arg="$disk.properties.diskAccessId"/>
                <prop type="integer64" name="diskIOPSReadOnly" arg="$disk.properties.diskIOPSReadOnly"/>
                <prop type="integer64" name="diskIOPSReadWrite" arg="$disk.properties.diskIOPSReadWrite"/>
                <prop type="integer64" name="diskMBpsReadOnly" arg="$disk.properties.diskMBpsReadOnly"/>
                <prop type="integer64" name="diskMBpsReadWrite" arg="$disk.properties.diskMBpsReadWrite"/>
                <prop type="integer32" name="diskSizeGB" arg="$disk.properties.diskSizeGB"/>
                <prop type="object" name="encryption" arg="$disk.properties.encryption">
                  <prop type="string" name="diskEncryptionSetId" arg="$disk.properties.encryption.diskEncryptionSetId"/>
                  <prop type="string" name="type" arg="$disk.properties.encryption.type">
                    <enum>
                      <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                      <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                      <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="encryptionSettingsCollection" arg="$disk.properties.encryptionSettingsCollection">
                  <prop type="boolean" name="enabled" arg="$disk.properties.encryptionSettingsCollection.enabled" required="True"/>
                  <prop type="array<object>" name="encryptionSettings" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings">
                    <item type="object">
                      <prop type="object" name="diskEncryptionKey" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey">
                        <prop type="string" name="secretUrl" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.secretUrl" required="True"/>
                        <prop type="object" name="sourceVault" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].diskEncryptionKey.sourceVault" required="True" cls="SourceVault_update">
                          <prop type="string" name="id" arg="@SourceVault_update.id"/>
                        </prop>
                      </prop>
                      <prop type="object" name="keyEncryptionKey" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey">
                        <prop type="string" name="keyUrl" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.keyUrl" required="True"/>
                        <prop type="@SourceVault_update" name="sourceVault" arg="$disk.properties.encryptionSettingsCollection.encryptionSettings[].keyEncryptionKey.sourceVault" required="True"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="encryptionSettingsVersion" arg="$disk.properties.encryptionSettingsCollection.encryptionSettingsVersion"/>
                </prop>
                <prop type="string" name="hyperVGeneration" arg="$disk.properties.hyperVGeneration">
                  <enum>
                    <item value="&quot;V1&quot;"/>
                    <item value="&quot;V2&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="maxShares" arg="$disk.properties.maxShares"/>
                <prop type="string" name="networkAccessPolicy" arg="$disk.properties.networkAccessPolicy">
                  <enum>
                    <item value="&quot;AllowAll&quot;"/>
                    <item value="&quot;AllowPrivate&quot;"/>
                    <item value="&quot;DenyAll&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="optimizedForFrequentAttach" arg="$disk.properties.optimizedForFrequentAttach"/>
                <prop type="string" name="osType" arg="$disk.properties.osType">
                  <enum>
                    <item value="&quot;Linux&quot;"/>
                    <item value="&quot;Windows&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="publicNetworkAccess" arg="$disk.properties.publicNetworkAccess">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="purchasePlan" arg="$disk.properties.purchasePlan">
                  <prop type="string" name="name" arg="$disk.properties.purchasePlan.name" required="True"/>
                  <prop type="string" name="product" arg="$disk.properties.purchasePlan.product" required="True"/>
                  <prop type="string" name="promotionCode" arg="$disk.properties.purchasePlan.promotionCode"/>
                  <prop type="string" name="publisher" arg="$disk.properties.purchasePlan.publisher" required="True"/>
                </prop>
                <prop type="object" name="securityProfile" arg="$disk.properties.securityProfile">
                  <prop type="string" name="secureVMDiskEncryptionSetId" arg="$disk.properties.securityProfile.secureVMDiskEncryptionSetId"/>
                  <prop type="string" name="securityType" arg="$disk.properties.securityProfile.securityType">
                    <enum>
                      <item value="&quot;ConfidentialVM_DiskEncryptedWithCustomerKey&quot;"/>
                      <item value="&quot;ConfidentialVM_DiskEncryptedWithPlatformKey&quot;"/>
                      <item value="&quot;ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey&quot;"/>
                      <item value="&quot;TrustedLaunch&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="supportedCapabilities" arg="$disk.properties.supportedCapabilities">
                  <prop type="boolean" name="acceleratedNetwork" arg="$disk.properties.supportedCapabilities.acceleratedNetwork"/>
                  <prop type="string" name="architecture" arg="$disk.properties.supportedCapabilities.architecture">
                    <enum>
                      <item value="&quot;Arm64&quot;"/>
                      <item value="&quot;x64&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="diskControllerTypes" arg="$disk.properties.supportedCapabilities.diskControllerTypes"/>
                </prop>
                <prop type="boolean" name="supportsHibernation" arg="$disk.properties.supportsHibernation"/>
                <prop type="string" name="tier" arg="$disk.properties.tier"/>
              </prop>
              <prop type="object" name="sku" arg="$disk.sku">
                <prop type="string" name="name" arg="$disk.sku.name">
                  <enum>
                    <item value="&quot;PremiumV2_LRS&quot;"/>
                    <item value="&quot;Premium_LRS&quot;"/>
                    <item value="&quot;Premium_ZRS&quot;"/>
                    <item value="&quot;StandardSSD_LRS&quot;"/>
                    <item value="&quot;StandardSSD_ZRS&quot;"/>
                    <item value="&quot;Standard_LRS&quot;"/>
                    <item value="&quot;UltraSSD_LRS&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$disk.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
              <prop type="array<string>" name="zones" arg="$disk.zones">
                <item type="string"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Disks_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}">
          <request method="put">
            <path>
              <param type="string" name="diskName" arg="$Path.diskName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@Disk_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@Disk_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
