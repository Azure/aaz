<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.sql/managedinstances/{}/distributedavailabilitygroups/{}" version="2023-08-01-preview" swagger="mgmt-plane/sql/ResourceProviders/Microsoft.Sql/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3FsL21hbmFnZWRJbnN0YW5jZXMve21hbmFnZWRJbnN0YW5jZU5hbWV9L2Rpc3RyaWJ1dGVkQXZhaWxhYmlsaXR5R3JvdXBzL3tkaXN0cmlidXRlZEF2YWlsYWJpbGl0eUdyb3VwTmFtZX0=/V/MjAyMy0wOC0wMS1wcmV2aWV3"/>
  <commandGroup name="sql mi link">
    <command name="show" version="2023-08-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.sql/managedinstances/{}/distributedavailabilitygroups/{}" version="2023-08-01-preview" swagger="mgmt-plane/sql/ResourceProviders/Microsoft.Sql/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3FsL21hbmFnZWRJbnN0YW5jZXMve21hbmFnZWRJbnN0YW5jZU5hbWV9L2Rpc3RyaWJ1dGVkQXZhaWxhYmlsaXR5R3JvdXBzL3tkaXN0cmlidXRlZEF2YWlsYWJpbGl0eUdyb3VwTmFtZX0=/V/MjAyMy0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.distributedAvailabilityGroupName" options="link-name name n" required="True" group="" idPart="child_name_1">
          <help short="Managed Instance link name."/>
        </arg>
        <arg type="string" var="$Path.managedInstanceName" options="managed-instance-name managed-instance instance-name mi" required="True" idPart="name">
          <help short="Name of the managed instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DistributedAvailabilityGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/distributedAvailabilityGroups/{distributedAvailabilityGroupName}">
          <request method="get">
            <path>
              <param type="string" name="distributedAvailabilityGroupName" arg="$Path.distributedAvailabilityGroupName" required="True"/>
              <param type="string" name="managedInstanceName" arg="$Path.managedInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Sql/managedInstances/{}/distributedAvailabilityGroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="databases">
                      <item type="object">
                        <prop readOnly="True" type="string" name="connectedState">
                          <enum>
                            <item value="&quot;CONNECTED&quot;"/>
                            <item value="&quot;DISCONNECTED&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="databaseName"/>
                        <prop readOnly="True" type="integer32" name="instanceRedoReplicationLagSeconds"/>
                        <prop readOnly="True" type="uuid" name="instanceReplicaId"/>
                        <prop readOnly="True" type="integer32" name="instanceSendReplicationLagSeconds"/>
                        <prop readOnly="True" type="string" name="lastBackupLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastBackupTime"/>
                        <prop readOnly="True" type="string" name="lastCommitLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastCommitTime"/>
                        <prop readOnly="True" type="string" name="lastHardenedLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastHardenedTime"/>
                        <prop readOnly="True" type="string" name="lastReceivedLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastReceivedTime"/>
                        <prop readOnly="True" type="string" name="lastSentLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastSentTime"/>
                        <prop readOnly="True" type="string" name="mostRecentLinkError"/>
                        <prop readOnly="True" type="object" name="partnerAuthCertValidity">
                          <prop readOnly="True" type="string" name="certificateName"/>
                          <prop readOnly="True" type="dateTime" name="expiryDate"/>
                        </prop>
                        <prop readOnly="True" type="uuid" name="partnerReplicaId"/>
                        <prop readOnly="True" type="string" name="replicaState"/>
                        <prop readOnly="True" type="string" name="seedingProgress"/>
                        <prop readOnly="True" type="string" name="synchronizationHealth">
                          <enum>
                            <item value="&quot;HEALTHY&quot;"/>
                            <item value="&quot;NOT_HEALTHY&quot;"/>
                            <item value="&quot;PARTIALLY_HEALTHY&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="uuid" name="distributedAvailabilityGroupId"/>
                    <prop readOnly="True" type="string" name="distributedAvailabilityGroupName"/>
                    <prop type="string" name="failoverMode">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="instanceAvailabilityGroupName"/>
                    <prop type="string" name="instanceLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="partnerAvailabilityGroupName"/>
                    <prop type="string" name="partnerEndpoint"/>
                    <prop readOnly="True" type="string" name="partnerLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="replicationMode">
                      <enum>
                        <item value="&quot;Async&quot;"/>
                        <item value="&quot;Sync&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="seedingMode">
                      <enum>
                        <item value="&quot;Automatic&quot;"/>
                        <item value="&quot;Manual&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-08-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.sql/managedinstances/{}/distributedavailabilitygroups/{}" version="2023-08-01-preview" swagger="mgmt-plane/sql/ResourceProviders/Microsoft.Sql/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3FsL21hbmFnZWRJbnN0YW5jZXMve21hbmFnZWRJbnN0YW5jZU5hbWV9L2Rpc3RyaWJ1dGVkQXZhaWxhYmlsaXR5R3JvdXBzL3tkaXN0cmlidXRlZEF2YWlsYWJpbGl0eUdyb3VwTmFtZX0=/V/MjAyMy0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.distributedAvailabilityGroupName" options="link-name name n" required="True" group="" idPart="child_name_1">
          <help short="Managed Instance link name."/>
        </arg>
        <arg type="string" var="$Path.managedInstanceName" options="managed-instance-name managed-instance instance-name mi" required="True" idPart="name">
          <help short="Name of the managed instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DistributedAvailabilityGroups_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/distributedAvailabilityGroups/{distributedAvailabilityGroupName}">
          <request method="delete">
            <path>
              <param type="string" name="distributedAvailabilityGroupName" arg="$Path.distributedAvailabilityGroupName" required="True"/>
              <param type="string" name="managedInstanceName" arg="$Path.managedInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-08-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.sql/managedinstances/{}/distributedavailabilitygroups/{}" version="2023-08-01-preview" swagger="mgmt-plane/sql/ResourceProviders/Microsoft.Sql/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3FsL21hbmFnZWRJbnN0YW5jZXMve21hbmFnZWRJbnN0YW5jZU5hbWV9L2Rpc3RyaWJ1dGVkQXZhaWxhYmlsaXR5R3JvdXBzL3tkaXN0cmlidXRlZEF2YWlsYWJpbGl0eUdyb3VwTmFtZX0=/V/MjAyMy0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.distributedAvailabilityGroupName" options="link-name name n" required="True" group="" idPart="child_name_1">
          <help short="Managed Instance link name."/>
        </arg>
        <arg type="string" var="$Path.managedInstanceName" options="managed-instance-name managed-instance instance-name mi" required="True" idPart="name">
          <help short="Name of the managed instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.databases" options="databases" group="Properties">
          <help short="Databases in the distributed availability group"/>
          <item type="object">
            <arg type="string" var="$parameters.properties.databases[].databaseName" options="database-name">
              <help short="The name of the database in link"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.failoverMode" options="failover-mode" group="Properties">
          <help short="The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure."/>
          <enum>
            <item name="Manual" value="&quot;Manual&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.instanceAvailabilityGroupName" options="instance-availability-group-name instance-ag-name" group="Properties">
          <help short="Managed instance side availability group name"/>
        </arg>
        <arg type="string" var="$parameters.properties.instanceLinkRole" options="instance-link-role" group="Properties">
          <help short="Managed instance side link role"/>
          <enum>
            <item name="Primary" value="&quot;Primary&quot;"/>
            <item name="Secondary" value="&quot;Secondary&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.partnerAvailabilityGroupName" options="partner-availability-group-name partner-ag-name" group="Properties">
          <help short="SQL server side availability group name"/>
        </arg>
        <arg type="string" var="$parameters.properties.partnerEndpoint" options="partner-endpoint" group="Properties">
          <help short="SQL server side endpoint - IP or DNS resolvable name"/>
        </arg>
        <arg type="string" var="$parameters.properties.replicationMode" options="replication-mode" hide="True" group="Properties">
          <help short="Replication mode of a Managed Instance link. Parameter will be ignored during link creation."/>
          <enum>
            <item name="Async" value="&quot;Async&quot;"/>
            <item name="Sync" value="&quot;Sync&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.seedingMode" options="seeding-mode" group="Properties">
          <help short="Database seeding mode – can be Automatic (default), or Manual for supported scenarios."/>
          <default value="&quot;Automatic&quot;"/>
          <enum>
            <item name="Automatic" value="&quot;Automatic&quot;"/>
            <item name="Manual" value="&quot;Manual&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="DistributedAvailabilityGroups_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/distributedAvailabilityGroups/{distributedAvailabilityGroupName}">
          <request method="put">
            <path>
              <param type="string" name="distributedAvailabilityGroupName" arg="$Path.distributedAvailabilityGroupName" required="True"/>
              <param type="string" name="managedInstanceName" arg="$Path.managedInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="databases" arg="$parameters.properties.databases">
                      <item type="object">
                        <prop type="string" name="databaseName" arg="$parameters.properties.databases[].databaseName"/>
                      </item>
                    </prop>
                    <prop type="string" name="failoverMode" arg="$parameters.properties.failoverMode">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="instanceAvailabilityGroupName" arg="$parameters.properties.instanceAvailabilityGroupName"/>
                    <prop type="string" name="instanceLinkRole" arg="$parameters.properties.instanceLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="partnerAvailabilityGroupName" arg="$parameters.properties.partnerAvailabilityGroupName"/>
                    <prop type="string" name="partnerEndpoint" arg="$parameters.properties.partnerEndpoint"/>
                    <prop type="string" name="replicationMode" arg="$parameters.properties.replicationMode">
                      <enum>
                        <item value="&quot;Async&quot;"/>
                        <item value="&quot;Sync&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="seedingMode" arg="$parameters.properties.seedingMode">
                      <enum>
                        <item value="&quot;Automatic&quot;"/>
                        <item value="&quot;Manual&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Sql/managedInstances/{}/distributedAvailabilityGroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="databases">
                      <item type="object">
                        <prop readOnly="True" type="string" name="connectedState">
                          <enum>
                            <item value="&quot;CONNECTED&quot;"/>
                            <item value="&quot;DISCONNECTED&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="databaseName"/>
                        <prop readOnly="True" type="integer32" name="instanceRedoReplicationLagSeconds"/>
                        <prop readOnly="True" type="uuid" name="instanceReplicaId"/>
                        <prop readOnly="True" type="integer32" name="instanceSendReplicationLagSeconds"/>
                        <prop readOnly="True" type="string" name="lastBackupLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastBackupTime"/>
                        <prop readOnly="True" type="string" name="lastCommitLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastCommitTime"/>
                        <prop readOnly="True" type="string" name="lastHardenedLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastHardenedTime"/>
                        <prop readOnly="True" type="string" name="lastReceivedLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastReceivedTime"/>
                        <prop readOnly="True" type="string" name="lastSentLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastSentTime"/>
                        <prop readOnly="True" type="string" name="mostRecentLinkError"/>
                        <prop readOnly="True" type="object" name="partnerAuthCertValidity">
                          <prop readOnly="True" type="string" name="certificateName"/>
                          <prop readOnly="True" type="dateTime" name="expiryDate"/>
                        </prop>
                        <prop readOnly="True" type="uuid" name="partnerReplicaId"/>
                        <prop readOnly="True" type="string" name="replicaState"/>
                        <prop readOnly="True" type="string" name="seedingProgress"/>
                        <prop readOnly="True" type="string" name="synchronizationHealth">
                          <enum>
                            <item value="&quot;HEALTHY&quot;"/>
                            <item value="&quot;NOT_HEALTHY&quot;"/>
                            <item value="&quot;PARTIALLY_HEALTHY&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="uuid" name="distributedAvailabilityGroupId"/>
                    <prop readOnly="True" type="string" name="distributedAvailabilityGroupName"/>
                    <prop type="string" name="failoverMode">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="instanceAvailabilityGroupName"/>
                    <prop type="string" name="instanceLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="partnerAvailabilityGroupName"/>
                    <prop type="string" name="partnerEndpoint"/>
                    <prop readOnly="True" type="string" name="partnerLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="replicationMode">
                      <enum>
                        <item value="&quot;Async&quot;"/>
                        <item value="&quot;Sync&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="seedingMode">
                      <enum>
                        <item value="&quot;Automatic&quot;"/>
                        <item value="&quot;Manual&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-08-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.sql/managedinstances/{}/distributedavailabilitygroups/{}" version="2023-08-01-preview" swagger="mgmt-plane/sql/ResourceProviders/Microsoft.Sql/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3FsL21hbmFnZWRJbnN0YW5jZXMve21hbmFnZWRJbnN0YW5jZU5hbWV9L2Rpc3RyaWJ1dGVkQXZhaWxhYmlsaXR5R3JvdXBzL3tkaXN0cmlidXRlZEF2YWlsYWJpbGl0eUdyb3VwTmFtZX0=/V/MjAyMy0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.distributedAvailabilityGroupName" options="link-name name n" required="True" group="" idPart="child_name_1">
          <help short="Managed Instance link name."/>
        </arg>
        <arg type="string" var="$Path.managedInstanceName" options="managed-instance-name managed-instance instance-name mi" required="True" group="" idPart="name">
          <help short="The name of the managed instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.databases" options="databases" hide="True" group="Properties">
          <help short="Databases in the distributed availability group"/>
          <item type="object">
            <arg type="string" var="$parameters.properties.databases[].databaseName" options="database-name">
              <help short="The name of the database in link"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.failoverMode" options="failover-mode" hide="True" group="Properties">
          <help short="The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure."/>
          <enum>
            <item name="Manual" value="&quot;Manual&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.instanceAvailabilityGroupName" options="instance-availability-group-name" hide="True" group="Properties">
          <help short="Managed instance side availability group name"/>
        </arg>
        <arg type="string" var="$parameters.properties.instanceLinkRole" options="instance-link-role" hide="True" group="Properties">
          <help short="Managed instance side link role"/>
          <enum>
            <item name="Primary" value="&quot;Primary&quot;"/>
            <item name="Secondary" value="&quot;Secondary&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.partnerAvailabilityGroupName" options="partner-availability-group-name" hide="True" group="Properties">
          <help short="SQL server side availability group name"/>
        </arg>
        <arg type="string" var="$parameters.properties.partnerEndpoint" options="partner-endpoint" hide="True" group="Properties">
          <help short="SQL server side endpoint - IP or DNS resolvable name"/>
        </arg>
        <arg type="string" var="$parameters.properties.replicationMode" options="replication-mode" group="Properties">
          <help short="Replication mode of the link"/>
          <enum>
            <item name="Async" value="&quot;Async&quot;"/>
            <item name="Sync" value="&quot;Sync&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.seedingMode" options="seeding-mode" hide="True" group="Properties">
          <help short="Database seeding mode – can be Automatic (default), or Manual for supported scenarios."/>
          <enum>
            <item name="Automatic" value="&quot;Automatic&quot;"/>
            <item name="Manual" value="&quot;Manual&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="DistributedAvailabilityGroups_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/distributedAvailabilityGroups/{distributedAvailabilityGroupName}">
          <request method="patch">
            <path>
              <param type="string" name="distributedAvailabilityGroupName" arg="$Path.distributedAvailabilityGroupName" required="True"/>
              <param type="string" name="managedInstanceName" arg="$Path.managedInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-08-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="databases" arg="$parameters.properties.databases">
                      <item type="object">
                        <prop type="string" name="databaseName" arg="$parameters.properties.databases[].databaseName"/>
                      </item>
                    </prop>
                    <prop type="string" name="failoverMode" arg="$parameters.properties.failoverMode">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="instanceAvailabilityGroupName" arg="$parameters.properties.instanceAvailabilityGroupName"/>
                    <prop type="string" name="instanceLinkRole" arg="$parameters.properties.instanceLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="partnerAvailabilityGroupName" arg="$parameters.properties.partnerAvailabilityGroupName"/>
                    <prop type="string" name="partnerEndpoint" arg="$parameters.properties.partnerEndpoint"/>
                    <prop type="string" name="replicationMode" arg="$parameters.properties.replicationMode">
                      <enum>
                        <item value="&quot;Async&quot;"/>
                        <item value="&quot;Sync&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="seedingMode" arg="$parameters.properties.seedingMode">
                      <enum>
                        <item value="&quot;Automatic&quot;"/>
                        <item value="&quot;Manual&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Sql/managedInstances/{}/distributedAvailabilityGroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="databases">
                      <item type="object">
                        <prop readOnly="True" type="string" name="connectedState">
                          <enum>
                            <item value="&quot;CONNECTED&quot;"/>
                            <item value="&quot;DISCONNECTED&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="databaseName"/>
                        <prop readOnly="True" type="integer32" name="instanceRedoReplicationLagSeconds"/>
                        <prop readOnly="True" type="uuid" name="instanceReplicaId"/>
                        <prop readOnly="True" type="integer32" name="instanceSendReplicationLagSeconds"/>
                        <prop readOnly="True" type="string" name="lastBackupLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastBackupTime"/>
                        <prop readOnly="True" type="string" name="lastCommitLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastCommitTime"/>
                        <prop readOnly="True" type="string" name="lastHardenedLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastHardenedTime"/>
                        <prop readOnly="True" type="string" name="lastReceivedLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastReceivedTime"/>
                        <prop readOnly="True" type="string" name="lastSentLsn"/>
                        <prop readOnly="True" type="dateTime" name="lastSentTime"/>
                        <prop readOnly="True" type="string" name="mostRecentLinkError"/>
                        <prop readOnly="True" type="object" name="partnerAuthCertValidity">
                          <prop readOnly="True" type="string" name="certificateName"/>
                          <prop readOnly="True" type="dateTime" name="expiryDate"/>
                        </prop>
                        <prop readOnly="True" type="uuid" name="partnerReplicaId"/>
                        <prop readOnly="True" type="string" name="replicaState"/>
                        <prop readOnly="True" type="string" name="seedingProgress"/>
                        <prop readOnly="True" type="string" name="synchronizationHealth">
                          <enum>
                            <item value="&quot;HEALTHY&quot;"/>
                            <item value="&quot;NOT_HEALTHY&quot;"/>
                            <item value="&quot;PARTIALLY_HEALTHY&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="uuid" name="distributedAvailabilityGroupId"/>
                    <prop readOnly="True" type="string" name="distributedAvailabilityGroupName"/>
                    <prop type="string" name="failoverMode">
                      <enum>
                        <item value="&quot;Manual&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="instanceAvailabilityGroupName"/>
                    <prop type="string" name="instanceLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="partnerAvailabilityGroupName"/>
                    <prop type="string" name="partnerEndpoint"/>
                    <prop readOnly="True" type="string" name="partnerLinkRole">
                      <enum>
                        <item value="&quot;Primary&quot;"/>
                        <item value="&quot;Secondary&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="replicationMode">
                      <enum>
                        <item value="&quot;Async&quot;"/>
                        <item value="&quot;Sync&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="seedingMode">
                      <enum>
                        <item value="&quot;Automatic&quot;"/>
                        <item value="&quot;Manual&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
