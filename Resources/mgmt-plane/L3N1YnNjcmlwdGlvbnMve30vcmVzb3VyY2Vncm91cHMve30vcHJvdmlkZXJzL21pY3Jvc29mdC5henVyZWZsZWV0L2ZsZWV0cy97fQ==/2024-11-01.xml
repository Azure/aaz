<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurefleet/fleets/{}" version="2024-11-01" swagger="mgmt-plane/azurefleet/ResourceProviders/Microsoft.AzureFleet/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVGbGVldC9mbGVldHMve2ZsZWV0TmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
  <commandGroup name="compute-fleet">
    <command name="show" version="2024-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurefleet/fleets/{}" version="2024-11-01" swagger="mgmt-plane/azurefleet/ResourceProviders/Microsoft.AzureFleet/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVGbGVldC9mbGVldHMve2ZsZWV0TmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fleetName" options="fleet-name name n" required="True" idPart="name">
          <help short="The name of the Compute Fleet"/>
          <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription s" required="True" group="" idPart="subscription">
          <help short=""/>
        </arg>
      </argGroup>
      <operation operationId="Fleets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}">
          <request method="get">
            <path>
              <param type="string" name="fleetName" arg="$Path.fleetName" required="True">
                <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureFleet/fleets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalLocationsProfile">
                      <prop type="array<object>" name="locationProfiles" required="True">
                        <item type="object">
                          <prop type="string" name="location" required="True"/>
                          <prop type="object" name="virtualMachineProfileOverride" cls="BaseVirtualMachineProfile_read">
                            <prop type="object" name="applicationProfile">
                              <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                                <item type="object">
                                  <prop type="string" name="configurationReference"/>
                                  <prop type="boolean" name="enableAutomaticUpgrade"/>
                                  <prop type="integer32" name="order"/>
                                  <prop type="ResourceId" name="packageReferenceId" required="True"/>
                                  <prop type="string" name="tags"/>
                                  <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="capacityReservation">
                              <prop type="@SubResource_read" name="capacityReservationGroup"/>
                            </prop>
                            <prop type="object" name="diagnosticsProfile">
                              <prop type="object" name="bootDiagnostics">
                                <prop type="boolean" name="enabled"/>
                                <prop type="string" name="storageUri"/>
                              </prop>
                            </prop>
                            <prop type="object" name="extensionProfile">
                              <prop type="array<object>" name="extensions">
                                <item type="object">
                                  <prop readOnly="True" type="ResourceId" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties">
                                    <prop type="boolean" name="autoUpgradeMinorVersion"/>
                                    <prop type="boolean" name="enableAutomaticUpgrade"/>
                                    <prop type="string" name="forceUpdateTag"/>
                                    <prop type="object" name="protectedSettingsFromKeyVault">
                                      <prop type="string" name="secretUrl" required="True"/>
                                      <prop type="@SubResource_read" name="sourceVault" required="True"/>
                                    </prop>
                                    <prop type="array<string>" name="provisionAfterExtensions">
                                      <item type="string"/>
                                    </prop>
                                    <prop readOnly="True" type="string" name="provisioningState"/>
                                    <prop type="string" name="publisher"/>
                                    <prop type="object" name="settings">
                                      <additionalProp anyType="True"/>
                                    </prop>
                                    <prop type="boolean" name="suppressFailures"/>
                                    <prop type="string" name="type"/>
                                    <prop type="string" name="typeHandlerVersion"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </item>
                              </prop>
                              <prop type="string" name="extensionsTimeBudget"/>
                            </prop>
                            <prop type="object" name="hardwareProfile">
                              <prop type="object" name="vmSizeProperties">
                                <prop type="integer32" name="vCPUsAvailable"/>
                                <prop type="integer32" name="vCPUsPerCore"/>
                              </prop>
                            </prop>
                            <prop type="string" name="licenseType"/>
                            <prop type="object" name="networkProfile">
                              <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                                <prop type="ResourceId" name="id"/>
                              </prop>
                              <prop type="string" name="networkApiVersion">
                                <enum>
                                  <item value="&quot;2020-11-01&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="networkInterfaceConfigurations">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties">
                                    <prop type="string" name="auxiliaryMode">
                                      <enum>
                                        <item value="&quot;AcceleratedConnections&quot;"/>
                                        <item value="&quot;Floating&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="auxiliarySku">
                                      <enum>
                                        <item value="&quot;A1&quot;"/>
                                        <item value="&quot;A2&quot;"/>
                                        <item value="&quot;A4&quot;"/>
                                        <item value="&quot;A8&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="deleteOption">
                                      <enum>
                                        <item value="&quot;Delete&quot;"/>
                                        <item value="&quot;Detach&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="boolean" name="disableTcpStateTracking"/>
                                    <prop type="object" name="dnsSettings">
                                      <prop type="array<string>" name="dnsServers">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="boolean" name="enableAcceleratedNetworking"/>
                                    <prop type="boolean" name="enableFpga"/>
                                    <prop type="boolean" name="enableIPForwarding"/>
                                    <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                      <item type="object">
                                        <prop type="string" name="name" required="True"/>
                                        <prop type="object" name="properties">
                                          <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="boolean" name="primary"/>
                                          <prop type="string" name="privateIPAddressVersion">
                                            <enum>
                                              <item value="&quot;IPv4&quot;"/>
                                              <item value="&quot;IPv6&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="publicIPAddressConfiguration">
                                            <prop type="string" name="name" required="True"/>
                                            <prop type="object" name="properties">
                                              <prop type="string" name="deleteOption">
                                                <enum>
                                                  <item value="&quot;Delete&quot;"/>
                                                  <item value="&quot;Detach&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="object" name="dnsSettings">
                                                <prop type="string" name="domainNameLabel" required="True"/>
                                                <prop type="string" name="domainNameLabelScope">
                                                  <enum>
                                                    <item value="&quot;NoReuse&quot;"/>
                                                    <item value="&quot;ResourceGroupReuse&quot;"/>
                                                    <item value="&quot;SubscriptionReuse&quot;"/>
                                                    <item value="&quot;TenantReuse&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop type="integer32" name="idleTimeoutInMinutes"/>
                                              <prop type="array<object>" name="ipTags">
                                                <item type="object">
                                                  <prop type="string" name="ipTagType"/>
                                                  <prop type="string" name="tag"/>
                                                </item>
                                              </prop>
                                              <prop type="string" name="publicIPAddressVersion">
                                                <enum>
                                                  <item value="&quot;IPv4&quot;"/>
                                                  <item value="&quot;IPv6&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="@SubResource_read" name="publicIPPrefix"/>
                                            </prop>
                                            <prop type="object" name="sku">
                                              <prop type="string" name="name">
                                                <enum>
                                                  <item value="&quot;Basic&quot;"/>
                                                  <item value="&quot;Standard&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="tier">
                                                <enum>
                                                  <item value="&quot;Global&quot;"/>
                                                  <item value="&quot;Regional&quot;"/>
                                                </enum>
                                              </prop>
                                            </prop>
                                          </prop>
                                          <prop type="@ApiEntityReference_read" name="subnet"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="@SubResource_read" name="networkSecurityGroup"/>
                                    <prop type="boolean" name="primary"/>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="osProfile">
                              <prop type="string" name="adminUsername"/>
                              <prop type="boolean" name="allowExtensionOperations"/>
                              <prop type="string" name="computerNamePrefix"/>
                              <prop type="object" name="linuxConfiguration">
                                <prop type="boolean" name="disablePasswordAuthentication"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings">
                                  <prop type="string" name="assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent"/>
                                <prop type="object" name="ssh">
                                  <prop type="array<object>" name="publicKeys" identifiers="path">
                                    <item type="object">
                                      <prop type="string" name="keyData"/>
                                      <prop type="string" name="path"/>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                              <prop type="boolean" name="requireGuestProvisionSignal"/>
                              <prop type="array<object>" name="secrets">
                                <item type="object">
                                  <prop type="object" name="sourceVault" cls="SubResource_read">
                                    <prop type="ResourceId" name="id"/>
                                  </prop>
                                  <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                                    <item type="object">
                                      <prop type="string" name="certificateStore"/>
                                      <prop type="string" name="certificateUrl"/>
                                    </item>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="object" name="windowsConfiguration">
                                <prop type="array<object>" name="additionalUnattendContent">
                                  <item type="object">
                                    <prop type="string" name="componentName">
                                      <enum>
                                        <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="passName">
                                      <enum>
                                        <item value="&quot;OobeSystem&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="settingName">
                                      <enum>
                                        <item value="&quot;AutoLogon&quot;"/>
                                        <item value="&quot;FirstLogonCommands&quot;"/>
                                      </enum>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="boolean" name="enableAutomaticUpdates"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings">
                                  <prop type="string" name="assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="boolean" name="enableHotpatching"/>
                                  <prop type="string" name="patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByOS&quot;"/>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;Manual&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent"/>
                                <prop type="string" name="timeZone"/>
                                <prop type="object" name="winRM">
                                  <prop type="array<object>" name="listeners">
                                    <item type="object">
                                      <prop type="string" name="certificateUrl"/>
                                      <prop type="string" name="protocol">
                                        <enum>
                                          <item value="&quot;Http&quot;"/>
                                          <item value="&quot;Https&quot;"/>
                                        </enum>
                                      </prop>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="object" name="scheduledEventsProfile">
                              <prop type="object" name="osImageNotificationProfile">
                                <prop type="boolean" name="enable"/>
                                <prop type="string" name="notBeforeTimeout"/>
                              </prop>
                              <prop type="object" name="terminateNotificationProfile">
                                <prop type="boolean" name="enable"/>
                                <prop type="string" name="notBeforeTimeout"/>
                              </prop>
                            </prop>
                            <prop type="object" name="securityPostureReference">
                              <prop type="array<string>" name="excludeExtensions">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="id"/>
                              <prop type="boolean" name="isOverridable"/>
                            </prop>
                            <prop type="object" name="securityProfile">
                              <prop type="boolean" name="encryptionAtHost"/>
                              <prop type="object" name="encryptionIdentity">
                                <prop type="ResourceId" name="userAssignedIdentityResourceId"/>
                              </prop>
                              <prop type="object" name="proxyAgentSettings">
                                <prop type="boolean" name="enabled"/>
                                <prop type="integer32" name="keyIncarnationId"/>
                                <prop type="string" name="mode">
                                  <enum>
                                    <item value="&quot;Audit&quot;"/>
                                    <item value="&quot;Enforce&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="securityType">
                                <enum>
                                  <item value="&quot;ConfidentialVM&quot;"/>
                                  <item value="&quot;TrustedLaunch&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="uefiSettings">
                                <prop type="boolean" name="secureBootEnabled"/>
                                <prop type="boolean" name="vTpmEnabled"/>
                              </prop>
                            </prop>
                            <prop type="object" name="serviceArtifactReference">
                              <prop type="ResourceId" name="id"/>
                            </prop>
                            <prop type="object" name="storageProfile">
                              <prop type="array<object>" name="dataDisks" identifiers="name lun">
                                <item type="object">
                                  <prop type="string" name="caching">
                                    <enum>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;ReadOnly&quot;"/>
                                      <item value="&quot;ReadWrite&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="createOption" required="True">
                                    <enum>
                                      <item value="&quot;Attach&quot;"/>
                                      <item value="&quot;Copy&quot;"/>
                                      <item value="&quot;Empty&quot;"/>
                                      <item value="&quot;FromImage&quot;"/>
                                      <item value="&quot;Restore&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="deleteOption">
                                    <enum>
                                      <item value="&quot;Delete&quot;"/>
                                      <item value="&quot;Detach&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer64" name="diskIOPSReadWrite"/>
                                  <prop type="integer64" name="diskMBpsReadWrite"/>
                                  <prop type="integer32" name="diskSizeGB"/>
                                  <prop type="integer32" name="lun" required="True"/>
                                  <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                                  <prop type="string" name="name"/>
                                  <prop type="boolean" name="writeAcceleratorEnabled"/>
                                </item>
                              </prop>
                              <prop type="string" name="diskControllerType">
                                <enum>
                                  <item value="&quot;NVMe&quot;"/>
                                  <item value="&quot;SCSI&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="imageReference">
                                <prop type="string" name="communityGalleryImageId"/>
                                <prop readOnly="True" type="string" name="exactVersion"/>
                                <prop type="ResourceId" name="id"/>
                                <prop type="string" name="offer"/>
                                <prop type="string" name="publisher"/>
                                <prop type="string" name="sharedGalleryImageId"/>
                                <prop type="string" name="sku"/>
                                <prop type="string" name="version"/>
                              </prop>
                              <prop type="object" name="osDisk">
                                <prop type="string" name="caching">
                                  <enum>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;ReadOnly&quot;"/>
                                    <item value="&quot;ReadWrite&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="createOption" required="True">
                                  <enum>
                                    <item value="&quot;Attach&quot;"/>
                                    <item value="&quot;Copy&quot;"/>
                                    <item value="&quot;Empty&quot;"/>
                                    <item value="&quot;FromImage&quot;"/>
                                    <item value="&quot;Restore&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="deleteOption">
                                  <enum>
                                    <item value="&quot;Delete&quot;"/>
                                    <item value="&quot;Detach&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="object" name="diffDiskSettings">
                                  <prop type="string" name="option">
                                    <enum>
                                      <item value="&quot;Local&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="placement">
                                    <enum>
                                      <item value="&quot;CacheDisk&quot;"/>
                                      <item value="&quot;NvmeDisk&quot;"/>
                                      <item value="&quot;ResourceDisk&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="integer32" name="diskSizeGB"/>
                                <prop type="object" name="image">
                                  <prop type="string" name="uri"/>
                                </prop>
                                <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                                  <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                                    <prop type="ResourceId" name="id"/>
                                  </prop>
                                  <prop type="object" name="securityProfile">
                                    <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                                    <prop type="string" name="securityEncryptionType">
                                      <enum>
                                        <item value="&quot;DiskWithVMGuestState&quot;"/>
                                        <item value="&quot;NonPersistedTPM&quot;"/>
                                        <item value="&quot;VMGuestStateOnly&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="storageAccountType">
                                    <enum>
                                      <item value="&quot;PremiumV2_LRS&quot;"/>
                                      <item value="&quot;Premium_LRS&quot;"/>
                                      <item value="&quot;Premium_ZRS&quot;"/>
                                      <item value="&quot;StandardSSD_LRS&quot;"/>
                                      <item value="&quot;StandardSSD_ZRS&quot;"/>
                                      <item value="&quot;Standard_LRS&quot;"/>
                                      <item value="&quot;UltraSSD_LRS&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="osType">
                                  <enum>
                                    <item value="&quot;Linux&quot;"/>
                                    <item value="&quot;Windows&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="array<string>" name="vhdContainers">
                                  <item type="string"/>
                                </prop>
                                <prop type="boolean" name="writeAcceleratorEnabled"/>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="timeCreated"/>
                            <prop type="string" name="userData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="computeProfile" required="True">
                      <prop type="object" name="additionalVirtualMachineCapabilities">
                        <prop type="boolean" name="hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled"/>
                      </prop>
                      <prop type="@BaseVirtualMachineProfile_read" name="baseVirtualMachineProfile" required="True"/>
                      <prop type="string" name="computeApiVersion"/>
                      <prop type="integer32" name="platformFaultDomainCount"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="regularPriorityProfile">
                      <prop type="string" name="allocationStrategy">
                        <enum>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;Prioritized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="spotPriorityProfile">
                      <prop type="string" name="allocationStrategy">
                        <enum>
                          <item value="&quot;CapacityOptimized&quot;"/>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;PriceCapacityOptimized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="maintain"/>
                      <prop type="float32" name="maxPricePerVM"/>
                      <prop type="integer32" name="minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                    <prop type="object" name="vmAttributes">
                      <prop type="@VMAttributeMinMaxInteger_read" name="acceleratorCount"/>
                      <prop type="array<string>" name="acceleratorManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Nvidia&quot;"/>
                            <item value="&quot;Xilinx&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="acceleratorSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="acceleratorTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;FPGA&quot;"/>
                            <item value="&quot;GPU&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<string>" name="architectureTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;ARM64&quot;"/>
                            <item value="&quot;X64&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="burstableSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="cpuManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Ampere&quot;"/>
                            <item value="&quot;Intel&quot;"/>
                            <item value="&quot;Microsoft&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxInteger_read" name="dataDiskCount"/>
                      <prop type="array<string>" name="excludedVMSizes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="localStorageDiskTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;HDD&quot;"/>
                            <item value="&quot;SSD&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_read" name="localStorageInGiB"/>
                      <prop type="string" name="localStorageSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="memoryInGiB" required="True" cls="VMAttributeMinMaxDouble_read">
                        <prop type="float64" name="max">
                          <format minimum="0.0"/>
                        </prop>
                        <prop type="float64" name="min">
                          <format minimum="0.0"/>
                        </prop>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_read" name="memoryInGiBPerVCpu"/>
                      <prop type="@VMAttributeMinMaxDouble_read" name="networkBandwidthInMbps"/>
                      <prop type="@VMAttributeMinMaxInteger_read" name="networkInterfaceCount"/>
                      <prop type="@VMAttributeMinMaxInteger_read" name="rdmaNetworkInterfaceCount"/>
                      <prop type="string" name="rdmaSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vCpuCount" required="True" cls="VMAttributeMinMaxInteger_read">
                        <prop type="integer32" name="max">
                          <format minimum="0"/>
                        </prop>
                        <prop type="integer32" name="min">
                          <format minimum="0"/>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="vmCategories">
                        <item type="string">
                          <enum>
                            <item value="&quot;ComputeOptimized&quot;"/>
                            <item value="&quot;FpgaAccelerated&quot;"/>
                            <item value="&quot;GeneralPurpose&quot;"/>
                            <item value="&quot;GpuAccelerated&quot;"/>
                            <item value="&quot;HighPerformanceCompute&quot;"/>
                            <item value="&quot;MemoryOptimized&quot;"/>
                            <item value="&quot;StorageOptimized&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="vmSizesProfile" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="integer32" name="rank">
                          <format maximum="65535" minimum="0"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurefleet/fleets/{}" version="2024-11-01" swagger="mgmt-plane/azurefleet/ResourceProviders/Microsoft.AzureFleet/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVGbGVldC9mbGVldHMve2ZsZWV0TmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fleetName" options="fleet-name name n" required="True" idPart="name">
          <help short="The name of the Compute Fleet"/>
          <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription s" required="True" group="" idPart="subscription">
          <help short=""/>
        </arg>
      </argGroup>
      <operation operationId="Fleets_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}">
          <request method="delete">
            <path>
              <param type="string" name="fleetName" arg="$Path.fleetName" required="True">
                <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurefleet/fleets/{}" version="2024-11-01" swagger="mgmt-plane/azurefleet/ResourceProviders/Microsoft.AzureFleet/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVGbGVldC9mbGVldHMve2ZsZWV0TmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fleetName" options="fleet-name name n" required="True" idPart="name">
          <help short="The name of the Compute Fleet"/>
          <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription s" required="True" group="" idPart="subscription">
          <help short=""/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.additionalLocationsProfile" options="additional-locations-profile alp" group="Properties">
          <help short="Represents the configuration for additional locations where Fleet resources may be deployed."/>
          <arg type="array<object>" var="$resource.properties.additionalLocationsProfile.locationProfiles" options="location-profiles" required="True">
            <help short="The list of location profiles."/>
            <item type="object">
              <arg type="string" var="$resource.properties.additionalLocationsProfile.locationProfiles[].location" options="location" required="True">
                <help short="The ARM location name of the additional region. If LocationProfile is specified, then location is required."/>
              </arg>
              <arg type="object" var="$resource.properties.additionalLocationsProfile.locationProfiles[].virtualMachineProfileOverride" options="virtual-machine-profile-override" cls="BaseVirtualMachineProfile_create">
                <help short="An override for computeProfile.baseVirtualMachineProfile specific to this region.  This override is merged with the base virtual machine profile to define the final virtual machine profile for the resources deployed in this location."/>
                <arg type="object" var="@BaseVirtualMachineProfile_create.applicationProfile" options="application-profile">
                  <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
                  <arg type="array<object>" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications" options="gallery-applications">
                    <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
                    <item type="object">
                      <arg type="string" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].configurationReference" options="configuration-reference">
                        <help short="Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].enableAutomaticUpgrade" options="enable-automatic-upgrade">
                        <help short="If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"/>
                      </arg>
                      <arg type="integer32" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].order" options="order">
                        <help short="Optional, Specifies the order in which the packages have to be installed"/>
                      </arg>
                      <arg type="ResourceId" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].packageReferenceId" options="package-reference-id" required="True">
                        <help short="Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].tags" options="tags">
                        <help short="Optional, Specifies a passthrough value for more generic context."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure" options="treat-failure-as-deployment-failure">
                        <help short="Optional, If true, any failure for any operation in the VmApplication will fail the deployment"/>
                      </arg>
                    </item>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.capacityReservation" options="capacity-reservation">
                  <help short="Specifies the capacity reservation related details of a scale set. Minimum api-version: 2021-04-01."/>
                  <arg type="@SubResource_create" var="@BaseVirtualMachineProfile_create.capacityReservation.capacityReservationGroup" options="capacity-reservation-group">
                    <help short="Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."/>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.diagnosticsProfile" options="diagnostics-profile">
                  <help short="Specifies the boot diagnostic settings state."/>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.diagnosticsProfile.bootDiagnostics" options="boot-diagnostics">
                    <help short="Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."/>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.diagnosticsProfile.bootDiagnostics.enabled" options="enabled">
                      <help short="Whether boot diagnostics should be enabled on the Virtual Machine."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.diagnosticsProfile.bootDiagnostics.storageUri" options="storage-uri">
                      <help short="Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."/>
                    </arg>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.extensionProfile" options="extension-profile">
                  <help short="Specifies a collection of settings for extensions installed on virtual machines in the scale set."/>
                  <arg type="array<object>" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions" options="extensions">
                    <help short="The virtual machine scale set child extension resources."/>
                    <item type="object">
                      <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].name" options="name">
                        <help short="The name of the extension."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
                        <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="Properties">
                        <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.forceUpdateTag" options="force-update-tag" group="Properties">
                        <help short="If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."/>
                      </arg>
                      <arg type="object" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettings" options="protected-settings" group="Properties">
                        <help short="The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."/>
                        <additionalProp anyType="True"/>
                      </arg>
                      <arg type="object" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault" options="protected-settings-from-key-vault" group="Properties">
                        <help short="The extensions protected settings that are passed by reference, and consumed from key vault"/>
                        <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.secretUrl" options="secret-url" required="True">
                          <help short="The URL referencing a secret in a Key Vault."/>
                        </arg>
                        <arg type="@SubResource_create" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.sourceVault" options="source-vault" required="True">
                          <help short="The relative URL of the Key Vault containing the secret."/>
                        </arg>
                      </arg>
                      <arg type="array<string>" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.provisionAfterExtensions" options="provision-after-extensions" group="Properties">
                        <help short="Collection of extension names after which this extension needs to be provisioned."/>
                        <item type="string"/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.publisher" options="publisher" group="Properties">
                        <help short="The name of the extension handler publisher."/>
                      </arg>
                      <arg type="object" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.settings" options="settings" group="Properties">
                        <help short="Json formatted public settings for the extension."/>
                        <additionalProp anyType="True"/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.suppressFailures" options="suppress-failures" group="Properties">
                        <help short="Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false."/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.type" options="type" group="Properties">
                        <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.typeHandlerVersion" options="type-handler-version" group="Properties">
                        <help short="Specifies the version of the script handler."/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.extensionProfile.extensionsTimeBudget" options="extensions-time-budget">
                    <help short="Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."/>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.hardwareProfile" options="hardware-profile">
                  <help short="Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01."/>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.hardwareProfile.vmSizeProperties" options="vm-size-properties">
                    <help short="Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."/>
                    <arg type="integer32" var="@BaseVirtualMachineProfile_create.hardwareProfile.vmSizeProperties.vCPUsAvailable" options="v-cp-us-available">
                      <help short="Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list)."/>
                    </arg>
                    <arg type="integer32" var="@BaseVirtualMachineProfile_create.hardwareProfile.vmSizeProperties.vCPUsPerCore" options="v-cp-us-per-core">
                      <help short="Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"/>
                    </arg>
                  </arg>
                </arg>
                <arg type="string" var="@BaseVirtualMachineProfile_create.licenseType" options="license-type">
                  <help short="Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15"/>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.networkProfile" options="network-profile">
                  <help short="Specifies properties of the network interfaces of the virtual machines in the scale set."/>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.networkProfile.healthProbe" options="health-probe" cls="ApiEntityReference_create">
                    <help short="A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'."/>
                    <arg type="ResourceId" var="@ApiEntityReference_create.id" options="id">
                      <help short="The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."/>
                    </arg>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkApiVersion" options="network-api-version">
                    <help short="specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'"/>
                    <enum>
                      <item name="2020-11-01" value="&quot;2020-11-01&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<object>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
                    <help short="The list of network configurations."/>
                    <item type="object">
                      <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].name" options="name" required="True">
                        <help short="The network configuration name."/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode" options="auxiliary-mode" group="Properties">
                        <help short="Specifies whether the Auxiliary mode is enabled for the Network Interface resource."/>
                        <enum>
                          <item name="AcceleratedConnections" value="&quot;AcceleratedConnections&quot;"/>
                          <item name="Floating" value="&quot;Floating&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku" options="auxiliary-sku" group="Properties">
                        <help short="Specifies whether the Auxiliary sku is enabled for the Network Interface resource."/>
                        <enum>
                          <item name="A1" value="&quot;A1&quot;"/>
                          <item name="A2" value="&quot;A2&quot;"/>
                          <item name="A4" value="&quot;A4&quot;"/>
                          <item name="A8" value="&quot;A8&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.deleteOption" options="delete-option" group="Properties">
                        <help short="Specify what happens to the network interface when the VM is deleted"/>
                        <enum>
                          <item name="Delete" value="&quot;Delete&quot;"/>
                          <item name="Detach" value="&quot;Detach&quot;"/>
                        </enum>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking" options="disable-tcp-state-tracking" group="Properties">
                        <help short="Specifies whether the network interface is disabled for tcp state tracking."/>
                      </arg>
                      <arg type="object" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings" options="dns-settings" group="Properties">
                        <help short="The dns settings to be applied on the network interfaces."/>
                        <arg type="array<string>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers" options="dns-servers">
                          <help short="List of DNS servers IP addresses"/>
                          <item type="string"/>
                        </arg>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking" options="enable-accelerated-networking" group="Properties">
                        <help short="Specifies whether the network interface is accelerated networking-enabled."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.enableFpga" options="enable-fpga" group="Properties">
                        <help short="Specifies whether the network interface is FPGA networking-enabled."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                        <help short="Whether IP forwarding enabled on this NIC."/>
                      </arg>
                      <arg type="array<object>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                        <help short="Specifies the IP configurations of the network interface."/>
                        <item type="object">
                          <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name" required="True">
                            <help short="The IP configuration name."/>
                          </arg>
                          <arg type="array<@SubResource_create>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                            <help short="Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway."/>
                            <item type="@SubResource_create"/>
                          </arg>
                          <arg type="array<@SubResource_create>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                            <help short="Specifies an array of references to application security group."/>
                            <item type="@SubResource_create"/>
                          </arg>
                          <arg type="array<@SubResource_create>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                            <help short="Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                            <item type="@SubResource_create"/>
                          </arg>
                          <arg type="array<@SubResource_create>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools" options="load-balancer-inbound-nat-pools" group="Properties">
                            <help short="Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                            <item type="@SubResource_create"/>
                          </arg>
                          <arg type="boolean" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                            <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                          </arg>
                          <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                            <help short="Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."/>
                            <enum>
                              <item name="IPv4" value="&quot;IPv4&quot;"/>
                              <item name="IPv6" value="&quot;IPv6&quot;"/>
                            </enum>
                          </arg>
                          <arg type="object" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration" options="public-ip-address-configuration" group="Properties">
                            <help short="The publicIPAddressConfiguration."/>
                            <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" options="name" required="True">
                              <help short="The publicIP address configuration name."/>
                            </arg>
                            <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption" options="delete-option" group="Properties">
                              <help short="Specify what happens to the public IP when the VM is deleted"/>
                              <enum>
                                <item name="Delete" value="&quot;Delete&quot;"/>
                                <item name="Detach" value="&quot;Detach&quot;"/>
                              </enum>
                            </arg>
                            <arg type="object" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings" options="dns-settings" group="Properties">
                              <help short="The dns settings to be applied on the publicIP addresses ."/>
                              <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" options="domain-name-label" required="True">
                                <help short="The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                              </arg>
                              <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                                <help short="The Domain name label scope.The concatenation of the hashed domain name label that generated according to the policy from domain name label scope and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                                <enum>
                                  <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                                  <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                                  <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                                  <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                                </enum>
                              </arg>
                            </arg>
                            <arg type="integer32" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                              <help short="The idle timeout of the public IP address."/>
                            </arg>
                            <arg type="array<object>" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags" options="ip-tags" group="Properties">
                              <help short="The list of IP tags associated with the public IP address."/>
                              <item type="object">
                                <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType" options="ip-tag-type">
                                  <help short="IP tag type. Example: FirstPartyUsage."/>
                                </arg>
                                <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag" options="tag">
                                  <help short="IP tag associated with the public IP. Example: SQL, Storage etc."/>
                                </arg>
                              </item>
                            </arg>
                            <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
                              <help short="Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."/>
                              <enum>
                                <item name="IPv4" value="&quot;IPv4&quot;"/>
                                <item name="IPv6" value="&quot;IPv6&quot;"/>
                              </enum>
                            </arg>
                            <arg type="@SubResource_create" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties">
                              <help short="The PublicIPPrefix from which to allocate publicIP addresses."/>
                            </arg>
                            <arg type="object" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku" options="sku">
                              <help short="Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."/>
                              <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name" options="name">
                                <help short="Specify public IP sku name"/>
                                <enum>
                                  <item name="Basic" value="&quot;Basic&quot;"/>
                                  <item name="Standard" value="&quot;Standard&quot;"/>
                                </enum>
                              </arg>
                              <arg type="string" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier" options="tier">
                                <help short="Specify public IP sku tier"/>
                                <enum>
                                  <item name="Global" value="&quot;Global&quot;"/>
                                  <item name="Regional" value="&quot;Regional&quot;"/>
                                </enum>
                              </arg>
                            </arg>
                          </arg>
                          <arg type="@ApiEntityReference_create" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                            <help short="Specifies the identifier of the subnet."/>
                          </arg>
                        </item>
                      </arg>
                      <arg type="@SubResource_create" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup" options="network-security-group" group="Properties">
                        <help short="The network security group."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.primary" options="primary" group="Properties">
                        <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                      </arg>
                    </item>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile" options="os-profile">
                  <help short="Specifies the operating system settings for the virtual machines in the scale set."/>
                  <arg type="password" var="@BaseVirtualMachineProfile_create.osProfile.adminPassword" options="admin-password" group="">
                    <help short="Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;, &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;, &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;, &quot;Password22&quot;, &quot;iloveyou!&quot; <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"/>
                    <prompt msg="Please provide VMSS password:" confirm="True"/>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.adminUsername" options="admin-username">
                    <help short="Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in &quot;.&quot; <br><br> **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;, &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;, &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;, &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;, &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;, &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;, &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;, &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;, &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;, &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;, &quot;user4&quot;, &quot;user5&quot;. <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters"/>
                  </arg>
                  <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.allowExtensionOperations" options="allow-extension-operations">
                    <help short="Specifies whether extension operations should be allowed on the virtual machine scale set. This may only be set to False when no extensions are present on the virtual machine scale set."/>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.computerNamePrefix" options="computer-name-prefix">
                    <help short="Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long."/>
                  </arg>
                  <arg type="password" var="@BaseVirtualMachineProfile_create.osProfile.customData" options="custom-data" group="">
                    <help short="Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://learn.microsoft.com/azure/virtual-machines/linux/using-cloud-init)"/>
                    <prompt msg="Please enter VM Password:" confirm="True"/>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration" options="linux-configuration">
                    <help short="Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."/>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.disablePasswordAuthentication" options="disable-password-authentication">
                      <help short="Specifies whether password authentication should be disabled."/>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                      <help short="Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."/>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings" options="patch-settings">
                      <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Linux."/>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                        <help short="Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                        <enum>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                        <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."/>
                        <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                          <help short="Enables customer to schedule patching without accidental upgrades"/>
                        </arg>
                        <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                          <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                          <enum>
                            <item name="Always" value="&quot;Always&quot;"/>
                            <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                            <item name="Never" value="&quot;Never&quot;"/>
                            <item name="Unknown" value="&quot;Unknown&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.patchMode" options="patch-mode">
                        <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"/>
                        <enum>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.provisionVMAgent" options="provision-vm-agent">
                      <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh" options="ssh">
                      <help short="Specifies the ssh key configuration for a Linux OS."/>
                      <arg type="array<object>" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh.publicKeys" options="public-keys">
                        <help short="The list of SSH public keys used to authenticate with linux based VMs."/>
                        <item type="object">
                          <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh.publicKeys[].keyData" options="key-data">
                            <help short="SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."/>
                          </arg>
                          <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh.publicKeys[].path" options="path">
                            <help short="Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"/>
                          </arg>
                        </item>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.requireGuestProvisionSignal" options="require-guest-provision-signal">
                    <help short="Optional property which must either be set to True or omitted."/>
                  </arg>
                  <arg type="array<object>" var="@BaseVirtualMachineProfile_create.osProfile.secrets" options="secrets">
                    <help short="Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                    <item type="object">
                      <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.secrets[].sourceVault" options="source-vault" cls="SubResource_create">
                        <help short="The relative URL of the Key Vault containing all of the certificates in VaultCertificates."/>
                        <arg type="ResourceId" var="@SubResource_create.id" options="id">
                          <help short="Resource Id"/>
                        </arg>
                      </arg>
                      <arg type="array<object>" var="@BaseVirtualMachineProfile_create.osProfile.secrets[].vaultCertificates" options="vault-certificates">
                        <help short="The list of key vault references in SourceVault which contain certificates."/>
                        <item type="object">
                          <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.secrets[].vaultCertificates[].certificateStore" options="certificate-store">
                            <help short="For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."/>
                          </arg>
                          <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.secrets[].vaultCertificates[].certificateUrl" options="certificate-url">
                            <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br> &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br> &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                          </arg>
                        </item>
                      </arg>
                    </item>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration" options="windows-configuration">
                    <help short="Specifies Windows operating system settings on the virtual machine."/>
                    <arg type="array<object>" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent" options="additional-unattend-content">
                      <help short="Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."/>
                      <item type="object">
                        <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].componentName" options="component-name">
                          <help short="The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."/>
                          <enum>
                            <item name="Microsoft-Windows-Shell-Setup" value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                          </enum>
                        </arg>
                        <arg type="password" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].content" options="content">
                          <help short="Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."/>
                          <prompt msg="Password:"/>
                        </arg>
                        <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].passName" options="pass-name">
                          <help short="The pass name. Currently, the only allowable value is OobeSystem."/>
                          <enum>
                            <item name="OobeSystem" value="&quot;OobeSystem&quot;"/>
                          </enum>
                        </arg>
                        <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].settingName" options="setting-name">
                          <help short="Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."/>
                          <enum>
                            <item name="AutoLogon" value="&quot;AutoLogon&quot;"/>
                            <item name="FirstLogonCommands" value="&quot;FirstLogonCommands&quot;"/>
                          </enum>
                        </arg>
                      </item>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.enableAutomaticUpdates" options="enable-automatic-updates">
                      <help short="Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."/>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                      <help short="Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false."/>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings" options="patch-settings">
                      <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Windows."/>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                        <help short="Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                        <enum>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </arg>
                      <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                        <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."/>
                        <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                          <help short="Enables customer to schedule patching without accidental upgrades"/>
                        </arg>
                        <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                          <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                          <enum>
                            <item name="Always" value="&quot;Always&quot;"/>
                            <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                            <item name="Never" value="&quot;Never&quot;"/>
                            <item name="Unknown" value="&quot;Unknown&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.enableHotpatching" options="enable-hotpatching">
                        <help short="Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.patchMode" options="patch-mode">
                        <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true"/>
                        <enum>
                          <item name="AutomaticByOS" value="&quot;AutomaticByOS&quot;"/>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="Manual" value="&quot;Manual&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.provisionVMAgent" options="provision-vm-agent">
                      <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.timeZone" options="time-zone">
                      <help short="Specifies the time zone of the virtual machine. e.g. &quot;Pacific Standard Time&quot;. Possible values can be [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."/>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM" options="win-rm">
                      <help short="Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."/>
                      <arg type="array<object>" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM.listeners" options="listeners">
                        <help short="The list of Windows Remote Management listeners"/>
                        <item type="object">
                          <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl" options="certificate-url">
                            <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br> &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br> &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                          </arg>
                          <arg type="string" var="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM.listeners[].protocol" options="protocol">
                            <help short="Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"/>
                            <enum>
                              <item name="Http" value="&quot;Http&quot;"/>
                              <item name="Https" value="&quot;Https&quot;"/>
                            </enum>
                          </arg>
                        </item>
                      </arg>
                    </arg>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile" options="scheduled-events-profile">
                  <help short="Specifies Scheduled Event related configurations."/>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile.osImageNotificationProfile" options="os-image-notification-profile">
                    <help short="Specifies OS Image Scheduled Event related configurations."/>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile.osImageNotificationProfile.enable" options="enable">
                      <help short="Specifies whether the OS Image Scheduled event is enabled or disabled."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                      <help short="Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must not exceed 15 minutes (PT15M)"/>
                    </arg>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile.terminateNotificationProfile" options="terminate-notification-profile">
                    <help short="Specifies Terminate Scheduled Event related configurations."/>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile.terminateNotificationProfile.enable" options="enable">
                      <help short="Specifies whether the Terminate Scheduled event is enabled or disabled."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                      <help short="Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"/>
                    </arg>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.securityPostureReference" options="security-posture-reference">
                  <help short="Specifies the security posture to be used for all virtual machines in the scale set. Minimum api-version: 2023-03-01"/>
                  <arg type="array<string>" var="@BaseVirtualMachineProfile_create.securityPostureReference.excludeExtensions" options="exclude-extensions">
                    <help short="List of virtual machine extension names to exclude when applying the security posture."/>
                    <item type="string"/>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.securityPostureReference.id" options="id">
                    <help short="The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest"/>
                  </arg>
                  <arg type="boolean" var="@BaseVirtualMachineProfile_create.securityPostureReference.isOverridable" options="is-overridable">
                    <help short="Whether the security posture can be overridden by the user."/>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.securityProfile" options="security-profile">
                  <help short="Specifies the Security related profile settings for the virtual machines in the scale set."/>
                  <arg type="boolean" var="@BaseVirtualMachineProfile_create.securityProfile.encryptionAtHost" options="encryption-at-host">
                    <help short="This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."/>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.securityProfile.encryptionIdentity" options="encryption-identity">
                    <help short="Specifies the Managed Identity used by ADE to get access token for keyvault operations."/>
                    <arg type="ResourceId" var="@BaseVirtualMachineProfile_create.securityProfile.encryptionIdentity.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
                      <help short="Specifies ARM Resource ID of one of the user identities associated with the VM."/>
                    </arg>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings" options="proxy-agent-settings">
                    <help short="Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."/>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings.enabled" options="enabled">
                      <help short="Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."/>
                    </arg>
                    <arg type="integer32" var="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings.keyIncarnationId" options="key-incarnation-id">
                      <help short="Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings.mode" options="mode">
                      <help short="Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."/>
                      <enum>
                        <item name="Audit" value="&quot;Audit&quot;"/>
                        <item name="Enforce" value="&quot;Enforce&quot;"/>
                      </enum>
                    </arg>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.securityProfile.securityType" options="security-type">
                    <help short="Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."/>
                    <enum>
                      <item name="ConfidentialVM" value="&quot;ConfidentialVM&quot;"/>
                      <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
                    </enum>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.securityProfile.uefiSettings" options="uefi-settings">
                    <help short="Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."/>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.securityProfile.uefiSettings.secureBootEnabled" options="secure-boot-enabled">
                      <help short="Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.securityProfile.uefiSettings.vTpmEnabled" options="v-tpm-enabled">
                      <help short="Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
                    </arg>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.serviceArtifactReference" options="service-artifact-reference">
                  <help short="Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. Minimum api-version: 2022-11-01"/>
                  <arg type="ResourceId" var="@BaseVirtualMachineProfile_create.serviceArtifactReference.id" options="id">
                    <help short="The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"/>
                  </arg>
                </arg>
                <arg type="object" var="@BaseVirtualMachineProfile_create.storageProfile" options="storage-profile">
                  <help short="Specifies the storage settings for the virtual machine disks."/>
                  <arg type="array<object>" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks" options="data-disks">
                    <help short="Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
                    <item type="object">
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].caching" options="caching">
                        <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                        <enum>
                          <item name="None" value="&quot;None&quot;"/>
                          <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                          <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].createOption" options="create-option" required="True">
                        <help short="The create option."/>
                        <enum>
                          <item name="Attach" value="&quot;Attach&quot;"/>
                          <item name="Copy" value="&quot;Copy&quot;"/>
                          <item name="Empty" value="&quot;Empty&quot;"/>
                          <item name="FromImage" value="&quot;FromImage&quot;"/>
                          <item name="Restore" value="&quot;Restore&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].deleteOption" options="delete-option">
                        <help short="Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**."/>
                        <enum>
                          <item name="Delete" value="&quot;Delete&quot;"/>
                          <item name="Detach" value="&quot;Detach&quot;"/>
                        </enum>
                      </arg>
                      <arg type="integer64" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].diskIOPSReadWrite" options="disk-iops-read-write">
                        <help short="Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                      </arg>
                      <arg type="integer64" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].diskMBpsReadWrite" options="disk-m-bps-read-write">
                        <help short="Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                      </arg>
                      <arg type="integer32" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].diskSizeGB" options="disk-size-gb">
                        <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
                      </arg>
                      <arg type="integer32" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].lun" options="lun" required="True">
                        <help short="Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."/>
                      </arg>
                      <arg type="@VirtualMachineScaleSetManagedDiskParameters_create" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].managedDisk" options="managed-disk">
                        <help short="The managed disk parameters."/>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].name" options="name">
                        <help short="The disk name."/>
                      </arg>
                      <arg type="boolean" var="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].writeAcceleratorEnabled" options="write-accelerator-enabled">
                        <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.diskControllerType" options="disk-controller-type">
                    <help short="Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01"/>
                    <enum>
                      <item name="NVMe" value="&quot;NVMe&quot;"/>
                      <item name="SCSI" value="&quot;SCSI&quot;"/>
                    </enum>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference" options="image-reference">
                    <help short="Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."/>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.communityGalleryImageId" options="community-gallery-image-id">
                      <help short="Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."/>
                    </arg>
                    <arg type="ResourceId" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.id" options="id">
                      <help short="Resource Id"/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.offer" options="offer">
                      <help short="Specifies the offer of the platform image or marketplace image used to create the virtual machine."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.publisher" options="publisher">
                      <help short="The image publisher."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.sharedGalleryImageId" options="shared-gallery-image-id">
                      <help short="Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.sku" options="sku">
                      <help short="The image SKU."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.imageReference.version" options="version">
                      <help short="Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."/>
                    </arg>
                  </arg>
                  <arg type="object" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk" options="os-disk">
                    <help short="Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.caching" options="caching">
                      <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                      <enum>
                        <item name="None" value="&quot;None&quot;"/>
                        <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                        <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.createOption" options="create-option" required="True">
                      <help short="Specifies how the virtual machines in the scale set should be created. The only allowed value is: **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described."/>
                      <enum>
                        <item name="Attach" value="&quot;Attach&quot;"/>
                        <item name="Copy" value="&quot;Copy&quot;"/>
                        <item name="Empty" value="&quot;Empty&quot;"/>
                        <item name="FromImage" value="&quot;FromImage&quot;"/>
                        <item name="Restore" value="&quot;Restore&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.deleteOption" options="delete-option">
                      <help short="Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk."/>
                      <enum>
                        <item name="Delete" value="&quot;Delete&quot;"/>
                        <item name="Detach" value="&quot;Detach&quot;"/>
                      </enum>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diffDiskSettings" options="diff-disk-settings">
                      <help short="Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set."/>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diffDiskSettings.option" options="option">
                        <help short="Specifies the ephemeral disk settings for operating system disk."/>
                        <enum>
                          <item name="Local" value="&quot;Local&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diffDiskSettings.placement" options="placement">
                        <help short="Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used. Refer to the VM size documentation for Windows VM at https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk."/>
                        <enum>
                          <item name="CacheDisk" value="&quot;CacheDisk&quot;"/>
                          <item name="NvmeDisk" value="&quot;NvmeDisk&quot;"/>
                          <item name="ResourceDisk" value="&quot;ResourceDisk&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg type="integer32" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diskSizeGB" options="disk-size-gb">
                      <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.image" options="image">
                      <help short="Specifies information about the unmanaged user image to base the scale set on."/>
                      <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.image.uri" options="uri">
                        <help short="Specifies the virtual hard disk's uri."/>
                      </arg>
                    </arg>
                    <arg type="object" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.managedDisk" options="managed-disk" cls="VirtualMachineScaleSetManagedDiskParameters_create">
                      <help short="The managed disk parameters."/>
                      <arg type="object" var="@VirtualMachineScaleSetManagedDiskParameters_create.diskEncryptionSet" options="disk-encryption-set" cls="DiskEncryptionSetParameters_create">
                        <help short="Specifies the customer managed disk encryption set resource id for the managed disk."/>
                        <arg type="ResourceId" var="@DiskEncryptionSetParameters_create.id" options="id">
                          <help short="Resource Id"/>
                        </arg>
                      </arg>
                      <arg type="object" var="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile" options="security-profile">
                        <help short="Specifies the security profile for the managed disk."/>
                        <arg type="@DiskEncryptionSetParameters_create" var="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.diskEncryptionSet" options="disk-encryption-set">
                          <help short="Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."/>
                        </arg>
                        <arg type="string" var="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.securityEncryptionType" options="security-encryption-type">
                          <help short="Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs."/>
                          <enum>
                            <item name="DiskWithVMGuestState" value="&quot;DiskWithVMGuestState&quot;"/>
                            <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                            <item name="VMGuestStateOnly" value="&quot;VMGuestStateOnly&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg type="string" var="@VirtualMachineScaleSetManagedDiskParameters_create.storageAccountType" options="storage-account-type">
                        <help short="Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."/>
                        <enum>
                          <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                          <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                          <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
                          <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                          <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
                          <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                          <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.name" options="name">
                      <help short="The disk name."/>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.osType" options="os-type">
                      <help short="This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"/>
                      <enum>
                        <item name="Linux" value="&quot;Linux&quot;"/>
                        <item name="Windows" value="&quot;Windows&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<string>" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.vhdContainers" options="vhd-containers">
                      <help short="Specifies the container urls that are used to store operating system disks for the scale set."/>
                      <item type="string"/>
                    </arg>
                    <arg type="boolean" var="@BaseVirtualMachineProfile_create.storageProfile.osDisk.writeAcceleratorEnabled" options="write-accelerator-enabled">
                      <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
                    </arg>
                  </arg>
                </arg>
                <arg type="string" var="@BaseVirtualMachineProfile_create.userData" options="user-data">
                  <help short="UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."/>
                </arg>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.computeProfile" options="compute-profile cp" group="Properties">
          <help short="Compute Profile to use for running user's workloads."/>
          <arg type="object" var="$resource.properties.computeProfile.additionalVirtualMachineCapabilities" options="additional-virtual-machine-capabilities">
            <help short="Specifies VMSS and VM API entity models support two additional capabilities as of today: ultraSSDEnabled and hibernationEnabled. ultraSSDEnabled: Enables UltraSSD_LRS storage account type on the VMSS VMs. hibernationEnabled: Enables the hibernation capability on the VMSS VMs. Default value is null if not specified. This property cannot be updated once set."/>
            <arg type="boolean" var="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.hibernationEnabled" options="hibernation-enabled">
              <help short="The flag that enables or disables hibernation capability on the VM."/>
            </arg>
            <arg type="boolean" var="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.ultraSSDEnabled" options="ultra-ssd-enabled">
              <help short="The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."/>
            </arg>
          </arg>
          <arg type="@BaseVirtualMachineProfile_create" var="$resource.properties.computeProfile.baseVirtualMachineProfile" options="base-virtual-machine-profile" required="True">
            <help short="Base Virtual Machine Profile Properties to be specified according to &quot;specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile&quot;"/>
          </arg>
          <arg type="string" var="$resource.properties.computeProfile.computeApiVersion" options="compute-api-version">
            <help short="Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines. The default value will be the latest supported computeApiVersion by Compute Fleet."/>
          </arg>
          <arg type="integer32" var="$resource.properties.computeProfile.platformFaultDomainCount" options="platform-fault-domain-count">
            <help short="Specifies the number of fault domains to use when creating the underlying VMSS. A fault domain is a logical group of hardware within an Azure datacenter. VMs in the same fault domain share a common power source and network switch. If not specified, defaults to 1, which represents &quot;Max Spreading&quot; (using as many fault domains as possible). This property cannot be updated."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.regularPriorityProfile" options="regular-priority-profile rpp" group="Properties">
          <help short="Configuration Options for Regular instances in Compute Fleet."/>
          <arg type="string" var="$resource.properties.regularPriorityProfile.allocationStrategy" options="allocation-strategy">
            <help short="Allocation strategy to follow when determining the VM sizes distribution for Regular VMs."/>
            <enum>
              <item name="LowestPrice" value="&quot;LowestPrice&quot;"/>
              <item name="Prioritized" value="&quot;Prioritized&quot;"/>
            </enum>
          </arg>
          <arg type="integer32" var="$resource.properties.regularPriorityProfile.capacity" options="capacity">
            <help short="Total capacity to achieve. It is currently in terms of number of VMs."/>
            <format minimum="0"/>
          </arg>
          <arg type="integer32" var="$resource.properties.regularPriorityProfile.minCapacity" options="min-capacity">
            <help short="Minimum capacity to achieve which cannot be updated. If we will not be able to &quot;guarantee&quot; minimum capacity, we will reject the request in the sync path itself."/>
            <format minimum="0"/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.spotPriorityProfile" options="spot-priority-profile spp" group="Properties">
          <help short="Configuration Options for Spot instances in Compute Fleet."/>
          <arg type="string" var="$resource.properties.spotPriorityProfile.allocationStrategy" options="allocation-strategy">
            <help short="Allocation strategy to follow when determining the VM sizes distribution for Spot VMs."/>
            <enum>
              <item name="CapacityOptimized" value="&quot;CapacityOptimized&quot;"/>
              <item name="LowestPrice" value="&quot;LowestPrice&quot;"/>
              <item name="PriceCapacityOptimized" value="&quot;PriceCapacityOptimized&quot;"/>
            </enum>
          </arg>
          <arg type="integer32" var="$resource.properties.spotPriorityProfile.capacity" options="capacity">
            <help short="Total capacity to achieve. It is currently in terms of number of VMs."/>
            <format minimum="0"/>
          </arg>
          <arg type="string" var="$resource.properties.spotPriorityProfile.evictionPolicy" options="eviction-policy">
            <help short="Eviction Policy to follow when evicting Spot VMs."/>
            <enum>
              <item name="Deallocate" value="&quot;Deallocate&quot;"/>
              <item name="Delete" value="&quot;Delete&quot;"/>
            </enum>
          </arg>
          <arg type="boolean" var="$resource.properties.spotPriorityProfile.maintain" options="maintain">
            <help short="Flag to enable/disable continuous goal seeking for the desired capacity and restoration of evicted Spot VMs. If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to create new VMs (if VMs are evicted deleted) or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed to allocate due to capacity constraint) in order to achieve the desired capacity. Maintain is enabled by default."/>
          </arg>
          <arg type="float32" var="$resource.properties.spotPriorityProfile.maxPricePerVM" options="max-price-per-vm">
            <help short="Price per hour of each Spot VM will never exceed this."/>
          </arg>
          <arg type="integer32" var="$resource.properties.spotPriorityProfile.minCapacity" options="min-capacity">
            <help short="Minimum capacity to achieve which cannot be updated. If we will not be able to &quot;guarantee&quot; minimum capacity, we will reject the request in the sync path itself."/>
            <format minimum="0"/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.vmAttributes" options="vm-attributes vma" group="Properties">
          <help short="Attribute based Fleet."/>
          <arg type="@VMAttributeMinMaxInteger_create" var="$resource.properties.vmAttributes.acceleratorCount" options="accelerator-count">
            <help short="The range of accelerator count specified from min to max. Optional parameter. Either Min or Max is required if specified. acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.acceleratorManufacturers" options="accelerator-manufacturers">
            <help short="The accelerator manufacturers specified as a list.  acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <item type="string">
              <enum>
                <item name="AMD" value="&quot;AMD&quot;"/>
                <item name="Nvidia" value="&quot;Nvidia&quot;"/>
                <item name="Xilinx" value="&quot;Xilinx&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="string" var="$resource.properties.vmAttributes.acceleratorSupport" options="accelerator-support">
            <help short="Specifies whether the VMSize supporting accelerator should be used to build Fleet or not. acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.acceleratorTypes" options="accelerator-types">
            <help short="The accelerator types specified as a list. acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <item type="string">
              <enum>
                <item name="FPGA" value="&quot;FPGA&quot;"/>
                <item name="GPU" value="&quot;GPU&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.architectureTypes" options="architecture-types">
            <help short="The VM architecture types specified as a list. Optional parameter."/>
            <item type="string">
              <enum>
                <item name="ARM64" value="&quot;ARM64&quot;"/>
                <item name="X64" value="&quot;X64&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="string" var="$resource.properties.vmAttributes.burstableSupport" options="burstable-support">
            <help short="Specifies whether the VMSize supporting burstable capability should be used to build Fleet or not."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.cpuManufacturers" options="cpu-manufacturers">
            <help short="The VM CPU manufacturers specified as a list. Optional parameter."/>
            <item type="string">
              <enum>
                <item name="AMD" value="&quot;AMD&quot;"/>
                <item name="Ampere" value="&quot;Ampere&quot;"/>
                <item name="Intel" value="&quot;Intel&quot;"/>
                <item name="Microsoft" value="&quot;Microsoft&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="@VMAttributeMinMaxInteger_create" var="$resource.properties.vmAttributes.dataDiskCount" options="data-disk-count">
            <help short="The range of data disk count specified from Min to Max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.excludedVMSizes" options="excluded-vm-sizes">
            <help short="Specifies which VMSizes should be excluded while building Fleet. Optional parameter."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.localStorageDiskTypes" options="local-storage-disk-types">
            <help short="The local storage disk types specified as a list. LocalStorageSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If localStorageSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <item type="string">
              <enum>
                <item name="HDD" value="&quot;HDD&quot;"/>
                <item name="SSD" value="&quot;SSD&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="@VMAttributeMinMaxDouble_create" var="$resource.properties.vmAttributes.localStorageInGiB" options="local-storage-in-gi-b">
            <help short="LocalStorageSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If localStorageSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
          </arg>
          <arg type="string" var="$resource.properties.vmAttributes.localStorageSupport" options="local-storage-support">
            <help short="Specifies whether the VMSize supporting local storage should be used to build Fleet or not. Included - Default if not specified as most Azure VMs support local storage."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.properties.vmAttributes.memoryInGiB" options="memory-in-gi-b" required="True" cls="VMAttributeMinMaxDouble_create">
            <help short="The range of memory specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is required if specified."/>
            <arg type="float64" var="@VMAttributeMinMaxDouble_create.max" options="max">
              <help short="Maximum value. Double.MaxValue(1.7976931348623157E+308)"/>
              <format minimum="0.0"/>
            </arg>
            <arg type="float64" var="@VMAttributeMinMaxDouble_create.min" options="min">
              <help short="Minimum value. default 0. Double.MinValue()"/>
              <format minimum="0.0"/>
            </arg>
          </arg>
          <arg type="@VMAttributeMinMaxDouble_create" var="$resource.properties.vmAttributes.memoryInGiBPerVCpu" options="memory-in-gi-b-per-v-cpu">
            <help short="The range of memory in GiB per vCPU specified from min to max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg type="@VMAttributeMinMaxDouble_create" var="$resource.properties.vmAttributes.networkBandwidthInMbps" options="network-bandwidth-in-mbps">
            <help short="The range of network bandwidth in Mbps specified from Min to Max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg type="@VMAttributeMinMaxInteger_create" var="$resource.properties.vmAttributes.networkInterfaceCount" options="network-interface-count">
            <help short="The range of network interface count specified from Min to Max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg type="@VMAttributeMinMaxInteger_create" var="$resource.properties.vmAttributes.rdmaNetworkInterfaceCount" options="rdma-network-interface-count">
            <help short="The range of RDMA (Remote Direct Memory Access) network interface count specified from Min to Max. Optional parameter. Either Min or Max is required if specified. rdmaSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If rdmaSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
          </arg>
          <arg type="string" var="$resource.properties.vmAttributes.rdmaSupport" options="rdma-support">
            <help short="Specifies whether the VMSize supporting RDMA (Remote Direct Memory Access) should be used to build Fleet or not."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.properties.vmAttributes.vCpuCount" options="v-cpu-count" required="True" cls="VMAttributeMinMaxInteger_create">
            <help short="The range of vCpuCount specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is required if specified."/>
            <arg type="integer32" var="@VMAttributeMinMaxInteger_create.max" options="max">
              <help short="Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified."/>
              <format minimum="0"/>
            </arg>
            <arg type="integer32" var="@VMAttributeMinMaxInteger_create.min" options="min">
              <help short="Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified."/>
              <format minimum="0"/>
            </arg>
          </arg>
          <arg type="array<string>" var="$resource.properties.vmAttributes.vmCategories" options="vm-categories">
            <help short="The VM category specified as a list. Optional parameter."/>
            <item type="string">
              <enum>
                <item name="ComputeOptimized" value="&quot;ComputeOptimized&quot;"/>
                <item name="FpgaAccelerated" value="&quot;FpgaAccelerated&quot;"/>
                <item name="GeneralPurpose" value="&quot;GeneralPurpose&quot;"/>
                <item name="GpuAccelerated" value="&quot;GpuAccelerated&quot;"/>
                <item name="HighPerformanceCompute" value="&quot;HighPerformanceCompute&quot;"/>
                <item name="MemoryOptimized" value="&quot;MemoryOptimized&quot;"/>
                <item name="StorageOptimized" value="&quot;StorageOptimized&quot;"/>
              </enum>
            </item>
          </arg>
        </arg>
        <arg type="array<object>" var="$resource.properties.vmSizesProfile" options="vm-sizes-profile vmsizeprof" group="Properties">
          <help short="List of VM sizes supported for Compute Fleet"/>
          <item type="object">
            <arg type="string" var="$resource.properties.vmSizesProfile[].name" options="name" required="True">
              <help short="The Sku name (e.g. 'Standard_DS1_v2')"/>
            </arg>
            <arg type="integer32" var="$resource.properties.vmSizesProfile[].rank" options="rank">
              <help short="The rank of the VM size. This is used with 'RegularPriorityAllocationStrategy.Prioritized' The lower the number, the higher the priority. Starting with 0."/>
              <format maximum="65535" minimum="0"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity i" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.plan" options="plan p" group="Resource">
          <help short="Details of the resource plan."/>
          <arg type="string" var="$resource.plan.name" options="name" required="True">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$resource.plan.product" options="product" required="True">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg type="string" var="$resource.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$resource.plan.publisher" options="publisher" required="True">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg type="string" var="$resource.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.tags" options="tags t" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$resource.zones" options="zones z" group="Resource">
          <help short="Zones in which the Compute Fleet is available"/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="Fleets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}">
          <request method="put">
            <path>
              <param type="string" name="fleetName" arg="$Path.fleetName" required="True">
                <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="plan" arg="$resource.plan">
                    <prop type="string" name="name" arg="$resource.plan.name" required="True"/>
                    <prop type="string" name="product" arg="$resource.plan.product" required="True"/>
                    <prop type="string" name="promotionCode" arg="$resource.plan.promotionCode"/>
                    <prop type="string" name="publisher" arg="$resource.plan.publisher" required="True"/>
                    <prop type="string" name="version" arg="$resource.plan.version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalLocationsProfile" arg="$resource.properties.additionalLocationsProfile">
                      <prop type="array<object>" name="locationProfiles" arg="$resource.properties.additionalLocationsProfile.locationProfiles" required="True">
                        <item type="object">
                          <prop type="string" name="location" arg="$resource.properties.additionalLocationsProfile.locationProfiles[].location" required="True"/>
                          <prop type="object" name="virtualMachineProfileOverride" arg="$resource.properties.additionalLocationsProfile.locationProfiles[].virtualMachineProfileOverride" cls="BaseVirtualMachineProfile_create">
                            <prop type="object" name="applicationProfile" arg="@BaseVirtualMachineProfile_create.applicationProfile">
                              <prop type="array<object>" name="galleryApplications" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications" identifiers="packageReferenceId">
                                <item type="object">
                                  <prop type="string" name="configurationReference" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].configurationReference"/>
                                  <prop type="boolean" name="enableAutomaticUpgrade" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].enableAutomaticUpgrade"/>
                                  <prop type="integer32" name="order" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].order"/>
                                  <prop type="ResourceId" name="packageReferenceId" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].packageReferenceId" required="True"/>
                                  <prop type="string" name="tags" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].tags"/>
                                  <prop type="boolean" name="treatFailureAsDeploymentFailure" arg="@BaseVirtualMachineProfile_create.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="capacityReservation" arg="@BaseVirtualMachineProfile_create.capacityReservation">
                              <prop type="@SubResource_create" name="capacityReservationGroup" arg="@BaseVirtualMachineProfile_create.capacityReservation.capacityReservationGroup"/>
                            </prop>
                            <prop type="object" name="diagnosticsProfile" arg="@BaseVirtualMachineProfile_create.diagnosticsProfile">
                              <prop type="object" name="bootDiagnostics" arg="@BaseVirtualMachineProfile_create.diagnosticsProfile.bootDiagnostics">
                                <prop type="boolean" name="enabled" arg="@BaseVirtualMachineProfile_create.diagnosticsProfile.bootDiagnostics.enabled"/>
                                <prop type="string" name="storageUri" arg="@BaseVirtualMachineProfile_create.diagnosticsProfile.bootDiagnostics.storageUri"/>
                              </prop>
                            </prop>
                            <prop type="object" name="extensionProfile" arg="@BaseVirtualMachineProfile_create.extensionProfile">
                              <prop type="array<object>" name="extensions" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions">
                                <item type="object">
                                  <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].name"/>
                                  <prop type="object" name="properties">
                                    <prop type="boolean" name="autoUpgradeMinorVersion" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.autoUpgradeMinorVersion"/>
                                    <prop type="boolean" name="enableAutomaticUpgrade" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.enableAutomaticUpgrade"/>
                                    <prop type="string" name="forceUpdateTag" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.forceUpdateTag"/>
                                    <prop type="object" name="protectedSettings" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettings" secret="True">
                                      <additionalProp anyType="True"/>
                                    </prop>
                                    <prop type="object" name="protectedSettingsFromKeyVault" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault">
                                      <prop type="string" name="secretUrl" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.secretUrl" required="True"/>
                                      <prop type="@SubResource_create" name="sourceVault" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.sourceVault" required="True"/>
                                    </prop>
                                    <prop type="array<string>" name="provisionAfterExtensions" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.provisionAfterExtensions">
                                      <item type="string"/>
                                    </prop>
                                    <prop type="string" name="publisher" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.publisher"/>
                                    <prop type="object" name="settings" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.settings">
                                      <additionalProp anyType="True"/>
                                    </prop>
                                    <prop type="boolean" name="suppressFailures" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.suppressFailures"/>
                                    <prop type="string" name="type" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.type"/>
                                    <prop type="string" name="typeHandlerVersion" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensions[].properties.typeHandlerVersion"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="extensionsTimeBudget" arg="@BaseVirtualMachineProfile_create.extensionProfile.extensionsTimeBudget"/>
                            </prop>
                            <prop type="object" name="hardwareProfile" arg="@BaseVirtualMachineProfile_create.hardwareProfile">
                              <prop type="object" name="vmSizeProperties" arg="@BaseVirtualMachineProfile_create.hardwareProfile.vmSizeProperties">
                                <prop type="integer32" name="vCPUsAvailable" arg="@BaseVirtualMachineProfile_create.hardwareProfile.vmSizeProperties.vCPUsAvailable"/>
                                <prop type="integer32" name="vCPUsPerCore" arg="@BaseVirtualMachineProfile_create.hardwareProfile.vmSizeProperties.vCPUsPerCore"/>
                              </prop>
                            </prop>
                            <prop type="string" name="licenseType" arg="@BaseVirtualMachineProfile_create.licenseType"/>
                            <prop type="object" name="networkProfile" arg="@BaseVirtualMachineProfile_create.networkProfile">
                              <prop type="object" name="healthProbe" arg="@BaseVirtualMachineProfile_create.networkProfile.healthProbe" cls="ApiEntityReference_create">
                                <prop type="ResourceId" name="id" arg="@ApiEntityReference_create.id"/>
                              </prop>
                              <prop type="string" name="networkApiVersion" arg="@BaseVirtualMachineProfile_create.networkProfile.networkApiVersion">
                                <enum>
                                  <item value="&quot;2020-11-01&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="networkInterfaceConfigurations" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations">
                                <item type="object">
                                  <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].name" required="True"/>
                                  <prop type="object" name="properties">
                                    <prop type="string" name="auxiliaryMode" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode">
                                      <enum>
                                        <item value="&quot;AcceleratedConnections&quot;"/>
                                        <item value="&quot;Floating&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="auxiliarySku" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku">
                                      <enum>
                                        <item value="&quot;A1&quot;"/>
                                        <item value="&quot;A2&quot;"/>
                                        <item value="&quot;A4&quot;"/>
                                        <item value="&quot;A8&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.deleteOption">
                                      <enum>
                                        <item value="&quot;Delete&quot;"/>
                                        <item value="&quot;Detach&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="boolean" name="disableTcpStateTracking" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"/>
                                    <prop type="object" name="dnsSettings" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings">
                                      <prop type="array<string>" name="dnsServers" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="boolean" name="enableAcceleratedNetworking" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"/>
                                    <prop type="boolean" name="enableFpga" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"/>
                                    <prop type="boolean" name="enableIPForwarding" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"/>
                                    <prop type="array<object>" name="ipConfigurations" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" required="True" identifiers="name">
                                      <item type="object">
                                        <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" required="True"/>
                                        <prop type="object" name="properties">
                                          <prop type="array<@SubResource_create>" name="applicationGatewayBackendAddressPools" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools">
                                            <item type="@SubResource_create"/>
                                          </prop>
                                          <prop type="array<@SubResource_create>" name="applicationSecurityGroups" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups">
                                            <item type="@SubResource_create"/>
                                          </prop>
                                          <prop type="array<@SubResource_create>" name="loadBalancerBackendAddressPools" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools">
                                            <item type="@SubResource_create"/>
                                          </prop>
                                          <prop type="array<@SubResource_create>" name="loadBalancerInboundNatPools" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools">
                                            <item type="@SubResource_create"/>
                                          </prop>
                                          <prop type="boolean" name="primary" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                                          <prop type="string" name="privateIPAddressVersion" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion">
                                            <enum>
                                              <item value="&quot;IPv4&quot;"/>
                                              <item value="&quot;IPv6&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="publicIPAddressConfiguration" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration">
                                            <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" required="True"/>
                                            <prop type="object" name="properties">
                                              <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption">
                                                <enum>
                                                  <item value="&quot;Delete&quot;"/>
                                                  <item value="&quot;Detach&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="object" name="dnsSettings" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings">
                                                <prop type="string" name="domainNameLabel" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" required="True"/>
                                                <prop type="string" name="domainNameLabelScope" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope">
                                                  <enum>
                                                    <item value="&quot;NoReuse&quot;"/>
                                                    <item value="&quot;ResourceGroupReuse&quot;"/>
                                                    <item value="&quot;SubscriptionReuse&quot;"/>
                                                    <item value="&quot;TenantReuse&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop type="integer32" name="idleTimeoutInMinutes" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"/>
                                              <prop type="array<object>" name="ipTags" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags">
                                                <item type="object">
                                                  <prop type="string" name="ipTagType" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"/>
                                                  <prop type="string" name="tag" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"/>
                                                </item>
                                              </prop>
                                              <prop type="string" name="publicIPAddressVersion" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion">
                                                <enum>
                                                  <item value="&quot;IPv4&quot;"/>
                                                  <item value="&quot;IPv6&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="@SubResource_create" name="publicIPPrefix" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"/>
                                            </prop>
                                            <prop type="object" name="sku" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku">
                                              <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name">
                                                <enum>
                                                  <item value="&quot;Basic&quot;"/>
                                                  <item value="&quot;Standard&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="tier" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier">
                                                <enum>
                                                  <item value="&quot;Global&quot;"/>
                                                  <item value="&quot;Regional&quot;"/>
                                                </enum>
                                              </prop>
                                            </prop>
                                          </prop>
                                          <prop type="@ApiEntityReference_create" name="subnet" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="@SubResource_create" name="networkSecurityGroup" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"/>
                                    <prop type="boolean" name="primary" arg="@BaseVirtualMachineProfile_create.networkProfile.networkInterfaceConfigurations[].properties.primary"/>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="osProfile" arg="@BaseVirtualMachineProfile_create.osProfile">
                              <prop type="password" name="adminPassword" arg="@BaseVirtualMachineProfile_create.osProfile.adminPassword" secret="True"/>
                              <prop type="string" name="adminUsername" arg="@BaseVirtualMachineProfile_create.osProfile.adminUsername"/>
                              <prop type="boolean" name="allowExtensionOperations" arg="@BaseVirtualMachineProfile_create.osProfile.allowExtensionOperations"/>
                              <prop type="string" name="computerNamePrefix" arg="@BaseVirtualMachineProfile_create.osProfile.computerNamePrefix"/>
                              <prop type="password" name="customData" arg="@BaseVirtualMachineProfile_create.osProfile.customData" secret="True"/>
                              <prop type="object" name="linuxConfiguration" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration">
                                <prop type="boolean" name="disablePasswordAuthentication" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.disablePasswordAuthentication"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings">
                                  <prop type="string" name="assessmentMode" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="patchMode" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.patchSettings.patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.provisionVMAgent"/>
                                <prop type="object" name="ssh" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh">
                                  <prop type="array<object>" name="publicKeys" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh.publicKeys" identifiers="path">
                                    <item type="object">
                                      <prop type="string" name="keyData" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"/>
                                      <prop type="string" name="path" arg="@BaseVirtualMachineProfile_create.osProfile.linuxConfiguration.ssh.publicKeys[].path"/>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                              <prop type="boolean" name="requireGuestProvisionSignal" arg="@BaseVirtualMachineProfile_create.osProfile.requireGuestProvisionSignal"/>
                              <prop type="array<object>" name="secrets" arg="@BaseVirtualMachineProfile_create.osProfile.secrets">
                                <item type="object">
                                  <prop type="object" name="sourceVault" arg="@BaseVirtualMachineProfile_create.osProfile.secrets[].sourceVault" cls="SubResource_create">
                                    <prop type="ResourceId" name="id" arg="@SubResource_create.id"/>
                                  </prop>
                                  <prop type="array<object>" name="vaultCertificates" arg="@BaseVirtualMachineProfile_create.osProfile.secrets[].vaultCertificates" identifiers="certificateUrl">
                                    <item type="object">
                                      <prop type="string" name="certificateStore" arg="@BaseVirtualMachineProfile_create.osProfile.secrets[].vaultCertificates[].certificateStore"/>
                                      <prop type="string" name="certificateUrl" arg="@BaseVirtualMachineProfile_create.osProfile.secrets[].vaultCertificates[].certificateUrl"/>
                                    </item>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="object" name="windowsConfiguration" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration">
                                <prop type="array<object>" name="additionalUnattendContent" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent">
                                  <item type="object">
                                    <prop type="string" name="componentName" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].componentName">
                                      <enum>
                                        <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="password" name="content" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].content" secret="True"/>
                                    <prop type="string" name="passName" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].passName">
                                      <enum>
                                        <item value="&quot;OobeSystem&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="settingName" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.additionalUnattendContent[].settingName">
                                      <enum>
                                        <item value="&quot;AutoLogon&quot;"/>
                                        <item value="&quot;FirstLogonCommands&quot;"/>
                                      </enum>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="boolean" name="enableAutomaticUpdates" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.enableAutomaticUpdates"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings">
                                  <prop type="string" name="assessmentMode" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="boolean" name="enableHotpatching" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.enableHotpatching"/>
                                  <prop type="string" name="patchMode" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.patchSettings.patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByOS&quot;"/>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;Manual&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.provisionVMAgent"/>
                                <prop type="string" name="timeZone" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.timeZone"/>
                                <prop type="object" name="winRM" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM">
                                  <prop type="array<object>" name="listeners" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM.listeners">
                                    <item type="object">
                                      <prop type="string" name="certificateUrl" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"/>
                                      <prop type="string" name="protocol" arg="@BaseVirtualMachineProfile_create.osProfile.windowsConfiguration.winRM.listeners[].protocol">
                                        <enum>
                                          <item value="&quot;Http&quot;"/>
                                          <item value="&quot;Https&quot;"/>
                                        </enum>
                                      </prop>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="object" name="scheduledEventsProfile" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile">
                              <prop type="object" name="osImageNotificationProfile" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile.osImageNotificationProfile">
                                <prop type="boolean" name="enable" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile.osImageNotificationProfile.enable"/>
                                <prop type="string" name="notBeforeTimeout" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"/>
                              </prop>
                              <prop type="object" name="terminateNotificationProfile" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile.terminateNotificationProfile">
                                <prop type="boolean" name="enable" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile.terminateNotificationProfile.enable"/>
                                <prop type="string" name="notBeforeTimeout" arg="@BaseVirtualMachineProfile_create.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"/>
                              </prop>
                            </prop>
                            <prop type="object" name="securityPostureReference" arg="@BaseVirtualMachineProfile_create.securityPostureReference">
                              <prop type="array<string>" name="excludeExtensions" arg="@BaseVirtualMachineProfile_create.securityPostureReference.excludeExtensions">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="id" arg="@BaseVirtualMachineProfile_create.securityPostureReference.id"/>
                              <prop type="boolean" name="isOverridable" arg="@BaseVirtualMachineProfile_create.securityPostureReference.isOverridable"/>
                            </prop>
                            <prop type="object" name="securityProfile" arg="@BaseVirtualMachineProfile_create.securityProfile">
                              <prop type="boolean" name="encryptionAtHost" arg="@BaseVirtualMachineProfile_create.securityProfile.encryptionAtHost"/>
                              <prop type="object" name="encryptionIdentity" arg="@BaseVirtualMachineProfile_create.securityProfile.encryptionIdentity">
                                <prop type="ResourceId" name="userAssignedIdentityResourceId" arg="@BaseVirtualMachineProfile_create.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"/>
                              </prop>
                              <prop type="object" name="proxyAgentSettings" arg="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings">
                                <prop type="boolean" name="enabled" arg="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings.enabled"/>
                                <prop type="integer32" name="keyIncarnationId" arg="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings.keyIncarnationId"/>
                                <prop type="string" name="mode" arg="@BaseVirtualMachineProfile_create.securityProfile.proxyAgentSettings.mode">
                                  <enum>
                                    <item value="&quot;Audit&quot;"/>
                                    <item value="&quot;Enforce&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="securityType" arg="@BaseVirtualMachineProfile_create.securityProfile.securityType">
                                <enum>
                                  <item value="&quot;ConfidentialVM&quot;"/>
                                  <item value="&quot;TrustedLaunch&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="uefiSettings" arg="@BaseVirtualMachineProfile_create.securityProfile.uefiSettings">
                                <prop type="boolean" name="secureBootEnabled" arg="@BaseVirtualMachineProfile_create.securityProfile.uefiSettings.secureBootEnabled"/>
                                <prop type="boolean" name="vTpmEnabled" arg="@BaseVirtualMachineProfile_create.securityProfile.uefiSettings.vTpmEnabled"/>
                              </prop>
                            </prop>
                            <prop type="object" name="serviceArtifactReference" arg="@BaseVirtualMachineProfile_create.serviceArtifactReference">
                              <prop type="ResourceId" name="id" arg="@BaseVirtualMachineProfile_create.serviceArtifactReference.id"/>
                            </prop>
                            <prop type="object" name="storageProfile" arg="@BaseVirtualMachineProfile_create.storageProfile">
                              <prop type="array<object>" name="dataDisks" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks" identifiers="name lun">
                                <item type="object">
                                  <prop type="string" name="caching" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].caching">
                                    <enum>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;ReadOnly&quot;"/>
                                      <item value="&quot;ReadWrite&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="createOption" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].createOption" required="True">
                                    <enum>
                                      <item value="&quot;Attach&quot;"/>
                                      <item value="&quot;Copy&quot;"/>
                                      <item value="&quot;Empty&quot;"/>
                                      <item value="&quot;FromImage&quot;"/>
                                      <item value="&quot;Restore&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].deleteOption">
                                    <enum>
                                      <item value="&quot;Delete&quot;"/>
                                      <item value="&quot;Detach&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer64" name="diskIOPSReadWrite" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].diskIOPSReadWrite"/>
                                  <prop type="integer64" name="diskMBpsReadWrite" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].diskMBpsReadWrite"/>
                                  <prop type="integer32" name="diskSizeGB" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].diskSizeGB"/>
                                  <prop type="integer32" name="lun" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].lun" required="True"/>
                                  <prop type="@VirtualMachineScaleSetManagedDiskParameters_create" name="managedDisk" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].managedDisk"/>
                                  <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].name"/>
                                  <prop type="boolean" name="writeAcceleratorEnabled" arg="@BaseVirtualMachineProfile_create.storageProfile.dataDisks[].writeAcceleratorEnabled"/>
                                </item>
                              </prop>
                              <prop type="string" name="diskControllerType" arg="@BaseVirtualMachineProfile_create.storageProfile.diskControllerType">
                                <enum>
                                  <item value="&quot;NVMe&quot;"/>
                                  <item value="&quot;SCSI&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="imageReference" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference">
                                <prop type="string" name="communityGalleryImageId" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.communityGalleryImageId"/>
                                <prop type="ResourceId" name="id" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.id"/>
                                <prop type="string" name="offer" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.offer"/>
                                <prop type="string" name="publisher" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.publisher"/>
                                <prop type="string" name="sharedGalleryImageId" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.sharedGalleryImageId"/>
                                <prop type="string" name="sku" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.sku"/>
                                <prop type="string" name="version" arg="@BaseVirtualMachineProfile_create.storageProfile.imageReference.version"/>
                              </prop>
                              <prop type="object" name="osDisk" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk">
                                <prop type="string" name="caching" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.caching">
                                  <enum>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;ReadOnly&quot;"/>
                                    <item value="&quot;ReadWrite&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="createOption" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.createOption" required="True">
                                  <enum>
                                    <item value="&quot;Attach&quot;"/>
                                    <item value="&quot;Copy&quot;"/>
                                    <item value="&quot;Empty&quot;"/>
                                    <item value="&quot;FromImage&quot;"/>
                                    <item value="&quot;Restore&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.deleteOption">
                                  <enum>
                                    <item value="&quot;Delete&quot;"/>
                                    <item value="&quot;Detach&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="object" name="diffDiskSettings" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diffDiskSettings">
                                  <prop type="string" name="option" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diffDiskSettings.option">
                                    <enum>
                                      <item value="&quot;Local&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="placement" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diffDiskSettings.placement">
                                    <enum>
                                      <item value="&quot;CacheDisk&quot;"/>
                                      <item value="&quot;NvmeDisk&quot;"/>
                                      <item value="&quot;ResourceDisk&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="integer32" name="diskSizeGB" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.diskSizeGB"/>
                                <prop type="object" name="image" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.image">
                                  <prop type="string" name="uri" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.image.uri"/>
                                </prop>
                                <prop type="object" name="managedDisk" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_create">
                                  <prop type="object" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_create.diskEncryptionSet" cls="DiskEncryptionSetParameters_create">
                                    <prop type="ResourceId" name="id" arg="@DiskEncryptionSetParameters_create.id"/>
                                  </prop>
                                  <prop type="object" name="securityProfile" arg="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile">
                                    <prop type="@DiskEncryptionSetParameters_create" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.diskEncryptionSet"/>
                                    <prop type="string" name="securityEncryptionType" arg="@VirtualMachineScaleSetManagedDiskParameters_create.securityProfile.securityEncryptionType">
                                      <enum>
                                        <item value="&quot;DiskWithVMGuestState&quot;"/>
                                        <item value="&quot;NonPersistedTPM&quot;"/>
                                        <item value="&quot;VMGuestStateOnly&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="storageAccountType" arg="@VirtualMachineScaleSetManagedDiskParameters_create.storageAccountType">
                                    <enum>
                                      <item value="&quot;PremiumV2_LRS&quot;"/>
                                      <item value="&quot;Premium_LRS&quot;"/>
                                      <item value="&quot;Premium_ZRS&quot;"/>
                                      <item value="&quot;StandardSSD_LRS&quot;"/>
                                      <item value="&quot;StandardSSD_ZRS&quot;"/>
                                      <item value="&quot;Standard_LRS&quot;"/>
                                      <item value="&quot;UltraSSD_LRS&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="name" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.name"/>
                                <prop type="string" name="osType" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.osType">
                                  <enum>
                                    <item value="&quot;Linux&quot;"/>
                                    <item value="&quot;Windows&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="array<string>" name="vhdContainers" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.vhdContainers">
                                  <item type="string"/>
                                </prop>
                                <prop type="boolean" name="writeAcceleratorEnabled" arg="@BaseVirtualMachineProfile_create.storageProfile.osDisk.writeAcceleratorEnabled"/>
                              </prop>
                            </prop>
                            <prop type="string" name="userData" arg="@BaseVirtualMachineProfile_create.userData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="computeProfile" arg="$resource.properties.computeProfile" required="True">
                      <prop type="object" name="additionalVirtualMachineCapabilities" arg="$resource.properties.computeProfile.additionalVirtualMachineCapabilities">
                        <prop type="boolean" name="hibernationEnabled" arg="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled" arg="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.ultraSSDEnabled"/>
                      </prop>
                      <prop type="@BaseVirtualMachineProfile_create" name="baseVirtualMachineProfile" arg="$resource.properties.computeProfile.baseVirtualMachineProfile" required="True"/>
                      <prop type="string" name="computeApiVersion" arg="$resource.properties.computeProfile.computeApiVersion"/>
                      <prop type="integer32" name="platformFaultDomainCount" arg="$resource.properties.computeProfile.platformFaultDomainCount"/>
                    </prop>
                    <prop type="object" name="regularPriorityProfile" arg="$resource.properties.regularPriorityProfile">
                      <prop type="string" name="allocationStrategy" arg="$resource.properties.regularPriorityProfile.allocationStrategy">
                        <enum>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;Prioritized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity" arg="$resource.properties.regularPriorityProfile.capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="minCapacity" arg="$resource.properties.regularPriorityProfile.minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="spotPriorityProfile" arg="$resource.properties.spotPriorityProfile">
                      <prop type="string" name="allocationStrategy" arg="$resource.properties.spotPriorityProfile.allocationStrategy">
                        <enum>
                          <item value="&quot;CapacityOptimized&quot;"/>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;PriceCapacityOptimized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity" arg="$resource.properties.spotPriorityProfile.capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="string" name="evictionPolicy" arg="$resource.properties.spotPriorityProfile.evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="maintain" arg="$resource.properties.spotPriorityProfile.maintain"/>
                      <prop type="float32" name="maxPricePerVM" arg="$resource.properties.spotPriorityProfile.maxPricePerVM"/>
                      <prop type="integer32" name="minCapacity" arg="$resource.properties.spotPriorityProfile.minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="vmAttributes" arg="$resource.properties.vmAttributes">
                      <prop type="@VMAttributeMinMaxInteger_create" name="acceleratorCount" arg="$resource.properties.vmAttributes.acceleratorCount"/>
                      <prop type="array<string>" name="acceleratorManufacturers" arg="$resource.properties.vmAttributes.acceleratorManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Nvidia&quot;"/>
                            <item value="&quot;Xilinx&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="acceleratorSupport" arg="$resource.properties.vmAttributes.acceleratorSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="acceleratorTypes" arg="$resource.properties.vmAttributes.acceleratorTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;FPGA&quot;"/>
                            <item value="&quot;GPU&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<string>" name="architectureTypes" arg="$resource.properties.vmAttributes.architectureTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;ARM64&quot;"/>
                            <item value="&quot;X64&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="burstableSupport" arg="$resource.properties.vmAttributes.burstableSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="cpuManufacturers" arg="$resource.properties.vmAttributes.cpuManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Ampere&quot;"/>
                            <item value="&quot;Intel&quot;"/>
                            <item value="&quot;Microsoft&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxInteger_create" name="dataDiskCount" arg="$resource.properties.vmAttributes.dataDiskCount"/>
                      <prop type="array<string>" name="excludedVMSizes" arg="$resource.properties.vmAttributes.excludedVMSizes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="localStorageDiskTypes" arg="$resource.properties.vmAttributes.localStorageDiskTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;HDD&quot;"/>
                            <item value="&quot;SSD&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_create" name="localStorageInGiB" arg="$resource.properties.vmAttributes.localStorageInGiB"/>
                      <prop type="string" name="localStorageSupport" arg="$resource.properties.vmAttributes.localStorageSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="memoryInGiB" arg="$resource.properties.vmAttributes.memoryInGiB" required="True" cls="VMAttributeMinMaxDouble_create">
                        <prop type="float64" name="max" arg="@VMAttributeMinMaxDouble_create.max">
                          <format minimum="0.0"/>
                        </prop>
                        <prop type="float64" name="min" arg="@VMAttributeMinMaxDouble_create.min">
                          <format minimum="0.0"/>
                        </prop>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_create" name="memoryInGiBPerVCpu" arg="$resource.properties.vmAttributes.memoryInGiBPerVCpu"/>
                      <prop type="@VMAttributeMinMaxDouble_create" name="networkBandwidthInMbps" arg="$resource.properties.vmAttributes.networkBandwidthInMbps"/>
                      <prop type="@VMAttributeMinMaxInteger_create" name="networkInterfaceCount" arg="$resource.properties.vmAttributes.networkInterfaceCount"/>
                      <prop type="@VMAttributeMinMaxInteger_create" name="rdmaNetworkInterfaceCount" arg="$resource.properties.vmAttributes.rdmaNetworkInterfaceCount"/>
                      <prop type="string" name="rdmaSupport" arg="$resource.properties.vmAttributes.rdmaSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vCpuCount" arg="$resource.properties.vmAttributes.vCpuCount" required="True" cls="VMAttributeMinMaxInteger_create">
                        <prop type="integer32" name="max" arg="@VMAttributeMinMaxInteger_create.max">
                          <format minimum="0"/>
                        </prop>
                        <prop type="integer32" name="min" arg="@VMAttributeMinMaxInteger_create.min">
                          <format minimum="0"/>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="vmCategories" arg="$resource.properties.vmAttributes.vmCategories">
                        <item type="string">
                          <enum>
                            <item value="&quot;ComputeOptimized&quot;"/>
                            <item value="&quot;FpgaAccelerated&quot;"/>
                            <item value="&quot;GeneralPurpose&quot;"/>
                            <item value="&quot;GpuAccelerated&quot;"/>
                            <item value="&quot;HighPerformanceCompute&quot;"/>
                            <item value="&quot;MemoryOptimized&quot;"/>
                            <item value="&quot;StorageOptimized&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="vmSizesProfile" arg="$resource.properties.vmSizesProfile" required="True">
                      <item type="object">
                        <prop type="string" name="name" arg="$resource.properties.vmSizesProfile[].name" required="True"/>
                        <prop type="integer32" name="rank" arg="$resource.properties.vmSizesProfile[].rank">
                          <format maximum="65535" minimum="0"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$resource.zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureFleet/fleets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalLocationsProfile">
                      <prop type="array<object>" name="locationProfiles" required="True">
                        <item type="object">
                          <prop type="string" name="location" required="True"/>
                          <prop type="object" name="virtualMachineProfileOverride" cls="BaseVirtualMachineProfile_read">
                            <prop type="object" name="applicationProfile">
                              <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                                <item type="object">
                                  <prop type="string" name="configurationReference"/>
                                  <prop type="boolean" name="enableAutomaticUpgrade"/>
                                  <prop type="integer32" name="order"/>
                                  <prop type="ResourceId" name="packageReferenceId" required="True"/>
                                  <prop type="string" name="tags"/>
                                  <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="capacityReservation">
                              <prop type="@SubResource_read" name="capacityReservationGroup"/>
                            </prop>
                            <prop type="object" name="diagnosticsProfile">
                              <prop type="object" name="bootDiagnostics">
                                <prop type="boolean" name="enabled"/>
                                <prop type="string" name="storageUri"/>
                              </prop>
                            </prop>
                            <prop type="object" name="extensionProfile">
                              <prop type="array<object>" name="extensions">
                                <item type="object">
                                  <prop readOnly="True" type="ResourceId" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties">
                                    <prop type="boolean" name="autoUpgradeMinorVersion"/>
                                    <prop type="boolean" name="enableAutomaticUpgrade"/>
                                    <prop type="string" name="forceUpdateTag"/>
                                    <prop type="object" name="protectedSettingsFromKeyVault">
                                      <prop type="string" name="secretUrl" required="True"/>
                                      <prop type="@SubResource_read" name="sourceVault" required="True"/>
                                    </prop>
                                    <prop type="array<string>" name="provisionAfterExtensions">
                                      <item type="string"/>
                                    </prop>
                                    <prop readOnly="True" type="string" name="provisioningState"/>
                                    <prop type="string" name="publisher"/>
                                    <prop type="object" name="settings">
                                      <additionalProp anyType="True"/>
                                    </prop>
                                    <prop type="boolean" name="suppressFailures"/>
                                    <prop type="string" name="type"/>
                                    <prop type="string" name="typeHandlerVersion"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </item>
                              </prop>
                              <prop type="string" name="extensionsTimeBudget"/>
                            </prop>
                            <prop type="object" name="hardwareProfile">
                              <prop type="object" name="vmSizeProperties">
                                <prop type="integer32" name="vCPUsAvailable"/>
                                <prop type="integer32" name="vCPUsPerCore"/>
                              </prop>
                            </prop>
                            <prop type="string" name="licenseType"/>
                            <prop type="object" name="networkProfile">
                              <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                                <prop type="ResourceId" name="id"/>
                              </prop>
                              <prop type="string" name="networkApiVersion">
                                <enum>
                                  <item value="&quot;2020-11-01&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="networkInterfaceConfigurations">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties">
                                    <prop type="string" name="auxiliaryMode">
                                      <enum>
                                        <item value="&quot;AcceleratedConnections&quot;"/>
                                        <item value="&quot;Floating&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="auxiliarySku">
                                      <enum>
                                        <item value="&quot;A1&quot;"/>
                                        <item value="&quot;A2&quot;"/>
                                        <item value="&quot;A4&quot;"/>
                                        <item value="&quot;A8&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="deleteOption">
                                      <enum>
                                        <item value="&quot;Delete&quot;"/>
                                        <item value="&quot;Detach&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="boolean" name="disableTcpStateTracking"/>
                                    <prop type="object" name="dnsSettings">
                                      <prop type="array<string>" name="dnsServers">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="boolean" name="enableAcceleratedNetworking"/>
                                    <prop type="boolean" name="enableFpga"/>
                                    <prop type="boolean" name="enableIPForwarding"/>
                                    <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                      <item type="object">
                                        <prop type="string" name="name" required="True"/>
                                        <prop type="object" name="properties">
                                          <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="boolean" name="primary"/>
                                          <prop type="string" name="privateIPAddressVersion">
                                            <enum>
                                              <item value="&quot;IPv4&quot;"/>
                                              <item value="&quot;IPv6&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="publicIPAddressConfiguration">
                                            <prop type="string" name="name" required="True"/>
                                            <prop type="object" name="properties">
                                              <prop type="string" name="deleteOption">
                                                <enum>
                                                  <item value="&quot;Delete&quot;"/>
                                                  <item value="&quot;Detach&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="object" name="dnsSettings">
                                                <prop type="string" name="domainNameLabel" required="True"/>
                                                <prop type="string" name="domainNameLabelScope">
                                                  <enum>
                                                    <item value="&quot;NoReuse&quot;"/>
                                                    <item value="&quot;ResourceGroupReuse&quot;"/>
                                                    <item value="&quot;SubscriptionReuse&quot;"/>
                                                    <item value="&quot;TenantReuse&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop type="integer32" name="idleTimeoutInMinutes"/>
                                              <prop type="array<object>" name="ipTags">
                                                <item type="object">
                                                  <prop type="string" name="ipTagType"/>
                                                  <prop type="string" name="tag"/>
                                                </item>
                                              </prop>
                                              <prop type="string" name="publicIPAddressVersion">
                                                <enum>
                                                  <item value="&quot;IPv4&quot;"/>
                                                  <item value="&quot;IPv6&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="@SubResource_read" name="publicIPPrefix"/>
                                            </prop>
                                            <prop type="object" name="sku">
                                              <prop type="string" name="name">
                                                <enum>
                                                  <item value="&quot;Basic&quot;"/>
                                                  <item value="&quot;Standard&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="tier">
                                                <enum>
                                                  <item value="&quot;Global&quot;"/>
                                                  <item value="&quot;Regional&quot;"/>
                                                </enum>
                                              </prop>
                                            </prop>
                                          </prop>
                                          <prop type="@ApiEntityReference_read" name="subnet"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="@SubResource_read" name="networkSecurityGroup"/>
                                    <prop type="boolean" name="primary"/>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="osProfile">
                              <prop type="string" name="adminUsername"/>
                              <prop type="boolean" name="allowExtensionOperations"/>
                              <prop type="string" name="computerNamePrefix"/>
                              <prop type="object" name="linuxConfiguration">
                                <prop type="boolean" name="disablePasswordAuthentication"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings">
                                  <prop type="string" name="assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent"/>
                                <prop type="object" name="ssh">
                                  <prop type="array<object>" name="publicKeys" identifiers="path">
                                    <item type="object">
                                      <prop type="string" name="keyData"/>
                                      <prop type="string" name="path"/>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                              <prop type="boolean" name="requireGuestProvisionSignal"/>
                              <prop type="array<object>" name="secrets">
                                <item type="object">
                                  <prop type="object" name="sourceVault" cls="SubResource_read">
                                    <prop type="ResourceId" name="id"/>
                                  </prop>
                                  <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                                    <item type="object">
                                      <prop type="string" name="certificateStore"/>
                                      <prop type="string" name="certificateUrl"/>
                                    </item>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="object" name="windowsConfiguration">
                                <prop type="array<object>" name="additionalUnattendContent">
                                  <item type="object">
                                    <prop type="string" name="componentName">
                                      <enum>
                                        <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="passName">
                                      <enum>
                                        <item value="&quot;OobeSystem&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="settingName">
                                      <enum>
                                        <item value="&quot;AutoLogon&quot;"/>
                                        <item value="&quot;FirstLogonCommands&quot;"/>
                                      </enum>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="boolean" name="enableAutomaticUpdates"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings">
                                  <prop type="string" name="assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="boolean" name="enableHotpatching"/>
                                  <prop type="string" name="patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByOS&quot;"/>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;Manual&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent"/>
                                <prop type="string" name="timeZone"/>
                                <prop type="object" name="winRM">
                                  <prop type="array<object>" name="listeners">
                                    <item type="object">
                                      <prop type="string" name="certificateUrl"/>
                                      <prop type="string" name="protocol">
                                        <enum>
                                          <item value="&quot;Http&quot;"/>
                                          <item value="&quot;Https&quot;"/>
                                        </enum>
                                      </prop>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="object" name="scheduledEventsProfile">
                              <prop type="object" name="osImageNotificationProfile">
                                <prop type="boolean" name="enable"/>
                                <prop type="string" name="notBeforeTimeout"/>
                              </prop>
                              <prop type="object" name="terminateNotificationProfile">
                                <prop type="boolean" name="enable"/>
                                <prop type="string" name="notBeforeTimeout"/>
                              </prop>
                            </prop>
                            <prop type="object" name="securityPostureReference">
                              <prop type="array<string>" name="excludeExtensions">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="id"/>
                              <prop type="boolean" name="isOverridable"/>
                            </prop>
                            <prop type="object" name="securityProfile">
                              <prop type="boolean" name="encryptionAtHost"/>
                              <prop type="object" name="encryptionIdentity">
                                <prop type="ResourceId" name="userAssignedIdentityResourceId"/>
                              </prop>
                              <prop type="object" name="proxyAgentSettings">
                                <prop type="boolean" name="enabled"/>
                                <prop type="integer32" name="keyIncarnationId"/>
                                <prop type="string" name="mode">
                                  <enum>
                                    <item value="&quot;Audit&quot;"/>
                                    <item value="&quot;Enforce&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="securityType">
                                <enum>
                                  <item value="&quot;ConfidentialVM&quot;"/>
                                  <item value="&quot;TrustedLaunch&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="uefiSettings">
                                <prop type="boolean" name="secureBootEnabled"/>
                                <prop type="boolean" name="vTpmEnabled"/>
                              </prop>
                            </prop>
                            <prop type="object" name="serviceArtifactReference">
                              <prop type="ResourceId" name="id"/>
                            </prop>
                            <prop type="object" name="storageProfile">
                              <prop type="array<object>" name="dataDisks" identifiers="name lun">
                                <item type="object">
                                  <prop type="string" name="caching">
                                    <enum>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;ReadOnly&quot;"/>
                                      <item value="&quot;ReadWrite&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="createOption" required="True">
                                    <enum>
                                      <item value="&quot;Attach&quot;"/>
                                      <item value="&quot;Copy&quot;"/>
                                      <item value="&quot;Empty&quot;"/>
                                      <item value="&quot;FromImage&quot;"/>
                                      <item value="&quot;Restore&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="deleteOption">
                                    <enum>
                                      <item value="&quot;Delete&quot;"/>
                                      <item value="&quot;Detach&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer64" name="diskIOPSReadWrite"/>
                                  <prop type="integer64" name="diskMBpsReadWrite"/>
                                  <prop type="integer32" name="diskSizeGB"/>
                                  <prop type="integer32" name="lun" required="True"/>
                                  <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                                  <prop type="string" name="name"/>
                                  <prop type="boolean" name="writeAcceleratorEnabled"/>
                                </item>
                              </prop>
                              <prop type="string" name="diskControllerType">
                                <enum>
                                  <item value="&quot;NVMe&quot;"/>
                                  <item value="&quot;SCSI&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="imageReference">
                                <prop type="string" name="communityGalleryImageId"/>
                                <prop readOnly="True" type="string" name="exactVersion"/>
                                <prop type="ResourceId" name="id"/>
                                <prop type="string" name="offer"/>
                                <prop type="string" name="publisher"/>
                                <prop type="string" name="sharedGalleryImageId"/>
                                <prop type="string" name="sku"/>
                                <prop type="string" name="version"/>
                              </prop>
                              <prop type="object" name="osDisk">
                                <prop type="string" name="caching">
                                  <enum>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;ReadOnly&quot;"/>
                                    <item value="&quot;ReadWrite&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="createOption" required="True">
                                  <enum>
                                    <item value="&quot;Attach&quot;"/>
                                    <item value="&quot;Copy&quot;"/>
                                    <item value="&quot;Empty&quot;"/>
                                    <item value="&quot;FromImage&quot;"/>
                                    <item value="&quot;Restore&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="deleteOption">
                                  <enum>
                                    <item value="&quot;Delete&quot;"/>
                                    <item value="&quot;Detach&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="object" name="diffDiskSettings">
                                  <prop type="string" name="option">
                                    <enum>
                                      <item value="&quot;Local&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="placement">
                                    <enum>
                                      <item value="&quot;CacheDisk&quot;"/>
                                      <item value="&quot;NvmeDisk&quot;"/>
                                      <item value="&quot;ResourceDisk&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="integer32" name="diskSizeGB"/>
                                <prop type="object" name="image">
                                  <prop type="string" name="uri"/>
                                </prop>
                                <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                                  <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                                    <prop type="ResourceId" name="id"/>
                                  </prop>
                                  <prop type="object" name="securityProfile">
                                    <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                                    <prop type="string" name="securityEncryptionType">
                                      <enum>
                                        <item value="&quot;DiskWithVMGuestState&quot;"/>
                                        <item value="&quot;NonPersistedTPM&quot;"/>
                                        <item value="&quot;VMGuestStateOnly&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="storageAccountType">
                                    <enum>
                                      <item value="&quot;PremiumV2_LRS&quot;"/>
                                      <item value="&quot;Premium_LRS&quot;"/>
                                      <item value="&quot;Premium_ZRS&quot;"/>
                                      <item value="&quot;StandardSSD_LRS&quot;"/>
                                      <item value="&quot;StandardSSD_ZRS&quot;"/>
                                      <item value="&quot;Standard_LRS&quot;"/>
                                      <item value="&quot;UltraSSD_LRS&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="osType">
                                  <enum>
                                    <item value="&quot;Linux&quot;"/>
                                    <item value="&quot;Windows&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="array<string>" name="vhdContainers">
                                  <item type="string"/>
                                </prop>
                                <prop type="boolean" name="writeAcceleratorEnabled"/>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="timeCreated"/>
                            <prop type="string" name="userData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="computeProfile" required="True">
                      <prop type="object" name="additionalVirtualMachineCapabilities">
                        <prop type="boolean" name="hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled"/>
                      </prop>
                      <prop type="@BaseVirtualMachineProfile_read" name="baseVirtualMachineProfile" required="True"/>
                      <prop type="string" name="computeApiVersion"/>
                      <prop type="integer32" name="platformFaultDomainCount"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="regularPriorityProfile">
                      <prop type="string" name="allocationStrategy">
                        <enum>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;Prioritized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="spotPriorityProfile">
                      <prop type="string" name="allocationStrategy">
                        <enum>
                          <item value="&quot;CapacityOptimized&quot;"/>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;PriceCapacityOptimized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="maintain"/>
                      <prop type="float32" name="maxPricePerVM"/>
                      <prop type="integer32" name="minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                    <prop type="object" name="vmAttributes">
                      <prop type="@VMAttributeMinMaxInteger_read" name="acceleratorCount"/>
                      <prop type="array<string>" name="acceleratorManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Nvidia&quot;"/>
                            <item value="&quot;Xilinx&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="acceleratorSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="acceleratorTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;FPGA&quot;"/>
                            <item value="&quot;GPU&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<string>" name="architectureTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;ARM64&quot;"/>
                            <item value="&quot;X64&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="burstableSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="cpuManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Ampere&quot;"/>
                            <item value="&quot;Intel&quot;"/>
                            <item value="&quot;Microsoft&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxInteger_read" name="dataDiskCount"/>
                      <prop type="array<string>" name="excludedVMSizes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="localStorageDiskTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;HDD&quot;"/>
                            <item value="&quot;SSD&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_read" name="localStorageInGiB"/>
                      <prop type="string" name="localStorageSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="memoryInGiB" required="True" cls="VMAttributeMinMaxDouble_read">
                        <prop type="float64" name="max">
                          <format minimum="0.0"/>
                        </prop>
                        <prop type="float64" name="min">
                          <format minimum="0.0"/>
                        </prop>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_read" name="memoryInGiBPerVCpu"/>
                      <prop type="@VMAttributeMinMaxDouble_read" name="networkBandwidthInMbps"/>
                      <prop type="@VMAttributeMinMaxInteger_read" name="networkInterfaceCount"/>
                      <prop type="@VMAttributeMinMaxInteger_read" name="rdmaNetworkInterfaceCount"/>
                      <prop type="string" name="rdmaSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vCpuCount" required="True" cls="VMAttributeMinMaxInteger_read">
                        <prop type="integer32" name="max">
                          <format minimum="0"/>
                        </prop>
                        <prop type="integer32" name="min">
                          <format minimum="0"/>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="vmCategories">
                        <item type="string">
                          <enum>
                            <item value="&quot;ComputeOptimized&quot;"/>
                            <item value="&quot;FpgaAccelerated&quot;"/>
                            <item value="&quot;GeneralPurpose&quot;"/>
                            <item value="&quot;GpuAccelerated&quot;"/>
                            <item value="&quot;HighPerformanceCompute&quot;"/>
                            <item value="&quot;MemoryOptimized&quot;"/>
                            <item value="&quot;StorageOptimized&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="vmSizesProfile" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="integer32" name="rank">
                          <format maximum="65535" minimum="0"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurefleet/fleets/{}" version="2024-11-01" swagger="mgmt-plane/azurefleet/ResourceProviders/Microsoft.AzureFleet/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVGbGVldC9mbGVldHMve2ZsZWV0TmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fleetName" options="fleet-name name n" required="True" idPart="name">
          <help short="The name of the Compute Fleet"/>
          <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription s" required="True" group="" idPart="subscription">
          <help short=""/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$resource.properties.additionalLocationsProfile" options="additional-locations-profile alp" group="Properties">
          <help short="Represents the configuration for additional locations where Fleet resources may be deployed."/>
          <arg type="array<object>" var="$resource.properties.additionalLocationsProfile.locationProfiles" options="location-profiles">
            <help short="The list of location profiles."/>
            <item nullable="True" type="object">
              <arg type="string" var="$resource.properties.additionalLocationsProfile.locationProfiles[].location" options="location">
                <help short="The ARM location name of the additional region. If LocationProfile is specified, then location is required."/>
              </arg>
              <arg nullable="True" type="object" var="$resource.properties.additionalLocationsProfile.locationProfiles[].virtualMachineProfileOverride" options="virtual-machine-profile-override" cls="BaseVirtualMachineProfile_update">
                <help short="An override for computeProfile.baseVirtualMachineProfile specific to this region.  This override is merged with the base virtual machine profile to define the final virtual machine profile for the resources deployed in this location."/>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.applicationProfile" options="application-profile">
                  <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
                  <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications" options="gallery-applications">
                    <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
                    <item nullable="True" type="object">
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].configurationReference" options="configuration-reference">
                        <help short="Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].enableAutomaticUpgrade" options="enable-automatic-upgrade">
                        <help short="If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"/>
                      </arg>
                      <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].order" options="order">
                        <help short="Optional, Specifies the order in which the packages have to be installed"/>
                      </arg>
                      <arg type="ResourceId" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].packageReferenceId" options="package-reference-id">
                        <help short="Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].tags" options="tags">
                        <help short="Optional, Specifies a passthrough value for more generic context."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure" options="treat-failure-as-deployment-failure">
                        <help short="Optional, If true, any failure for any operation in the VmApplication will fail the deployment"/>
                      </arg>
                    </item>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.capacityReservation" options="capacity-reservation">
                  <help short="Specifies the capacity reservation related details of a scale set. Minimum api-version: 2021-04-01."/>
                  <arg nullable="True" type="@SubResource_update" var="@BaseVirtualMachineProfile_update.capacityReservation.capacityReservationGroup" options="capacity-reservation-group">
                    <help short="Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."/>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.diagnosticsProfile" options="diagnostics-profile">
                  <help short="Specifies the boot diagnostic settings state."/>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.diagnosticsProfile.bootDiagnostics" options="boot-diagnostics">
                    <help short="Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."/>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.diagnosticsProfile.bootDiagnostics.enabled" options="enabled">
                      <help short="Whether boot diagnostics should be enabled on the Virtual Machine."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.diagnosticsProfile.bootDiagnostics.storageUri" options="storage-uri">
                      <help short="Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."/>
                    </arg>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.extensionProfile" options="extension-profile">
                  <help short="Specifies a collection of settings for extensions installed on virtual machines in the scale set."/>
                  <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions" options="extensions">
                    <help short="The virtual machine scale set child extension resources."/>
                    <item nullable="True" type="object">
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].name" options="name">
                        <help short="The name of the extension."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
                        <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="Properties">
                        <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.forceUpdateTag" options="force-update-tag" group="Properties">
                        <help short="If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."/>
                      </arg>
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettings" options="protected-settings" group="Properties">
                        <help short="The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."/>
                        <additionalProp anyType="True"/>
                      </arg>
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault" options="protected-settings-from-key-vault" group="Properties">
                        <help short="The extensions protected settings that are passed by reference, and consumed from key vault"/>
                        <arg type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.secretUrl" options="secret-url">
                          <help short="The URL referencing a secret in a Key Vault."/>
                        </arg>
                        <arg type="@SubResource_update" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.sourceVault" options="source-vault">
                          <help short="The relative URL of the Key Vault containing the secret."/>
                        </arg>
                      </arg>
                      <arg nullable="True" type="array<string>" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.provisionAfterExtensions" options="provision-after-extensions" group="Properties">
                        <help short="Collection of extension names after which this extension needs to be provisioned."/>
                        <item nullable="True" type="string"/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.publisher" options="publisher" group="Properties">
                        <help short="The name of the extension handler publisher."/>
                      </arg>
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.settings" options="settings" group="Properties">
                        <help short="Json formatted public settings for the extension."/>
                        <additionalProp anyType="True"/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.suppressFailures" options="suppress-failures" group="Properties">
                        <help short="Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false."/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.type" options="type" group="Properties">
                        <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.typeHandlerVersion" options="type-handler-version" group="Properties">
                        <help short="Specifies the version of the script handler."/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.extensionProfile.extensionsTimeBudget" options="extensions-time-budget">
                    <help short="Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."/>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.hardwareProfile" options="hardware-profile">
                  <help short="Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01."/>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.hardwareProfile.vmSizeProperties" options="vm-size-properties">
                    <help short="Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."/>
                    <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.hardwareProfile.vmSizeProperties.vCPUsAvailable" options="v-cp-us-available">
                      <help short="Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list)."/>
                    </arg>
                    <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.hardwareProfile.vmSizeProperties.vCPUsPerCore" options="v-cp-us-per-core">
                      <help short="Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"/>
                    </arg>
                  </arg>
                </arg>
                <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.licenseType" options="license-type">
                  <help short="Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15"/>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.networkProfile" options="network-profile">
                  <help short="Specifies properties of the network interfaces of the virtual machines in the scale set."/>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.networkProfile.healthProbe" options="health-probe" cls="ApiEntityReference_update">
                    <help short="A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'."/>
                    <arg nullable="True" type="ResourceId" var="@ApiEntityReference_update.id" options="id">
                      <help short="The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."/>
                    </arg>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkApiVersion" options="network-api-version">
                    <help short="specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'"/>
                    <enum>
                      <item name="2020-11-01" value="&quot;2020-11-01&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
                    <help short="The list of network configurations."/>
                    <item nullable="True" type="object">
                      <arg type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].name" options="name">
                        <help short="The network configuration name."/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode" options="auxiliary-mode" group="Properties">
                        <help short="Specifies whether the Auxiliary mode is enabled for the Network Interface resource."/>
                        <enum>
                          <item name="AcceleratedConnections" value="&quot;AcceleratedConnections&quot;"/>
                          <item name="Floating" value="&quot;Floating&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku" options="auxiliary-sku" group="Properties">
                        <help short="Specifies whether the Auxiliary sku is enabled for the Network Interface resource."/>
                        <enum>
                          <item name="A1" value="&quot;A1&quot;"/>
                          <item name="A2" value="&quot;A2&quot;"/>
                          <item name="A4" value="&quot;A4&quot;"/>
                          <item name="A8" value="&quot;A8&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.deleteOption" options="delete-option" group="Properties">
                        <help short="Specify what happens to the network interface when the VM is deleted"/>
                        <enum>
                          <item name="Delete" value="&quot;Delete&quot;"/>
                          <item name="Detach" value="&quot;Detach&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking" options="disable-tcp-state-tracking" group="Properties">
                        <help short="Specifies whether the network interface is disabled for tcp state tracking."/>
                      </arg>
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings" options="dns-settings" group="Properties">
                        <help short="The dns settings to be applied on the network interfaces."/>
                        <arg nullable="True" type="array<string>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers" options="dns-servers">
                          <help short="List of DNS servers IP addresses"/>
                          <item nullable="True" type="string"/>
                        </arg>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking" options="enable-accelerated-networking" group="Properties">
                        <help short="Specifies whether the network interface is accelerated networking-enabled."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.enableFpga" options="enable-fpga" group="Properties">
                        <help short="Specifies whether the network interface is FPGA networking-enabled."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                        <help short="Whether IP forwarding enabled on this NIC."/>
                      </arg>
                      <arg type="array<object>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                        <help short="Specifies the IP configurations of the network interface."/>
                        <item nullable="True" type="object">
                          <arg type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name">
                            <help short="The IP configuration name."/>
                          </arg>
                          <arg nullable="True" type="array<@SubResource_update>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                            <help short="Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway."/>
                            <item nullable="True" type="@SubResource_update"/>
                          </arg>
                          <arg nullable="True" type="array<@SubResource_update>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                            <help short="Specifies an array of references to application security group."/>
                            <item nullable="True" type="@SubResource_update"/>
                          </arg>
                          <arg nullable="True" type="array<@SubResource_update>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                            <help short="Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                            <item nullable="True" type="@SubResource_update"/>
                          </arg>
                          <arg nullable="True" type="array<@SubResource_update>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools" options="load-balancer-inbound-nat-pools" group="Properties">
                            <help short="Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer."/>
                            <item nullable="True" type="@SubResource_update"/>
                          </arg>
                          <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                            <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                          </arg>
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                            <help short="Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."/>
                            <enum>
                              <item name="IPv4" value="&quot;IPv4&quot;"/>
                              <item name="IPv6" value="&quot;IPv6&quot;"/>
                            </enum>
                          </arg>
                          <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration" options="public-ip-address-configuration" group="Properties">
                            <help short="The publicIPAddressConfiguration."/>
                            <arg type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" options="name">
                              <help short="The publicIP address configuration name."/>
                            </arg>
                            <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption" options="delete-option" group="Properties">
                              <help short="Specify what happens to the public IP when the VM is deleted"/>
                              <enum>
                                <item name="Delete" value="&quot;Delete&quot;"/>
                                <item name="Detach" value="&quot;Detach&quot;"/>
                              </enum>
                            </arg>
                            <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings" options="dns-settings" group="Properties">
                              <help short="The dns settings to be applied on the publicIP addresses ."/>
                              <arg type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                                <help short="The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                              </arg>
                              <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                                <help short="The Domain name label scope.The concatenation of the hashed domain name label that generated according to the policy from domain name label scope and vm index will be the domain name labels of the PublicIPAddress resources that will be created"/>
                                <enum>
                                  <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                                  <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                                  <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                                  <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                                </enum>
                              </arg>
                            </arg>
                            <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                              <help short="The idle timeout of the public IP address."/>
                            </arg>
                            <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags" options="ip-tags" group="Properties">
                              <help short="The list of IP tags associated with the public IP address."/>
                              <item nullable="True" type="object">
                                <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType" options="ip-tag-type">
                                  <help short="IP tag type. Example: FirstPartyUsage."/>
                                </arg>
                                <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag" options="tag">
                                  <help short="IP tag associated with the public IP. Example: SQL, Storage etc."/>
                                </arg>
                              </item>
                            </arg>
                            <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
                              <help short="Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."/>
                              <enum>
                                <item name="IPv4" value="&quot;IPv4&quot;"/>
                                <item name="IPv6" value="&quot;IPv6&quot;"/>
                              </enum>
                            </arg>
                            <arg nullable="True" type="@SubResource_update" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties">
                              <help short="The PublicIPPrefix from which to allocate publicIP addresses."/>
                            </arg>
                            <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku" options="sku">
                              <help short="Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."/>
                              <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name" options="name">
                                <help short="Specify public IP sku name"/>
                                <enum>
                                  <item name="Basic" value="&quot;Basic&quot;"/>
                                  <item name="Standard" value="&quot;Standard&quot;"/>
                                </enum>
                              </arg>
                              <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier" options="tier">
                                <help short="Specify public IP sku tier"/>
                                <enum>
                                  <item name="Global" value="&quot;Global&quot;"/>
                                  <item name="Regional" value="&quot;Regional&quot;"/>
                                </enum>
                              </arg>
                            </arg>
                          </arg>
                          <arg nullable="True" type="@ApiEntityReference_update" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                            <help short="Specifies the identifier of the subnet."/>
                          </arg>
                        </item>
                      </arg>
                      <arg nullable="True" type="@SubResource_update" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup" options="network-security-group" group="Properties">
                        <help short="The network security group."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.primary" options="primary" group="Properties">
                        <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                      </arg>
                    </item>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile" options="os-profile">
                  <help short="Specifies the operating system settings for the virtual machines in the scale set."/>
                  <arg nullable="True" type="password" var="@BaseVirtualMachineProfile_update.osProfile.adminPassword" options="admin-password" group="">
                    <help short="Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;, &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;, &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;, &quot;Password22&quot;, &quot;iloveyou!&quot; <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"/>
                    <prompt msg="Please provide VMSS password:" confirm="True"/>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.adminUsername" options="admin-username">
                    <help short="Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in &quot;.&quot; <br><br> **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;, &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;, &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;, &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;, &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;, &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;, &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;, &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;, &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;, &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;, &quot;user4&quot;, &quot;user5&quot;. <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters"/>
                  </arg>
                  <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.allowExtensionOperations" options="allow-extension-operations">
                    <help short="Specifies whether extension operations should be allowed on the virtual machine scale set. This may only be set to False when no extensions are present on the virtual machine scale set."/>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.computerNamePrefix" options="computer-name-prefix">
                    <help short="Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long."/>
                  </arg>
                  <arg nullable="True" type="password" var="@BaseVirtualMachineProfile_update.osProfile.customData" options="custom-data" group="">
                    <help short="Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://learn.microsoft.com/azure/virtual-machines/linux/using-cloud-init)"/>
                    <prompt msg="Please enter VM Password:" confirm="True"/>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration" options="linux-configuration">
                    <help short="Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."/>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.disablePasswordAuthentication" options="disable-password-authentication">
                      <help short="Specifies whether password authentication should be disabled."/>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                      <help short="Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."/>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings" options="patch-settings">
                      <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Linux."/>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                        <help short="Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                        <enum>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                        <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."/>
                        <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                          <help short="Enables customer to schedule patching without accidental upgrades"/>
                        </arg>
                        <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                          <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                          <enum>
                            <item name="Always" value="&quot;Always&quot;"/>
                            <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                            <item name="Never" value="&quot;Never&quot;"/>
                            <item name="Unknown" value="&quot;Unknown&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.patchMode" options="patch-mode">
                        <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"/>
                        <enum>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.provisionVMAgent" options="provision-vm-agent">
                      <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh" options="ssh">
                      <help short="Specifies the ssh key configuration for a Linux OS."/>
                      <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh.publicKeys" options="public-keys">
                        <help short="The list of SSH public keys used to authenticate with linux based VMs."/>
                        <item nullable="True" type="object">
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh.publicKeys[].keyData" options="key-data">
                            <help short="SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."/>
                          </arg>
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh.publicKeys[].path" options="path">
                            <help short="Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"/>
                          </arg>
                        </item>
                      </arg>
                    </arg>
                  </arg>
                  <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.requireGuestProvisionSignal" options="require-guest-provision-signal">
                    <help short="Optional property which must either be set to True or omitted."/>
                  </arg>
                  <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.osProfile.secrets" options="secrets">
                    <help short="Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                    <item nullable="True" type="object">
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.secrets[].sourceVault" options="source-vault" cls="SubResource_update">
                        <help short="The relative URL of the Key Vault containing all of the certificates in VaultCertificates."/>
                        <arg nullable="True" type="ResourceId" var="@SubResource_update.id" options="id">
                          <help short="Resource Id"/>
                        </arg>
                      </arg>
                      <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.osProfile.secrets[].vaultCertificates" options="vault-certificates">
                        <help short="The list of key vault references in SourceVault which contain certificates."/>
                        <item nullable="True" type="object">
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.secrets[].vaultCertificates[].certificateStore" options="certificate-store">
                            <help short="For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."/>
                          </arg>
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.secrets[].vaultCertificates[].certificateUrl" options="certificate-url">
                            <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br> &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br> &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                          </arg>
                        </item>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration" options="windows-configuration">
                    <help short="Specifies Windows operating system settings on the virtual machine."/>
                    <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent" options="additional-unattend-content">
                      <help short="Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."/>
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].componentName" options="component-name">
                          <help short="The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."/>
                          <enum>
                            <item name="Microsoft-Windows-Shell-Setup" value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="password" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].content" options="content">
                          <help short="Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."/>
                          <prompt msg="Password:"/>
                        </arg>
                        <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].passName" options="pass-name">
                          <help short="The pass name. Currently, the only allowable value is OobeSystem."/>
                          <enum>
                            <item name="OobeSystem" value="&quot;OobeSystem&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].settingName" options="setting-name">
                          <help short="Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."/>
                          <enum>
                            <item name="AutoLogon" value="&quot;AutoLogon&quot;"/>
                            <item name="FirstLogonCommands" value="&quot;FirstLogonCommands&quot;"/>
                          </enum>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.enableAutomaticUpdates" options="enable-automatic-updates">
                      <help short="Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."/>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
                      <help short="Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false."/>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings" options="patch-settings">
                      <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Windows."/>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                        <help short="Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                        <enum>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                        <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."/>
                        <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                          <help short="Enables customer to schedule patching without accidental upgrades"/>
                        </arg>
                        <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                          <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                          <enum>
                            <item name="Always" value="&quot;Always&quot;"/>
                            <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                            <item name="Never" value="&quot;Never&quot;"/>
                            <item name="Unknown" value="&quot;Unknown&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.enableHotpatching" options="enable-hotpatching">
                        <help short="Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.patchMode" options="patch-mode">
                        <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true"/>
                        <enum>
                          <item name="AutomaticByOS" value="&quot;AutomaticByOS&quot;"/>
                          <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                          <item name="Manual" value="&quot;Manual&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.provisionVMAgent" options="provision-vm-agent">
                      <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.timeZone" options="time-zone">
                      <help short="Specifies the time zone of the virtual machine. e.g. &quot;Pacific Standard Time&quot;. Possible values can be [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."/>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM" options="win-rm">
                      <help short="Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."/>
                      <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM.listeners" options="listeners">
                        <help short="The list of Windows Remote Management listeners"/>
                        <item nullable="True" type="object">
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl" options="certificate-url">
                            <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br> &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br> &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                          </arg>
                          <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM.listeners[].protocol" options="protocol">
                            <help short="Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"/>
                            <enum>
                              <item name="Http" value="&quot;Http&quot;"/>
                              <item name="Https" value="&quot;Https&quot;"/>
                            </enum>
                          </arg>
                        </item>
                      </arg>
                    </arg>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile" options="scheduled-events-profile">
                  <help short="Specifies Scheduled Event related configurations."/>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile.osImageNotificationProfile" options="os-image-notification-profile">
                    <help short="Specifies OS Image Scheduled Event related configurations."/>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile.osImageNotificationProfile.enable" options="enable">
                      <help short="Specifies whether the OS Image Scheduled event is enabled or disabled."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                      <help short="Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must not exceed 15 minutes (PT15M)"/>
                    </arg>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile.terminateNotificationProfile" options="terminate-notification-profile">
                    <help short="Specifies Terminate Scheduled Event related configurations."/>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile.terminateNotificationProfile.enable" options="enable">
                      <help short="Specifies whether the Terminate Scheduled event is enabled or disabled."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout" options="not-before-timeout">
                      <help short="Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"/>
                    </arg>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.securityPostureReference" options="security-posture-reference">
                  <help short="Specifies the security posture to be used for all virtual machines in the scale set. Minimum api-version: 2023-03-01"/>
                  <arg nullable="True" type="array<string>" var="@BaseVirtualMachineProfile_update.securityPostureReference.excludeExtensions" options="exclude-extensions">
                    <help short="List of virtual machine extension names to exclude when applying the security posture."/>
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.securityPostureReference.id" options="id">
                    <help short="The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest"/>
                  </arg>
                  <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.securityPostureReference.isOverridable" options="is-overridable">
                    <help short="Whether the security posture can be overridden by the user."/>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.securityProfile" options="security-profile">
                  <help short="Specifies the Security related profile settings for the virtual machines in the scale set."/>
                  <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.securityProfile.encryptionAtHost" options="encryption-at-host">
                    <help short="This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."/>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.securityProfile.encryptionIdentity" options="encryption-identity">
                    <help short="Specifies the Managed Identity used by ADE to get access token for keyvault operations."/>
                    <arg nullable="True" type="ResourceId" var="@BaseVirtualMachineProfile_update.securityProfile.encryptionIdentity.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
                      <help short="Specifies ARM Resource ID of one of the user identities associated with the VM."/>
                    </arg>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings" options="proxy-agent-settings">
                    <help short="Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."/>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings.enabled" options="enabled">
                      <help short="Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."/>
                    </arg>
                    <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings.keyIncarnationId" options="key-incarnation-id">
                      <help short="Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings.mode" options="mode">
                      <help short="Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."/>
                      <enum>
                        <item name="Audit" value="&quot;Audit&quot;"/>
                        <item name="Enforce" value="&quot;Enforce&quot;"/>
                      </enum>
                    </arg>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.securityProfile.securityType" options="security-type">
                    <help short="Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."/>
                    <enum>
                      <item name="ConfidentialVM" value="&quot;ConfidentialVM&quot;"/>
                      <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.securityProfile.uefiSettings" options="uefi-settings">
                    <help short="Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."/>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.securityProfile.uefiSettings.secureBootEnabled" options="secure-boot-enabled">
                      <help short="Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.securityProfile.uefiSettings.vTpmEnabled" options="v-tpm-enabled">
                      <help short="Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
                    </arg>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.serviceArtifactReference" options="service-artifact-reference">
                  <help short="Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. Minimum api-version: 2022-11-01"/>
                  <arg nullable="True" type="ResourceId" var="@BaseVirtualMachineProfile_update.serviceArtifactReference.id" options="id">
                    <help short="The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"/>
                  </arg>
                </arg>
                <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.storageProfile" options="storage-profile">
                  <help short="Specifies the storage settings for the virtual machine disks."/>
                  <arg nullable="True" type="array<object>" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks" options="data-disks">
                    <help short="Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
                    <item nullable="True" type="object">
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].caching" options="caching">
                        <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                        <enum>
                          <item name="None" value="&quot;None&quot;"/>
                          <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                          <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].createOption" options="create-option">
                        <help short="The create option."/>
                        <enum>
                          <item name="Attach" value="&quot;Attach&quot;"/>
                          <item name="Copy" value="&quot;Copy&quot;"/>
                          <item name="Empty" value="&quot;Empty&quot;"/>
                          <item name="FromImage" value="&quot;FromImage&quot;"/>
                          <item name="Restore" value="&quot;Restore&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].deleteOption" options="delete-option">
                        <help short="Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**."/>
                        <enum>
                          <item name="Delete" value="&quot;Delete&quot;"/>
                          <item name="Detach" value="&quot;Detach&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="integer64" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].diskIOPSReadWrite" options="disk-iops-read-write">
                        <help short="Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                      </arg>
                      <arg nullable="True" type="integer64" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].diskMBpsReadWrite" options="disk-m-bps-read-write">
                        <help short="Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB."/>
                      </arg>
                      <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].diskSizeGB" options="disk-size-gb">
                        <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
                      </arg>
                      <arg type="integer32" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].lun" options="lun">
                        <help short="Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."/>
                      </arg>
                      <arg nullable="True" type="@VirtualMachineScaleSetManagedDiskParameters_update" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].managedDisk" options="managed-disk">
                        <help short="The managed disk parameters."/>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].name" options="name">
                        <help short="The disk name."/>
                      </arg>
                      <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].writeAcceleratorEnabled" options="write-accelerator-enabled">
                        <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.diskControllerType" options="disk-controller-type">
                    <help short="Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01"/>
                    <enum>
                      <item name="NVMe" value="&quot;NVMe&quot;"/>
                      <item name="SCSI" value="&quot;SCSI&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference" options="image-reference">
                    <help short="Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."/>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.communityGalleryImageId" options="community-gallery-image-id">
                      <help short="Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."/>
                    </arg>
                    <arg nullable="True" type="ResourceId" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.id" options="id">
                      <help short="Resource Id"/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.offer" options="offer">
                      <help short="Specifies the offer of the platform image or marketplace image used to create the virtual machine."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.publisher" options="publisher">
                      <help short="The image publisher."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.sharedGalleryImageId" options="shared-gallery-image-id">
                      <help short="Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.sku" options="sku">
                      <help short="The image SKU."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.imageReference.version" options="version">
                      <help short="Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."/>
                    </arg>
                  </arg>
                  <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk" options="os-disk">
                    <help short="Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.caching" options="caching">
                      <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**"/>
                      <enum>
                        <item name="None" value="&quot;None&quot;"/>
                        <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                        <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.createOption" options="create-option">
                      <help short="Specifies how the virtual machines in the scale set should be created. The only allowed value is: **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described."/>
                      <enum>
                        <item name="Attach" value="&quot;Attach&quot;"/>
                        <item name="Copy" value="&quot;Copy&quot;"/>
                        <item name="Empty" value="&quot;Empty&quot;"/>
                        <item name="FromImage" value="&quot;FromImage&quot;"/>
                        <item name="Restore" value="&quot;Restore&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.deleteOption" options="delete-option">
                      <help short="Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk."/>
                      <enum>
                        <item name="Delete" value="&quot;Delete&quot;"/>
                        <item name="Detach" value="&quot;Detach&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diffDiskSettings" options="diff-disk-settings">
                      <help short="Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set."/>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diffDiskSettings.option" options="option">
                        <help short="Specifies the ephemeral disk settings for operating system disk."/>
                        <enum>
                          <item name="Local" value="&quot;Local&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diffDiskSettings.placement" options="placement">
                        <help short="Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used. Refer to the VM size documentation for Windows VM at https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk."/>
                        <enum>
                          <item name="CacheDisk" value="&quot;CacheDisk&quot;"/>
                          <item name="NvmeDisk" value="&quot;NvmeDisk&quot;"/>
                          <item name="ResourceDisk" value="&quot;ResourceDisk&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg nullable="True" type="integer32" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diskSizeGB" options="disk-size-gb">
                      <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.image" options="image">
                      <help short="Specifies information about the unmanaged user image to base the scale set on."/>
                      <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.image.uri" options="uri">
                        <help short="Specifies the virtual hard disk's uri."/>
                      </arg>
                    </arg>
                    <arg nullable="True" type="object" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.managedDisk" options="managed-disk" cls="VirtualMachineScaleSetManagedDiskParameters_update">
                      <help short="The managed disk parameters."/>
                      <arg nullable="True" type="object" var="@VirtualMachineScaleSetManagedDiskParameters_update.diskEncryptionSet" options="disk-encryption-set" cls="DiskEncryptionSetParameters_update">
                        <help short="Specifies the customer managed disk encryption set resource id for the managed disk."/>
                        <arg nullable="True" type="ResourceId" var="@DiskEncryptionSetParameters_update.id" options="id">
                          <help short="Resource Id"/>
                        </arg>
                      </arg>
                      <arg nullable="True" type="object" var="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile" options="security-profile">
                        <help short="Specifies the security profile for the managed disk."/>
                        <arg nullable="True" type="@DiskEncryptionSetParameters_update" var="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.diskEncryptionSet" options="disk-encryption-set">
                          <help short="Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."/>
                        </arg>
                        <arg nullable="True" type="string" var="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.securityEncryptionType" options="security-encryption-type">
                          <help short="Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs."/>
                          <enum>
                            <item name="DiskWithVMGuestState" value="&quot;DiskWithVMGuestState&quot;"/>
                            <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                            <item name="VMGuestStateOnly" value="&quot;VMGuestStateOnly&quot;"/>
                          </enum>
                        </arg>
                      </arg>
                      <arg nullable="True" type="string" var="@VirtualMachineScaleSetManagedDiskParameters_update.storageAccountType" options="storage-account-type">
                        <help short="Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."/>
                        <enum>
                          <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                          <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                          <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
                          <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                          <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
                          <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                          <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.name" options="name">
                      <help short="The disk name."/>
                    </arg>
                    <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.osType" options="os-type">
                      <help short="This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"/>
                      <enum>
                        <item name="Linux" value="&quot;Linux&quot;"/>
                        <item name="Windows" value="&quot;Windows&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="array<string>" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.vhdContainers" options="vhd-containers">
                      <help short="Specifies the container urls that are used to store operating system disks for the scale set."/>
                      <item nullable="True" type="string"/>
                    </arg>
                    <arg nullable="True" type="boolean" var="@BaseVirtualMachineProfile_update.storageProfile.osDisk.writeAcceleratorEnabled" options="write-accelerator-enabled">
                      <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
                    </arg>
                  </arg>
                </arg>
                <arg nullable="True" type="string" var="@BaseVirtualMachineProfile_update.userData" options="user-data">
                  <help short="UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."/>
                </arg>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.computeProfile" options="compute-profile cp" group="Properties">
          <help short="Compute Profile to use for running user's workloads."/>
          <arg nullable="True" type="object" var="$resource.properties.computeProfile.additionalVirtualMachineCapabilities" options="additional-virtual-machine-capabilities">
            <help short="Specifies VMSS and VM API entity models support two additional capabilities as of today: ultraSSDEnabled and hibernationEnabled. ultraSSDEnabled: Enables UltraSSD_LRS storage account type on the VMSS VMs. hibernationEnabled: Enables the hibernation capability on the VMSS VMs. Default value is null if not specified. This property cannot be updated once set."/>
            <arg nullable="True" type="boolean" var="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.hibernationEnabled" options="hibernation-enabled">
              <help short="The flag that enables or disables hibernation capability on the VM."/>
            </arg>
            <arg nullable="True" type="boolean" var="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.ultraSSDEnabled" options="ultra-ssd-enabled">
              <help short="The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."/>
            </arg>
          </arg>
          <arg type="@BaseVirtualMachineProfile_update" var="$resource.properties.computeProfile.baseVirtualMachineProfile" options="base-virtual-machine-profile">
            <help short="Base Virtual Machine Profile Properties to be specified according to &quot;specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile&quot;"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.computeProfile.computeApiVersion" options="compute-api-version">
            <help short="Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines. The default value will be the latest supported computeApiVersion by Compute Fleet."/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.computeProfile.platformFaultDomainCount" options="platform-fault-domain-count">
            <help short="Specifies the number of fault domains to use when creating the underlying VMSS. A fault domain is a logical group of hardware within an Azure datacenter. VMs in the same fault domain share a common power source and network switch. If not specified, defaults to 1, which represents &quot;Max Spreading&quot; (using as many fault domains as possible). This property cannot be updated."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.regularPriorityProfile" options="regular-priority-profile rpp" group="Properties">
          <help short="Configuration Options for Regular instances in Compute Fleet."/>
          <arg nullable="True" type="string" var="$resource.properties.regularPriorityProfile.allocationStrategy" options="allocation-strategy">
            <help short="Allocation strategy to follow when determining the VM sizes distribution for Regular VMs."/>
            <enum>
              <item name="LowestPrice" value="&quot;LowestPrice&quot;"/>
              <item name="Prioritized" value="&quot;Prioritized&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.regularPriorityProfile.capacity" options="capacity">
            <help short="Total capacity to achieve. It is currently in terms of number of VMs."/>
            <format minimum="0"/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.regularPriorityProfile.minCapacity" options="min-capacity">
            <help short="Minimum capacity to achieve which cannot be updated. If we will not be able to &quot;guarantee&quot; minimum capacity, we will reject the request in the sync path itself."/>
            <format minimum="0"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.spotPriorityProfile" options="spot-priority-profile spp" group="Properties">
          <help short="Configuration Options for Spot instances in Compute Fleet."/>
          <arg nullable="True" type="string" var="$resource.properties.spotPriorityProfile.allocationStrategy" options="allocation-strategy">
            <help short="Allocation strategy to follow when determining the VM sizes distribution for Spot VMs."/>
            <enum>
              <item name="CapacityOptimized" value="&quot;CapacityOptimized&quot;"/>
              <item name="LowestPrice" value="&quot;LowestPrice&quot;"/>
              <item name="PriceCapacityOptimized" value="&quot;PriceCapacityOptimized&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.spotPriorityProfile.capacity" options="capacity">
            <help short="Total capacity to achieve. It is currently in terms of number of VMs."/>
            <format minimum="0"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.spotPriorityProfile.evictionPolicy" options="eviction-policy">
            <help short="Eviction Policy to follow when evicting Spot VMs."/>
            <enum>
              <item name="Deallocate" value="&quot;Deallocate&quot;"/>
              <item name="Delete" value="&quot;Delete&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.spotPriorityProfile.maintain" options="maintain">
            <help short="Flag to enable/disable continuous goal seeking for the desired capacity and restoration of evicted Spot VMs. If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to create new VMs (if VMs are evicted deleted) or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed to allocate due to capacity constraint) in order to achieve the desired capacity. Maintain is enabled by default."/>
          </arg>
          <arg nullable="True" type="float32" var="$resource.properties.spotPriorityProfile.maxPricePerVM" options="max-price-per-vm">
            <help short="Price per hour of each Spot VM will never exceed this."/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.spotPriorityProfile.minCapacity" options="min-capacity">
            <help short="Minimum capacity to achieve which cannot be updated. If we will not be able to &quot;guarantee&quot; minimum capacity, we will reject the request in the sync path itself."/>
            <format minimum="0"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.vmAttributes" options="vm-attributes vma" group="Properties">
          <help short="Attribute based Fleet."/>
          <arg nullable="True" type="@VMAttributeMinMaxInteger_update" var="$resource.properties.vmAttributes.acceleratorCount" options="accelerator-count">
            <help short="The range of accelerator count specified from min to max. Optional parameter. Either Min or Max is required if specified. acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.acceleratorManufacturers" options="accelerator-manufacturers">
            <help short="The accelerator manufacturers specified as a list.  acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <item nullable="True" type="string">
              <enum>
                <item name="AMD" value="&quot;AMD&quot;"/>
                <item name="Nvidia" value="&quot;Nvidia&quot;"/>
                <item name="Xilinx" value="&quot;Xilinx&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.vmAttributes.acceleratorSupport" options="accelerator-support">
            <help short="Specifies whether the VMSize supporting accelerator should be used to build Fleet or not. acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.acceleratorTypes" options="accelerator-types">
            <help short="The accelerator types specified as a list. acceleratorSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If acceleratorSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <item nullable="True" type="string">
              <enum>
                <item name="FPGA" value="&quot;FPGA&quot;"/>
                <item name="GPU" value="&quot;GPU&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.architectureTypes" options="architecture-types">
            <help short="The VM architecture types specified as a list. Optional parameter."/>
            <item nullable="True" type="string">
              <enum>
                <item name="ARM64" value="&quot;ARM64&quot;"/>
                <item name="X64" value="&quot;X64&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.vmAttributes.burstableSupport" options="burstable-support">
            <help short="Specifies whether the VMSize supporting burstable capability should be used to build Fleet or not."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.cpuManufacturers" options="cpu-manufacturers">
            <help short="The VM CPU manufacturers specified as a list. Optional parameter."/>
            <item nullable="True" type="string">
              <enum>
                <item name="AMD" value="&quot;AMD&quot;"/>
                <item name="Ampere" value="&quot;Ampere&quot;"/>
                <item name="Intel" value="&quot;Intel&quot;"/>
                <item name="Microsoft" value="&quot;Microsoft&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="@VMAttributeMinMaxInteger_update" var="$resource.properties.vmAttributes.dataDiskCount" options="data-disk-count">
            <help short="The range of data disk count specified from Min to Max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.excludedVMSizes" options="excluded-vm-sizes">
            <help short="Specifies which VMSizes should be excluded while building Fleet. Optional parameter."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.localStorageDiskTypes" options="local-storage-disk-types">
            <help short="The local storage disk types specified as a list. LocalStorageSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If localStorageSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
            <item nullable="True" type="string">
              <enum>
                <item name="HDD" value="&quot;HDD&quot;"/>
                <item name="SSD" value="&quot;SSD&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="@VMAttributeMinMaxDouble_update" var="$resource.properties.vmAttributes.localStorageInGiB" options="local-storage-in-gi-b">
            <help short="LocalStorageSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If localStorageSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.vmAttributes.localStorageSupport" options="local-storage-support">
            <help short="Specifies whether the VMSize supporting local storage should be used to build Fleet or not. Included - Default if not specified as most Azure VMs support local storage."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.properties.vmAttributes.memoryInGiB" options="memory-in-gi-b" cls="VMAttributeMinMaxDouble_update">
            <help short="The range of memory specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is required if specified."/>
            <arg nullable="True" type="float64" var="@VMAttributeMinMaxDouble_update.max" options="max">
              <help short="Maximum value. Double.MaxValue(1.7976931348623157E+308)"/>
              <format minimum="0.0"/>
            </arg>
            <arg nullable="True" type="float64" var="@VMAttributeMinMaxDouble_update.min" options="min">
              <help short="Minimum value. default 0. Double.MinValue()"/>
              <format minimum="0.0"/>
            </arg>
          </arg>
          <arg nullable="True" type="@VMAttributeMinMaxDouble_update" var="$resource.properties.vmAttributes.memoryInGiBPerVCpu" options="memory-in-gi-b-per-v-cpu">
            <help short="The range of memory in GiB per vCPU specified from min to max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg nullable="True" type="@VMAttributeMinMaxDouble_update" var="$resource.properties.vmAttributes.networkBandwidthInMbps" options="network-bandwidth-in-mbps">
            <help short="The range of network bandwidth in Mbps specified from Min to Max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg nullable="True" type="@VMAttributeMinMaxInteger_update" var="$resource.properties.vmAttributes.networkInterfaceCount" options="network-interface-count">
            <help short="The range of network interface count specified from Min to Max. Optional parameter. Either Min or Max is required if specified."/>
          </arg>
          <arg nullable="True" type="@VMAttributeMinMaxInteger_update" var="$resource.properties.vmAttributes.rdmaNetworkInterfaceCount" options="rdma-network-interface-count">
            <help short="The range of RDMA (Remote Direct Memory Access) network interface count specified from Min to Max. Optional parameter. Either Min or Max is required if specified. rdmaSupport should be set to &quot;Included&quot; or &quot;Required&quot; to use this VMAttribute.  If rdmaSupport is &quot;Excluded&quot;, this VMAttribute can not be used."/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.vmAttributes.rdmaSupport" options="rdma-support">
            <help short="Specifies whether the VMSize supporting RDMA (Remote Direct Memory Access) should be used to build Fleet or not."/>
            <enum>
              <item name="Excluded" value="&quot;Excluded&quot;"/>
              <item name="Included" value="&quot;Included&quot;"/>
              <item name="Required" value="&quot;Required&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.properties.vmAttributes.vCpuCount" options="v-cpu-count" cls="VMAttributeMinMaxInteger_update">
            <help short="The range of vCpuCount specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is required if specified."/>
            <arg nullable="True" type="integer32" var="@VMAttributeMinMaxInteger_update.max" options="max">
              <help short="Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified."/>
              <format minimum="0"/>
            </arg>
            <arg nullable="True" type="integer32" var="@VMAttributeMinMaxInteger_update.min" options="min">
              <help short="Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified."/>
              <format minimum="0"/>
            </arg>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.vmAttributes.vmCategories" options="vm-categories">
            <help short="The VM category specified as a list. Optional parameter."/>
            <item nullable="True" type="string">
              <enum>
                <item name="ComputeOptimized" value="&quot;ComputeOptimized&quot;"/>
                <item name="FpgaAccelerated" value="&quot;FpgaAccelerated&quot;"/>
                <item name="GeneralPurpose" value="&quot;GeneralPurpose&quot;"/>
                <item name="GpuAccelerated" value="&quot;GpuAccelerated&quot;"/>
                <item name="HighPerformanceCompute" value="&quot;HighPerformanceCompute&quot;"/>
                <item name="MemoryOptimized" value="&quot;MemoryOptimized&quot;"/>
                <item name="StorageOptimized" value="&quot;StorageOptimized&quot;"/>
              </enum>
            </item>
          </arg>
        </arg>
        <arg type="array<object>" var="$resource.properties.vmSizesProfile" options="vm-sizes-profile vmsizeprof" group="Properties">
          <help short="List of VM sizes supported for Compute Fleet"/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.vmSizesProfile[].name" options="name">
              <help short="The Sku name (e.g. 'Standard_DS1_v2')"/>
            </arg>
            <arg nullable="True" type="integer32" var="$resource.properties.vmSizesProfile[].rank" options="rank">
              <help short="The rank of the VM size. This is used with 'RegularPriorityAllocationStrategy.Prioritized' The lower the number, the higher the priority. Starting with 0."/>
              <format maximum="65535" minimum="0"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.identity" options="identity i" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.plan" options="plan p" group="Resource">
          <help short="Details of the resource plan."/>
          <arg type="string" var="$resource.plan.name" options="name">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$resource.plan.product" options="product">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg nullable="True" type="string" var="$resource.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$resource.plan.publisher" options="publisher">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.tags" options="tags t" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="array<string>" var="$resource.zones" options="zones z" group="Resource">
          <help short="Zones in which the Compute Fleet is available"/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <operation operationId="Fleets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}">
          <request method="get">
            <path>
              <param type="string" name="fleetName" arg="$Path.fleetName" required="True">
                <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Fleet_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureFleet/fleets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalLocationsProfile">
                      <prop type="array<object>" name="locationProfiles" required="True">
                        <item type="object">
                          <prop type="string" name="location" required="True"/>
                          <prop type="object" name="virtualMachineProfileOverride" cls="BaseVirtualMachineProfile_read">
                            <prop type="object" name="applicationProfile">
                              <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                                <item type="object">
                                  <prop type="string" name="configurationReference"/>
                                  <prop type="boolean" name="enableAutomaticUpgrade"/>
                                  <prop type="integer32" name="order"/>
                                  <prop type="ResourceId" name="packageReferenceId" required="True"/>
                                  <prop type="string" name="tags"/>
                                  <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="capacityReservation">
                              <prop type="@SubResource_read" name="capacityReservationGroup"/>
                            </prop>
                            <prop type="object" name="diagnosticsProfile">
                              <prop type="object" name="bootDiagnostics">
                                <prop type="boolean" name="enabled"/>
                                <prop type="string" name="storageUri"/>
                              </prop>
                            </prop>
                            <prop type="object" name="extensionProfile">
                              <prop type="array<object>" name="extensions">
                                <item type="object">
                                  <prop readOnly="True" type="ResourceId" name="id"/>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties">
                                    <prop type="boolean" name="autoUpgradeMinorVersion"/>
                                    <prop type="boolean" name="enableAutomaticUpgrade"/>
                                    <prop type="string" name="forceUpdateTag"/>
                                    <prop type="object" name="protectedSettingsFromKeyVault">
                                      <prop type="string" name="secretUrl" required="True"/>
                                      <prop type="@SubResource_read" name="sourceVault" required="True"/>
                                    </prop>
                                    <prop type="array<string>" name="provisionAfterExtensions">
                                      <item type="string"/>
                                    </prop>
                                    <prop readOnly="True" type="string" name="provisioningState"/>
                                    <prop type="string" name="publisher"/>
                                    <prop type="object" name="settings">
                                      <additionalProp anyType="True"/>
                                    </prop>
                                    <prop type="boolean" name="suppressFailures"/>
                                    <prop type="string" name="type"/>
                                    <prop type="string" name="typeHandlerVersion"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </item>
                              </prop>
                              <prop type="string" name="extensionsTimeBudget"/>
                            </prop>
                            <prop type="object" name="hardwareProfile">
                              <prop type="object" name="vmSizeProperties">
                                <prop type="integer32" name="vCPUsAvailable"/>
                                <prop type="integer32" name="vCPUsPerCore"/>
                              </prop>
                            </prop>
                            <prop type="string" name="licenseType"/>
                            <prop type="object" name="networkProfile">
                              <prop type="object" name="healthProbe" cls="ApiEntityReference_read">
                                <prop type="ResourceId" name="id"/>
                              </prop>
                              <prop type="string" name="networkApiVersion">
                                <enum>
                                  <item value="&quot;2020-11-01&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="networkInterfaceConfigurations">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties">
                                    <prop type="string" name="auxiliaryMode">
                                      <enum>
                                        <item value="&quot;AcceleratedConnections&quot;"/>
                                        <item value="&quot;Floating&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="auxiliarySku">
                                      <enum>
                                        <item value="&quot;A1&quot;"/>
                                        <item value="&quot;A2&quot;"/>
                                        <item value="&quot;A4&quot;"/>
                                        <item value="&quot;A8&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="deleteOption">
                                      <enum>
                                        <item value="&quot;Delete&quot;"/>
                                        <item value="&quot;Detach&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="boolean" name="disableTcpStateTracking"/>
                                    <prop type="object" name="dnsSettings">
                                      <prop type="array<string>" name="dnsServers">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="boolean" name="enableAcceleratedNetworking"/>
                                    <prop type="boolean" name="enableFpga"/>
                                    <prop type="boolean" name="enableIPForwarding"/>
                                    <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                      <item type="object">
                                        <prop type="string" name="name" required="True"/>
                                        <prop type="object" name="properties">
                                          <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="array<@SubResource_read>" name="loadBalancerInboundNatPools">
                                            <item type="@SubResource_read"/>
                                          </prop>
                                          <prop type="boolean" name="primary"/>
                                          <prop type="string" name="privateIPAddressVersion">
                                            <enum>
                                              <item value="&quot;IPv4&quot;"/>
                                              <item value="&quot;IPv6&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="publicIPAddressConfiguration">
                                            <prop type="string" name="name" required="True"/>
                                            <prop type="object" name="properties">
                                              <prop type="string" name="deleteOption">
                                                <enum>
                                                  <item value="&quot;Delete&quot;"/>
                                                  <item value="&quot;Detach&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="object" name="dnsSettings">
                                                <prop type="string" name="domainNameLabel" required="True"/>
                                                <prop type="string" name="domainNameLabelScope">
                                                  <enum>
                                                    <item value="&quot;NoReuse&quot;"/>
                                                    <item value="&quot;ResourceGroupReuse&quot;"/>
                                                    <item value="&quot;SubscriptionReuse&quot;"/>
                                                    <item value="&quot;TenantReuse&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop type="integer32" name="idleTimeoutInMinutes"/>
                                              <prop type="array<object>" name="ipTags">
                                                <item type="object">
                                                  <prop type="string" name="ipTagType"/>
                                                  <prop type="string" name="tag"/>
                                                </item>
                                              </prop>
                                              <prop type="string" name="publicIPAddressVersion">
                                                <enum>
                                                  <item value="&quot;IPv4&quot;"/>
                                                  <item value="&quot;IPv6&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="@SubResource_read" name="publicIPPrefix"/>
                                            </prop>
                                            <prop type="object" name="sku">
                                              <prop type="string" name="name">
                                                <enum>
                                                  <item value="&quot;Basic&quot;"/>
                                                  <item value="&quot;Standard&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="tier">
                                                <enum>
                                                  <item value="&quot;Global&quot;"/>
                                                  <item value="&quot;Regional&quot;"/>
                                                </enum>
                                              </prop>
                                            </prop>
                                          </prop>
                                          <prop type="@ApiEntityReference_read" name="subnet"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="@SubResource_read" name="networkSecurityGroup"/>
                                    <prop type="boolean" name="primary"/>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="osProfile">
                              <prop type="string" name="adminUsername"/>
                              <prop type="boolean" name="allowExtensionOperations"/>
                              <prop type="string" name="computerNamePrefix"/>
                              <prop type="object" name="linuxConfiguration">
                                <prop type="boolean" name="disablePasswordAuthentication"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings">
                                  <prop type="string" name="assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent"/>
                                <prop type="object" name="ssh">
                                  <prop type="array<object>" name="publicKeys" identifiers="path">
                                    <item type="object">
                                      <prop type="string" name="keyData"/>
                                      <prop type="string" name="path"/>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                              <prop type="boolean" name="requireGuestProvisionSignal"/>
                              <prop type="array<object>" name="secrets">
                                <item type="object">
                                  <prop type="object" name="sourceVault" cls="SubResource_read">
                                    <prop type="ResourceId" name="id"/>
                                  </prop>
                                  <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                                    <item type="object">
                                      <prop type="string" name="certificateStore"/>
                                      <prop type="string" name="certificateUrl"/>
                                    </item>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="object" name="windowsConfiguration">
                                <prop type="array<object>" name="additionalUnattendContent">
                                  <item type="object">
                                    <prop type="string" name="componentName">
                                      <enum>
                                        <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="passName">
                                      <enum>
                                        <item value="&quot;OobeSystem&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="settingName">
                                      <enum>
                                        <item value="&quot;AutoLogon&quot;"/>
                                        <item value="&quot;FirstLogonCommands&quot;"/>
                                      </enum>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="boolean" name="enableAutomaticUpdates"/>
                                <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                                <prop type="object" name="patchSettings">
                                  <prop type="string" name="assessmentMode">
                                    <enum>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;ImageDefault&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="automaticByPlatformSettings">
                                    <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                                    <prop type="string" name="rebootSetting">
                                      <enum>
                                        <item value="&quot;Always&quot;"/>
                                        <item value="&quot;IfRequired&quot;"/>
                                        <item value="&quot;Never&quot;"/>
                                        <item value="&quot;Unknown&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="boolean" name="enableHotpatching"/>
                                  <prop type="string" name="patchMode">
                                    <enum>
                                      <item value="&quot;AutomaticByOS&quot;"/>
                                      <item value="&quot;AutomaticByPlatform&quot;"/>
                                      <item value="&quot;Manual&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="provisionVMAgent"/>
                                <prop type="string" name="timeZone"/>
                                <prop type="object" name="winRM">
                                  <prop type="array<object>" name="listeners">
                                    <item type="object">
                                      <prop type="string" name="certificateUrl"/>
                                      <prop type="string" name="protocol">
                                        <enum>
                                          <item value="&quot;Http&quot;"/>
                                          <item value="&quot;Https&quot;"/>
                                        </enum>
                                      </prop>
                                    </item>
                                  </prop>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="object" name="scheduledEventsProfile">
                              <prop type="object" name="osImageNotificationProfile">
                                <prop type="boolean" name="enable"/>
                                <prop type="string" name="notBeforeTimeout"/>
                              </prop>
                              <prop type="object" name="terminateNotificationProfile">
                                <prop type="boolean" name="enable"/>
                                <prop type="string" name="notBeforeTimeout"/>
                              </prop>
                            </prop>
                            <prop type="object" name="securityPostureReference">
                              <prop type="array<string>" name="excludeExtensions">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="id"/>
                              <prop type="boolean" name="isOverridable"/>
                            </prop>
                            <prop type="object" name="securityProfile">
                              <prop type="boolean" name="encryptionAtHost"/>
                              <prop type="object" name="encryptionIdentity">
                                <prop type="ResourceId" name="userAssignedIdentityResourceId"/>
                              </prop>
                              <prop type="object" name="proxyAgentSettings">
                                <prop type="boolean" name="enabled"/>
                                <prop type="integer32" name="keyIncarnationId"/>
                                <prop type="string" name="mode">
                                  <enum>
                                    <item value="&quot;Audit&quot;"/>
                                    <item value="&quot;Enforce&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="securityType">
                                <enum>
                                  <item value="&quot;ConfidentialVM&quot;"/>
                                  <item value="&quot;TrustedLaunch&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="uefiSettings">
                                <prop type="boolean" name="secureBootEnabled"/>
                                <prop type="boolean" name="vTpmEnabled"/>
                              </prop>
                            </prop>
                            <prop type="object" name="serviceArtifactReference">
                              <prop type="ResourceId" name="id"/>
                            </prop>
                            <prop type="object" name="storageProfile">
                              <prop type="array<object>" name="dataDisks" identifiers="name lun">
                                <item type="object">
                                  <prop type="string" name="caching">
                                    <enum>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;ReadOnly&quot;"/>
                                      <item value="&quot;ReadWrite&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="createOption" required="True">
                                    <enum>
                                      <item value="&quot;Attach&quot;"/>
                                      <item value="&quot;Copy&quot;"/>
                                      <item value="&quot;Empty&quot;"/>
                                      <item value="&quot;FromImage&quot;"/>
                                      <item value="&quot;Restore&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="deleteOption">
                                    <enum>
                                      <item value="&quot;Delete&quot;"/>
                                      <item value="&quot;Detach&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer64" name="diskIOPSReadWrite"/>
                                  <prop type="integer64" name="diskMBpsReadWrite"/>
                                  <prop type="integer32" name="diskSizeGB"/>
                                  <prop type="integer32" name="lun" required="True"/>
                                  <prop type="@VirtualMachineScaleSetManagedDiskParameters_read" name="managedDisk"/>
                                  <prop type="string" name="name"/>
                                  <prop type="boolean" name="writeAcceleratorEnabled"/>
                                </item>
                              </prop>
                              <prop type="string" name="diskControllerType">
                                <enum>
                                  <item value="&quot;NVMe&quot;"/>
                                  <item value="&quot;SCSI&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="imageReference">
                                <prop type="string" name="communityGalleryImageId"/>
                                <prop readOnly="True" type="string" name="exactVersion"/>
                                <prop type="ResourceId" name="id"/>
                                <prop type="string" name="offer"/>
                                <prop type="string" name="publisher"/>
                                <prop type="string" name="sharedGalleryImageId"/>
                                <prop type="string" name="sku"/>
                                <prop type="string" name="version"/>
                              </prop>
                              <prop type="object" name="osDisk">
                                <prop type="string" name="caching">
                                  <enum>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;ReadOnly&quot;"/>
                                    <item value="&quot;ReadWrite&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="createOption" required="True">
                                  <enum>
                                    <item value="&quot;Attach&quot;"/>
                                    <item value="&quot;Copy&quot;"/>
                                    <item value="&quot;Empty&quot;"/>
                                    <item value="&quot;FromImage&quot;"/>
                                    <item value="&quot;Restore&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="deleteOption">
                                  <enum>
                                    <item value="&quot;Delete&quot;"/>
                                    <item value="&quot;Detach&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="object" name="diffDiskSettings">
                                  <prop type="string" name="option">
                                    <enum>
                                      <item value="&quot;Local&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="placement">
                                    <enum>
                                      <item value="&quot;CacheDisk&quot;"/>
                                      <item value="&quot;NvmeDisk&quot;"/>
                                      <item value="&quot;ResourceDisk&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="integer32" name="diskSizeGB"/>
                                <prop type="object" name="image">
                                  <prop type="string" name="uri"/>
                                </prop>
                                <prop type="object" name="managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_read">
                                  <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                                    <prop type="ResourceId" name="id"/>
                                  </prop>
                                  <prop type="object" name="securityProfile">
                                    <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                                    <prop type="string" name="securityEncryptionType">
                                      <enum>
                                        <item value="&quot;DiskWithVMGuestState&quot;"/>
                                        <item value="&quot;NonPersistedTPM&quot;"/>
                                        <item value="&quot;VMGuestStateOnly&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="storageAccountType">
                                    <enum>
                                      <item value="&quot;PremiumV2_LRS&quot;"/>
                                      <item value="&quot;Premium_LRS&quot;"/>
                                      <item value="&quot;Premium_ZRS&quot;"/>
                                      <item value="&quot;StandardSSD_LRS&quot;"/>
                                      <item value="&quot;StandardSSD_ZRS&quot;"/>
                                      <item value="&quot;Standard_LRS&quot;"/>
                                      <item value="&quot;UltraSSD_LRS&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="osType">
                                  <enum>
                                    <item value="&quot;Linux&quot;"/>
                                    <item value="&quot;Windows&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="array<string>" name="vhdContainers">
                                  <item type="string"/>
                                </prop>
                                <prop type="boolean" name="writeAcceleratorEnabled"/>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="timeCreated"/>
                            <prop type="string" name="userData"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="computeProfile" required="True">
                      <prop type="object" name="additionalVirtualMachineCapabilities">
                        <prop type="boolean" name="hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled"/>
                      </prop>
                      <prop type="@BaseVirtualMachineProfile_read" name="baseVirtualMachineProfile" required="True"/>
                      <prop type="string" name="computeApiVersion"/>
                      <prop type="integer32" name="platformFaultDomainCount"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="regularPriorityProfile">
                      <prop type="string" name="allocationStrategy">
                        <enum>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;Prioritized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="integer32" name="minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="spotPriorityProfile">
                      <prop type="string" name="allocationStrategy">
                        <enum>
                          <item value="&quot;CapacityOptimized&quot;"/>
                          <item value="&quot;LowestPrice&quot;"/>
                          <item value="&quot;PriceCapacityOptimized&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="capacity">
                        <format minimum="0"/>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="maintain"/>
                      <prop type="float32" name="maxPricePerVM"/>
                      <prop type="integer32" name="minCapacity">
                        <format minimum="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop readOnly="True" type="string" name="uniqueId"/>
                    <prop type="object" name="vmAttributes">
                      <prop type="@VMAttributeMinMaxInteger_read" name="acceleratorCount"/>
                      <prop type="array<string>" name="acceleratorManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Nvidia&quot;"/>
                            <item value="&quot;Xilinx&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="acceleratorSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="acceleratorTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;FPGA&quot;"/>
                            <item value="&quot;GPU&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<string>" name="architectureTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;ARM64&quot;"/>
                            <item value="&quot;X64&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="burstableSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="cpuManufacturers">
                        <item type="string">
                          <enum>
                            <item value="&quot;AMD&quot;"/>
                            <item value="&quot;Ampere&quot;"/>
                            <item value="&quot;Intel&quot;"/>
                            <item value="&quot;Microsoft&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxInteger_read" name="dataDiskCount"/>
                      <prop type="array<string>" name="excludedVMSizes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="localStorageDiskTypes">
                        <item type="string">
                          <enum>
                            <item value="&quot;HDD&quot;"/>
                            <item value="&quot;SSD&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_read" name="localStorageInGiB"/>
                      <prop type="string" name="localStorageSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="memoryInGiB" required="True" cls="VMAttributeMinMaxDouble_read">
                        <prop type="float64" name="max">
                          <format minimum="0.0"/>
                        </prop>
                        <prop type="float64" name="min">
                          <format minimum="0.0"/>
                        </prop>
                      </prop>
                      <prop type="@VMAttributeMinMaxDouble_read" name="memoryInGiBPerVCpu"/>
                      <prop type="@VMAttributeMinMaxDouble_read" name="networkBandwidthInMbps"/>
                      <prop type="@VMAttributeMinMaxInteger_read" name="networkInterfaceCount"/>
                      <prop type="@VMAttributeMinMaxInteger_read" name="rdmaNetworkInterfaceCount"/>
                      <prop type="string" name="rdmaSupport">
                        <enum>
                          <item value="&quot;Excluded&quot;"/>
                          <item value="&quot;Included&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vCpuCount" required="True" cls="VMAttributeMinMaxInteger_read">
                        <prop type="integer32" name="max">
                          <format minimum="0"/>
                        </prop>
                        <prop type="integer32" name="min">
                          <format minimum="0"/>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="vmCategories">
                        <item type="string">
                          <enum>
                            <item value="&quot;ComputeOptimized&quot;"/>
                            <item value="&quot;FpgaAccelerated&quot;"/>
                            <item value="&quot;GeneralPurpose&quot;"/>
                            <item value="&quot;GpuAccelerated&quot;"/>
                            <item value="&quot;HighPerformanceCompute&quot;"/>
                            <item value="&quot;MemoryOptimized&quot;"/>
                            <item value="&quot;StorageOptimized&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="vmSizesProfile" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="integer32" name="rank">
                          <format maximum="65535" minimum="0"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$resource.identity">
                <prop type="string" name="type" arg="$resource.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                  <additionalProp>
                    <item nullable="True" type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="plan" arg="$resource.plan">
                <prop type="string" name="name" arg="$resource.plan.name" required="True"/>
                <prop type="string" name="product" arg="$resource.plan.product" required="True"/>
                <prop type="string" name="promotionCode" arg="$resource.plan.promotionCode"/>
                <prop type="string" name="publisher" arg="$resource.plan.publisher" required="True"/>
                <prop type="string" name="version" arg="$resource.plan.version"/>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="additionalLocationsProfile" arg="$resource.properties.additionalLocationsProfile">
                  <prop type="array<object>" name="locationProfiles" arg="$resource.properties.additionalLocationsProfile.locationProfiles" required="True">
                    <item type="object">
                      <prop type="string" name="location" arg="$resource.properties.additionalLocationsProfile.locationProfiles[].location" required="True"/>
                      <prop type="object" name="virtualMachineProfileOverride" arg="$resource.properties.additionalLocationsProfile.locationProfiles[].virtualMachineProfileOverride" cls="BaseVirtualMachineProfile_update">
                        <prop type="object" name="applicationProfile" arg="@BaseVirtualMachineProfile_update.applicationProfile">
                          <prop type="array<object>" name="galleryApplications" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications" identifiers="packageReferenceId">
                            <item type="object">
                              <prop type="string" name="configurationReference" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].configurationReference"/>
                              <prop type="boolean" name="enableAutomaticUpgrade" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].enableAutomaticUpgrade"/>
                              <prop type="integer32" name="order" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].order"/>
                              <prop type="ResourceId" name="packageReferenceId" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].packageReferenceId" required="True"/>
                              <prop type="string" name="tags" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].tags"/>
                              <prop type="boolean" name="treatFailureAsDeploymentFailure" arg="@BaseVirtualMachineProfile_update.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="capacityReservation" arg="@BaseVirtualMachineProfile_update.capacityReservation">
                          <prop type="@SubResource_update" name="capacityReservationGroup" arg="@BaseVirtualMachineProfile_update.capacityReservation.capacityReservationGroup"/>
                        </prop>
                        <prop type="object" name="diagnosticsProfile" arg="@BaseVirtualMachineProfile_update.diagnosticsProfile">
                          <prop type="object" name="bootDiagnostics" arg="@BaseVirtualMachineProfile_update.diagnosticsProfile.bootDiagnostics">
                            <prop type="boolean" name="enabled" arg="@BaseVirtualMachineProfile_update.diagnosticsProfile.bootDiagnostics.enabled"/>
                            <prop type="string" name="storageUri" arg="@BaseVirtualMachineProfile_update.diagnosticsProfile.bootDiagnostics.storageUri"/>
                          </prop>
                        </prop>
                        <prop type="object" name="extensionProfile" arg="@BaseVirtualMachineProfile_update.extensionProfile">
                          <prop type="array<object>" name="extensions" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions">
                            <item type="object">
                              <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].name"/>
                              <prop type="object" name="properties">
                                <prop type="boolean" name="autoUpgradeMinorVersion" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.autoUpgradeMinorVersion"/>
                                <prop type="boolean" name="enableAutomaticUpgrade" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.enableAutomaticUpgrade"/>
                                <prop type="string" name="forceUpdateTag" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.forceUpdateTag"/>
                                <prop type="object" name="protectedSettings" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettings" secret="True">
                                  <additionalProp anyType="True"/>
                                </prop>
                                <prop type="object" name="protectedSettingsFromKeyVault" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault">
                                  <prop type="string" name="secretUrl" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.secretUrl" required="True"/>
                                  <prop type="@SubResource_update" name="sourceVault" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.protectedSettingsFromKeyVault.sourceVault" required="True"/>
                                </prop>
                                <prop type="array<string>" name="provisionAfterExtensions" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.provisionAfterExtensions">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="publisher" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.publisher"/>
                                <prop type="object" name="settings" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.settings">
                                  <additionalProp anyType="True"/>
                                </prop>
                                <prop type="boolean" name="suppressFailures" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.suppressFailures"/>
                                <prop type="string" name="type" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.type"/>
                                <prop type="string" name="typeHandlerVersion" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensions[].properties.typeHandlerVersion"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="extensionsTimeBudget" arg="@BaseVirtualMachineProfile_update.extensionProfile.extensionsTimeBudget"/>
                        </prop>
                        <prop type="object" name="hardwareProfile" arg="@BaseVirtualMachineProfile_update.hardwareProfile">
                          <prop type="object" name="vmSizeProperties" arg="@BaseVirtualMachineProfile_update.hardwareProfile.vmSizeProperties">
                            <prop type="integer32" name="vCPUsAvailable" arg="@BaseVirtualMachineProfile_update.hardwareProfile.vmSizeProperties.vCPUsAvailable"/>
                            <prop type="integer32" name="vCPUsPerCore" arg="@BaseVirtualMachineProfile_update.hardwareProfile.vmSizeProperties.vCPUsPerCore"/>
                          </prop>
                        </prop>
                        <prop type="string" name="licenseType" arg="@BaseVirtualMachineProfile_update.licenseType"/>
                        <prop type="object" name="networkProfile" arg="@BaseVirtualMachineProfile_update.networkProfile">
                          <prop type="object" name="healthProbe" arg="@BaseVirtualMachineProfile_update.networkProfile.healthProbe" cls="ApiEntityReference_update">
                            <prop type="ResourceId" name="id" arg="@ApiEntityReference_update.id"/>
                          </prop>
                          <prop type="string" name="networkApiVersion" arg="@BaseVirtualMachineProfile_update.networkProfile.networkApiVersion">
                            <enum>
                              <item value="&quot;2020-11-01&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<object>" name="networkInterfaceConfigurations" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations">
                            <item type="object">
                              <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].name" required="True"/>
                              <prop type="object" name="properties">
                                <prop type="string" name="auxiliaryMode" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode">
                                  <enum>
                                    <item value="&quot;AcceleratedConnections&quot;"/>
                                    <item value="&quot;Floating&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="auxiliarySku" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku">
                                  <enum>
                                    <item value="&quot;A1&quot;"/>
                                    <item value="&quot;A2&quot;"/>
                                    <item value="&quot;A4&quot;"/>
                                    <item value="&quot;A8&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.deleteOption">
                                  <enum>
                                    <item value="&quot;Delete&quot;"/>
                                    <item value="&quot;Detach&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="boolean" name="disableTcpStateTracking" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"/>
                                <prop type="object" name="dnsSettings" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings">
                                  <prop type="array<string>" name="dnsServers" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers">
                                    <item type="string"/>
                                  </prop>
                                </prop>
                                <prop type="boolean" name="enableAcceleratedNetworking" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"/>
                                <prop type="boolean" name="enableFpga" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"/>
                                <prop type="boolean" name="enableIPForwarding" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"/>
                                <prop type="array<object>" name="ipConfigurations" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" required="True" identifiers="name">
                                  <item type="object">
                                    <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" required="True"/>
                                    <prop type="object" name="properties">
                                      <prop type="array<@SubResource_update>" name="applicationGatewayBackendAddressPools" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools">
                                        <item type="@SubResource_update"/>
                                      </prop>
                                      <prop type="array<@SubResource_update>" name="applicationSecurityGroups" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups">
                                        <item type="@SubResource_update"/>
                                      </prop>
                                      <prop type="array<@SubResource_update>" name="loadBalancerBackendAddressPools" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools">
                                        <item type="@SubResource_update"/>
                                      </prop>
                                      <prop type="array<@SubResource_update>" name="loadBalancerInboundNatPools" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerInboundNatPools">
                                        <item type="@SubResource_update"/>
                                      </prop>
                                      <prop type="boolean" name="primary" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                                      <prop type="string" name="privateIPAddressVersion" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion">
                                        <enum>
                                          <item value="&quot;IPv4&quot;"/>
                                          <item value="&quot;IPv6&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="publicIPAddressConfiguration" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration">
                                        <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" required="True"/>
                                        <prop type="object" name="properties">
                                          <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption">
                                            <enum>
                                              <item value="&quot;Delete&quot;"/>
                                              <item value="&quot;Detach&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="dnsSettings" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings">
                                            <prop type="string" name="domainNameLabel" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" required="True"/>
                                            <prop type="string" name="domainNameLabelScope" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope">
                                              <enum>
                                                <item value="&quot;NoReuse&quot;"/>
                                                <item value="&quot;ResourceGroupReuse&quot;"/>
                                                <item value="&quot;SubscriptionReuse&quot;"/>
                                                <item value="&quot;TenantReuse&quot;"/>
                                              </enum>
                                            </prop>
                                          </prop>
                                          <prop type="integer32" name="idleTimeoutInMinutes" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"/>
                                          <prop type="array<object>" name="ipTags" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags">
                                            <item type="object">
                                              <prop type="string" name="ipTagType" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"/>
                                              <prop type="string" name="tag" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"/>
                                            </item>
                                          </prop>
                                          <prop type="string" name="publicIPAddressVersion" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion">
                                            <enum>
                                              <item value="&quot;IPv4&quot;"/>
                                              <item value="&quot;IPv6&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="@SubResource_update" name="publicIPPrefix" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"/>
                                        </prop>
                                        <prop type="object" name="sku" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku">
                                          <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name">
                                            <enum>
                                              <item value="&quot;Basic&quot;"/>
                                              <item value="&quot;Standard&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="tier" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier">
                                            <enum>
                                              <item value="&quot;Global&quot;"/>
                                              <item value="&quot;Regional&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                      </prop>
                                      <prop type="@ApiEntityReference_update" name="subnet" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop type="@SubResource_update" name="networkSecurityGroup" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"/>
                                <prop type="boolean" name="primary" arg="@BaseVirtualMachineProfile_update.networkProfile.networkInterfaceConfigurations[].properties.primary"/>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="osProfile" arg="@BaseVirtualMachineProfile_update.osProfile">
                          <prop type="password" name="adminPassword" arg="@BaseVirtualMachineProfile_update.osProfile.adminPassword" secret="True"/>
                          <prop type="string" name="adminUsername" arg="@BaseVirtualMachineProfile_update.osProfile.adminUsername"/>
                          <prop type="boolean" name="allowExtensionOperations" arg="@BaseVirtualMachineProfile_update.osProfile.allowExtensionOperations"/>
                          <prop type="string" name="computerNamePrefix" arg="@BaseVirtualMachineProfile_update.osProfile.computerNamePrefix"/>
                          <prop type="password" name="customData" arg="@BaseVirtualMachineProfile_update.osProfile.customData" secret="True"/>
                          <prop type="object" name="linuxConfiguration" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration">
                            <prop type="boolean" name="disablePasswordAuthentication" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.disablePasswordAuthentication"/>
                            <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"/>
                            <prop type="object" name="patchSettings" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings">
                              <prop type="string" name="assessmentMode" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.assessmentMode">
                                <enum>
                                  <item value="&quot;AutomaticByPlatform&quot;"/>
                                  <item value="&quot;ImageDefault&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="automaticByPlatformSettings" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings">
                                <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                                <prop type="string" name="rebootSetting" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                                  <enum>
                                    <item value="&quot;Always&quot;"/>
                                    <item value="&quot;IfRequired&quot;"/>
                                    <item value="&quot;Never&quot;"/>
                                    <item value="&quot;Unknown&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="patchMode" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.patchSettings.patchMode">
                                <enum>
                                  <item value="&quot;AutomaticByPlatform&quot;"/>
                                  <item value="&quot;ImageDefault&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="provisionVMAgent" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.provisionVMAgent"/>
                            <prop type="object" name="ssh" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh">
                              <prop type="array<object>" name="publicKeys" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh.publicKeys" identifiers="path">
                                <item type="object">
                                  <prop type="string" name="keyData" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"/>
                                  <prop type="string" name="path" arg="@BaseVirtualMachineProfile_update.osProfile.linuxConfiguration.ssh.publicKeys[].path"/>
                                </item>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="boolean" name="requireGuestProvisionSignal" arg="@BaseVirtualMachineProfile_update.osProfile.requireGuestProvisionSignal"/>
                          <prop type="array<object>" name="secrets" arg="@BaseVirtualMachineProfile_update.osProfile.secrets">
                            <item type="object">
                              <prop type="object" name="sourceVault" arg="@BaseVirtualMachineProfile_update.osProfile.secrets[].sourceVault" cls="SubResource_update">
                                <prop type="ResourceId" name="id" arg="@SubResource_update.id"/>
                              </prop>
                              <prop type="array<object>" name="vaultCertificates" arg="@BaseVirtualMachineProfile_update.osProfile.secrets[].vaultCertificates" identifiers="certificateUrl">
                                <item type="object">
                                  <prop type="string" name="certificateStore" arg="@BaseVirtualMachineProfile_update.osProfile.secrets[].vaultCertificates[].certificateStore"/>
                                  <prop type="string" name="certificateUrl" arg="@BaseVirtualMachineProfile_update.osProfile.secrets[].vaultCertificates[].certificateUrl"/>
                                </item>
                              </prop>
                            </item>
                          </prop>
                          <prop type="object" name="windowsConfiguration" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration">
                            <prop type="array<object>" name="additionalUnattendContent" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent">
                              <item type="object">
                                <prop type="string" name="componentName" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].componentName">
                                  <enum>
                                    <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="password" name="content" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].content" secret="True"/>
                                <prop type="string" name="passName" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].passName">
                                  <enum>
                                    <item value="&quot;OobeSystem&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="settingName" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.additionalUnattendContent[].settingName">
                                  <enum>
                                    <item value="&quot;AutoLogon&quot;"/>
                                    <item value="&quot;FirstLogonCommands&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="enableAutomaticUpdates" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.enableAutomaticUpdates"/>
                            <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.enableVMAgentPlatformUpdates"/>
                            <prop type="object" name="patchSettings" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings">
                              <prop type="string" name="assessmentMode" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.assessmentMode">
                                <enum>
                                  <item value="&quot;AutomaticByPlatform&quot;"/>
                                  <item value="&quot;ImageDefault&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="automaticByPlatformSettings" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings">
                                <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                                <prop type="string" name="rebootSetting" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                                  <enum>
                                    <item value="&quot;Always&quot;"/>
                                    <item value="&quot;IfRequired&quot;"/>
                                    <item value="&quot;Never&quot;"/>
                                    <item value="&quot;Unknown&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="boolean" name="enableHotpatching" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.enableHotpatching"/>
                              <prop type="string" name="patchMode" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.patchSettings.patchMode">
                                <enum>
                                  <item value="&quot;AutomaticByOS&quot;"/>
                                  <item value="&quot;AutomaticByPlatform&quot;"/>
                                  <item value="&quot;Manual&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="provisionVMAgent" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.provisionVMAgent"/>
                            <prop type="string" name="timeZone" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.timeZone"/>
                            <prop type="object" name="winRM" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM">
                              <prop type="array<object>" name="listeners" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM.listeners">
                                <item type="object">
                                  <prop type="string" name="certificateUrl" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"/>
                                  <prop type="string" name="protocol" arg="@BaseVirtualMachineProfile_update.osProfile.windowsConfiguration.winRM.listeners[].protocol">
                                    <enum>
                                      <item value="&quot;Http&quot;"/>
                                      <item value="&quot;Https&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="object" name="scheduledEventsProfile" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile">
                          <prop type="object" name="osImageNotificationProfile" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile.osImageNotificationProfile">
                            <prop type="boolean" name="enable" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile.osImageNotificationProfile.enable"/>
                            <prop type="string" name="notBeforeTimeout" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"/>
                          </prop>
                          <prop type="object" name="terminateNotificationProfile" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile.terminateNotificationProfile">
                            <prop type="boolean" name="enable" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile.terminateNotificationProfile.enable"/>
                            <prop type="string" name="notBeforeTimeout" arg="@BaseVirtualMachineProfile_update.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"/>
                          </prop>
                        </prop>
                        <prop type="object" name="securityPostureReference" arg="@BaseVirtualMachineProfile_update.securityPostureReference">
                          <prop type="array<string>" name="excludeExtensions" arg="@BaseVirtualMachineProfile_update.securityPostureReference.excludeExtensions">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="id" arg="@BaseVirtualMachineProfile_update.securityPostureReference.id"/>
                          <prop type="boolean" name="isOverridable" arg="@BaseVirtualMachineProfile_update.securityPostureReference.isOverridable"/>
                        </prop>
                        <prop type="object" name="securityProfile" arg="@BaseVirtualMachineProfile_update.securityProfile">
                          <prop type="boolean" name="encryptionAtHost" arg="@BaseVirtualMachineProfile_update.securityProfile.encryptionAtHost"/>
                          <prop type="object" name="encryptionIdentity" arg="@BaseVirtualMachineProfile_update.securityProfile.encryptionIdentity">
                            <prop type="ResourceId" name="userAssignedIdentityResourceId" arg="@BaseVirtualMachineProfile_update.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"/>
                          </prop>
                          <prop type="object" name="proxyAgentSettings" arg="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings">
                            <prop type="boolean" name="enabled" arg="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings.enabled"/>
                            <prop type="integer32" name="keyIncarnationId" arg="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings.keyIncarnationId"/>
                            <prop type="string" name="mode" arg="@BaseVirtualMachineProfile_update.securityProfile.proxyAgentSettings.mode">
                              <enum>
                                <item value="&quot;Audit&quot;"/>
                                <item value="&quot;Enforce&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="securityType" arg="@BaseVirtualMachineProfile_update.securityProfile.securityType">
                            <enum>
                              <item value="&quot;ConfidentialVM&quot;"/>
                              <item value="&quot;TrustedLaunch&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="uefiSettings" arg="@BaseVirtualMachineProfile_update.securityProfile.uefiSettings">
                            <prop type="boolean" name="secureBootEnabled" arg="@BaseVirtualMachineProfile_update.securityProfile.uefiSettings.secureBootEnabled"/>
                            <prop type="boolean" name="vTpmEnabled" arg="@BaseVirtualMachineProfile_update.securityProfile.uefiSettings.vTpmEnabled"/>
                          </prop>
                        </prop>
                        <prop type="object" name="serviceArtifactReference" arg="@BaseVirtualMachineProfile_update.serviceArtifactReference">
                          <prop type="ResourceId" name="id" arg="@BaseVirtualMachineProfile_update.serviceArtifactReference.id"/>
                        </prop>
                        <prop type="object" name="storageProfile" arg="@BaseVirtualMachineProfile_update.storageProfile">
                          <prop type="array<object>" name="dataDisks" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks" identifiers="name lun">
                            <item type="object">
                              <prop type="string" name="caching" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].caching">
                                <enum>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;ReadOnly&quot;"/>
                                  <item value="&quot;ReadWrite&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="createOption" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].createOption" required="True">
                                <enum>
                                  <item value="&quot;Attach&quot;"/>
                                  <item value="&quot;Copy&quot;"/>
                                  <item value="&quot;Empty&quot;"/>
                                  <item value="&quot;FromImage&quot;"/>
                                  <item value="&quot;Restore&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="integer64" name="diskIOPSReadWrite" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].diskIOPSReadWrite"/>
                              <prop type="integer64" name="diskMBpsReadWrite" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].diskMBpsReadWrite"/>
                              <prop type="integer32" name="diskSizeGB" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].diskSizeGB"/>
                              <prop type="integer32" name="lun" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].lun" required="True"/>
                              <prop type="@VirtualMachineScaleSetManagedDiskParameters_update" name="managedDisk" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].managedDisk"/>
                              <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].name"/>
                              <prop type="boolean" name="writeAcceleratorEnabled" arg="@BaseVirtualMachineProfile_update.storageProfile.dataDisks[].writeAcceleratorEnabled"/>
                            </item>
                          </prop>
                          <prop type="string" name="diskControllerType" arg="@BaseVirtualMachineProfile_update.storageProfile.diskControllerType">
                            <enum>
                              <item value="&quot;NVMe&quot;"/>
                              <item value="&quot;SCSI&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="imageReference" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference">
                            <prop type="string" name="communityGalleryImageId" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.communityGalleryImageId"/>
                            <prop type="ResourceId" name="id" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.id"/>
                            <prop type="string" name="offer" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.offer"/>
                            <prop type="string" name="publisher" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.publisher"/>
                            <prop type="string" name="sharedGalleryImageId" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.sharedGalleryImageId"/>
                            <prop type="string" name="sku" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.sku"/>
                            <prop type="string" name="version" arg="@BaseVirtualMachineProfile_update.storageProfile.imageReference.version"/>
                          </prop>
                          <prop type="object" name="osDisk" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk">
                            <prop type="string" name="caching" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Copy&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                                <item value="&quot;Restore&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="diffDiskSettings" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diffDiskSettings">
                              <prop type="string" name="option" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diffDiskSettings.option">
                                <enum>
                                  <item value="&quot;Local&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="placement" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diffDiskSettings.placement">
                                <enum>
                                  <item value="&quot;CacheDisk&quot;"/>
                                  <item value="&quot;NvmeDisk&quot;"/>
                                  <item value="&quot;ResourceDisk&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="integer32" name="diskSizeGB" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.diskSizeGB"/>
                            <prop type="object" name="image" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.image">
                              <prop type="string" name="uri" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.image.uri"/>
                            </prop>
                            <prop type="object" name="managedDisk" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.managedDisk" cls="VirtualMachineScaleSetManagedDiskParameters_update">
                              <prop type="object" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_update.diskEncryptionSet" cls="DiskEncryptionSetParameters_update">
                                <prop type="ResourceId" name="id" arg="@DiskEncryptionSetParameters_update.id"/>
                              </prop>
                              <prop type="object" name="securityProfile" arg="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile">
                                <prop type="@DiskEncryptionSetParameters_update" name="diskEncryptionSet" arg="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.diskEncryptionSet"/>
                                <prop type="string" name="securityEncryptionType" arg="@VirtualMachineScaleSetManagedDiskParameters_update.securityProfile.securityEncryptionType">
                                  <enum>
                                    <item value="&quot;DiskWithVMGuestState&quot;"/>
                                    <item value="&quot;NonPersistedTPM&quot;"/>
                                    <item value="&quot;VMGuestStateOnly&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="storageAccountType" arg="@VirtualMachineScaleSetManagedDiskParameters_update.storageAccountType">
                                <enum>
                                  <item value="&quot;PremiumV2_LRS&quot;"/>
                                  <item value="&quot;Premium_LRS&quot;"/>
                                  <item value="&quot;Premium_ZRS&quot;"/>
                                  <item value="&quot;StandardSSD_LRS&quot;"/>
                                  <item value="&quot;StandardSSD_ZRS&quot;"/>
                                  <item value="&quot;Standard_LRS&quot;"/>
                                  <item value="&quot;UltraSSD_LRS&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="name" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.name"/>
                            <prop type="string" name="osType" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.osType">
                              <enum>
                                <item value="&quot;Linux&quot;"/>
                                <item value="&quot;Windows&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="vhdContainers" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.vhdContainers">
                              <item type="string"/>
                            </prop>
                            <prop type="boolean" name="writeAcceleratorEnabled" arg="@BaseVirtualMachineProfile_update.storageProfile.osDisk.writeAcceleratorEnabled"/>
                          </prop>
                        </prop>
                        <prop type="string" name="userData" arg="@BaseVirtualMachineProfile_update.userData"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="computeProfile" arg="$resource.properties.computeProfile" required="True">
                  <prop type="object" name="additionalVirtualMachineCapabilities" arg="$resource.properties.computeProfile.additionalVirtualMachineCapabilities">
                    <prop type="boolean" name="hibernationEnabled" arg="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.hibernationEnabled"/>
                    <prop type="boolean" name="ultraSSDEnabled" arg="$resource.properties.computeProfile.additionalVirtualMachineCapabilities.ultraSSDEnabled"/>
                  </prop>
                  <prop type="@BaseVirtualMachineProfile_update" name="baseVirtualMachineProfile" arg="$resource.properties.computeProfile.baseVirtualMachineProfile" required="True"/>
                  <prop type="string" name="computeApiVersion" arg="$resource.properties.computeProfile.computeApiVersion"/>
                  <prop type="integer32" name="platformFaultDomainCount" arg="$resource.properties.computeProfile.platformFaultDomainCount"/>
                </prop>
                <prop type="object" name="regularPriorityProfile" arg="$resource.properties.regularPriorityProfile">
                  <prop type="string" name="allocationStrategy" arg="$resource.properties.regularPriorityProfile.allocationStrategy">
                    <enum>
                      <item value="&quot;LowestPrice&quot;"/>
                      <item value="&quot;Prioritized&quot;"/>
                    </enum>
                  </prop>
                  <prop type="integer32" name="capacity" arg="$resource.properties.regularPriorityProfile.capacity">
                    <format minimum="0"/>
                  </prop>
                  <prop type="integer32" name="minCapacity" arg="$resource.properties.regularPriorityProfile.minCapacity">
                    <format minimum="0"/>
                  </prop>
                </prop>
                <prop type="object" name="spotPriorityProfile" arg="$resource.properties.spotPriorityProfile">
                  <prop type="string" name="allocationStrategy" arg="$resource.properties.spotPriorityProfile.allocationStrategy">
                    <enum>
                      <item value="&quot;CapacityOptimized&quot;"/>
                      <item value="&quot;LowestPrice&quot;"/>
                      <item value="&quot;PriceCapacityOptimized&quot;"/>
                    </enum>
                  </prop>
                  <prop type="integer32" name="capacity" arg="$resource.properties.spotPriorityProfile.capacity">
                    <format minimum="0"/>
                  </prop>
                  <prop type="string" name="evictionPolicy" arg="$resource.properties.spotPriorityProfile.evictionPolicy">
                    <enum>
                      <item value="&quot;Deallocate&quot;"/>
                      <item value="&quot;Delete&quot;"/>
                    </enum>
                  </prop>
                  <prop type="boolean" name="maintain" arg="$resource.properties.spotPriorityProfile.maintain"/>
                  <prop type="float32" name="maxPricePerVM" arg="$resource.properties.spotPriorityProfile.maxPricePerVM"/>
                  <prop type="integer32" name="minCapacity" arg="$resource.properties.spotPriorityProfile.minCapacity">
                    <format minimum="0"/>
                  </prop>
                </prop>
                <prop type="object" name="vmAttributes" arg="$resource.properties.vmAttributes">
                  <prop type="@VMAttributeMinMaxInteger_update" name="acceleratorCount" arg="$resource.properties.vmAttributes.acceleratorCount"/>
                  <prop type="array<string>" name="acceleratorManufacturers" arg="$resource.properties.vmAttributes.acceleratorManufacturers">
                    <item type="string">
                      <enum>
                        <item value="&quot;AMD&quot;"/>
                        <item value="&quot;Nvidia&quot;"/>
                        <item value="&quot;Xilinx&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="string" name="acceleratorSupport" arg="$resource.properties.vmAttributes.acceleratorSupport">
                    <enum>
                      <item value="&quot;Excluded&quot;"/>
                      <item value="&quot;Included&quot;"/>
                      <item value="&quot;Required&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<string>" name="acceleratorTypes" arg="$resource.properties.vmAttributes.acceleratorTypes">
                    <item type="string">
                      <enum>
                        <item value="&quot;FPGA&quot;"/>
                        <item value="&quot;GPU&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="array<string>" name="architectureTypes" arg="$resource.properties.vmAttributes.architectureTypes">
                    <item type="string">
                      <enum>
                        <item value="&quot;ARM64&quot;"/>
                        <item value="&quot;X64&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="string" name="burstableSupport" arg="$resource.properties.vmAttributes.burstableSupport">
                    <enum>
                      <item value="&quot;Excluded&quot;"/>
                      <item value="&quot;Included&quot;"/>
                      <item value="&quot;Required&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<string>" name="cpuManufacturers" arg="$resource.properties.vmAttributes.cpuManufacturers">
                    <item type="string">
                      <enum>
                        <item value="&quot;AMD&quot;"/>
                        <item value="&quot;Ampere&quot;"/>
                        <item value="&quot;Intel&quot;"/>
                        <item value="&quot;Microsoft&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="@VMAttributeMinMaxInteger_update" name="dataDiskCount" arg="$resource.properties.vmAttributes.dataDiskCount"/>
                  <prop type="array<string>" name="excludedVMSizes" arg="$resource.properties.vmAttributes.excludedVMSizes">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="localStorageDiskTypes" arg="$resource.properties.vmAttributes.localStorageDiskTypes">
                    <item type="string">
                      <enum>
                        <item value="&quot;HDD&quot;"/>
                        <item value="&quot;SSD&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="@VMAttributeMinMaxDouble_update" name="localStorageInGiB" arg="$resource.properties.vmAttributes.localStorageInGiB"/>
                  <prop type="string" name="localStorageSupport" arg="$resource.properties.vmAttributes.localStorageSupport">
                    <enum>
                      <item value="&quot;Excluded&quot;"/>
                      <item value="&quot;Included&quot;"/>
                      <item value="&quot;Required&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="memoryInGiB" arg="$resource.properties.vmAttributes.memoryInGiB" required="True" cls="VMAttributeMinMaxDouble_update">
                    <prop type="float64" name="max" arg="@VMAttributeMinMaxDouble_update.max">
                      <format minimum="0.0"/>
                    </prop>
                    <prop type="float64" name="min" arg="@VMAttributeMinMaxDouble_update.min">
                      <format minimum="0.0"/>
                    </prop>
                  </prop>
                  <prop type="@VMAttributeMinMaxDouble_update" name="memoryInGiBPerVCpu" arg="$resource.properties.vmAttributes.memoryInGiBPerVCpu"/>
                  <prop type="@VMAttributeMinMaxDouble_update" name="networkBandwidthInMbps" arg="$resource.properties.vmAttributes.networkBandwidthInMbps"/>
                  <prop type="@VMAttributeMinMaxInteger_update" name="networkInterfaceCount" arg="$resource.properties.vmAttributes.networkInterfaceCount"/>
                  <prop type="@VMAttributeMinMaxInteger_update" name="rdmaNetworkInterfaceCount" arg="$resource.properties.vmAttributes.rdmaNetworkInterfaceCount"/>
                  <prop type="string" name="rdmaSupport" arg="$resource.properties.vmAttributes.rdmaSupport">
                    <enum>
                      <item value="&quot;Excluded&quot;"/>
                      <item value="&quot;Included&quot;"/>
                      <item value="&quot;Required&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="vCpuCount" arg="$resource.properties.vmAttributes.vCpuCount" required="True" cls="VMAttributeMinMaxInteger_update">
                    <prop type="integer32" name="max" arg="@VMAttributeMinMaxInteger_update.max">
                      <format minimum="0"/>
                    </prop>
                    <prop type="integer32" name="min" arg="@VMAttributeMinMaxInteger_update.min">
                      <format minimum="0"/>
                    </prop>
                  </prop>
                  <prop type="array<string>" name="vmCategories" arg="$resource.properties.vmAttributes.vmCategories">
                    <item type="string">
                      <enum>
                        <item value="&quot;ComputeOptimized&quot;"/>
                        <item value="&quot;FpgaAccelerated&quot;"/>
                        <item value="&quot;GeneralPurpose&quot;"/>
                        <item value="&quot;GpuAccelerated&quot;"/>
                        <item value="&quot;HighPerformanceCompute&quot;"/>
                        <item value="&quot;MemoryOptimized&quot;"/>
                        <item value="&quot;StorageOptimized&quot;"/>
                      </enum>
                    </item>
                  </prop>
                </prop>
                <prop type="array<object>" name="vmSizesProfile" arg="$resource.properties.vmSizesProfile" required="True">
                  <item type="object">
                    <prop type="string" name="name" arg="$resource.properties.vmSizesProfile[].name" required="True"/>
                    <prop type="integer32" name="rank" arg="$resource.properties.vmSizesProfile[].rank">
                      <format maximum="65535" minimum="0"/>
                    </prop>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
              <prop type="array<string>" name="zones" arg="$resource.zones">
                <item type="string"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Fleets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}">
          <request method="put">
            <path>
              <param type="string" name="fleetName" arg="$Path.fleetName" required="True">
                <format pattern="^[^_\W][\w\-._]{0,79}(?<![-.])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Fleet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
