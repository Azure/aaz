<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/addons/{}" version="2022-05-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2FkZG9ucy97YWRkb25OYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
  <commandGroup name="vmware addon">
    <command name="show" version="2022-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/addons/{}" version="2022-05-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2FkZG9ucy97YWRkb25OYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.addonName" options="addon-name name n" required="True" idPart="child_name_1">
          <help short="Name of the addon for the private cloud"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Addons_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}">
          <request method="get">
            <path>
              <param type="string" name="addonName" arg="$Path.addonName" required="True"/>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}/addons/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="addonType" required="True">
                      <enum>
                        <item value="&quot;Arc&quot;"/>
                        <item value="&quot;HCX&quot;"/>
                        <item value="&quot;SRM&quot;"/>
                        <item value="&quot;VR&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Cancelled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="addonType" value="Arc">
                      <prop type="string" name="vCenter" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="HCX">
                      <prop type="string" name="offer" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="SRM">
                      <prop type="string" name="licenseKey" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="VR">
                      <prop type="integer32" name="vrsCount" required="True"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/addons/{}" version="2022-05-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2FkZG9ucy97YWRkb25OYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.addonName" options="addon-name name n" required="True" idPart="child_name_1">
          <help short="Name of the addon for the private cloud"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Addons_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}">
          <request method="delete">
            <path>
              <param type="string" name="addonName" arg="$Path.addonName" required="True"/>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/addons/{}" version="2022-05-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2FkZG9ucy97YWRkb25OYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.addonName" options="addon-name name n" required="True" idPart="child_name_1">
          <help short="Name of the addon for the private cloud"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$addon.properties.Arc" options="arc" group="Properties">
          <help short="an Arc addon for a private cloud."/>
          <arg type="string" var="$addon.properties.Arc.vCenter" options="vcenter" required="True" group="Arc">
            <help short="The VMware vCenter resource ID"/>
          </arg>
        </arg>
        <arg type="object" var="$addon.properties.HCX" options="hcx" group="Properties">
          <help short="a HCX addon for a private cloud."/>
          <arg type="string" var="$addon.properties.HCX.offer" options="offer" required="True">
            <help short="The HCX offer, example VMware MaaS Cloud Provider (Enterprise)"/>
          </arg>
        </arg>
        <arg type="object" var="$addon.properties.SRM" options="srm" group="Properties">
          <help short="a Site Recovery Manager (SRM) addon for a private cloud."/>
          <arg type="string" var="$addon.properties.SRM.licenseKey" options="license-key" required="True">
            <help short="The Site Recovery Manager (SRM) license"/>
          </arg>
        </arg>
        <arg type="object" var="$addon.properties.VR" options="vr" group="Properties">
          <help short="a vSphere Replication (VR) addon for a private cloud"/>
          <arg type="integer32" var="$addon.properties.VR.vrsCount" options="vrs-count" required="True">
            <help short="The vSphere Replication Server (VRS) count"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Addons_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}">
          <request method="put">
            <path>
              <param type="string" name="addonName" arg="$Path.addonName" required="True"/>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="addon" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="string" name="addonType" required="True">
                      <enum>
                        <item arg="$addon.properties.Arc" value="&quot;Arc&quot;"/>
                        <item arg="$addon.properties.HCX" value="&quot;HCX&quot;"/>
                        <item arg="$addon.properties.SRM" value="&quot;SRM&quot;"/>
                        <item arg="$addon.properties.VR" value="&quot;VR&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="addonType" value="Arc">
                      <prop type="string" name="vCenter" arg="$addon.properties.Arc.vCenter" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="HCX">
                      <prop type="string" name="offer" arg="$addon.properties.HCX.offer" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="SRM">
                      <prop type="string" name="licenseKey" arg="$addon.properties.SRM.licenseKey" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="VR">
                      <prop type="integer32" name="vrsCount" arg="$addon.properties.VR.vrsCount" required="True"/>
                    </discriminator>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}/addons/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="addonType" required="True">
                      <enum>
                        <item value="&quot;Arc&quot;"/>
                        <item value="&quot;HCX&quot;"/>
                        <item value="&quot;SRM&quot;"/>
                        <item value="&quot;VR&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Cancelled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="addonType" value="Arc">
                      <prop type="string" name="vCenter" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="HCX">
                      <prop type="string" name="offer" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="SRM">
                      <prop type="string" name="licenseKey" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="VR">
                      <prop type="integer32" name="vrsCount" required="True"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/addons/{}" version="2022-05-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2FkZG9ucy97YWRkb25OYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.addonName" options="addon-name name n" required="True" idPart="child_name_1">
          <help short="Name of the addon for the private cloud"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$addon.properties.Arc" options="arc" group="Properties">
          <help short="an Arc addon for a private cloud."/>
          <arg type="string" var="$addon.properties.Arc.vCenter" options="vcenter" group="Arc">
            <help short="The VMware vCenter resource ID"/>
          </arg>
        </arg>
        <arg type="object" var="$addon.properties.HCX" options="hcx" group="Properties">
          <help short="a HCX addon for a private cloud."/>
          <arg type="string" var="$addon.properties.HCX.offer" options="offer">
            <help short="The HCX offer, example VMware MaaS Cloud Provider (Enterprise)"/>
          </arg>
        </arg>
        <arg type="object" var="$addon.properties.SRM" options="srm" group="Properties">
          <help short="a Site Recovery Manager (SRM) addon for a private cloud."/>
          <arg type="string" var="$addon.properties.SRM.licenseKey" options="license-key">
            <help short="The Site Recovery Manager (SRM) license"/>
          </arg>
        </arg>
        <arg type="object" var="$addon.properties.VR" options="vr" group="Properties">
          <help short="a vSphere Replication (VR) addon for a private cloud"/>
          <arg type="integer32" var="$addon.properties.VR.vrsCount" options="vrs-count">
            <help short="The vSphere Replication Server (VRS) count"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Addons_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}">
          <request method="get">
            <path>
              <param type="string" name="addonName" arg="$Path.addonName" required="True"/>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Addon_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}/addons/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="addonType" required="True">
                      <enum>
                        <item value="&quot;Arc&quot;"/>
                        <item value="&quot;HCX&quot;"/>
                        <item value="&quot;SRM&quot;"/>
                        <item value="&quot;VR&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Cancelled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="addonType" value="Arc">
                      <prop type="string" name="vCenter" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="HCX">
                      <prop type="string" name="offer" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="SRM">
                      <prop type="string" name="licenseKey" required="True"/>
                    </discriminator>
                    <discriminator property="addonType" value="VR">
                      <prop type="integer32" name="vrsCount" required="True"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="addon" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="string" name="addonType" required="True">
                  <enum>
                    <item arg="$addon.properties.Arc" value="&quot;Arc&quot;"/>
                    <item arg="$addon.properties.HCX" value="&quot;HCX&quot;"/>
                    <item arg="$addon.properties.SRM" value="&quot;SRM&quot;"/>
                    <item arg="$addon.properties.VR" value="&quot;VR&quot;"/>
                  </enum>
                </prop>
                <discriminator property="addonType" value="Arc">
                  <prop type="string" name="vCenter" arg="$addon.properties.Arc.vCenter" required="True"/>
                </discriminator>
                <discriminator property="addonType" value="HCX">
                  <prop type="string" name="offer" arg="$addon.properties.HCX.offer" required="True"/>
                </discriminator>
                <discriminator property="addonType" value="SRM">
                  <prop type="string" name="licenseKey" arg="$addon.properties.SRM.licenseKey" required="True"/>
                </discriminator>
                <discriminator property="addonType" value="VR">
                  <prop type="integer32" name="vrsCount" arg="$addon.properties.VR.vrsCount" required="True"/>
                </discriminator>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Addons_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}">
          <request method="put">
            <path>
              <param type="string" name="addonName" arg="$Path.addonName" required="True"/>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Addon_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
