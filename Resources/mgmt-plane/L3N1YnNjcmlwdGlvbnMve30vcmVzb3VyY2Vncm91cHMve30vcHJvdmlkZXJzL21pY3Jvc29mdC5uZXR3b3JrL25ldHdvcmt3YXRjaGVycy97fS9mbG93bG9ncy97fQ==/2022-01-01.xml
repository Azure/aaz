<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/flowlogs/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vZmxvd0xvZ3Mve2Zsb3dMb2dOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network watcher flow-log">
    <command name="show" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/flowlogs/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vZmxvd0xvZ3Mve2Zsb3dMb2dOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.flowLogName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the flow logger."/>
        </arg>
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FlowLogs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}">
          <request method="get">
            <path>
              <param type="string" name="flowLogName" arg="$Path.flowLogName" required="True"/>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="enabled"/>
                    <prop type="object" name="flowAnalyticsConfiguration">
                      <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                        <prop type="boolean" name="enabled"/>
                        <prop type="integer32" name="trafficAnalyticsInterval"/>
                        <prop type="string" name="workspaceId"/>
                        <prop type="string" name="workspaceRegion"/>
                        <prop type="string" name="workspaceResourceId"/>
                      </prop>
                    </prop>
                    <prop type="object" name="format">
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;JSON&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="version">
                        <default value="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="retentionPolicy">
                      <prop type="integer32" name="days">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="enabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="string" name="storageId" required="True"/>
                    <prop readOnly="True" type="string" name="targetResourceGuid"/>
                    <prop type="string" name="targetResourceId" required="True"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/flowlogs/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vZmxvd0xvZ3Mve2Zsb3dMb2dOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.flowLogName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the flow logger."/>
        </arg>
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FlowLogs_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}">
          <request method="delete">
            <path>
              <param type="string" name="flowLogName" arg="$Path.flowLogName" required="True"/>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/flowlogs/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vZmxvd0xvZ3Mve2Zsb3dMb2dOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.flowLogName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the flow logger."/>
        </arg>
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" group="">
          <help short="Enable logging. Default: true."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageId" options="storage-account" group="">
          <help short="Name or ID of the storage account in which to save the flow logs.                                Must be in the same region of flow log."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear                                existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Format">
        <arg type="string" var="$parameters.properties.format.type" options="format" group="Format">
          <help short="File type of the flow log."/>
          <enum>
            <item name="JSON" value="&quot;JSON&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$parameters.properties.format.version" options="log-version" group="Format">
          <help short="Version (revision) of the flow log."/>
          <default value="0"/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.flowAnalyticsConfiguration" options="flow-analytics-configuration" group="Properties">
          <help short="Parameters that define the configuration of traffic analytics."/>
          <arg type="boolean" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled" options="enabled" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="Flag to enable/disable traffic analytics."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval" options="traffic-analytics-interval" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="The interval in minutes which would decide how frequently TA service should do flow analytics."/>
          </arg>
          <arg type="string" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId" options="workspace-id" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="The resource guid of the attached workspace."/>
          </arg>
          <arg type="string" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion" options="workspace-region" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="The location of the attached workspace."/>
          </arg>
          <arg type="string" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId" options="workspace-resource-id" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="Resource Id of the attached workspace."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.retentionPolicy" options="retention-policy" group="Properties">
          <help short="Parameters that define the retention policy for flow log."/>
          <arg type="integer32" var="$parameters.properties.retentionPolicy.days" options="days">
            <help short="Number of days to retain flow log records."/>
            <default value="0"/>
          </arg>
          <arg type="boolean" var="$parameters.properties.retentionPolicy.enabled" options="enabled">
            <help short="Flag to enable/disable retention."/>
            <default value="false"/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.targetResourceId" options="target-resource-id" group="Properties">
          <help short="ID of network security group to which flow log will be applied."/>
        </arg>
      </argGroup>
      <operation operationId="FlowLogs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}">
          <request method="put">
            <path>
              <param type="string" name="flowLogName" arg="$Path.flowLogName" required="True"/>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.enabled"/>
                    <prop type="object" name="flowAnalyticsConfiguration" arg="$parameters.properties.flowAnalyticsConfiguration">
                      <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                        <prop type="boolean" name="enabled" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"/>
                        <prop type="integer32" name="trafficAnalyticsInterval" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval"/>
                        <prop type="string" name="workspaceId" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId"/>
                        <prop type="string" name="workspaceRegion" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion"/>
                        <prop type="string" name="workspaceResourceId" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId"/>
                      </prop>
                    </prop>
                    <prop type="object" name="format">
                      <prop type="string" name="type" arg="$parameters.properties.format.type">
                        <enum>
                          <item value="&quot;JSON&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="version" arg="$parameters.properties.format.version">
                        <default value="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="retentionPolicy" arg="$parameters.properties.retentionPolicy">
                      <prop type="integer32" name="days" arg="$parameters.properties.retentionPolicy.days">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="enabled" arg="$parameters.properties.retentionPolicy.enabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="string" name="storageId" arg="$parameters.properties.storageId" required="True"/>
                    <prop type="string" name="targetResourceId" arg="$parameters.properties.targetResourceId" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="enabled"/>
                    <prop type="object" name="flowAnalyticsConfiguration">
                      <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                        <prop type="boolean" name="enabled"/>
                        <prop type="integer32" name="trafficAnalyticsInterval"/>
                        <prop type="string" name="workspaceId"/>
                        <prop type="string" name="workspaceRegion"/>
                        <prop type="string" name="workspaceResourceId"/>
                      </prop>
                    </prop>
                    <prop type="object" name="format">
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;JSON&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="version">
                        <default value="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="retentionPolicy">
                      <prop type="integer32" name="days">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="enabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="string" name="storageId" required="True"/>
                    <prop readOnly="True" type="string" name="targetResourceGuid"/>
                    <prop type="string" name="targetResourceId" required="True"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/flowlogs/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vZmxvd0xvZ3Mve2Zsb3dMb2dOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.flowLogName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the flow logger."/>
        </arg>
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enabled" options="enabled" group="">
          <help short="Enable logging."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageId" options="storage-account" group="">
          <help short="Name or ID of the storage account in which to save the flow logs.                                Must be in the same region of flow log."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear                                existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Format">
        <arg nullable="True" type="string" var="$parameters.properties.format.type" options="format" group="Format">
          <help short="File type of the flow log."/>
          <enum>
            <item name="JSON" value="&quot;JSON&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.format.version" options="log-version" group="Format">
          <help short="Version (revision) of the flow log."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$parameters.properties.flowAnalyticsConfiguration" options="flow-analytics-configuration" group="Properties">
          <help short="Parameters that define the configuration of traffic analytics."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled" options="enabled" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="Flag to enable/disable traffic analytics."/>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval" options="traffic-analytics-interval" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="The interval in minutes which would decide how frequently TA service should do flow analytics."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId" options="workspace-id" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="The resource guid of the attached workspace."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion" options="workspace-region" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="The location of the attached workspace."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId" options="workspace-resource-id" group="NetworkWatcherFlowAnalyticsConfiguration">
            <help short="Resource Id of the attached workspace."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.retentionPolicy" options="retention-policy" group="Properties">
          <help short="Parameters that define the retention policy for flow log."/>
          <arg nullable="True" type="integer32" var="$parameters.properties.retentionPolicy.days" options="days">
            <help short="Number of days to retain flow log records."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.retentionPolicy.enabled" options="enabled">
            <help short="Flag to enable/disable retention."/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.targetResourceId" options="target-resource-id" group="Properties">
          <help short="ID of network security group to which flow log will be applied."/>
        </arg>
      </argGroup>
      <operation operationId="FlowLogs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}">
          <request method="get">
            <path>
              <param type="string" name="flowLogName" arg="$Path.flowLogName" required="True"/>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="FlowLog_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="enabled"/>
                    <prop type="object" name="flowAnalyticsConfiguration">
                      <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                        <prop type="boolean" name="enabled"/>
                        <prop type="integer32" name="trafficAnalyticsInterval"/>
                        <prop type="string" name="workspaceId"/>
                        <prop type="string" name="workspaceRegion"/>
                        <prop type="string" name="workspaceResourceId"/>
                      </prop>
                    </prop>
                    <prop type="object" name="format">
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;JSON&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="version">
                        <default value="0"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="retentionPolicy">
                      <prop type="integer32" name="days">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="enabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="string" name="storageId" required="True"/>
                    <prop readOnly="True" type="string" name="targetResourceGuid"/>
                    <prop type="string" name="targetResourceId" required="True"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="enabled" arg="$parameters.properties.enabled"/>
                <prop type="object" name="flowAnalyticsConfiguration" arg="$parameters.properties.flowAnalyticsConfiguration">
                  <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"/>
                    <prop type="integer32" name="trafficAnalyticsInterval" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval"/>
                    <prop type="string" name="workspaceId" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId"/>
                    <prop type="string" name="workspaceRegion" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion"/>
                    <prop type="string" name="workspaceResourceId" arg="$parameters.properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId"/>
                  </prop>
                </prop>
                <prop type="object" name="format">
                  <prop type="string" name="type" arg="$parameters.properties.format.type">
                    <enum>
                      <item value="&quot;JSON&quot;"/>
                    </enum>
                  </prop>
                  <prop type="integer32" name="version" arg="$parameters.properties.format.version">
                    <default value="0"/>
                  </prop>
                </prop>
                <prop type="object" name="retentionPolicy" arg="$parameters.properties.retentionPolicy">
                  <prop type="integer32" name="days" arg="$parameters.properties.retentionPolicy.days">
                    <default value="0"/>
                  </prop>
                  <prop type="boolean" name="enabled" arg="$parameters.properties.retentionPolicy.enabled">
                    <default value="false"/>
                  </prop>
                </prop>
                <prop type="string" name="storageId" arg="$parameters.properties.storageId" required="True"/>
                <prop type="string" name="targetResourceId" arg="$parameters.properties.targetResourceId" required="True"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="FlowLogs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}">
          <request method="put">
            <path>
              <param type="string" name="flowLogName" arg="$Path.flowLogName" required="True"/>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@FlowLog_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
