<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}/rollingupgrades/latest" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9L3JvbGxpbmdVcGdyYWRlcy9sYXRlc3Q=/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="vmss rolling-upgrade">
    <command name="get-latest" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachinescalesets/{}/rollingupgrades/latest" version="2023-09-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZVNjYWxlU2V0cy97dm1TY2FsZVNldE5hbWV9L3JvbGxpbmdVcGdyYWRlcy9sYXRlc3Q=/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmScaleSetName" options="virtual-machine-scale-set-name vm-scale-set-name name n" required="True" group="" idPart="name">
          <help short="Scale set name. You can configure the default using `az configure --defaults vmss=<name>`."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineScaleSetRollingUpgrades_GetLatest">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/latest">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmScaleSetName" arg="$Path.vmScaleSetName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachineScaleSets/{}/rollingUpgrades/latest"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="error" cls="ApiError_read">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details" identifiers="message target">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="object" name="innererror">
                        <prop type="string" name="errordetail"/>
                        <prop type="string" name="exceptiontype"/>
                      </prop>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="object" name="policy">
                      <prop type="boolean" name="enableCrossZoneUpgrade"/>
                      <prop type="integer32" name="maxBatchInstancePercent">
                        <format maximum="100" minimum="5"/>
                      </prop>
                      <prop type="boolean" name="maxSurge"/>
                      <prop type="integer32" name="maxUnhealthyInstancePercent">
                        <format maximum="100" minimum="5"/>
                      </prop>
                      <prop type="integer32" name="maxUnhealthyUpgradedInstancePercent">
                        <format maximum="100" minimum="0"/>
                      </prop>
                      <prop type="string" name="pauseTimeBetweenBatches"/>
                      <prop type="boolean" name="prioritizeUnhealthyInstances"/>
                      <prop type="boolean" name="rollbackFailedInstancesOnPolicyBreach"/>
                    </prop>
                    <prop type="object" name="progress">
                      <prop readOnly="True" type="integer32" name="failedInstanceCount"/>
                      <prop readOnly="True" type="integer32" name="inProgressInstanceCount"/>
                      <prop readOnly="True" type="integer32" name="pendingInstanceCount"/>
                      <prop readOnly="True" type="integer32" name="successfulInstanceCount"/>
                    </prop>
                    <prop type="object" name="runningStatus">
                      <prop readOnly="True" type="string" name="code">
                        <enum>
                          <item value="&quot;Cancelled&quot;"/>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Faulted&quot;"/>
                          <item value="&quot;RollingForward&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="lastAction">
                        <enum>
                          <item value="&quot;Cancel&quot;"/>
                          <item value="&quot;Start&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="lastActionTime"/>
                      <prop readOnly="True" type="dateTime" name="startTime"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
