<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{scope}/providers/microsoft.help/solutions/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3NvbHV0aW9ucy97c29sdXRpb25SZXNvdXJjZU5hbWV9/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
  <commandGroup name="self-help solution">
    <command name="show" version="2024-03-01-preview">
      <resource id="/{scope}/providers/microsoft.help/solutions/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3NvbHV0aW9ucy97c29sdXRpb25SZXNvdXJjZU5hbWV9/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="This is an extension resource provider and only resource level extension is supported at the moment."/>
        </arg>
        <arg type="string" var="$Path.solutionResourceName" options="solution-name" required="True">
          <help short="Solution resource Name."/>
          <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="Solution_Get">
        <http path="/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}">
          <request method="get">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="solutionResourceName" arg="$Path.solutionResourceName" required="True">
                <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{scope}/providers/Microsoft.Help/solutions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="content"/>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PartialComplete&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="replacementMaps" cls="ReplacementMaps_read">
                      <prop type="array<object>" name="diagnostics" identifiers="solutionId">
                        <item type="object">
                          <prop type="string" name="estimatedCompletionTime"/>
                          <prop type="array<object>" name="insights">
                            <item type="object">
                              <prop type="string" name="id"/>
                              <prop type="string" name="importanceLevel">
                                <enum>
                                  <item value="&quot;Critical&quot;"/>
                                  <item value="&quot;Information&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="results"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<string>" name="requiredParameters">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="solutionId"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;MissingInputs&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Timeout&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="statusDetails"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="metricsBasedCharts">
                        <item type="object">
                          <prop type="string" name="aggregationType">
                            <enum>
                              <item value="&quot;Avg&quot;"/>
                              <item value="&quot;Count&quot;"/>
                              <item value="&quot;Max&quot;"/>
                              <item value="&quot;Min&quot;"/>
                              <item value="&quot;Sum&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="filterGroup">
                            <prop type="array<object>" name="filter">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="string" name="operator"/>
                                <prop type="string" name="values"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="replacementKey"/>
                          <prop type="string" name="timeSpanDuration"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="troubleshooters" identifiers="solutionId">
                        <item type="object">
                          <prop type="string" name="solutionId"/>
                          <prop type="string" name="summary"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="videoGroups">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<object>" name="videos">
                            <item type="object">
                              <prop type="string" name="src"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="videos">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="string" name="src"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="webResults">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<object>" name="searchResults" identifiers="solutionId">
                            <item type="object">
                              <prop type="string" name="confidence">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="link"/>
                              <prop type="integer32" name="rank"/>
                              <prop type="string" name="resultType">
                                <enum>
                                  <item value="&quot;Community&quot;"/>
                                  <item value="&quot;Documentation&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="solutionId"/>
                              <prop type="string" name="source"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="sections" identifiers="title">
                      <item type="object">
                        <prop type="string" name="content"/>
                        <prop type="@ReplacementMaps_read" name="replacementMaps"/>
                        <prop type="string" name="title"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="solutionId"/>
                    <prop readOnly="True" type="string" name="title"/>
                    <prop type="array<object>" name="triggerCriteria" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;ProblemClassificationId&quot;"/>
                            <item value="&quot;ReplacementKey&quot;"/>
                            <item value="&quot;SolutionId&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2024-03-01-preview" confirmation="">
      <resource id="/{scope}/providers/microsoft.help/solutions/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3NvbHV0aW9ucy97c29sdXRpb25SZXNvdXJjZU5hbWV9/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="This is an extension resource provider and only resource level extension is supported at the moment."/>
        </arg>
        <arg type="string" var="$Path.solutionResourceName" options="solution-name" required="True">
          <help short="Solution resource Name."/>
          <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$solutionRequestBody.properties.parameters" options="parameters" group="Properties">
          <help short="Client input parameters to run Solution"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<object>" var="$solutionRequestBody.properties.triggerCriteria" options="trigger-criteria" group="Properties">
          <help short="Solution request trigger criteria"/>
          <item type="object">
            <arg type="string" var="$solutionRequestBody.properties.triggerCriteria[].name" options="name">
              <help short="Trigger criterion name."/>
              <enum>
                <item name="ProblemClassificationId" value="&quot;ProblemClassificationId&quot;"/>
                <item name="ReplacementKey" value="&quot;ReplacementKey&quot;"/>
                <item name="SolutionId" value="&quot;SolutionId&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$solutionRequestBody.properties.triggerCriteria[].value" options="value">
              <help short="Trigger criterion value."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Solution_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}">
          <request method="put">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="solutionResourceName" arg="$Path.solutionResourceName" required="True">
                <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="solutionRequestBody" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="parameters" arg="$solutionRequestBody.properties.parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="triggerCriteria" arg="$solutionRequestBody.properties.triggerCriteria" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" arg="$solutionRequestBody.properties.triggerCriteria[].name">
                          <enum>
                            <item value="&quot;ProblemClassificationId&quot;"/>
                            <item value="&quot;ReplacementKey&quot;"/>
                            <item value="&quot;SolutionId&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" arg="$solutionRequestBody.properties.triggerCriteria[].value"/>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{scope}/providers/Microsoft.Help/solutions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="content"/>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PartialComplete&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="replacementMaps" cls="ReplacementMaps_read">
                      <prop type="array<object>" name="diagnostics" identifiers="solutionId">
                        <item type="object">
                          <prop type="string" name="estimatedCompletionTime"/>
                          <prop type="array<object>" name="insights">
                            <item type="object">
                              <prop type="string" name="id"/>
                              <prop type="string" name="importanceLevel">
                                <enum>
                                  <item value="&quot;Critical&quot;"/>
                                  <item value="&quot;Information&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="results"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<string>" name="requiredParameters">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="solutionId"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;MissingInputs&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Timeout&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="statusDetails"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="metricsBasedCharts">
                        <item type="object">
                          <prop type="string" name="aggregationType">
                            <enum>
                              <item value="&quot;Avg&quot;"/>
                              <item value="&quot;Count&quot;"/>
                              <item value="&quot;Max&quot;"/>
                              <item value="&quot;Min&quot;"/>
                              <item value="&quot;Sum&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="filterGroup">
                            <prop type="array<object>" name="filter">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="string" name="operator"/>
                                <prop type="string" name="values"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="replacementKey"/>
                          <prop type="string" name="timeSpanDuration"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="troubleshooters" identifiers="solutionId">
                        <item type="object">
                          <prop type="string" name="solutionId"/>
                          <prop type="string" name="summary"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="videoGroups">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<object>" name="videos">
                            <item type="object">
                              <prop type="string" name="src"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="videos">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="string" name="src"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="webResults">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<object>" name="searchResults" identifiers="solutionId">
                            <item type="object">
                              <prop type="string" name="confidence">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="link"/>
                              <prop type="integer32" name="rank"/>
                              <prop type="string" name="resultType">
                                <enum>
                                  <item value="&quot;Community&quot;"/>
                                  <item value="&quot;Documentation&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="solutionId"/>
                              <prop type="string" name="source"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="sections" identifiers="title">
                      <item type="object">
                        <prop type="string" name="content"/>
                        <prop type="@ReplacementMaps_read" name="replacementMaps"/>
                        <prop type="string" name="title"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="solutionId"/>
                    <prop readOnly="True" type="string" name="title"/>
                    <prop type="array<object>" name="triggerCriteria" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;ProblemClassificationId&quot;"/>
                            <item value="&quot;ReplacementKey&quot;"/>
                            <item value="&quot;SolutionId&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-03-01-preview" confirmation="">
      <resource id="/{scope}/providers/microsoft.help/solutions/{}" version="2024-03-01-preview" swagger="mgmt-plane/help/ResourceProviders/Microsoft.Help/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5IZWxwL3NvbHV0aW9ucy97c29sdXRpb25SZXNvdXJjZU5hbWV9/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="This is an extension resource provider and only resource level extension is supported at the moment."/>
        </arg>
        <arg type="string" var="$Path.solutionResourceName" options="solution-name" required="True">
          <help short="Solution resource Name."/>
          <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$solutionRequestBody.properties.parameters" options="parameters" group="Properties">
          <help short="Client input parameters to run Solution"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="array<object>" var="$solutionRequestBody.properties.triggerCriteria" options="trigger-criteria" group="Properties">
          <help short="Solution request trigger criteria"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$solutionRequestBody.properties.triggerCriteria[].name" options="name">
              <help short="Trigger criterion name."/>
              <enum>
                <item name="ProblemClassificationId" value="&quot;ProblemClassificationId&quot;"/>
                <item name="ReplacementKey" value="&quot;ReplacementKey&quot;"/>
                <item name="SolutionId" value="&quot;SolutionId&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$solutionRequestBody.properties.triggerCriteria[].value" options="value">
              <help short="Trigger criterion value."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Solution_Get">
        <http path="/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}">
          <request method="get">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="solutionResourceName" arg="$Path.solutionResourceName" required="True">
                <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SolutionResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{scope}/providers/Microsoft.Help/solutions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="content"/>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PartialComplete&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="replacementMaps" cls="ReplacementMaps_read">
                      <prop type="array<object>" name="diagnostics" identifiers="solutionId">
                        <item type="object">
                          <prop type="string" name="estimatedCompletionTime"/>
                          <prop type="array<object>" name="insights">
                            <item type="object">
                              <prop type="string" name="id"/>
                              <prop type="string" name="importanceLevel">
                                <enum>
                                  <item value="&quot;Critical&quot;"/>
                                  <item value="&quot;Information&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="results"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<string>" name="requiredParameters">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="solutionId"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;MissingInputs&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Timeout&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="statusDetails"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="metricsBasedCharts">
                        <item type="object">
                          <prop type="string" name="aggregationType">
                            <enum>
                              <item value="&quot;Avg&quot;"/>
                              <item value="&quot;Count&quot;"/>
                              <item value="&quot;Max&quot;"/>
                              <item value="&quot;Min&quot;"/>
                              <item value="&quot;Sum&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="filterGroup">
                            <prop type="array<object>" name="filter">
                              <item type="object">
                                <prop type="string" name="name"/>
                                <prop type="string" name="operator"/>
                                <prop type="string" name="values"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="replacementKey"/>
                          <prop type="string" name="timeSpanDuration"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="troubleshooters" identifiers="solutionId">
                        <item type="object">
                          <prop type="string" name="solutionId"/>
                          <prop type="string" name="summary"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="videoGroups">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<object>" name="videos">
                            <item type="object">
                              <prop type="string" name="src"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="videos">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="string" name="src"/>
                          <prop type="string" name="title"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="webResults">
                        <item type="object">
                          <prop type="string" name="replacementKey"/>
                          <prop type="array<object>" name="searchResults" identifiers="solutionId">
                            <item type="object">
                              <prop type="string" name="confidence">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="link"/>
                              <prop type="integer32" name="rank"/>
                              <prop type="string" name="resultType">
                                <enum>
                                  <item value="&quot;Community&quot;"/>
                                  <item value="&quot;Documentation&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="solutionId"/>
                              <prop type="string" name="source"/>
                              <prop type="string" name="title"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="sections" identifiers="title">
                      <item type="object">
                        <prop type="string" name="content"/>
                        <prop type="@ReplacementMaps_read" name="replacementMaps"/>
                        <prop type="string" name="title"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="solutionId"/>
                    <prop readOnly="True" type="string" name="title"/>
                    <prop type="array<object>" name="triggerCriteria" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;ProblemClassificationId&quot;"/>
                            <item value="&quot;ReplacementKey&quot;"/>
                            <item value="&quot;SolutionId&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="solutionRequestBody" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="parameters" arg="$solutionRequestBody.properties.parameters">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
                <prop type="array<object>" name="triggerCriteria" arg="$solutionRequestBody.properties.triggerCriteria" identifiers="name">
                  <item type="object">
                    <prop type="string" name="name" arg="$solutionRequestBody.properties.triggerCriteria[].name">
                      <enum>
                        <item value="&quot;ProblemClassificationId&quot;"/>
                        <item value="&quot;ReplacementKey&quot;"/>
                        <item value="&quot;SolutionId&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="value" arg="$solutionRequestBody.properties.triggerCriteria[].value"/>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Solution_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}">
          <request method="put">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="solutionResourceName" arg="$Path.solutionResourceName" required="True">
                <format pattern="^[A-Za-z0-9-+@()_]+$" maxLength="100" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SolutionResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
