<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJzL3toeWJyaWRBa3NDbHVzdGVyTmFtZX0=/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
  <commandGroup name="networkcloud hybridakscluster">
    <command name="show" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJzL3toeWJyaWRBa3NDbHVzdGVyTmFtZX0=/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.hybridAksClusterName" options="hybrid-aks-cluster-name name n" required="True" idPart="name">
          <help short="The name of the Hybrid AKS cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="HybridAksClusters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters/{hybridAksClusterName}">
          <request method="get">
            <path>
              <param type="string" name="hybridAksClusterName" arg="$Path.hybridAksClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/hybridAksClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="associatedNetworkIds" required="True">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="cloudServicesNetworkId"/>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop type="integer64" name="controlPlaneCount" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="controlPlaneNodes" identifiers="nodePoolName">
                      <item type="object" cls="NodeConfiguration_read">
                        <prop readOnly="True" type="string" name="agentPoolId"/>
                        <prop readOnly="True" type="string" name="agentPoolName"/>
                        <prop readOnly="True" type="integer64" name="cpuCores"/>
                        <prop readOnly="True" type="integer64" name="diskSizeGB"/>
                        <prop readOnly="True" type="integer64" name="memorySizeGB"/>
                        <prop readOnly="True" type="string" name="nodePoolName"/>
                        <prop readOnly="True" type="array<object>" name="nodes" identifiers="nodeName">
                          <item type="object">
                            <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                            <prop readOnly="True" type="string" name="imageId"/>
                            <prop readOnly="True" type="array<object>" name="networkAttachments" identifiers="networkAttachmentName">
                              <item type="object">
                                <prop type="string" name="attachedNetworkId" required="True"/>
                                <prop type="string" name="defaultGateway">
                                  <enum>
                                    <item value="&quot;False&quot;"/>
                                    <item value="&quot;True&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipAllocationMethod" required="True">
                                  <enum>
                                    <item value="&quot;Disabled&quot;"/>
                                    <item value="&quot;Dynamic&quot;"/>
                                    <item value="&quot;Static&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipv4Address"/>
                                <prop type="string" name="ipv6Address"/>
                                <prop readOnly="True" type="string" name="macAddress"/>
                                <prop type="string" name="networkAttachmentName">
                                  <format maxLength="15"/>
                                </prop>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="nodeName"/>
                            <prop readOnly="True" type="string" name="powerState">
                              <enum>
                                <item value="&quot;Off&quot;"/>
                                <item value="&quot;On&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="integer64" name="vmCount"/>
                        <prop readOnly="True" type="string" name="vmSize"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="defaultCniNetworkId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="hybridAksProvisionedClusterId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="volumes">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="workerCount" required="True"/>
                    <prop readOnly="True" type="array<@NodeConfiguration_read>" name="workerNodes" identifiers="nodePoolName">
                      <item type="@NodeConfiguration_read"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-12-12-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJzL3toeWJyaWRBa3NDbHVzdGVyTmFtZX0=/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.hybridAksClusterName" options="hybrid-aks-cluster-name name n" required="True" idPart="name">
          <help short="The name of the Hybrid AKS cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="HybridAksClusters_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters/{hybridAksClusterName}">
          <request method="delete">
            <path>
              <param type="string" name="hybridAksClusterName" arg="$Path.hybridAksClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJzL3toeWJyaWRBa3NDbHVzdGVyTmFtZX0=/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.hybridAksClusterName" options="hybrid-aks-cluster-name name n" required="True" idPart="name">
          <help short="The name of the Hybrid AKS cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="HybridAksClusterParameters">
        <arg type="object" var="$hybridAksClusterParameters.extendedLocation" options="extended-location" required="True" group="HybridAksClusterParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$hybridAksClusterParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$hybridAksClusterParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$hybridAksClusterParameters.location" options="location l" required="True" group="HybridAksClusterParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$hybridAksClusterParameters.tags" options="tags" group="HybridAksClusterParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$hybridAksClusterParameters.properties.associatedNetworkIds" options="associated-network-ids" required="True" group="Properties">
          <help short="The list of resource IDs for the workload networks associated with the Hybrid AKS cluster. It can be any of l2Networks, l3Networks, or trunkedNetworks resources. This field will also contain one cloudServicesNetwork and one defaultCniNetwork."/>
          <item type="string"/>
        </arg>
        <arg type="integer64" var="$hybridAksClusterParameters.properties.controlPlaneCount" options="control-plane-count" required="True" group="Properties">
          <help short="The number of control plane node VMs."/>
          <format minimum="1"/>
        </arg>
        <arg type="string" var="$hybridAksClusterParameters.properties.hybridAksProvisionedClusterId" options="hybrid-aks-provisioned-cluster-id" required="True" group="Properties">
          <help short="The resource ID of the Hybrid AKS cluster that this additional information is for."/>
        </arg>
        <arg type="integer64" var="$hybridAksClusterParameters.properties.workerCount" options="worker-count" required="True" group="Properties">
          <help short="The number of worker node VMs."/>
        </arg>
      </argGroup>
      <operation operationId="HybridAksClusters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters/{hybridAksClusterName}">
          <request method="put">
            <path>
              <param type="string" name="hybridAksClusterName" arg="$Path.hybridAksClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="hybridAksClusterParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$hybridAksClusterParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$hybridAksClusterParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$hybridAksClusterParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$hybridAksClusterParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="associatedNetworkIds" arg="$hybridAksClusterParameters.properties.associatedNetworkIds" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="controlPlaneCount" arg="$hybridAksClusterParameters.properties.controlPlaneCount" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop type="string" name="hybridAksProvisionedClusterId" arg="$hybridAksClusterParameters.properties.hybridAksProvisionedClusterId" required="True"/>
                    <prop type="integer64" name="workerCount" arg="$hybridAksClusterParameters.properties.workerCount" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$hybridAksClusterParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/hybridAksClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="associatedNetworkIds" required="True">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="cloudServicesNetworkId"/>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop type="integer64" name="controlPlaneCount" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="controlPlaneNodes" identifiers="nodePoolName">
                      <item type="object" cls="NodeConfiguration_read">
                        <prop readOnly="True" type="string" name="agentPoolId"/>
                        <prop readOnly="True" type="string" name="agentPoolName"/>
                        <prop readOnly="True" type="integer64" name="cpuCores"/>
                        <prop readOnly="True" type="integer64" name="diskSizeGB"/>
                        <prop readOnly="True" type="integer64" name="memorySizeGB"/>
                        <prop readOnly="True" type="string" name="nodePoolName"/>
                        <prop readOnly="True" type="array<object>" name="nodes" identifiers="nodeName">
                          <item type="object">
                            <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                            <prop readOnly="True" type="string" name="imageId"/>
                            <prop readOnly="True" type="array<object>" name="networkAttachments" identifiers="networkAttachmentName">
                              <item type="object">
                                <prop type="string" name="attachedNetworkId" required="True"/>
                                <prop type="string" name="defaultGateway">
                                  <enum>
                                    <item value="&quot;False&quot;"/>
                                    <item value="&quot;True&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipAllocationMethod" required="True">
                                  <enum>
                                    <item value="&quot;Disabled&quot;"/>
                                    <item value="&quot;Dynamic&quot;"/>
                                    <item value="&quot;Static&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipv4Address"/>
                                <prop type="string" name="ipv6Address"/>
                                <prop readOnly="True" type="string" name="macAddress"/>
                                <prop type="string" name="networkAttachmentName">
                                  <format maxLength="15"/>
                                </prop>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="nodeName"/>
                            <prop readOnly="True" type="string" name="powerState">
                              <enum>
                                <item value="&quot;Off&quot;"/>
                                <item value="&quot;On&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="integer64" name="vmCount"/>
                        <prop readOnly="True" type="string" name="vmSize"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="defaultCniNetworkId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="hybridAksProvisionedClusterId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="volumes">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="workerCount" required="True"/>
                    <prop readOnly="True" type="array<@NodeConfiguration_read>" name="workerNodes" identifiers="nodePoolName">
                      <item type="@NodeConfiguration_read"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-12-12-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJzL3toeWJyaWRBa3NDbHVzdGVyTmFtZX0=/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.hybridAksClusterName" options="hybrid-aks-cluster-name name n" required="True" idPart="name">
          <help short="The name of the Hybrid AKS cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="HybridAksClusterUpdateParameters">
        <arg type="object" var="$hybridAksClusterUpdateParameters.tags" options="tags" group="HybridAksClusterUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="HybridAksClusters_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters/{hybridAksClusterName}">
          <request method="patch">
            <path>
              <param type="string" name="hybridAksClusterName" arg="$Path.hybridAksClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="hybridAksClusterUpdateParameters" clientFlatten="True">
                  <prop type="object" name="tags" arg="$hybridAksClusterUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/hybridAksClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="associatedNetworkIds" required="True">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="cloudServicesNetworkId"/>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop type="integer64" name="controlPlaneCount" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="controlPlaneNodes" identifiers="nodePoolName">
                      <item type="object" cls="NodeConfiguration_read">
                        <prop readOnly="True" type="string" name="agentPoolId"/>
                        <prop readOnly="True" type="string" name="agentPoolName"/>
                        <prop readOnly="True" type="integer64" name="cpuCores"/>
                        <prop readOnly="True" type="integer64" name="diskSizeGB"/>
                        <prop readOnly="True" type="integer64" name="memorySizeGB"/>
                        <prop readOnly="True" type="string" name="nodePoolName"/>
                        <prop readOnly="True" type="array<object>" name="nodes" identifiers="nodeName">
                          <item type="object">
                            <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                            <prop readOnly="True" type="string" name="imageId"/>
                            <prop readOnly="True" type="array<object>" name="networkAttachments" identifiers="networkAttachmentName">
                              <item type="object">
                                <prop type="string" name="attachedNetworkId" required="True"/>
                                <prop type="string" name="defaultGateway">
                                  <enum>
                                    <item value="&quot;False&quot;"/>
                                    <item value="&quot;True&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipAllocationMethod" required="True">
                                  <enum>
                                    <item value="&quot;Disabled&quot;"/>
                                    <item value="&quot;Dynamic&quot;"/>
                                    <item value="&quot;Static&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipv4Address"/>
                                <prop type="string" name="ipv6Address"/>
                                <prop readOnly="True" type="string" name="macAddress"/>
                                <prop type="string" name="networkAttachmentName">
                                  <format maxLength="15"/>
                                </prop>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="nodeName"/>
                            <prop readOnly="True" type="string" name="powerState">
                              <enum>
                                <item value="&quot;Off&quot;"/>
                                <item value="&quot;On&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="integer64" name="vmCount"/>
                        <prop readOnly="True" type="string" name="vmSize"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="defaultCniNetworkId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="hybridAksProvisionedClusterId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="volumes">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="workerCount" required="True"/>
                    <prop readOnly="True" type="array<@NodeConfiguration_read>" name="workerNodes" identifiers="nodePoolName">
                      <item type="@NodeConfiguration_read"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
