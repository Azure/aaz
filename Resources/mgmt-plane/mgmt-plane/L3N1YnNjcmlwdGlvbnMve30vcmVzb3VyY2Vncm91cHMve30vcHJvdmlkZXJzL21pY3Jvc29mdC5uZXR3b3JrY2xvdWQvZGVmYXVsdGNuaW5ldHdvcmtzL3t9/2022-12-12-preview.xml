<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/defaultcninetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2RlZmF1bHRDbmlOZXR3b3Jrcy97ZGVmYXVsdENuaU5ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
  <commandGroup name="networkcloud defaultcninetwork">
    <command name="show" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/defaultcninetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2RlZmF1bHRDbmlOZXR3b3Jrcy97ZGVmYXVsdENuaU5ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.defaultCniNetworkName" options="default-cni-network-name name n" required="True" idPart="name">
          <help short="The name of the default CNI network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DefaultCniNetworks_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{defaultCniNetworkName}">
          <request method="get">
            <path>
              <param type="string" name="defaultCniNetworkName" arg="$Path.defaultCniNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="integer64" name="cniAsNumber"/>
                    <prop type="object" name="cniBgpConfiguration">
                      <prop type="array<object>" name="bgpPeers" identifiers="peerIp">
                        <item type="object" cls="BgpPeer_read">
                          <prop type="integer64" name="asNumber" required="True">
                            <format maximum="4294967295" minimum="0"/>
                          </prop>
                          <prop type="string" name="peerIp" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="communityAdvertisements">
                        <item type="object">
                          <prop type="array<string>" name="communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="subnetPrefix" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="serviceExternalPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="serviceLoadBalancerPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="array<@BgpPeer_read>" name="fabricBgpPeers" identifiers="peerIp">
                      <item type="@BgpPeer_read"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="interfaceName"/>
                    <prop type="string" name="ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="vlan" required="True">
                      <format maximum="4094" minimum="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-12-12-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/defaultcninetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2RlZmF1bHRDbmlOZXR3b3Jrcy97ZGVmYXVsdENuaU5ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.defaultCniNetworkName" options="default-cni-network-name name n" required="True" idPart="name">
          <help short="The name of the default CNI network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DefaultCniNetworks_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{defaultCniNetworkName}">
          <request method="delete">
            <path>
              <param type="string" name="defaultCniNetworkName" arg="$Path.defaultCniNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/defaultcninetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2RlZmF1bHRDbmlOZXR3b3Jrcy97ZGVmYXVsdENuaU5ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.defaultCniNetworkName" options="default-cni-network-name name n" required="True" idPart="name">
          <help short="The name of the default CNI network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="DefaultCniNetworkParameters">
        <arg type="object" var="$defaultCniNetworkParameters.extendedLocation" options="extended-location" required="True" group="DefaultCniNetworkParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$defaultCniNetworkParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$defaultCniNetworkParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$defaultCniNetworkParameters.location" options="location l" required="True" group="DefaultCniNetworkParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$defaultCniNetworkParameters.tags" options="tags" group="DefaultCniNetworkParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration" options="cni-bgp-configuration" group="Properties">
          <help short="The Calico BGP configuration."/>
          <arg type="array<object>" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers" options="bgp-peers">
            <help short="The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric."/>
            <item type="object">
              <arg type="integer64" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers[].asNumber" options="as-number" required="True">
                <help short="The ASN (Autonomous System Number) of the BGP peer."/>
                <format maximum="4294967295" minimum="0"/>
              </arg>
              <arg type="string" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers[].password" options="password">
                <help short="The password for this peering neighbor. It defaults to no password if not specified."/>
                <format pattern="^[a-zA-Z0-9]{0,80}$" maxLength="80"/>
              </arg>
              <arg type="string" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers[].peerIp" options="peer-ip" required="True">
                <help short="The IPv4 or IPv6 address to peer with the associated CNI Network. The IP version type will drive a peering with the same version type from the Default CNI Network. For example, IPv4 to IPv4 or IPv6 to IPv6."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.communityAdvertisements" options="community-advertisements">
            <help short="The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the communities that should be associated with that prefix when it is announced."/>
            <item type="object">
              <arg type="array<string>" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.communityAdvertisements[].communities" options="communities" required="True">
                <help short="The list of community strings to announce with this prefix."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.communityAdvertisements[].subnetPrefix" options="subnet-prefix" required="True">
                <help short="The subnet in CIDR format for which properties should be advertised."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.nodeMeshPassword" options="node-mesh-password">
            <help short="The password of the Calico node mesh. It defaults to a randomly-generated string when not provided."/>
            <format pattern="^[a-zA-Z0-9]{0,80}$" maxLength="80"/>
          </arg>
          <arg type="array<string>" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.serviceExternalPrefixes" options="service-external-prefixes">
            <help short="The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$defaultCniNetworkParameters.properties.cniBgpConfiguration.serviceLoadBalancerPrefixes" options="service-load-balancer-prefixes">
            <help short="The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they are within one of these blocks."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="string" var="$defaultCniNetworkParameters.properties.ipAllocationType" options="ip-allocation-type" group="Properties">
          <help short="The type of the IP address allocation."/>
          <default value="&quot;DualStack&quot;"/>
          <enum>
            <item name="DualStack" value="&quot;DualStack&quot;"/>
            <item name="IPV4" value="&quot;IPV4&quot;"/>
            <item name="IPV6" value="&quot;IPV6&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$defaultCniNetworkParameters.properties.ipv4ConnectedPrefix" options="ipv4-connected-prefix" group="Properties">
          <help short="The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type is IPV4 or DualStack."/>
        </arg>
        <arg type="string" var="$defaultCniNetworkParameters.properties.ipv6ConnectedPrefix" options="ipv6-connected-prefix" group="Properties">
          <help short="The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type is IPV6 or DualStack."/>
        </arg>
        <arg type="string" var="$defaultCniNetworkParameters.properties.l3IsolationDomainId" options="l3-isolation-domain-id" required="True" group="Properties">
          <help short="The resource ID of the Network Fabric l3IsolationDomain."/>
        </arg>
        <arg type="integer64" var="$defaultCniNetworkParameters.properties.vlan" options="vlan" required="True" group="Properties">
          <help short="The VLAN from the l3IsolationDomain that is used for this network."/>
          <format maximum="4094" minimum="1"/>
        </arg>
      </argGroup>
      <operation operationId="DefaultCniNetworks_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{defaultCniNetworkName}">
          <request method="put">
            <path>
              <param type="string" name="defaultCniNetworkName" arg="$Path.defaultCniNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="defaultCniNetworkParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$defaultCniNetworkParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$defaultCniNetworkParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$defaultCniNetworkParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$defaultCniNetworkParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="cniBgpConfiguration" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration">
                      <prop type="array<object>" name="bgpPeers" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers" identifiers="peerIp">
                        <item type="object">
                          <prop type="integer64" name="asNumber" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers[].asNumber" required="True">
                            <format maximum="4294967295" minimum="0"/>
                          </prop>
                          <prop type="string" name="password" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers[].password" secret="True">
                            <format pattern="^[a-zA-Z0-9]{0,80}$" maxLength="80"/>
                          </prop>
                          <prop type="string" name="peerIp" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.bgpPeers[].peerIp" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="communityAdvertisements" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.communityAdvertisements">
                        <item type="object">
                          <prop type="array<string>" name="communities" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.communityAdvertisements[].communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="subnetPrefix" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.communityAdvertisements[].subnetPrefix" required="True"/>
                        </item>
                      </prop>
                      <prop type="string" name="nodeMeshPassword" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.nodeMeshPassword" secret="True">
                        <format pattern="^[a-zA-Z0-9]{0,80}$" maxLength="80"/>
                      </prop>
                      <prop type="array<string>" name="serviceExternalPrefixes" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.serviceExternalPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="serviceLoadBalancerPrefixes" arg="$defaultCniNetworkParameters.properties.cniBgpConfiguration.serviceLoadBalancerPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="ipAllocationType" arg="$defaultCniNetworkParameters.properties.ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix" arg="$defaultCniNetworkParameters.properties.ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix" arg="$defaultCniNetworkParameters.properties.ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" arg="$defaultCniNetworkParameters.properties.l3IsolationDomainId" required="True"/>
                    <prop type="integer64" name="vlan" arg="$defaultCniNetworkParameters.properties.vlan" required="True">
                      <format maximum="4094" minimum="1"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$defaultCniNetworkParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="integer64" name="cniAsNumber"/>
                    <prop type="object" name="cniBgpConfiguration">
                      <prop type="array<object>" name="bgpPeers" identifiers="peerIp">
                        <item type="object" cls="BgpPeer_read">
                          <prop type="integer64" name="asNumber" required="True">
                            <format maximum="4294967295" minimum="0"/>
                          </prop>
                          <prop type="string" name="peerIp" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="communityAdvertisements">
                        <item type="object">
                          <prop type="array<string>" name="communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="subnetPrefix" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="serviceExternalPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="serviceLoadBalancerPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="array<@BgpPeer_read>" name="fabricBgpPeers" identifiers="peerIp">
                      <item type="@BgpPeer_read"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="interfaceName"/>
                    <prop type="string" name="ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="vlan" required="True">
                      <format maximum="4094" minimum="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-12-12-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/defaultcninetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2RlZmF1bHRDbmlOZXR3b3Jrcy97ZGVmYXVsdENuaU5ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.defaultCniNetworkName" options="default-cni-network-name name n" required="True" idPart="name">
          <help short="The name of the default CNI network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="DefaultCniNetworkUpdateParameters">
        <arg type="object" var="$defaultCniNetworkUpdateParameters.tags" options="tags" group="DefaultCniNetworkUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="DefaultCniNetworks_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{defaultCniNetworkName}">
          <request method="patch">
            <path>
              <param type="string" name="defaultCniNetworkName" arg="$Path.defaultCniNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="defaultCniNetworkUpdateParameters" clientFlatten="True">
                  <prop type="object" name="tags" arg="$defaultCniNetworkUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="integer64" name="cniAsNumber"/>
                    <prop type="object" name="cniBgpConfiguration">
                      <prop type="array<object>" name="bgpPeers" identifiers="peerIp">
                        <item type="object" cls="BgpPeer_read">
                          <prop type="integer64" name="asNumber" required="True">
                            <format maximum="4294967295" minimum="0"/>
                          </prop>
                          <prop type="string" name="peerIp" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="communityAdvertisements">
                        <item type="object">
                          <prop type="array<string>" name="communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="subnetPrefix" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="serviceExternalPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="serviceLoadBalancerPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="array<@BgpPeer_read>" name="fabricBgpPeers" identifiers="peerIp">
                      <item type="@BgpPeer_read"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="interfaceName"/>
                    <prop type="string" name="ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="vlan" required="True">
                      <format maximum="4094" minimum="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
