<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/cloudservicesnetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2Nsb3VkU2VydmljZXNOZXR3b3Jrcy97Y2xvdWRTZXJ2aWNlc05ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
  <commandGroup name="networkcloud cloudservicesnetwork">
    <command name="show" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/cloudservicesnetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2Nsb3VkU2VydmljZXNOZXR3b3Jrcy97Y2xvdWRTZXJ2aWNlc05ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudServicesNetworkName" options="cloud-services-network-name name n" required="True" idPart="name">
          <help short="The name of the cloud services network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CloudServicesNetworks_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{cloudServicesNetworkName}">
          <request method="get">
            <path>
              <param type="string" name="cloudServicesNetworkName" arg="$Path.cloudServicesNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalEgressEndpoints">
                      <item type="object" cls="EgressEndpoint_read">
                        <prop type="string" name="category" required="True"/>
                        <prop type="array<object>" name="endpoints" required="True">
                          <item type="object">
                            <prop type="string" name="domainName" required="True"/>
                            <prop type="integer64" name="port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="enableDefaultEgressEndpoints">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<@EgressEndpoint_read>" name="enabledEgressEndpoints">
                      <item type="@EgressEndpoint_read"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="interfaceName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="virtualMachinesAssociatedIds">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-12-12-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/cloudservicesnetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2Nsb3VkU2VydmljZXNOZXR3b3Jrcy97Y2xvdWRTZXJ2aWNlc05ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudServicesNetworkName" options="cloud-services-network-name name n" required="True" idPart="name">
          <help short="The name of the cloud services network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CloudServicesNetworks_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{cloudServicesNetworkName}">
          <request method="delete">
            <path>
              <param type="string" name="cloudServicesNetworkName" arg="$Path.cloudServicesNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/cloudservicesnetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2Nsb3VkU2VydmljZXNOZXR3b3Jrcy97Y2xvdWRTZXJ2aWNlc05ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudServicesNetworkName" options="cloud-services-network-name name n" required="True" idPart="name">
          <help short="The name of the cloud services network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="CloudServicesNetworkParameters">
        <arg type="object" var="$cloudServicesNetworkParameters.extendedLocation" options="extended-location" required="True" group="CloudServicesNetworkParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$cloudServicesNetworkParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$cloudServicesNetworkParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$cloudServicesNetworkParameters.location" options="location l" required="True" group="CloudServicesNetworkParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$cloudServicesNetworkParameters.tags" options="tags" group="CloudServicesNetworkParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints" options="additional-egress-endpoints" group="Properties">
          <help short="The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint."/>
          <item type="object">
            <arg type="string" var="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].category" options="category" required="True">
              <help short="The descriptive category name of endpoints accessible by the AKS agent node. For example, azure-resource-management, API server, etc. The platform egress endpoints provided by default will use the category 'default'."/>
            </arg>
            <arg type="array<object>" var="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].endpoints" options="endpoints" required="True">
              <help short="The list of endpoint dependencies."/>
              <item type="object">
                <arg type="string" var="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].endpoints[].domainName" options="domain-name" required="True">
                  <help short="The domain name of the dependency."/>
                </arg>
                <arg type="integer64" var="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].endpoints[].port" options="port">
                  <help short="The port of this endpoint."/>
                  <format maximum="65535" minimum="1"/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$cloudServicesNetworkParameters.properties.enableDefaultEgressEndpoints" options="enable-default-egress-endpoints" group="Properties">
          <help short="The indicator of whether the platform default endpoints are allowed for the egress traffic."/>
          <default value="&quot;True&quot;"/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="CloudServicesNetworks_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{cloudServicesNetworkName}">
          <request method="put">
            <path>
              <param type="string" name="cloudServicesNetworkName" arg="$Path.cloudServicesNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="cloudServicesNetworkParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$cloudServicesNetworkParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$cloudServicesNetworkParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$cloudServicesNetworkParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$cloudServicesNetworkParameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalEgressEndpoints" arg="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints">
                      <item type="object">
                        <prop type="string" name="category" arg="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].category" required="True"/>
                        <prop type="array<object>" name="endpoints" arg="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].endpoints" required="True">
                          <item type="object">
                            <prop type="string" name="domainName" arg="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].endpoints[].domainName" required="True"/>
                            <prop type="integer64" name="port" arg="$cloudServicesNetworkParameters.properties.additionalEgressEndpoints[].endpoints[].port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="enableDefaultEgressEndpoints" arg="$cloudServicesNetworkParameters.properties.enableDefaultEgressEndpoints">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$cloudServicesNetworkParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalEgressEndpoints">
                      <item type="object" cls="EgressEndpoint_read">
                        <prop type="string" name="category" required="True"/>
                        <prop type="array<object>" name="endpoints" required="True">
                          <item type="object">
                            <prop type="string" name="domainName" required="True"/>
                            <prop type="integer64" name="port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="enableDefaultEgressEndpoints">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<@EgressEndpoint_read>" name="enabledEgressEndpoints">
                      <item type="@EgressEndpoint_read"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="interfaceName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="virtualMachinesAssociatedIds">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-12-12-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/cloudservicesnetworks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2Nsb3VkU2VydmljZXNOZXR3b3Jrcy97Y2xvdWRTZXJ2aWNlc05ldHdvcmtOYW1lfQ==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudServicesNetworkName" options="cloud-services-network-name name n" required="True" idPart="name">
          <help short="The name of the cloud services network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="CloudServicesNetworkUpdateParameters">
        <arg type="object" var="$cloudServicesNetworkUpdateParameters.tags" options="tags" group="CloudServicesNetworkUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints" options="additional-egress-endpoints" group="Properties">
          <help short="The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint."/>
          <item type="object">
            <arg type="string" var="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].category" options="category" required="True">
              <help short="The descriptive category name of endpoints accessible by the AKS agent node. For example, azure-resource-management, API server, etc. The platform egress endpoints provided by default will use the category 'default'."/>
            </arg>
            <arg type="array<object>" var="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].endpoints" options="endpoints" required="True">
              <help short="The list of endpoint dependencies."/>
              <item type="object">
                <arg type="string" var="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].endpoints[].domainName" options="domain-name" required="True">
                  <help short="The domain name of the dependency."/>
                </arg>
                <arg type="integer64" var="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].endpoints[].port" options="port">
                  <help short="The port of this endpoint."/>
                  <format maximum="65535" minimum="1"/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$cloudServicesNetworkUpdateParameters.properties.enableDefaultEgressEndpoints" options="enable-default-egress-endpoints" group="Properties">
          <help short="The indicator of whether the platform default endpoints are allowed for the egress traffic."/>
          <default value="&quot;True&quot;"/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="CloudServicesNetworks_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{cloudServicesNetworkName}">
          <request method="patch">
            <path>
              <param type="string" name="cloudServicesNetworkName" arg="$Path.cloudServicesNetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="cloudServicesNetworkUpdateParameters" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalEgressEndpoints" arg="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints">
                      <item type="object">
                        <prop type="string" name="category" arg="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].category" required="True"/>
                        <prop type="array<object>" name="endpoints" arg="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].endpoints" required="True">
                          <item type="object">
                            <prop type="string" name="domainName" arg="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].endpoints[].domainName" required="True"/>
                            <prop type="integer64" name="port" arg="$cloudServicesNetworkUpdateParameters.properties.additionalEgressEndpoints[].endpoints[].port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="enableDefaultEgressEndpoints" arg="$cloudServicesNetworkUpdateParameters.properties.enableDefaultEgressEndpoints">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$cloudServicesNetworkUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="CloudServicesNetwork_read">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="additionalEgressEndpoints">
                      <item type="object" cls="EgressEndpoint_read">
                        <prop type="string" name="category" required="True"/>
                        <prop type="array<object>" name="endpoints" required="True">
                          <item type="object">
                            <prop type="string" name="domainName" required="True"/>
                            <prop type="integer64" name="port">
                              <format maximum="65535" minimum="1"/>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="enableDefaultEgressEndpoints">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<@EgressEndpoint_read>" name="enabledEgressEndpoints">
                      <item type="@EgressEndpoint_read"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="interfaceName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="virtualMachinesAssociatedIds">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@CloudServicesNetwork_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
