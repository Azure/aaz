<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.networkcloud/hybridaksclusters" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmtDbG91ZC9oeWJyaWRBa3NDbHVzdGVycw==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJz/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
  <commandGroup name="networkcloud hybridakscluster">
    <command name="list" version="2022-12-12-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.networkcloud/hybridaksclusters" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmtDbG91ZC9oeWJyaWRBa3NDbHVzdGVycw==/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/hybridaksclusters" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2h5YnJpZEFrc0NsdXN0ZXJz/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_HybridAksClusters_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_HybridAksClusters_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_HybridAksClusters_ListByResourceGroup" operationId="HybridAksClusters_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/hybridAksClusters/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="array<string>" name="associatedNetworkIds" required="True">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="cloudServicesNetworkId"/>
                        <prop readOnly="True" type="string" name="clusterId"/>
                        <prop type="integer64" name="controlPlaneCount" required="True">
                          <format minimum="1"/>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="controlPlaneNodes" identifiers="nodePoolName">
                          <item type="object" cls="NodeConfiguration_read">
                            <prop readOnly="True" type="string" name="agentPoolId"/>
                            <prop readOnly="True" type="string" name="agentPoolName"/>
                            <prop readOnly="True" type="integer64" name="cpuCores"/>
                            <prop readOnly="True" type="integer64" name="diskSizeGB"/>
                            <prop readOnly="True" type="integer64" name="memorySizeGB"/>
                            <prop readOnly="True" type="string" name="nodePoolName"/>
                            <prop readOnly="True" type="array<object>" name="nodes" identifiers="nodeName">
                              <item type="object">
                                <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                                <prop readOnly="True" type="string" name="imageId"/>
                                <prop readOnly="True" type="array<object>" name="networkAttachments" identifiers="networkAttachmentName">
                                  <item type="object">
                                    <prop type="string" name="attachedNetworkId" required="True"/>
                                    <prop type="string" name="defaultGateway">
                                      <enum>
                                        <item value="&quot;False&quot;"/>
                                        <item value="&quot;True&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="ipAllocationMethod" required="True">
                                      <enum>
                                        <item value="&quot;Disabled&quot;"/>
                                        <item value="&quot;Dynamic&quot;"/>
                                        <item value="&quot;Static&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="ipv4Address"/>
                                    <prop type="string" name="ipv6Address"/>
                                    <prop readOnly="True" type="string" name="macAddress"/>
                                    <prop type="string" name="networkAttachmentName">
                                      <format maxLength="15"/>
                                    </prop>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="nodeName"/>
                                <prop readOnly="True" type="string" name="powerState">
                                  <enum>
                                    <item value="&quot;Off&quot;"/>
                                    <item value="&quot;On&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop readOnly="True" type="integer64" name="vmCount"/>
                            <prop readOnly="True" type="string" name="vmSize"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="defaultCniNetworkId"/>
                        <prop readOnly="True" type="string" name="detailedStatus">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;Error&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                        <prop type="string" name="hybridAksProvisionedClusterId" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="volumes">
                          <item type="string"/>
                        </prop>
                        <prop type="integer64" name="workerCount" required="True"/>
                        <prop readOnly="True" type="array<@NodeConfiguration_read>" name="workerNodes" identifiers="nodePoolName">
                          <item type="@NodeConfiguration_read"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_HybridAksClusters_ListBySubscription" operationId="HybridAksClusters_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/hybridAksClusters">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/hybridAksClusters/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="array<string>" name="associatedNetworkIds" required="True">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="cloudServicesNetworkId"/>
                        <prop readOnly="True" type="string" name="clusterId"/>
                        <prop type="integer64" name="controlPlaneCount" required="True">
                          <format minimum="1"/>
                        </prop>
                        <prop readOnly="True" type="array<@NodeConfiguration_read>" name="controlPlaneNodes" identifiers="nodePoolName">
                          <item type="@NodeConfiguration_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="defaultCniNetworkId"/>
                        <prop readOnly="True" type="string" name="detailedStatus">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;Error&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                        <prop type="string" name="hybridAksProvisionedClusterId" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="volumes">
                          <item type="string"/>
                        </prop>
                        <prop type="integer64" name="workerCount" required="True"/>
                        <prop readOnly="True" type="array<@NodeConfiguration_read>" name="workerNodes" identifiers="nodePoolName">
                          <item type="@NodeConfiguration_read"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
