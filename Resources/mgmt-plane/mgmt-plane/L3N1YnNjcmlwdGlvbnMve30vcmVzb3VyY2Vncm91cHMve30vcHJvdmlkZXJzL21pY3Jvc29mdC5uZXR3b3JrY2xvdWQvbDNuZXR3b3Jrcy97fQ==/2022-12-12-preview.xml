<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/l3networks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2wzTmV0d29ya3Mve2wzTmV0d29ya05hbWV9/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
  <commandGroup name="networkcloud l3network">
    <command name="show" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/l3networks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2wzTmV0d29ya3Mve2wzTmV0d29ya05hbWV9/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.l3NetworkName" options="l3-network-name name n" required="True" idPart="name">
          <help short="The name of the L3 network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="L3Networks_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks/{l3NetworkName}">
          <request method="get">
            <path>
              <param type="string" name="l3NetworkName" arg="$Path.l3NetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/l3Networks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="hybridAksIpamEnabled">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hybridAksPluginType">
                      <default value="&quot;SRIOV&quot;"/>
                      <enum>
                        <item value="&quot;DPDK&quot;"/>
                        <item value="&quot;OSDevice&quot;"/>
                        <item value="&quot;SRIOV&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="interfaceName">
                      <format pattern="^[a-zA-Z0-9@._-]*$" maxLength="12"/>
                    </prop>
                    <prop type="string" name="ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="virtualMachinesAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="vlan" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-12-12-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/l3networks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2wzTmV0d29ya3Mve2wzTmV0d29ya05hbWV9/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.l3NetworkName" options="l3-network-name name n" required="True" idPart="name">
          <help short="The name of the L3 network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="L3Networks_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks/{l3NetworkName}">
          <request method="delete">
            <path>
              <param type="string" name="l3NetworkName" arg="$Path.l3NetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-12-12-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/l3networks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2wzTmV0d29ya3Mve2wzTmV0d29ya05hbWV9/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.l3NetworkName" options="l3-network-name name n" required="True" idPart="name">
          <help short="The name of the L3 network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="L3NetworkParameters">
        <arg type="object" var="$l3NetworkParameters.extendedLocation" options="extended-location" required="True" group="L3NetworkParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$l3NetworkParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$l3NetworkParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$l3NetworkParameters.location" options="location l" required="True" group="L3NetworkParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$l3NetworkParameters.tags" options="tags" group="L3NetworkParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$l3NetworkParameters.properties.hybridAksIpamEnabled" options="hybrid-aks-ipam-enabled" group="Properties">
          <help short="The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster."/>
          <default value="&quot;True&quot;"/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$l3NetworkParameters.properties.hybridAksPluginType" options="hybrid-aks-plugin-type" group="Properties">
          <help short="The network plugin type for Hybrid AKS."/>
          <default value="&quot;SRIOV&quot;"/>
          <enum>
            <item name="DPDK" value="&quot;DPDK&quot;"/>
            <item name="OSDevice" value="&quot;OSDevice&quot;"/>
            <item name="SRIOV" value="&quot;SRIOV&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$l3NetworkParameters.properties.interfaceName" options="interface-name" group="Properties">
          <help short="The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine."/>
          <format pattern="^[a-zA-Z0-9@._-]*$" maxLength="12"/>
        </arg>
        <arg type="string" var="$l3NetworkParameters.properties.ipAllocationType" options="ip-allocation-type" group="Properties">
          <help short="The type of the IP address allocation, defaulted to &quot;DualStack&quot;."/>
          <default value="&quot;DualStack&quot;"/>
          <enum>
            <item name="DualStack" value="&quot;DualStack&quot;"/>
            <item name="IPV4" value="&quot;IPV4&quot;"/>
            <item name="IPV6" value="&quot;IPV6&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$l3NetworkParameters.properties.ipv4ConnectedPrefix" options="ipv4-connected-prefix" group="Properties">
          <help short="The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type is IPV4 or DualStack."/>
        </arg>
        <arg type="string" var="$l3NetworkParameters.properties.ipv6ConnectedPrefix" options="ipv6-connected-prefix" group="Properties">
          <help short="The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type is IPV6 or DualStack."/>
        </arg>
        <arg type="string" var="$l3NetworkParameters.properties.l3IsolationDomainId" options="l3-isolation-domain-id" required="True" group="Properties">
          <help short="The resource ID of the Network Fabric l3IsolationDomain."/>
        </arg>
        <arg type="integer64" var="$l3NetworkParameters.properties.vlan" options="vlan" required="True" group="Properties">
          <help short="The VLAN from the l3IsolationDomain that is used for this network."/>
        </arg>
      </argGroup>
      <operation operationId="L3Networks_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks/{l3NetworkName}">
          <request method="put">
            <path>
              <param type="string" name="l3NetworkName" arg="$Path.l3NetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="l3NetworkParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$l3NetworkParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$l3NetworkParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$l3NetworkParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$l3NetworkParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="hybridAksIpamEnabled" arg="$l3NetworkParameters.properties.hybridAksIpamEnabled">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hybridAksPluginType" arg="$l3NetworkParameters.properties.hybridAksPluginType">
                      <default value="&quot;SRIOV&quot;"/>
                      <enum>
                        <item value="&quot;DPDK&quot;"/>
                        <item value="&quot;OSDevice&quot;"/>
                        <item value="&quot;SRIOV&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="interfaceName" arg="$l3NetworkParameters.properties.interfaceName">
                      <format pattern="^[a-zA-Z0-9@._-]*$" maxLength="12"/>
                    </prop>
                    <prop type="string" name="ipAllocationType" arg="$l3NetworkParameters.properties.ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix" arg="$l3NetworkParameters.properties.ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix" arg="$l3NetworkParameters.properties.ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" arg="$l3NetworkParameters.properties.l3IsolationDomainId" required="True"/>
                    <prop type="integer64" name="vlan" arg="$l3NetworkParameters.properties.vlan" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$l3NetworkParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/l3Networks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="hybridAksIpamEnabled">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hybridAksPluginType">
                      <default value="&quot;SRIOV&quot;"/>
                      <enum>
                        <item value="&quot;DPDK&quot;"/>
                        <item value="&quot;OSDevice&quot;"/>
                        <item value="&quot;SRIOV&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="interfaceName">
                      <format pattern="^[a-zA-Z0-9@._-]*$" maxLength="12"/>
                    </prop>
                    <prop type="string" name="ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="virtualMachinesAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="vlan" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-12-12-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/l3networks/{}" version="2022-12-12-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2wzTmV0d29ya3Mve2wzTmV0d29ya05hbWV9/V/MjAyMi0xMi0xMi1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.l3NetworkName" options="l3-network-name name n" required="True" idPart="name">
          <help short="The name of the L3 network."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="L3NetworkUpdateParameters">
        <arg type="object" var="$l3NetworkUpdateParameters.tags" options="tags" group="L3NetworkUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="L3Networks_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks/{l3NetworkName}">
          <request method="patch">
            <path>
              <param type="string" name="l3NetworkName" arg="$Path.l3NetworkName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-12-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="l3NetworkUpdateParameters" clientFlatten="True">
                  <prop type="object" name="tags" arg="$l3NetworkUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/l3Networks/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="array<string>" name="hybridAksClustersAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="hybridAksIpamEnabled">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hybridAksPluginType">
                      <default value="&quot;SRIOV&quot;"/>
                      <enum>
                        <item value="&quot;DPDK&quot;"/>
                        <item value="&quot;OSDevice&quot;"/>
                        <item value="&quot;SRIOV&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="interfaceName">
                      <format pattern="^[a-zA-Z0-9@._-]*$" maxLength="12"/>
                    </prop>
                    <prop type="string" name="ipAllocationType">
                      <default value="&quot;DualStack&quot;"/>
                      <enum>
                        <item value="&quot;DualStack&quot;"/>
                        <item value="&quot;IPV4&quot;"/>
                        <item value="&quot;IPV6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="ipv4ConnectedPrefix"/>
                    <prop type="string" name="ipv6ConnectedPrefix"/>
                    <prop type="string" name="l3IsolationDomainId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="virtualMachinesAssociatedIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="vlan" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
