<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/privatednszones/{}/{}/{}" version="2018-09-01" swagger="mgmt-plane/privatedns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9wcml2YXRlRG5zWm9uZXMve3ByaXZhdGVab25lTmFtZX0ve3JlY29yZFR5cGV9L3tyZWxhdGl2ZVJlY29yZFNldE5hbWV9/V/MjAxOC0wOS0wMQ=="/>
  <commandGroup name="network private-dns record-set">
    <command name="show" version="2018-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/privatednszones/{}/{}/{}" version="2018-09-01" swagger="mgmt-plane/privatedns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9wcml2YXRlRG5zWm9uZXMve3ByaXZhdGVab25lTmFtZX0ve3JlY29yZFR5cGV9L3tyZWxhdGl2ZVJlY29yZFNldE5hbWV9/V/MjAxOC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.privateZoneName" options="zone-name z" required="True" group="" idPart="name">
          <help short="Name of the Private DNS zone (without a terminating dot)."/>
        </arg>
        <arg type="string" var="$Path.recordType" options="record-type" required="True" idPart="child_type_1">
          <help short="The type of DNS record in this record set."/>
          <enum>
            <item name="A" value="&quot;A&quot;"/>
            <item name="AAAA" value="&quot;AAAA&quot;"/>
            <item name="CNAME" value="&quot;CNAME&quot;"/>
            <item name="MX" value="&quot;MX&quot;"/>
            <item name="PTR" value="&quot;PTR&quot;"/>
            <item name="SOA" value="&quot;SOA&quot;"/>
            <item name="SRV" value="&quot;SRV&quot;"/>
            <item name="TXT" value="&quot;TXT&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.relativeRecordSetName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the record set, relative to the name of the zone."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="RecordSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{relativeRecordSetName}">
          <request method="get">
            <path>
              <param type="string" name="privateZoneName" arg="$Path.privateZoneName" required="True"/>
              <param type="string" name="recordType" arg="$Path.recordType" required="True">
                <enum>
                  <item value="&quot;A&quot;"/>
                  <item value="&quot;AAAA&quot;"/>
                  <item value="&quot;CNAME&quot;"/>
                  <item value="&quot;MX&quot;"/>
                  <item value="&quot;PTR&quot;"/>
                  <item value="&quot;SOA&quot;"/>
                  <item value="&quot;SRV&quot;"/>
                  <item value="&quot;TXT&quot;"/>
                </enum>
              </param>
              <param type="string" name="relativeRecordSetName" arg="$Path.relativeRecordSetName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateDnsZones/{}/{}/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="aRecords">
                      <item type="object">
                        <prop type="string" name="ipv4Address"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="aaaaRecords">
                      <item type="object">
                        <prop type="string" name="ipv6Address"/>
                      </item>
                    </prop>
                    <prop type="object" name="cnameRecord">
                      <prop type="string" name="cname"/>
                    </prop>
                    <prop readOnly="True" type="string" name="fqdn"/>
                    <prop readOnly="True" type="boolean" name="isAutoRegistered"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="mxRecords">
                      <item type="object">
                        <prop type="string" name="exchange"/>
                        <prop type="integer32" name="preference"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="ptrRecords">
                      <item type="object">
                        <prop type="string" name="ptrdname"/>
                      </item>
                    </prop>
                    <prop type="object" name="soaRecord">
                      <prop type="string" name="email"/>
                      <prop type="integer64" name="expireTime"/>
                      <prop type="string" name="host"/>
                      <prop type="integer64" name="minimumTtl"/>
                      <prop type="integer64" name="refreshTime"/>
                      <prop type="integer64" name="retryTime"/>
                      <prop type="integer64" name="serialNumber"/>
                    </prop>
                    <prop type="array<object>" name="srvRecords">
                      <item type="object">
                        <prop type="integer32" name="port"/>
                        <prop type="integer32" name="priority"/>
                        <prop type="string" name="target"/>
                        <prop type="integer32" name="weight"/>
                      </item>
                    </prop>
                    <prop type="integer64" name="ttl"/>
                    <prop type="array<object>" name="txtRecords">
                      <item type="object">
                        <prop type="array<string>" name="value">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2018-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/privatednszones/{}/{}/{}" version="2018-09-01" swagger="mgmt-plane/privatedns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9wcml2YXRlRG5zWm9uZXMve3ByaXZhdGVab25lTmFtZX0ve3JlY29yZFR5cGV9L3tyZWxhdGl2ZVJlY29yZFNldE5hbWV9/V/MjAxOC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match" group="">
          <help short="ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes."/>
        </arg>
        <arg type="string" var="$Path.privateZoneName" options="zone-name z" required="True" group="" idPart="name">
          <help short="Name of the Private DNS zone (without a terminating dot)."/>
        </arg>
        <arg type="string" var="$Path.recordType" options="record-type" required="True" idPart="child_type_1">
          <help short="The type of DNS record in this record set. Record sets of type SOA cannot be deleted (they are deleted when the Private DNS zone is deleted)."/>
          <enum>
            <item name="A" value="&quot;A&quot;"/>
            <item name="AAAA" value="&quot;AAAA&quot;"/>
            <item name="CNAME" value="&quot;CNAME&quot;"/>
            <item name="MX" value="&quot;MX&quot;"/>
            <item name="PTR" value="&quot;PTR&quot;"/>
            <item name="SOA" value="&quot;SOA&quot;"/>
            <item name="SRV" value="&quot;SRV&quot;"/>
            <item name="TXT" value="&quot;TXT&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.relativeRecordSetName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the record set, relative to the name of the zone."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="RecordSets_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{relativeRecordSetName}">
          <request method="delete">
            <path>
              <param type="string" name="privateZoneName" arg="$Path.privateZoneName" required="True"/>
              <param type="string" name="recordType" arg="$Path.recordType" required="True">
                <enum>
                  <item value="&quot;A&quot;"/>
                  <item value="&quot;AAAA&quot;"/>
                  <item value="&quot;CNAME&quot;"/>
                  <item value="&quot;MX&quot;"/>
                  <item value="&quot;PTR&quot;"/>
                  <item value="&quot;SOA&quot;"/>
                  <item value="&quot;SRV&quot;"/>
                  <item value="&quot;TXT&quot;"/>
                </enum>
              </param>
              <param type="string" name="relativeRecordSetName" arg="$Path.relativeRecordSetName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
            </header>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2018-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/privatednszones/{}/{}/{}" version="2018-09-01" swagger="mgmt-plane/privatedns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9wcml2YXRlRG5zWm9uZXMve3ByaXZhdGVab25lTmFtZX0ve3JlY29yZFR5cGV9L3tyZWxhdGl2ZVJlY29yZFNldE5hbWV9/V/MjAxOC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match" hide="True" group="">
          <help short="The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match" group="">
          <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored."/>
          <default value="&quot;*&quot;"/>
        </arg>
        <arg type="string" var="$Path.privateZoneName" options="zone-name z" required="True" group="" idPart="name">
          <help short="Name of the Private DNS zone (without a terminating dot)."/>
        </arg>
        <arg type="string" var="$Path.recordType" options="record-type" required="True" idPart="child_type_1">
          <help short="The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the Private DNS zone is created)."/>
          <enum>
            <item name="A" value="&quot;A&quot;"/>
            <item name="AAAA" value="&quot;AAAA&quot;"/>
            <item name="CNAME" value="&quot;CNAME&quot;"/>
            <item name="MX" value="&quot;MX&quot;"/>
            <item name="PTR" value="&quot;PTR&quot;"/>
            <item name="SOA" value="&quot;SOA&quot;"/>
            <item name="SRV" value="&quot;SRV&quot;"/>
            <item name="TXT" value="&quot;TXT&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.relativeRecordSetName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the record set, relative to the name of the zone."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="object" var="$parameters.properties.metadata" options="metadata" group="">
          <help short="Metadata attached to the record set."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="integer64" var="$parameters.properties.ttl" options="ttl" group="">
          <help short="Record set TTL (time-to-live)."/>
          <default value="3600"/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.etag" options="etag" hide="True" group="Parameters">
          <help short="The ETag of the record set."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.aRecords" options="a-records" group="Properties">
          <help short="The list of A records in the record set."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.aRecords[].ipv4Address" options="ipv4-address">
              <help short="The IPv4 address of this A record."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.aaaaRecords" options="aaaa-records" group="Properties">
          <help short="The list of AAAA records in the record set."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.aaaaRecords[].ipv6Address" options="ipv6-address">
              <help short="The IPv6 address of this AAAA record."/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.cnameRecord" options="cname-record" group="Properties">
          <help short="The CNAME record in the record set."/>
          <arg type="string" var="$parameters.properties.cnameRecord.cname" options="cname">
            <help short="The canonical name for this CNAME record."/>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.mxRecords" options="mx-records" group="Properties">
          <help short="The list of MX records in the record set."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.mxRecords[].exchange" options="exchange">
              <help short="The domain name of the mail host for this MX record."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.mxRecords[].preference" options="preference">
              <help short="The preference value for this MX record."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.ptrRecords" options="ptr-records" group="Properties">
          <help short="The list of PTR records in the record set."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.ptrRecords[].ptrdname" options="ptrdname">
              <help short="The PTR target domain name for this PTR record."/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.soaRecord" options="soa-record" group="Properties">
          <help short="The SOA record in the record set."/>
          <arg type="string" var="$parameters.properties.soaRecord.email" options="email">
            <help short="The email contact for this SOA record."/>
          </arg>
          <arg type="integer64" var="$parameters.properties.soaRecord.expireTime" options="expire-time">
            <help short="The expire time for this SOA record."/>
          </arg>
          <arg type="string" var="$parameters.properties.soaRecord.host" options="host">
            <help short="The domain name of the authoritative name server for this SOA record."/>
          </arg>
          <arg type="integer64" var="$parameters.properties.soaRecord.minimumTtl" options="minimum-ttl">
            <help short="The minimum value for this SOA record. By convention this is used to determine the negative caching duration."/>
          </arg>
          <arg type="integer64" var="$parameters.properties.soaRecord.refreshTime" options="refresh-time">
            <help short="The refresh value for this SOA record."/>
          </arg>
          <arg type="integer64" var="$parameters.properties.soaRecord.retryTime" options="retry-time">
            <help short="The retry time for this SOA record."/>
          </arg>
          <arg type="integer64" var="$parameters.properties.soaRecord.serialNumber" options="serial-number">
            <help short="The serial number for this SOA record."/>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.srvRecords" options="srv-records" group="Properties">
          <help short="The list of SRV records in the record set."/>
          <item type="object">
            <arg type="integer32" var="$parameters.properties.srvRecords[].port" options="port">
              <help short="The port value for this SRV record."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.srvRecords[].priority" options="priority">
              <help short="The priority value for this SRV record."/>
            </arg>
            <arg type="string" var="$parameters.properties.srvRecords[].target" options="target">
              <help short="The target domain name for this SRV record."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.srvRecords[].weight" options="weight">
              <help short="The weight value for this SRV record."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.txtRecords" options="txt-records" group="Properties">
          <help short="The list of TXT records in the record set."/>
          <item type="object">
            <arg type="array<string>" var="$parameters.properties.txtRecords[].value" options="value">
              <help short="The text value of this TXT record."/>
              <item type="string"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="RecordSets_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{relativeRecordSetName}">
          <request method="put">
            <path>
              <param type="string" name="privateZoneName" arg="$Path.privateZoneName" required="True"/>
              <param type="string" name="recordType" arg="$Path.recordType" required="True">
                <enum>
                  <item value="&quot;A&quot;"/>
                  <item value="&quot;AAAA&quot;"/>
                  <item value="&quot;CNAME&quot;"/>
                  <item value="&quot;MX&quot;"/>
                  <item value="&quot;PTR&quot;"/>
                  <item value="&quot;SOA&quot;"/>
                  <item value="&quot;SRV&quot;"/>
                  <item value="&quot;TXT&quot;"/>
                </enum>
              </param>
              <param type="string" name="relativeRecordSetName" arg="$Path.relativeRecordSetName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="etag" arg="$parameters.etag"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="aRecords" arg="$parameters.properties.aRecords">
                      <item type="object">
                        <prop type="string" name="ipv4Address" arg="$parameters.properties.aRecords[].ipv4Address"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="aaaaRecords" arg="$parameters.properties.aaaaRecords">
                      <item type="object">
                        <prop type="string" name="ipv6Address" arg="$parameters.properties.aaaaRecords[].ipv6Address"/>
                      </item>
                    </prop>
                    <prop type="object" name="cnameRecord" arg="$parameters.properties.cnameRecord">
                      <prop type="string" name="cname" arg="$parameters.properties.cnameRecord.cname"/>
                    </prop>
                    <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="mxRecords" arg="$parameters.properties.mxRecords">
                      <item type="object">
                        <prop type="string" name="exchange" arg="$parameters.properties.mxRecords[].exchange"/>
                        <prop type="integer32" name="preference" arg="$parameters.properties.mxRecords[].preference"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="ptrRecords" arg="$parameters.properties.ptrRecords">
                      <item type="object">
                        <prop type="string" name="ptrdname" arg="$parameters.properties.ptrRecords[].ptrdname"/>
                      </item>
                    </prop>
                    <prop type="object" name="soaRecord" arg="$parameters.properties.soaRecord">
                      <prop type="string" name="email" arg="$parameters.properties.soaRecord.email"/>
                      <prop type="integer64" name="expireTime" arg="$parameters.properties.soaRecord.expireTime"/>
                      <prop type="string" name="host" arg="$parameters.properties.soaRecord.host"/>
                      <prop type="integer64" name="minimumTtl" arg="$parameters.properties.soaRecord.minimumTtl"/>
                      <prop type="integer64" name="refreshTime" arg="$parameters.properties.soaRecord.refreshTime"/>
                      <prop type="integer64" name="retryTime" arg="$parameters.properties.soaRecord.retryTime"/>
                      <prop type="integer64" name="serialNumber" arg="$parameters.properties.soaRecord.serialNumber"/>
                    </prop>
                    <prop type="array<object>" name="srvRecords" arg="$parameters.properties.srvRecords">
                      <item type="object">
                        <prop type="integer32" name="port" arg="$parameters.properties.srvRecords[].port"/>
                        <prop type="integer32" name="priority" arg="$parameters.properties.srvRecords[].priority"/>
                        <prop type="string" name="target" arg="$parameters.properties.srvRecords[].target"/>
                        <prop type="integer32" name="weight" arg="$parameters.properties.srvRecords[].weight"/>
                      </item>
                    </prop>
                    <prop type="integer64" name="ttl" arg="$parameters.properties.ttl"/>
                    <prop type="array<object>" name="txtRecords" arg="$parameters.properties.txtRecords">
                      <item type="object">
                        <prop type="array<string>" name="value" arg="$parameters.properties.txtRecords[].value">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateDnsZones/{}/{}/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="aRecords">
                      <item type="object">
                        <prop type="string" name="ipv4Address"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="aaaaRecords">
                      <item type="object">
                        <prop type="string" name="ipv6Address"/>
                      </item>
                    </prop>
                    <prop type="object" name="cnameRecord">
                      <prop type="string" name="cname"/>
                    </prop>
                    <prop readOnly="True" type="string" name="fqdn"/>
                    <prop readOnly="True" type="boolean" name="isAutoRegistered"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="mxRecords">
                      <item type="object">
                        <prop type="string" name="exchange"/>
                        <prop type="integer32" name="preference"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="ptrRecords">
                      <item type="object">
                        <prop type="string" name="ptrdname"/>
                      </item>
                    </prop>
                    <prop type="object" name="soaRecord">
                      <prop type="string" name="email"/>
                      <prop type="integer64" name="expireTime"/>
                      <prop type="string" name="host"/>
                      <prop type="integer64" name="minimumTtl"/>
                      <prop type="integer64" name="refreshTime"/>
                      <prop type="integer64" name="retryTime"/>
                      <prop type="integer64" name="serialNumber"/>
                    </prop>
                    <prop type="array<object>" name="srvRecords">
                      <item type="object">
                        <prop type="integer32" name="port"/>
                        <prop type="integer32" name="priority"/>
                        <prop type="string" name="target"/>
                        <prop type="integer32" name="weight"/>
                      </item>
                    </prop>
                    <prop type="integer64" name="ttl"/>
                    <prop type="array<object>" name="txtRecords">
                      <item type="object">
                        <prop type="array<string>" name="value">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/privatednszones/{}/{}/{}" version="2018-09-01" swagger="mgmt-plane/privatedns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9wcml2YXRlRG5zWm9uZXMve3ByaXZhdGVab25lTmFtZX0ve3JlY29yZFR5cGV9L3tyZWxhdGl2ZVJlY29yZFNldE5hbWV9/V/MjAxOC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match" group="">
          <help short="ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match" hide="True" group="">
          <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored."/>
        </arg>
        <arg type="string" var="$Path.privateZoneName" options="zone-name z" required="True" group="" idPart="name">
          <help short="Name of the Private DNS zone (without a terminating dot)."/>
        </arg>
        <arg type="string" var="$Path.recordType" options="record-type" required="True" idPart="child_type_1">
          <help short="The type of DNS record in this record set."/>
          <enum>
            <item name="A" value="&quot;A&quot;"/>
            <item name="AAAA" value="&quot;AAAA&quot;"/>
            <item name="CNAME" value="&quot;CNAME&quot;"/>
            <item name="MX" value="&quot;MX&quot;"/>
            <item name="PTR" value="&quot;PTR&quot;"/>
            <item name="SOA" value="&quot;SOA&quot;"/>
            <item name="SRV" value="&quot;SRV&quot;"/>
            <item name="TXT" value="&quot;TXT&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.relativeRecordSetName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the record set, relative to the name of the zone."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="object" var="$parameters.properties.metadata" options="metadata" group="">
          <help short="Metadata attached to the record set."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="string" var="$parameters.etag" options="etag" hide="True" group="Parameters">
          <help short="The ETag of the record set."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.aRecords" options="a-records" group="Properties">
          <help short="The list of A records in the record set."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.aRecords[].ipv4Address" options="ipv4-address">
              <help short="The IPv4 address of this A record."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.aaaaRecords" options="aaaa-records" group="Properties">
          <help short="The list of AAAA records in the record set."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.aaaaRecords[].ipv6Address" options="ipv6-address">
              <help short="The IPv6 address of this AAAA record."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.cnameRecord" options="cname-record" group="Properties">
          <help short="The CNAME record in the record set."/>
          <arg nullable="True" type="string" var="$parameters.properties.cnameRecord.cname" options="cname">
            <help short="The canonical name for this CNAME record."/>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.mxRecords" options="mx-records" group="Properties">
          <help short="The list of MX records in the record set."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.mxRecords[].exchange" options="exchange">
              <help short="The domain name of the mail host for this MX record."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.mxRecords[].preference" options="preference">
              <help short="The preference value for this MX record."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.ptrRecords" options="ptr-records" group="Properties">
          <help short="The list of PTR records in the record set."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.ptrRecords[].ptrdname" options="ptrdname">
              <help short="The PTR target domain name for this PTR record."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.soaRecord" options="soa-record" group="Properties">
          <help short="The SOA record in the record set."/>
          <arg nullable="True" type="string" var="$parameters.properties.soaRecord.email" options="email">
            <help short="The email contact for this SOA record."/>
          </arg>
          <arg nullable="True" type="integer64" var="$parameters.properties.soaRecord.expireTime" options="expire-time">
            <help short="The expire time for this SOA record."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.soaRecord.host" options="host">
            <help short="The domain name of the authoritative name server for this SOA record."/>
          </arg>
          <arg nullable="True" type="integer64" var="$parameters.properties.soaRecord.minimumTtl" options="minimum-ttl">
            <help short="The minimum value for this SOA record. By convention this is used to determine the negative caching duration."/>
          </arg>
          <arg nullable="True" type="integer64" var="$parameters.properties.soaRecord.refreshTime" options="refresh-time">
            <help short="The refresh value for this SOA record."/>
          </arg>
          <arg nullable="True" type="integer64" var="$parameters.properties.soaRecord.retryTime" options="retry-time">
            <help short="The retry time for this SOA record."/>
          </arg>
          <arg nullable="True" type="integer64" var="$parameters.properties.soaRecord.serialNumber" options="serial-number">
            <help short="The serial number for this SOA record."/>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.srvRecords" options="srv-records" group="Properties">
          <help short="The list of SRV records in the record set."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="integer32" var="$parameters.properties.srvRecords[].port" options="port">
              <help short="The port value for this SRV record."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.srvRecords[].priority" options="priority">
              <help short="The priority value for this SRV record."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.srvRecords[].target" options="target">
              <help short="The target domain name for this SRV record."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.srvRecords[].weight" options="weight">
              <help short="The weight value for this SRV record."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="integer64" var="$parameters.properties.ttl" options="ttl" hide="True" group="Properties">
          <help short="The TTL (time-to-live) of the records in the record set."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.txtRecords" options="txt-records" group="Properties">
          <help short="The list of TXT records in the record set."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$parameters.properties.txtRecords[].value" options="value">
              <help short="The text value of this TXT record."/>
              <item nullable="True" type="string"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="RecordSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{relativeRecordSetName}">
          <request method="get">
            <path>
              <param type="string" name="privateZoneName" arg="$Path.privateZoneName" required="True"/>
              <param type="string" name="recordType" arg="$Path.recordType" required="True">
                <enum>
                  <item value="&quot;A&quot;"/>
                  <item value="&quot;AAAA&quot;"/>
                  <item value="&quot;CNAME&quot;"/>
                  <item value="&quot;MX&quot;"/>
                  <item value="&quot;PTR&quot;"/>
                  <item value="&quot;SOA&quot;"/>
                  <item value="&quot;SRV&quot;"/>
                  <item value="&quot;TXT&quot;"/>
                </enum>
              </param>
              <param type="string" name="relativeRecordSetName" arg="$Path.relativeRecordSetName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="RecordSet_read">
                  <prop type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateDnsZones/{}/{}/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="aRecords">
                      <item type="object">
                        <prop type="string" name="ipv4Address"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="aaaaRecords">
                      <item type="object">
                        <prop type="string" name="ipv6Address"/>
                      </item>
                    </prop>
                    <prop type="object" name="cnameRecord">
                      <prop type="string" name="cname"/>
                    </prop>
                    <prop readOnly="True" type="string" name="fqdn"/>
                    <prop readOnly="True" type="boolean" name="isAutoRegistered"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="mxRecords">
                      <item type="object">
                        <prop type="string" name="exchange"/>
                        <prop type="integer32" name="preference"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="ptrRecords">
                      <item type="object">
                        <prop type="string" name="ptrdname"/>
                      </item>
                    </prop>
                    <prop type="object" name="soaRecord">
                      <prop type="string" name="email"/>
                      <prop type="integer64" name="expireTime"/>
                      <prop type="string" name="host"/>
                      <prop type="integer64" name="minimumTtl"/>
                      <prop type="integer64" name="refreshTime"/>
                      <prop type="integer64" name="retryTime"/>
                      <prop type="integer64" name="serialNumber"/>
                    </prop>
                    <prop type="array<object>" name="srvRecords">
                      <item type="object">
                        <prop type="integer32" name="port"/>
                        <prop type="integer32" name="priority"/>
                        <prop type="string" name="target"/>
                        <prop type="integer32" name="weight"/>
                      </item>
                    </prop>
                    <prop type="integer64" name="ttl"/>
                    <prop type="array<object>" name="txtRecords">
                      <item type="object">
                        <prop type="array<string>" name="value">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="string" name="etag" arg="$parameters.etag"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<object>" name="aRecords" arg="$parameters.properties.aRecords">
                  <item type="object">
                    <prop type="string" name="ipv4Address" arg="$parameters.properties.aRecords[].ipv4Address"/>
                  </item>
                </prop>
                <prop type="array<object>" name="aaaaRecords" arg="$parameters.properties.aaaaRecords">
                  <item type="object">
                    <prop type="string" name="ipv6Address" arg="$parameters.properties.aaaaRecords[].ipv6Address"/>
                  </item>
                </prop>
                <prop type="object" name="cnameRecord" arg="$parameters.properties.cnameRecord">
                  <prop type="string" name="cname" arg="$parameters.properties.cnameRecord.cname"/>
                </prop>
                <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
                <prop type="array<object>" name="mxRecords" arg="$parameters.properties.mxRecords">
                  <item type="object">
                    <prop type="string" name="exchange" arg="$parameters.properties.mxRecords[].exchange"/>
                    <prop type="integer32" name="preference" arg="$parameters.properties.mxRecords[].preference"/>
                  </item>
                </prop>
                <prop type="array<object>" name="ptrRecords" arg="$parameters.properties.ptrRecords">
                  <item type="object">
                    <prop type="string" name="ptrdname" arg="$parameters.properties.ptrRecords[].ptrdname"/>
                  </item>
                </prop>
                <prop type="object" name="soaRecord" arg="$parameters.properties.soaRecord">
                  <prop type="string" name="email" arg="$parameters.properties.soaRecord.email"/>
                  <prop type="integer64" name="expireTime" arg="$parameters.properties.soaRecord.expireTime"/>
                  <prop type="string" name="host" arg="$parameters.properties.soaRecord.host"/>
                  <prop type="integer64" name="minimumTtl" arg="$parameters.properties.soaRecord.minimumTtl"/>
                  <prop type="integer64" name="refreshTime" arg="$parameters.properties.soaRecord.refreshTime"/>
                  <prop type="integer64" name="retryTime" arg="$parameters.properties.soaRecord.retryTime"/>
                  <prop type="integer64" name="serialNumber" arg="$parameters.properties.soaRecord.serialNumber"/>
                </prop>
                <prop type="array<object>" name="srvRecords" arg="$parameters.properties.srvRecords">
                  <item type="object">
                    <prop type="integer32" name="port" arg="$parameters.properties.srvRecords[].port"/>
                    <prop type="integer32" name="priority" arg="$parameters.properties.srvRecords[].priority"/>
                    <prop type="string" name="target" arg="$parameters.properties.srvRecords[].target"/>
                    <prop type="integer32" name="weight" arg="$parameters.properties.srvRecords[].weight"/>
                  </item>
                </prop>
                <prop type="integer64" name="ttl" arg="$parameters.properties.ttl"/>
                <prop type="array<object>" name="txtRecords" arg="$parameters.properties.txtRecords">
                  <item type="object">
                    <prop type="array<string>" name="value" arg="$parameters.properties.txtRecords[].value">
                      <item type="string"/>
                    </prop>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="RecordSets_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{relativeRecordSetName}">
          <request method="put">
            <path>
              <param type="string" name="privateZoneName" arg="$Path.privateZoneName" required="True"/>
              <param type="string" name="recordType" arg="$Path.recordType" required="True">
                <enum>
                  <item value="&quot;A&quot;"/>
                  <item value="&quot;AAAA&quot;"/>
                  <item value="&quot;CNAME&quot;"/>
                  <item value="&quot;MX&quot;"/>
                  <item value="&quot;PTR&quot;"/>
                  <item value="&quot;SOA&quot;"/>
                  <item value="&quot;SRV&quot;"/>
                  <item value="&quot;TXT&quot;"/>
                </enum>
              </param>
              <param type="string" name="relativeRecordSetName" arg="$Path.relativeRecordSetName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@RecordSet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
