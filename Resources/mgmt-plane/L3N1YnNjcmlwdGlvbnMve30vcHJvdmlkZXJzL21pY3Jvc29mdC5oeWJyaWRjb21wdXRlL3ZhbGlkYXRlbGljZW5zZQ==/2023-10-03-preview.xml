<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.hybridcompute/validatelicense" version="2023-10-03-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkh5YnJpZENvbXB1dGUvdmFsaWRhdGVMaWNlbnNl/V/MjAyMy0xMC0wMy1wcmV2aWV3"/>
  <commandGroup name="connectedmachine license">
    <command name="validate" version="2023-10-03-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.hybridcompute/validatelicense" version="2023-10-03-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkh5YnJpZENvbXB1dGUvdmFsaWRhdGVMaWNlbnNl/V/MjAyMy0xMC0wMy1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.licenseDetails" options="license-details" group="Properties">
          <help short="Describes the properties of a License."/>
          <arg type="string" var="$parameters.properties.licenseDetails.edition" options="edition">
            <help short="Describes the edition of the license. The values are either Standard or Datacenter."/>
            <enum>
              <item name="Datacenter" value="&quot;Datacenter&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
          <arg type="integer32" var="$parameters.properties.licenseDetails.processors" options="processors">
            <help short="Describes the number of processors."/>
          </arg>
          <arg type="string" var="$parameters.properties.licenseDetails.state" options="state">
            <help short="Describes the state of the license."/>
            <enum>
              <item name="Activated" value="&quot;Activated&quot;"/>
              <item name="Deactivated" value="&quot;Deactivated&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.licenseDetails.target" options="target">
            <help short="Describes the license target server."/>
            <enum>
              <item name="Windows Server 2012" value="&quot;Windows Server 2012&quot;"/>
              <item name="Windows Server 2012 R2" value="&quot;Windows Server 2012 R2&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.licenseDetails.type" options="type">
            <help short="Describes the license core type (pCore or vCore)."/>
            <enum>
              <item name="pCore" value="&quot;pCore&quot;"/>
              <item name="vCore" value="&quot;vCore&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.licenseType" options="license-type" group="Properties">
          <help short="The type of the license resource."/>
          <enum>
            <item name="ESU" value="&quot;ESU&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.tenantId" options="tenant-id" group="Properties">
          <help short="Describes the tenant id."/>
        </arg>
      </argGroup>
      <operation operationId="Licenses_ValidateLicense">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/validateLicense">
          <request method="post">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-03-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="licenseDetails" arg="$parameters.properties.licenseDetails">
                      <prop type="string" name="edition" arg="$parameters.properties.licenseDetails.edition">
                        <enum>
                          <item value="&quot;Datacenter&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="processors" arg="$parameters.properties.licenseDetails.processors"/>
                      <prop type="string" name="state" arg="$parameters.properties.licenseDetails.state">
                        <enum>
                          <item value="&quot;Activated&quot;"/>
                          <item value="&quot;Deactivated&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="target" arg="$parameters.properties.licenseDetails.target">
                        <enum>
                          <item value="&quot;Windows Server 2012&quot;"/>
                          <item value="&quot;Windows Server 2012 R2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="type" arg="$parameters.properties.licenseDetails.type">
                        <enum>
                          <item value="&quot;pCore&quot;"/>
                          <item value="&quot;vCore&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType" arg="$parameters.properties.licenseType">
                      <enum>
                        <item value="&quot;ESU&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="tenantId" arg="$parameters.properties.tenantId"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/licenses/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="licenseDetails">
                      <prop readOnly="True" type="integer32" name="assignedLicenses"/>
                      <prop type="string" name="edition">
                        <enum>
                          <item value="&quot;Datacenter&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="immutableId"/>
                      <prop type="integer32" name="processors"/>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Activated&quot;"/>
                          <item value="&quot;Deactivated&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="target">
                        <enum>
                          <item value="&quot;Windows Server 2012&quot;"/>
                          <item value="&quot;Windows Server 2012 R2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;pCore&quot;"/>
                          <item value="&quot;vCore&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType">
                      <enum>
                        <item value="&quot;ESU&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="tenantId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
