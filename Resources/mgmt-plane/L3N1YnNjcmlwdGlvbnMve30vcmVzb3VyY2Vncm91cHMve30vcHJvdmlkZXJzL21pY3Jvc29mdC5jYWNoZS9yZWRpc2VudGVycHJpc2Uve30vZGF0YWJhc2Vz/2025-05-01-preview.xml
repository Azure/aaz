<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2Vz/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="redisenterprise database">
    <command name="list" version="2025-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2Vz/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the RedisEnterprise cluster."/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Databases_ListByCluster">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="accessKeysAuthentication">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="clientProtocol">
                          <enum>
                            <item value="&quot;Encrypted&quot;"/>
                            <item value="&quot;Plaintext&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="clusteringPolicy">
                          <enum>
                            <item value="&quot;EnterpriseCluster&quot;"/>
                            <item value="&quot;NoCluster&quot;"/>
                            <item value="&quot;OSSCluster&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deferUpgrade">
                          <enum>
                            <item value="&quot;Deferred&quot;"/>
                            <item value="&quot;NotDeferred&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="evictionPolicy">
                          <enum>
                            <item value="&quot;AllKeysLFU&quot;"/>
                            <item value="&quot;AllKeysLRU&quot;"/>
                            <item value="&quot;AllKeysRandom&quot;"/>
                            <item value="&quot;NoEviction&quot;"/>
                            <item value="&quot;VolatileLFU&quot;"/>
                            <item value="&quot;VolatileLRU&quot;"/>
                            <item value="&quot;VolatileRandom&quot;"/>
                            <item value="&quot;VolatileTTL&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="geoReplication">
                          <prop type="string" name="groupNickname"/>
                          <prop type="array<object>" name="linkedDatabases">
                            <item type="object">
                              <prop type="ResourceId" name="id"/>
                              <prop readOnly="True" type="string" name="state">
                                <enum>
                                  <item value="&quot;LinkFailed&quot;"/>
                                  <item value="&quot;Linked&quot;"/>
                                  <item value="&quot;Linking&quot;"/>
                                  <item value="&quot;UnlinkFailed&quot;"/>
                                  <item value="&quot;Unlinking&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="modules" identifiers="name">
                          <item type="object">
                            <prop type="string" name="args"/>
                            <prop type="string" name="name" required="True"/>
                            <prop readOnly="True" type="string" name="version"/>
                          </item>
                        </prop>
                        <prop type="object" name="persistence">
                          <prop type="boolean" name="aofEnabled"/>
                          <prop type="string" name="aofFrequency">
                            <enum>
                              <item value="&quot;1s&quot;"/>
                              <item value="&quot;always&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="rdbEnabled"/>
                          <prop type="string" name="rdbFrequency">
                            <enum>
                              <item value="&quot;12h&quot;"/>
                              <item value="&quot;1h&quot;"/>
                              <item value="&quot;6h&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="integer32" name="port"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="redisVersion"/>
                        <prop readOnly="True" type="string" name="resourceState">
                          <enum>
                            <item value="&quot;CreateFailed&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;DeleteFailed&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;DisableFailed&quot;"/>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Disabling&quot;"/>
                            <item value="&quot;EnableFailed&quot;"/>
                            <item value="&quot;Enabling&quot;"/>
                            <item value="&quot;Moving&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;Scaling&quot;"/>
                            <item value="&quot;ScalingFailed&quot;"/>
                            <item value="&quot;UpdateFailed&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
