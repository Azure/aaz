{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases", "version": "2025-05-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2Vz/V/MjAyNS0wNS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "redisenterprise database", "commands": [{"name": "list", "version": "2025-05-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases", "version": "2025-05-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2Vz/V/MjAyNS0wNS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the RedisEnterprise cluster."}, "format": {"pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Databases_ListByCluster", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-05-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "nextLink"}, {"type": "array<object>", "name": "value", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessKeysAuthentication", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "clientProtocol", "enum": {"items": [{"value": "Encrypted"}, {"value": "Plaintext"}]}}, {"type": "string", "name": "clusteringPolicy", "enum": {"items": [{"value": "EnterpriseCluster"}, {"value": "NoCluster"}, {"value": "OSSCluster"}]}}, {"type": "string", "name": "deferUpgrade", "enum": {"items": [{"value": "Deferred"}, {"value": "NotDeferred"}]}}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "AllKeysLFU"}, {"value": "AllKeysLRU"}, {"value": "AllKeysRandom"}, {"value": "NoEviction"}, {"value": "VolatileLFU"}, {"value": "VolatileLRU"}, {"value": "VolatileRandom"}, {"value": "VolatileTTL"}]}}, {"type": "object", "name": "geoReplication", "props": [{"type": "string", "name": "groupNickname"}, {"type": "array<object>", "name": "linkedDatabases", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "state", "enum": {"items": [{"value": "LinkFailed"}, {"value": "Linked"}, {"value": "Linking"}, {"value": "UnlinkFailed"}, {"value": "Unlinking"}]}}]}}]}, {"type": "array<object>", "name": "modules", "item": {"type": "object", "props": [{"type": "string", "name": "args"}, {"type": "string", "name": "name", "required": true}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "object", "name": "persistence", "props": [{"type": "boolean", "name": "aofEnabled"}, {"type": "string", "name": "aofFrequency", "enum": {"items": [{"value": "1s"}, {"value": "always"}]}}, {"type": "boolean", "name": "rdbEnabled"}, {"type": "string", "name": "rdbFrequency", "enum": {"items": [{"value": "12h"}, {"value": "1h"}, {"value": "6h"}]}}]}, {"type": "integer32", "name": "port"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"readOnly": true, "type": "string", "name": "redisVersion"}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleting"}, {"value": "DisableFailed"}, {"value": "Disabled"}, {"value": "Disabling"}, {"value": "EnableFailed"}, {"value": "Enabling"}, {"value": "Moving"}, {"value": "Running"}, {"value": "Scaling"}, {"value": "ScalingFailed"}, {"value": "UpdateFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "array", "ref": "$Instance.value", "clientFlatten": true, "nextLink": "$Instance.nextLink"}]}]}]}