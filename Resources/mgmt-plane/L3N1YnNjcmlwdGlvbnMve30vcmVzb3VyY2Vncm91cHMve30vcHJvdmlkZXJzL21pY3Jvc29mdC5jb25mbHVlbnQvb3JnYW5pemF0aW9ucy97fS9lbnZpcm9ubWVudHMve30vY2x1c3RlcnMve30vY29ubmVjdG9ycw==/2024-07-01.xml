<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}/connectors" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0vY29ubmVjdG9ycw==/V/MjAyNC0wNy0wMQ=="/>
  <commandGroup name="confluent organization environment cluster connector">
    <command name="list" version="2024-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}/connectors" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0vY29ubmVjdG9ycw==/V/MjAyNC0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterId" options="cluster-id" required="True" idPart="child_name_2">
          <help short="Confluent kafka or schema registry cluster id"/>
        </arg>
        <arg type="string" var="$Path.environmentId" options="environment-id" required="True" idPart="child_name_1">
          <help short="Confluent environment id"/>
        </arg>
        <arg type="string" var="$Path.organizationName" options="organization-name" required="True" idPart="name">
          <help short="Organization resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="integer32" var="$Query.pageSize" options="page-size">
          <help short="Pagination size"/>
        </arg>
        <arg type="string" var="$Query.pageToken" options="page-token">
          <help short="An opaque pagination token to fetch the next set of records"/>
        </arg>
      </argGroup>
      <operation operationId="Connector_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/connectors">
          <request method="get">
            <path>
              <param type="string" name="clusterId" arg="$Path.clusterId" required="True"/>
              <param type="string" name="environmentId" arg="$Path.environmentId" required="True"/>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="integer32" name="pageSize" arg="$Query.pageSize"/>
              <param type="string" name="pageToken" arg="$Query.pageToken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}/connectors/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="connectorBasicInfo">
                          <prop type="string" name="connectorClass">
                            <enum>
                              <item value="&quot;AZUREBLOBSINK&quot;"/>
                              <item value="&quot;AZUREBLOBSOURCE&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="connectorId"/>
                          <prop type="string" name="connectorName"/>
                          <prop type="string" name="connectorState">
                            <enum>
                              <item value="&quot;FAILED&quot;"/>
                              <item value="&quot;PAUSED&quot;"/>
                              <item value="&quot;PROVISIONING&quot;"/>
                              <item value="&quot;RUNNING&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="connectorType">
                            <enum>
                              <item value="&quot;SINK&quot;"/>
                              <item value="&quot;SOURCE&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="connectorServiceTypeInfo">
                          <prop type="string" name="connectorServiceType" required="True">
                            <enum>
                              <item value="&quot;AzureBlobStorageSinkConnector&quot;"/>
                              <item value="&quot;AzureBlobStorageSourceConnector&quot;"/>
                              <item value="&quot;AzureCosmosDBSinkConnector&quot;"/>
                              <item value="&quot;AzureCosmosDBSourceConnector&quot;"/>
                              <item value="&quot;AzureSynapseAnalyticsSinkConnector&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="connectorServiceType" value="AzureBlobStorageSinkConnector">
                            <prop type="string" name="storageAccountKey"/>
                            <prop type="string" name="storageAccountName"/>
                            <prop type="string" name="storageContainerName"/>
                          </discriminator>
                          <discriminator property="connectorServiceType" value="AzureBlobStorageSourceConnector">
                            <prop type="string" name="storageAccountKey" secret="True"/>
                            <prop type="string" name="storageAccountName"/>
                            <prop type="string" name="storageContainerName"/>
                          </discriminator>
                          <discriminator property="connectorServiceType" value="AzureCosmosDBSinkConnector">
                            <prop type="string" name="cosmosConnectionEndpoint"/>
                            <prop type="string" name="cosmosContainersTopicMapping"/>
                            <prop type="string" name="cosmosDatabaseName"/>
                            <prop type="string" name="cosmosIdStrategy"/>
                            <prop type="string" name="cosmosMasterKey"/>
                          </discriminator>
                          <discriminator property="connectorServiceType" value="AzureCosmosDBSourceConnector">
                            <prop type="string" name="cosmosConnectionEndpoint"/>
                            <prop type="string" name="cosmosContainersTopicMapping"/>
                            <prop type="string" name="cosmosDatabaseName"/>
                            <prop type="string" name="cosmosMasterKey"/>
                            <prop type="boolean" name="cosmosMessageKeyEnabled"/>
                            <prop type="string" name="cosmosMessageKeyField"/>
                          </discriminator>
                          <discriminator property="connectorServiceType" value="AzureSynapseAnalyticsSinkConnector">
                            <prop type="string" name="synapseSqlDatabaseName"/>
                            <prop type="string" name="synapseSqlPassword"/>
                            <prop type="string" name="synapseSqlServerName"/>
                            <prop type="string" name="synapseSqlUser"/>
                          </discriminator>
                        </prop>
                        <prop type="object" name="partnerConnectorInfo">
                          <prop type="string" name="partnerConnectorType" required="True">
                            <enum>
                              <item value="&quot;KafkaAzureBlobStorageSink&quot;"/>
                              <item value="&quot;KafkaAzureBlobStorageSource&quot;"/>
                              <item value="&quot;KafkaAzureCosmosDBSink&quot;"/>
                              <item value="&quot;KafkaAzureCosmosDBSource&quot;"/>
                              <item value="&quot;KafkaAzureSynapseAnalyticsSink&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="partnerConnectorType" value="KafkaAzureBlobStorageSink">
                            <prop type="string" name="apiKey"/>
                            <prop type="string" name="apiSecret"/>
                            <prop type="string" name="authType">
                              <enum>
                                <item value="&quot;KAFKA_API_KEY&quot;"/>
                                <item value="&quot;SERVICE_ACCOUNT&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="flushSize"/>
                            <prop type="string" name="inputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="maxTasks"/>
                            <prop type="string" name="outputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="serviceAccountId"/>
                            <prop type="string" name="timeInterval"/>
                            <prop type="array<string>" name="topics">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="topicsDir"/>
                          </discriminator>
                          <discriminator property="partnerConnectorType" value="KafkaAzureBlobStorageSource">
                            <prop type="string" name="apiKey"/>
                            <prop type="string" name="apiSecret" secret="True"/>
                            <prop type="string" name="authType">
                              <enum>
                                <item value="&quot;KAFKA_API_KEY&quot;"/>
                                <item value="&quot;SERVICE_ACCOUNT&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="inputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="maxTasks"/>
                            <prop type="string" name="outputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="serviceAccountId"/>
                            <prop type="string" name="topicRegex"/>
                            <prop type="string" name="topicsDir"/>
                          </discriminator>
                          <discriminator property="partnerConnectorType" value="KafkaAzureCosmosDBSink">
                            <prop type="string" name="apiKey"/>
                            <prop type="string" name="apiSecret"/>
                            <prop type="string" name="authType">
                              <enum>
                                <item value="&quot;KAFKA_API_KEY&quot;"/>
                                <item value="&quot;SERVICE_ACCOUNT&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="flushSize"/>
                            <prop type="string" name="inputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="maxTasks"/>
                            <prop type="string" name="outputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="serviceAccountId"/>
                            <prop type="string" name="timeInterval"/>
                            <prop type="array<string>" name="topics">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="topicsDir"/>
                          </discriminator>
                          <discriminator property="partnerConnectorType" value="KafkaAzureCosmosDBSource">
                            <prop type="string" name="apiKey"/>
                            <prop type="string" name="apiSecret" secret="True"/>
                            <prop type="string" name="authType">
                              <enum>
                                <item value="&quot;KAFKA_API_KEY&quot;"/>
                                <item value="&quot;SERVICE_ACCOUNT&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="inputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="maxTasks"/>
                            <prop type="string" name="outputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="serviceAccountId"/>
                            <prop type="string" name="topicRegex"/>
                            <prop type="string" name="topicsDir"/>
                          </discriminator>
                          <discriminator property="partnerConnectorType" value="KafkaAzureSynapseAnalyticsSink">
                            <prop type="string" name="apiKey"/>
                            <prop type="string" name="apiSecret"/>
                            <prop type="string" name="authType">
                              <enum>
                                <item value="&quot;KAFKA_API_KEY&quot;"/>
                                <item value="&quot;SERVICE_ACCOUNT&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="flushSize"/>
                            <prop type="string" name="inputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="maxTasks"/>
                            <prop type="string" name="outputFormat">
                              <enum>
                                <item value="&quot;AVRO&quot;"/>
                                <item value="&quot;BYTES&quot;"/>
                                <item value="&quot;JSON&quot;"/>
                                <item value="&quot;PROTOBUF&quot;"/>
                                <item value="&quot;STRING&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="serviceAccountId"/>
                            <prop type="string" name="timeInterval"/>
                            <prop type="array<string>" name="topics">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="topicsDir"/>
                          </discriminator>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
