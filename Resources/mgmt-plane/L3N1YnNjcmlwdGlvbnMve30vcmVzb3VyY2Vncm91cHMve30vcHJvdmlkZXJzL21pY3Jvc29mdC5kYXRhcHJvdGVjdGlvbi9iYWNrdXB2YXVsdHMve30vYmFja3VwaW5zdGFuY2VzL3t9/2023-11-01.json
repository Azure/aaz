{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "commandGroups": [{"name": "dataprotection backup-instance", "commands": [{"name": "show", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupInstanceName", "options": ["n", "name", "backup-instance-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the backup instance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}], "operations": [{"operationId": "BackupInstances_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "backupInstanceName", "arg": "$Path.backupInstanceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "currentProtectionState", "enum": {"items": [{"value": "BackupSchedulesSuspended"}, {"value": "ConfiguringProtection"}, {"value": "ConfiguringProtectionFailed"}, {"value": "Invalid"}, {"value": "NotProtected"}, {"value": "ProtectionConfigured"}, {"value": "ProtectionError"}, {"value": "ProtectionStopped"}, {"value": "RetentionSchedulesSuspended"}, {"value": "SoftDeleted"}, {"value": "SoftDeleting"}, {"value": "UpdatingProtection"}]}}, {"type": "object", "name": "dataSourceInfo", "required": true, "props": [{"type": "string", "name": "datasourceType"}, {"type": "string", "name": "objectType"}, {"type": "string", "name": "resourceID", "required": true}, {"type": "string", "name": "resourceLocation"}, {"type": "string", "name": "resourceName"}, {"type": "object", "name": "resourceProperties", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_read"}, {"type": "string", "name": "resourceType"}, {"type": "string", "name": "resourceUri"}]}, {"type": "object", "name": "dataSourceSetInfo", "props": [{"type": "string", "name": "datasourceType"}, {"type": "string", "name": "objectType"}, {"type": "string", "name": "resourceID", "required": true}, {"type": "string", "name": "resourceLocation"}, {"type": "string", "name": "resourceName"}, {"type": "@BaseResourceProperties_read", "name": "resourceProperties"}, {"type": "string", "name": "resourceType"}, {"type": "string", "name": "resourceUri"}]}, {"type": "object", "name": "datasourceAuthCredentials", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "SecretStoreBasedAuthCredentials"}]}}], "discriminators": [{"property": "objectType", "value": "SecretStoreBasedAuthCredentials", "props": [{"type": "object", "name": "secretStoreResource", "props": [{"type": "string", "name": "secretStoreType", "required": true, "enum": {"items": [{"value": "AzureKeyVault"}, {"value": "Invalid"}]}}, {"type": "string", "name": "uri"}, {"type": "string", "name": "value"}]}]}]}, {"type": "string", "name": "friendlyName"}, {"type": "object", "name": "identityDetails", "props": [{"type": "boolean", "name": "useSystemAssignedIdentity"}, {"type": "string", "name": "userAssignedIdentityArmUrl"}]}, {"type": "string", "name": "objectType", "required": true}, {"type": "object", "name": "policyInfo", "required": true, "props": [{"type": "string", "name": "policyId", "required": true}, {"type": "object", "name": "policyParameters", "props": [{"type": "array<object>", "name": "backupDatasourceParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "BlobBackupDatasourceParameters"}, {"value": "KubernetesClusterBackupDatasourceParameters"}]}}], "discriminators": [{"property": "objectType", "value": "BlobBackupDatasourceParameters", "props": [{"type": "array<string>", "name": "containersList", "required": true, "item": {"type": "string"}}]}, {"property": "objectType", "value": "KubernetesClusterBackupDatasourceParameters", "props": [{"type": "array<object>", "name": "backupHookReferences", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "namespace"}]}}, {"type": "array<string>", "name": "excludedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "excludedResourceTypes", "item": {"type": "string"}}, {"type": "boolean", "name": "includeClusterScopeResources", "required": true}, {"type": "array<string>", "name": "includedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "includedResourceTypes", "item": {"type": "string"}}, {"type": "array<string>", "name": "labelSelectors", "item": {"type": "string"}}, {"type": "boolean", "name": "snapshotVolumes", "required": true}]}]}}, {"type": "array<object>", "name": "dataStoreParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureOperationalStoreParameters"}]}}], "discriminators": [{"property": "objectType", "value": "AzureOperationalStoreParameters", "props": [{"type": "string", "name": "resourceGroupId"}]}]}}]}, {"readOnly": true, "type": "string", "name": "policyVersion"}]}, {"readOnly": true, "type": "@UserFacingError_read", "name": "protectionErrorDetails"}, {"type": "object", "name": "protectionStatus", "props": [{"type": "object", "name": "errorDetails", "props": [{"type": "string", "name": "code"}, {"type": "array<@UserFacingError_read>", "name": "details", "item": {"type": "@UserFacingError_read"}}, {"type": "object", "name": "innerError", "props": [{"type": "object", "name": "additionalInfo", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "code"}, {"type": "@InnerError_read", "name": "embeddedInnerError"}], "cls": "InnerError_read"}, {"type": "boolean", "name": "isRetryable"}, {"type": "boolean", "name": "isUserError"}, {"type": "string", "name": "message"}, {"type": "object", "name": "properties", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "recommendedAction", "item": {"type": "string"}}, {"type": "string", "name": "target"}], "cls": "UserFacingError_read"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "ConfiguringProtection"}, {"value": "ConfiguringProtectionFailed"}, {"value": "ProtectionConfigured"}, {"value": "ProtectionStopped"}, {"value": "SoftDeleted"}, {"value": "SoftDeleting"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "validationType", "enum": {"items": [{"value": "DeepValidation"}, {"value": "ShallowValidation"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupInstanceName", "options": ["n", "name", "backup-instance-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the backup instance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "BackupInstances_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "backupInstanceName", "arg": "$Path.backupInstanceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Azure-AsyncOperation"}, {"name": "Location"}, {"name": "Retry-After"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupInstanceName", "options": ["n", "name", "backup-instance-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the backup instance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}, {"name": "Parameters", "args": [{"type": "object", "var": "$parameters.tags", "options": ["tags"], "hide": true, "group": "Parameters", "help": {"short": "Proxy Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$parameters.properties.dataSourceInfo", "options": ["data-source-info"], "hide": true, "group": "Properties", "help": {"short": "Gets or sets the data source information."}, "args": [{"type": "string", "var": "$parameters.properties.dataSourceInfo.datasourceType", "options": ["datasource-type"], "help": {"short": "DatasourceType of the resource."}}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.objectType", "options": ["object-type"], "help": {"short": "Type of Datasource object, used to initialize the right inherited type"}}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.resourceID", "options": ["resource-id"], "required": true, "help": {"short": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."}}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.resourceLocation", "options": ["resource-location"], "help": {"short": "Location of datasource."}}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.resourceName", "options": ["resource-name"], "help": {"short": "Unique identifier of the resource in the context of parent."}}, {"type": "object", "var": "$parameters.properties.dataSourceInfo.resourceProperties", "options": ["resource-properties"], "help": {"short": "Properties specific to data source"}, "args": [{"type": "string", "var": "@BaseResourceProperties_create.objectType", "options": ["object-type"], "required": true, "help": {"short": "Type of the specific object - used for deserializing"}, "enum": {"items": [{"name": "DefaultResourceProperties", "value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_create"}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.resourceType", "options": ["resource-type"], "help": {"short": "Resource Type of Datasource."}}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.resourceUri", "options": ["resource-uri"], "help": {"short": "Uri of the resource."}}]}, {"type": "object", "var": "$parameters.properties.dataSourceSetInfo", "options": ["data-source-set-info"], "hide": true, "group": "Properties", "help": {"short": "Gets or sets the data source set information."}, "args": [{"type": "string", "var": "$parameters.properties.dataSourceSetInfo.datasourceType", "options": ["datasource-type"], "help": {"short": "DatasourceType of the resource."}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.objectType", "options": ["object-type"], "help": {"short": "Type of Datasource object, used to initialize the right inherited type"}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceID", "options": ["resource-id"], "required": true, "help": {"short": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceLocation", "options": ["resource-location"], "help": {"short": "Location of datasource."}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceName", "options": ["resource-name"], "help": {"short": "Unique identifier of the resource in the context of parent."}}, {"type": "@BaseResourceProperties_create", "var": "$parameters.properties.dataSourceSetInfo.resourceProperties", "options": ["resource-properties"], "help": {"short": "Properties specific to data source set"}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceType", "options": ["resource-type"], "help": {"short": "Resource Type of Datasource."}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceUri", "options": ["resource-uri"], "help": {"short": "Uri of the resource."}}]}, {"type": "object", "var": "$parameters.properties.datasourceAuthCredentials", "options": ["datasource-auth-credentials"], "hide": true, "group": "Properties", "help": {"short": "Credentials to use to authenticate with data source provider."}, "args": [{"type": "object", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials", "options": ["secret-store-based-auth-credentials"], "args": [{"type": "object", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource", "options": ["secret-store-resource"], "help": {"short": "Secret store resource"}, "args": [{"type": "string", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.secretStoreType", "options": ["secret-store-type"], "required": true, "help": {"short": "Gets or sets the type of secret store"}, "enum": {"items": [{"name": "AzureKeyVault", "value": "AzureKeyVault"}, {"name": "Invalid", "value": "Invalid"}]}}, {"type": "string", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.uri", "options": ["uri"], "help": {"short": "Uri to get to the resource"}}, {"type": "string", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.value", "options": ["value"], "help": {"short": "Gets or sets value stored in secret store resource"}}]}]}]}, {"type": "string", "var": "$parameters.properties.friendlyName", "options": ["friendly-name"], "hide": true, "group": "Properties", "help": {"short": "Gets or sets the Backup Instance friendly name."}}, {"type": "object", "var": "$parameters.properties.identityDetails", "options": ["identity-details"], "hide": true, "group": "Properties", "help": {"short": "Contains information of the Identity Details for the BI. If it is null, default will be considered as System Assigned."}, "args": [{"type": "boolean", "var": "$parameters.properties.identityDetails.useSystemAssignedIdentity", "options": ["use-system-assigned-identity"], "help": {"short": "Specifies if the BI is protected by System Identity."}}, {"type": "string", "var": "$parameters.properties.identityDetails.userAssignedIdentityArmUrl", "options": ["user-assigned-identity-arm-url"], "help": {"short": "ARM URL for User Assigned Identity."}}]}, {"type": "string", "var": "$parameters.properties.objectType", "options": ["object-type"], "hide": true, "group": "Properties", "help": {"short": "-"}}, {"type": "object", "var": "$parameters.properties.policyInfo", "options": ["policy-info"], "hide": true, "group": "Properties", "help": {"short": "Gets or sets the policy information."}, "args": [{"type": "string", "var": "$parameters.properties.policyInfo.policyId", "options": ["policy-id"], "required": true}, {"type": "object", "var": "$parameters.properties.policyInfo.policyParameters", "options": ["policy-parameters"], "help": {"short": "Policy parameters for the backup instance"}, "args": [{"type": "array<object>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList", "options": ["backup-datasource-parameters-list"], "help": {"short": "Gets or sets the Backup Data Source Parameters"}, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].BlobBackupDatasourceParameters", "options": ["blob-backup-datasource-parameters"], "args": [{"type": "array<string>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].BlobBackupDatasourceParameters.containersList", "options": ["containers-list"], "required": true, "help": {"short": "List of containers to be backed up during configuration of backup of blobs"}, "item": {"type": "string"}}]}, {"type": "object", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters", "options": ["kubernetes-cluster-backup-datasource-parameters"], "args": [{"type": "array<object>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.backupHookReferences", "options": ["backup-hook-references"], "help": {"short": "Gets or sets the backup hook references. This property sets the hook reference to be executed during backup."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.backupHookReferences[].name", "options": ["name"], "help": {"short": "Name of the resource"}}, {"type": "string", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.backupHookReferences[].namespace", "options": ["namespace"], "help": {"short": "Namespace in which the resource exists"}}]}}, {"type": "array<string>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.excludedNamespaces", "options": ["excluded-namespaces"], "help": {"short": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.excludedResourceTypes", "options": ["excluded-resource-types"], "help": {"short": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore."}, "item": {"type": "string"}}, {"type": "boolean", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.includeClusterScopeResources", "options": ["include-cluster-scope-resources"], "required": true, "help": {"short": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore."}}, {"type": "array<string>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.includedNamespaces", "options": ["included-namespaces"], "help": {"short": "Gets or sets the include namespaces property. This property sets the namespaces to be included during restore."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.includedResourceTypes", "options": ["included-resource-types"], "help": {"short": "Gets or sets the include resource types property. This property sets the resource types to be included during restore."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.labelSelectors", "options": ["label-selectors"], "help": {"short": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore."}, "item": {"type": "string"}}, {"type": "boolean", "var": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.snapshotVolumes", "options": ["snapshot-volumes"], "required": true, "help": {"short": "Gets or sets the volume snapshot property. This property if enabled will take volume snapshots during restore."}}]}]}}, {"type": "array<object>", "var": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList", "options": ["data-store-parameters-list"], "help": {"short": "Gets or sets the DataStore Parameters"}, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList[].AzureOperationalStoreParameters", "options": ["azure-operational-store-parameters"], "args": [{"type": "string", "var": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList[].AzureOperationalStoreParameters.resourceGroupId", "options": ["resource-group-id"], "help": {"short": "Gets or sets the Snapshot Resource Group Uri."}}]}, {"type": "string", "var": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList[].dataStoreType", "options": ["data-store-type"], "required": true, "help": {"short": "type of datastore; Operational/Vault/Archive"}, "enum": {"items": [{"name": "ArchiveStore", "value": "ArchiveStore"}, {"name": "OperationalStore", "value": "OperationalStore"}, {"name": "VaultStore", "value": "VaultStore"}]}}]}}]}]}, {"type": "string", "var": "$parameters.properties.validationType", "options": ["validation-type"], "hide": true, "group": "Properties", "help": {"short": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again."}, "enum": {"items": [{"name": "DeepValidation", "value": "DeepValidation"}, {"name": "ShallowValidation", "value": "ShallowValidation"}]}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "BackupInstances_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "backupInstanceName", "arg": "$Path.backupInstanceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "dataSourceInfo", "arg": "$parameters.properties.dataSourceInfo", "required": true, "props": [{"type": "string", "name": "datasourceType", "arg": "$parameters.properties.dataSourceInfo.datasourceType"}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.dataSourceInfo.objectType"}, {"type": "string", "name": "resourceID", "arg": "$parameters.properties.dataSourceInfo.resourceID", "required": true}, {"type": "string", "name": "resourceLocation", "arg": "$parameters.properties.dataSourceInfo.resourceLocation"}, {"type": "string", "name": "resourceName", "arg": "$parameters.properties.dataSourceInfo.resourceName"}, {"type": "object", "name": "resourceProperties", "arg": "$parameters.properties.dataSourceInfo.resourceProperties", "props": [{"type": "string", "name": "objectType", "arg": "@BaseResourceProperties_create.objectType", "required": true, "enum": {"items": [{"value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_create"}, {"type": "string", "name": "resourceType", "arg": "$parameters.properties.dataSourceInfo.resourceType"}, {"type": "string", "name": "resourceUri", "arg": "$parameters.properties.dataSourceInfo.resourceUri"}]}, {"type": "object", "name": "dataSourceSetInfo", "arg": "$parameters.properties.dataSourceSetInfo", "props": [{"type": "string", "name": "datasourceType", "arg": "$parameters.properties.dataSourceSetInfo.datasourceType"}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.dataSourceSetInfo.objectType"}, {"type": "string", "name": "resourceID", "arg": "$parameters.properties.dataSourceSetInfo.resourceID", "required": true}, {"type": "string", "name": "resourceLocation", "arg": "$parameters.properties.dataSourceSetInfo.resourceLocation"}, {"type": "string", "name": "resourceName", "arg": "$parameters.properties.dataSourceSetInfo.resourceName"}, {"type": "@BaseResourceProperties_create", "name": "resourceProperties", "arg": "$parameters.properties.dataSourceSetInfo.resourceProperties"}, {"type": "string", "name": "resourceType", "arg": "$parameters.properties.dataSourceSetInfo.resourceType"}, {"type": "string", "name": "resourceUri", "arg": "$parameters.properties.dataSourceSetInfo.resourceUri"}]}, {"type": "object", "name": "datasourceAuthCredentials", "arg": "$parameters.properties.datasourceAuthCredentials", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials", "value": "SecretStoreBasedAuthCredentials"}]}}], "discriminators": [{"property": "objectType", "value": "SecretStoreBasedAuthCredentials", "props": [{"type": "object", "name": "secretStoreResource", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource", "props": [{"type": "string", "name": "secretStoreType", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.secretStoreType", "required": true, "enum": {"items": [{"value": "AzureKeyVault"}, {"value": "Invalid"}]}}, {"type": "string", "name": "uri", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.uri"}, {"type": "string", "name": "value", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.value"}]}]}]}, {"type": "string", "name": "friendlyName", "arg": "$parameters.properties.friendlyName"}, {"type": "object", "name": "identityDetails", "arg": "$parameters.properties.identityDetails", "props": [{"type": "boolean", "name": "useSystemAssignedIdentity", "arg": "$parameters.properties.identityDetails.useSystemAssignedIdentity"}, {"type": "string", "name": "userAssignedIdentityArmUrl", "arg": "$parameters.properties.identityDetails.userAssignedIdentityArmUrl"}]}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.objectType", "required": true}, {"type": "object", "name": "policyInfo", "arg": "$parameters.properties.policyInfo", "required": true, "props": [{"type": "string", "name": "policyId", "arg": "$parameters.properties.policyInfo.policyId", "required": true}, {"type": "object", "name": "policyParameters", "arg": "$parameters.properties.policyInfo.policyParameters", "props": [{"type": "array<object>", "name": "backupDatasourceParametersList", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].BlobBackupDatasourceParameters", "value": "BlobBackupDatasourceParameters"}, {"arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters", "value": "KubernetesClusterBackupDatasourceParameters"}]}}], "discriminators": [{"property": "objectType", "value": "BlobBackupDatasourceParameters", "props": [{"type": "array<string>", "name": "containersList", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].BlobBackupDatasourceParameters.containersList", "required": true, "item": {"type": "string"}}]}, {"property": "objectType", "value": "KubernetesClusterBackupDatasourceParameters", "props": [{"type": "array<object>", "name": "backupHookReferences", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.backupHookReferences", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.backupHookReferences[].name"}, {"type": "string", "name": "namespace", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.backupHookReferences[].namespace"}]}}, {"type": "array<string>", "name": "excludedNamespaces", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.excludedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "excludedResourceTypes", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.excludedResourceTypes", "item": {"type": "string"}}, {"type": "boolean", "name": "includeClusterScopeResources", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.includeClusterScopeResources", "required": true}, {"type": "array<string>", "name": "includedNamespaces", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.includedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "includedResourceTypes", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.includedResourceTypes", "item": {"type": "string"}}, {"type": "array<string>", "name": "labelSelectors", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.labelSelectors", "item": {"type": "string"}}, {"type": "boolean", "name": "snapshotVolumes", "arg": "$parameters.properties.policyInfo.policyParameters.backupDatasourceParametersList[].KubernetesClusterBackupDatasourceParameters.snapshotVolumes", "required": true}]}]}}, {"type": "array<object>", "name": "dataStoreParametersList", "arg": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "dataStoreType", "arg": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList[].dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList[].AzureOperationalStoreParameters", "value": "AzureOperationalStoreParameters"}]}}], "discriminators": [{"property": "objectType", "value": "AzureOperationalStoreParameters", "props": [{"type": "string", "name": "resourceGroupId", "arg": "$parameters.properties.policyInfo.policyParameters.dataStoreParametersList[].AzureOperationalStoreParameters.resourceGroupId"}]}]}}]}]}, {"type": "string", "name": "validationType", "arg": "$parameters.properties.validationType", "enum": {"items": [{"value": "DeepValidation"}, {"value": "ShallowValidation"}]}}]}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "currentProtectionState", "enum": {"items": [{"value": "BackupSchedulesSuspended"}, {"value": "ConfiguringProtection"}, {"value": "ConfiguringProtectionFailed"}, {"value": "Invalid"}, {"value": "NotProtected"}, {"value": "ProtectionConfigured"}, {"value": "ProtectionError"}, {"value": "ProtectionStopped"}, {"value": "RetentionSchedulesSuspended"}, {"value": "SoftDeleted"}, {"value": "SoftDeleting"}, {"value": "UpdatingProtection"}]}}, {"type": "object", "name": "dataSourceInfo", "required": true, "props": [{"type": "string", "name": "datasourceType"}, {"type": "string", "name": "objectType"}, {"type": "string", "name": "resourceID", "required": true}, {"type": "string", "name": "resourceLocation"}, {"type": "string", "name": "resourceName"}, {"type": "object", "name": "resourceProperties", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_read"}, {"type": "string", "name": "resourceType"}, {"type": "string", "name": "resourceUri"}]}, {"type": "object", "name": "dataSourceSetInfo", "props": [{"type": "string", "name": "datasourceType"}, {"type": "string", "name": "objectType"}, {"type": "string", "name": "resourceID", "required": true}, {"type": "string", "name": "resourceLocation"}, {"type": "string", "name": "resourceName"}, {"type": "@BaseResourceProperties_read", "name": "resourceProperties"}, {"type": "string", "name": "resourceType"}, {"type": "string", "name": "resourceUri"}]}, {"type": "object", "name": "datasourceAuthCredentials", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "SecretStoreBasedAuthCredentials"}]}}], "discriminators": [{"property": "objectType", "value": "SecretStoreBasedAuthCredentials", "props": [{"type": "object", "name": "secretStoreResource", "props": [{"type": "string", "name": "secretStoreType", "required": true, "enum": {"items": [{"value": "AzureKeyVault"}, {"value": "Invalid"}]}}, {"type": "string", "name": "uri"}, {"type": "string", "name": "value"}]}]}]}, {"type": "string", "name": "friendlyName"}, {"type": "object", "name": "identityDetails", "props": [{"type": "boolean", "name": "useSystemAssignedIdentity"}, {"type": "string", "name": "userAssignedIdentityArmUrl"}]}, {"type": "string", "name": "objectType", "required": true}, {"type": "object", "name": "policyInfo", "required": true, "props": [{"type": "string", "name": "policyId", "required": true}, {"type": "object", "name": "policyParameters", "props": [{"type": "array<object>", "name": "backupDatasourceParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "BlobBackupDatasourceParameters"}, {"value": "KubernetesClusterBackupDatasourceParameters"}]}}], "discriminators": [{"property": "objectType", "value": "BlobBackupDatasourceParameters", "props": [{"type": "array<string>", "name": "containersList", "required": true, "item": {"type": "string"}}]}, {"property": "objectType", "value": "KubernetesClusterBackupDatasourceParameters", "props": [{"type": "array<object>", "name": "backupHookReferences", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "namespace"}]}}, {"type": "array<string>", "name": "excludedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "excludedResourceTypes", "item": {"type": "string"}}, {"type": "boolean", "name": "includeClusterScopeResources", "required": true}, {"type": "array<string>", "name": "includedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "includedResourceTypes", "item": {"type": "string"}}, {"type": "array<string>", "name": "labelSelectors", "item": {"type": "string"}}, {"type": "boolean", "name": "snapshotVolumes", "required": true}]}]}}, {"type": "array<object>", "name": "dataStoreParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureOperationalStoreParameters"}]}}], "discriminators": [{"property": "objectType", "value": "AzureOperationalStoreParameters", "props": [{"type": "string", "name": "resourceGroupId"}]}]}}]}, {"readOnly": true, "type": "string", "name": "policyVersion"}]}, {"readOnly": true, "type": "@UserFacingError_read", "name": "protectionErrorDetails"}, {"type": "object", "name": "protectionStatus", "props": [{"type": "object", "name": "errorDetails", "props": [{"type": "string", "name": "code"}, {"type": "array<@UserFacingError_read>", "name": "details", "item": {"type": "@UserFacingError_read"}}, {"type": "object", "name": "innerError", "props": [{"type": "object", "name": "additionalInfo", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "code"}, {"type": "@InnerError_read", "name": "embeddedInnerError"}], "cls": "InnerError_read"}, {"type": "boolean", "name": "isRetryable"}, {"type": "boolean", "name": "isUserError"}, {"type": "string", "name": "message"}, {"type": "object", "name": "properties", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "recommendedAction", "item": {"type": "string"}}, {"type": "string", "name": "target"}], "cls": "UserFacingError_read"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "ConfiguringProtection"}, {"value": "ConfiguringProtectionFailed"}, {"value": "ProtectionConfigured"}, {"value": "ProtectionStopped"}, {"value": "SoftDeleted"}, {"value": "SoftDeleting"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "validationType", "enum": {"items": [{"value": "DeepValidation"}, {"value": "ShallowValidation"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"statusCode": [202], "header": {"items": [{"name": "Azure-AsyncOperation"}, {"name": "Location"}]}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupInstanceName", "options": ["n", "name", "backup-instance-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the backup instance."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Proxy Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$parameters.properties.dataSourceInfo", "options": ["data-source-info"], "group": "Properties", "help": {"short": "Gets or sets the data source information."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceInfo.datasourceType", "options": ["datasource-type"], "help": {"short": "DatasourceType of the resource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceInfo.objectType", "options": ["object-type"], "help": {"short": "Type of Datasource object, used to initialize the right inherited type"}}, {"type": "string", "var": "$parameters.properties.dataSourceInfo.resourceID", "options": ["resource-id"], "help": {"short": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceInfo.resourceLocation", "options": ["resource-location"], "help": {"short": "Location of datasource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceInfo.resourceName", "options": ["resource-name"], "help": {"short": "Unique identifier of the resource in the context of parent."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.dataSourceInfo.resourceProperties", "options": ["resource-properties"], "help": {"short": "Properties specific to data source"}, "args": [{"type": "string", "var": "@BaseResourceProperties_update.objectType", "options": ["object-type"], "help": {"short": "Type of the specific object - used for deserializing"}, "enum": {"items": [{"name": "DefaultResourceProperties", "value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_update"}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceInfo.resourceType", "options": ["resource-type"], "help": {"short": "Resource Type of Datasource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceInfo.resourceUri", "options": ["resource-uri"], "help": {"short": "Uri of the resource."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.dataSourceSetInfo", "options": ["data-source-set-info"], "group": "Properties", "help": {"short": "Gets or sets the data source set information."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceSetInfo.datasourceType", "options": ["datasource-type"], "help": {"short": "DatasourceType of the resource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceSetInfo.objectType", "options": ["object-type"], "help": {"short": "Type of Datasource object, used to initialize the right inherited type"}}, {"type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceID", "options": ["resource-id"], "help": {"short": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceLocation", "options": ["resource-location"], "help": {"short": "Location of datasource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceName", "options": ["resource-name"], "help": {"short": "Unique identifier of the resource in the context of parent."}}, {"nullable": true, "type": "@BaseResourceProperties_update", "var": "$parameters.properties.dataSourceSetInfo.resourceProperties", "options": ["resource-properties"], "help": {"short": "Properties specific to data source set"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceType", "options": ["resource-type"], "help": {"short": "Resource Type of Datasource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.dataSourceSetInfo.resourceUri", "options": ["resource-uri"], "help": {"short": "Uri of the resource."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.datasourceAuthCredentials", "options": ["datasource-auth-creds", "datasource-auth-credentials"], "group": "Properties", "help": {"short": "Credentials to use to authenticate with data source provider."}, "args": [{"type": "object", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials", "options": ["secret-store-based-auth-credentials"], "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource", "options": ["secret-store-resource"], "help": {"short": "Secret store resource"}, "args": [{"type": "string", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.secretStoreType", "options": ["secret-store-type"], "help": {"short": "Gets or sets the type of secret store"}, "enum": {"items": [{"name": "AzureKeyVault", "value": "AzureKeyVault"}, {"name": "Invalid", "value": "Invalid"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.uri", "options": ["uri"], "help": {"short": "Uri to get to the resource"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.value", "options": ["value"], "help": {"short": "Gets or sets value stored in secret store resource"}}]}]}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.friendlyName", "options": ["friendly-name"], "group": "Properties", "help": {"short": "Gets or sets the Backup Instance friendly name."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.identityDetails", "options": ["identity-details"], "group": "Properties", "help": {"short": "Contains information of the Identity Details for the BI. If it is null, default will be considered as System Assigned."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.identityDetails.useSystemAssignedIdentity", "options": ["use-system-assigned-identity"], "help": {"short": "Specifies if the BI is protected by System Identity."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.identityDetails.userAssignedIdentityArmUrl", "options": ["user-assigned-identity-arm-url"], "help": {"short": "ARM URL for User Assigned Identity."}}]}, {"type": "string", "var": "$parameters.properties.objectType", "options": ["object-type"], "group": "Properties", "help": {"short": "Type of Backup or Restore Instance for request body."}}, {"type": "object", "var": "$parameters.properties.policyInfo", "options": ["policy-info"], "group": "Properties", "help": {"short": "Gets or sets the policy information."}, "args": [{"type": "string", "var": "$parameters.properties.policyInfo.policyId", "options": ["policy-id"]}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.validationType", "options": ["validation-type"], "group": "Properties", "help": {"short": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again."}, "enum": {"items": [{"name": "DeepValidation", "value": "DeepValidation"}, {"name": "ShallowValidation", "value": "ShallowValidation"}]}}]}], "operations": [{"operationId": "BackupInstances_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "backupInstanceName", "arg": "$Path.backupInstanceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "currentProtectionState", "enum": {"items": [{"value": "BackupSchedulesSuspended"}, {"value": "ConfiguringProtection"}, {"value": "ConfiguringProtectionFailed"}, {"value": "Invalid"}, {"value": "NotProtected"}, {"value": "ProtectionConfigured"}, {"value": "ProtectionError"}, {"value": "ProtectionStopped"}, {"value": "RetentionSchedulesSuspended"}, {"value": "SoftDeleted"}, {"value": "SoftDeleting"}, {"value": "UpdatingProtection"}]}}, {"type": "object", "name": "dataSourceInfo", "required": true, "props": [{"type": "string", "name": "datasourceType"}, {"type": "string", "name": "objectType"}, {"type": "string", "name": "resourceID", "required": true}, {"type": "string", "name": "resourceLocation"}, {"type": "string", "name": "resourceName"}, {"type": "object", "name": "resourceProperties", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_read"}, {"type": "string", "name": "resourceType"}, {"type": "string", "name": "resourceUri"}]}, {"type": "object", "name": "dataSourceSetInfo", "props": [{"type": "string", "name": "datasourceType"}, {"type": "string", "name": "objectType"}, {"type": "string", "name": "resourceID", "required": true}, {"type": "string", "name": "resourceLocation"}, {"type": "string", "name": "resourceName"}, {"type": "@BaseResourceProperties_read", "name": "resourceProperties"}, {"type": "string", "name": "resourceType"}, {"type": "string", "name": "resourceUri"}]}, {"type": "object", "name": "datasourceAuthCredentials", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "SecretStoreBasedAuthCredentials"}]}}], "discriminators": [{"property": "objectType", "value": "SecretStoreBasedAuthCredentials", "props": [{"type": "object", "name": "secretStoreResource", "props": [{"type": "string", "name": "secretStoreType", "required": true, "enum": {"items": [{"value": "AzureKeyVault"}, {"value": "Invalid"}]}}, {"type": "string", "name": "uri"}, {"type": "string", "name": "value"}]}]}]}, {"type": "string", "name": "friendlyName"}, {"type": "object", "name": "identityDetails", "props": [{"type": "boolean", "name": "useSystemAssignedIdentity"}, {"type": "string", "name": "userAssignedIdentityArmUrl"}]}, {"type": "string", "name": "objectType", "required": true}, {"type": "object", "name": "policyInfo", "required": true, "props": [{"type": "string", "name": "policyId", "required": true}, {"type": "object", "name": "policyParameters", "props": [{"type": "array<object>", "name": "backupDatasourceParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "BlobBackupDatasourceParameters"}, {"value": "KubernetesClusterBackupDatasourceParameters"}]}}], "discriminators": [{"property": "objectType", "value": "BlobBackupDatasourceParameters", "props": [{"type": "array<string>", "name": "containersList", "required": true, "item": {"type": "string"}}]}, {"property": "objectType", "value": "KubernetesClusterBackupDatasourceParameters", "props": [{"type": "array<object>", "name": "backupHookReferences", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "namespace"}]}}, {"type": "array<string>", "name": "excludedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "excludedResourceTypes", "item": {"type": "string"}}, {"type": "boolean", "name": "includeClusterScopeResources", "required": true}, {"type": "array<string>", "name": "includedNamespaces", "item": {"type": "string"}}, {"type": "array<string>", "name": "includedResourceTypes", "item": {"type": "string"}}, {"type": "array<string>", "name": "labelSelectors", "item": {"type": "string"}}, {"type": "boolean", "name": "snapshotVolumes", "required": true}]}]}}, {"type": "array<object>", "name": "dataStoreParametersList", "item": {"type": "object", "props": [{"type": "string", "name": "dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureOperationalStoreParameters"}]}}], "discriminators": [{"property": "objectType", "value": "AzureOperationalStoreParameters", "props": [{"type": "string", "name": "resourceGroupId"}]}]}}]}, {"readOnly": true, "type": "string", "name": "policyVersion"}]}, {"readOnly": true, "type": "@UserFacingError_read", "name": "protectionErrorDetails"}, {"type": "object", "name": "protectionStatus", "props": [{"type": "object", "name": "errorDetails", "props": [{"type": "string", "name": "code"}, {"type": "array<@UserFacingError_read>", "name": "details", "item": {"type": "@UserFacingError_read"}}, {"type": "object", "name": "innerError", "props": [{"type": "object", "name": "additionalInfo", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "code"}, {"type": "@InnerError_read", "name": "embeddedInnerError"}], "cls": "InnerError_read"}, {"type": "boolean", "name": "isRetryable"}, {"type": "boolean", "name": "isUserError"}, {"type": "string", "name": "message"}, {"type": "object", "name": "properties", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "recommendedAction", "item": {"type": "string"}}, {"type": "string", "name": "target"}], "cls": "UserFacingError_read"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "ConfiguringProtection"}, {"value": "ConfiguringProtectionFailed"}, {"value": "ProtectionConfigured"}, {"value": "ProtectionStopped"}, {"value": "SoftDeleted"}, {"value": "SoftDeleting"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "validationType", "enum": {"items": [{"value": "DeepValidation"}, {"value": "ShallowValidation"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "BackupInstanceResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "dataSourceInfo", "arg": "$parameters.properties.dataSourceInfo", "required": true, "props": [{"type": "string", "name": "datasourceType", "arg": "$parameters.properties.dataSourceInfo.datasourceType"}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.dataSourceInfo.objectType"}, {"type": "string", "name": "resourceID", "arg": "$parameters.properties.dataSourceInfo.resourceID", "required": true}, {"type": "string", "name": "resourceLocation", "arg": "$parameters.properties.dataSourceInfo.resourceLocation"}, {"type": "string", "name": "resourceName", "arg": "$parameters.properties.dataSourceInfo.resourceName"}, {"type": "object", "name": "resourceProperties", "arg": "$parameters.properties.dataSourceInfo.resourceProperties", "props": [{"type": "string", "name": "objectType", "arg": "@BaseResourceProperties_update.objectType", "required": true, "enum": {"items": [{"value": "DefaultResourceProperties"}]}}], "cls": "BaseResourceProperties_update"}, {"type": "string", "name": "resourceType", "arg": "$parameters.properties.dataSourceInfo.resourceType"}, {"type": "string", "name": "resourceUri", "arg": "$parameters.properties.dataSourceInfo.resourceUri"}]}, {"type": "object", "name": "dataSourceSetInfo", "arg": "$parameters.properties.dataSourceSetInfo", "props": [{"type": "string", "name": "datasourceType", "arg": "$parameters.properties.dataSourceSetInfo.datasourceType"}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.dataSourceSetInfo.objectType"}, {"type": "string", "name": "resourceID", "arg": "$parameters.properties.dataSourceSetInfo.resourceID", "required": true}, {"type": "string", "name": "resourceLocation", "arg": "$parameters.properties.dataSourceSetInfo.resourceLocation"}, {"type": "string", "name": "resourceName", "arg": "$parameters.properties.dataSourceSetInfo.resourceName"}, {"type": "@BaseResourceProperties_update", "name": "resourceProperties", "arg": "$parameters.properties.dataSourceSetInfo.resourceProperties"}, {"type": "string", "name": "resourceType", "arg": "$parameters.properties.dataSourceSetInfo.resourceType"}, {"type": "string", "name": "resourceUri", "arg": "$parameters.properties.dataSourceSetInfo.resourceUri"}]}, {"type": "object", "name": "datasourceAuthCredentials", "arg": "$parameters.properties.datasourceAuthCredentials", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials", "value": "SecretStoreBasedAuthCredentials"}]}}], "discriminators": [{"property": "objectType", "value": "SecretStoreBasedAuthCredentials", "props": [{"type": "object", "name": "secretStoreResource", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource", "props": [{"type": "string", "name": "secretStoreType", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.secretStoreType", "required": true, "enum": {"items": [{"value": "AzureKeyVault"}, {"value": "Invalid"}]}}, {"type": "string", "name": "uri", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.uri"}, {"type": "string", "name": "value", "arg": "$parameters.properties.datasourceAuthCredentials.SecretStoreBasedAuthCredentials.secretStoreResource.value"}]}]}]}, {"type": "string", "name": "friendlyName", "arg": "$parameters.properties.friendlyName"}, {"type": "object", "name": "identityDetails", "arg": "$parameters.properties.identityDetails", "props": [{"type": "boolean", "name": "useSystemAssignedIdentity", "arg": "$parameters.properties.identityDetails.useSystemAssignedIdentity"}, {"type": "string", "name": "userAssignedIdentityArmUrl", "arg": "$parameters.properties.identityDetails.userAssignedIdentityArmUrl"}]}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.objectType", "required": true}, {"type": "object", "name": "policyInfo", "arg": "$parameters.properties.policyInfo", "required": true, "props": [{"type": "string", "name": "policyId", "arg": "$parameters.properties.policyInfo.policyId", "required": true}]}, {"type": "string", "name": "validationType", "arg": "$parameters.properties.validationType", "enum": {"items": [{"value": "DeepValidation"}, {"value": "ShallowValidation"}]}}]}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "BackupInstances_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "backupInstanceName", "arg": "$Path.backupInstanceName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@BackupInstanceResource_read"}}}}, {"statusCode": [202], "header": {"items": [{"name": "Azure-AsyncOperation"}, {"name": "Location"}]}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}