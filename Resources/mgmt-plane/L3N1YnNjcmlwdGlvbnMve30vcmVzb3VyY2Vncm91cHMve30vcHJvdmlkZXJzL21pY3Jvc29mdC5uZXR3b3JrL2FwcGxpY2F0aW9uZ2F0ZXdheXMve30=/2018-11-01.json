{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/applicationgateways/{}", "version": "2018-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9hcHBsaWNhdGlvbkdhdGV3YXlzL3thcHBsaWNhdGlvbkdhdGV3YXlOYW1lfQ==/V/MjAxOC0xMS0wMQ=="}], "commandGroups": [{"name": "network application-gateway", "commands": [{"name": "show", "version": "2018-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/applicationgateways/{}", "version": "2018-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9hcHBsaWNhdGlvbkdhdGV3YXlzL3thcHBsaWNhdGlvbkdhdGV3YXlOYW1lfQ==/V/MjAxOC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the application gateway."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "ApplicationGateways_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "applicationGatewayName", "arg": "$Path.applicationGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "authenticationCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "autoscaleConfiguration", "props": [{"type": "integer32", "name": "maxCapacity", "format": {"minimum": 2}}, {"type": "integer32", "name": "minCapacity", "required": true, "format": {"minimum": 0}}]}, {"type": "array<object>", "name": "backendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn"}, {"type": "string", "name": "ipAddress"}]}}, {"type": "array<object>", "name": "backendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@ApplicationGatewayBackendAddressPool_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@ApplicationGatewayBackendAddressPool_read"}}, {"type": "array<@ApplicationSecurityGroup_read>", "name": "applicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_read"}}, {"type": "array<object>", "name": "loadBalancerBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "array<@NetworkInterfaceIPConfiguration_read>", "name": "backendIPConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "loadBalancingRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "@SubResource_read", "name": "outboundRule"}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "outboundRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "loadBalancerInboundNatRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "@NetworkInterfaceIPConfiguration_read", "name": "backendIPConfiguration"}, {"type": "integer32", "name": "backendPort"}, {"type": "boolean", "name": "enableFloatingIP"}, {"type": "boolean", "name": "enableTcpReset"}, {"type": "@SubResource_read", "name": "frontendIPConfiguration"}, {"type": "integer32", "name": "frontendPort"}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "All"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@PublicIPAddress_read", "name": "publicIPAddress"}, {"type": "@Subnet_read", "name": "subnet"}, {"type": "array<object>", "name": "virtualNetworkTaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "destinationLoadBalancerFrontEndIPConfiguration", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundNatPools", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundNatRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "loadBalancingRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "outboundRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@PublicIPAddress_read", "name": "publicIPAddress"}, {"type": "@SubResource_read", "name": "publicIPPrefix"}, {"type": "object", "name": "subnet", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix"}, {"type": "array<string>", "name": "addressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "delegations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "actions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "serviceName"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@InterfaceEndpoint_read>", "name": "interfaceEndpoints", "item": {"type": "@InterfaceEndpoint_read"}}, {"readOnly": true, "type": "array<object>", "name": "ipConfigurationProfiles", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "array<object>", "name": "ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "object", "name": "publicIPAddress", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "ddosSettings", "props": [{"type": "@SubResource_read", "name": "ddosCustomPolicy"}, {"type": "string", "name": "protectionCoverage", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel"}, {"type": "string", "name": "fqdn"}, {"type": "string", "name": "reverseFqdn"}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "string", "name": "ipAddress"}, {"readOnly": true, "type": "@IPConfiguration_read", "name": "ipConfiguration"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}, {"type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "PublicIPAddress_read"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}], "cls": "IPConfiguration_read"}}, {"type": "object", "name": "networkSecurityGroup", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@SecurityRule_read>", "name": "defaultSecurityRules", "item": {"type": "@SecurityRule_read"}}, {"readOnly": true, "type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "appliedDnsServers", "item": {"type": "string"}}, {"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}, {"type": "string", "name": "internalDnsNameLabel"}, {"type": "string", "name": "internalDomainNameSuffix"}, {"type": "string", "name": "internalFqdn"}]}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableIPForwarding"}, {"readOnly": true, "type": "array<string>", "name": "hostedWorkloads", "item": {"type": "string"}}, {"type": "object", "name": "interfaceEndpoint", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/interfaceEndpoints/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "endpointService", "props": [{"type": "string", "name": "id"}]}, {"type": "string", "name": "fqdn"}, {"readOnly": true, "type": "array<@NetworkInterface_read>", "name": "networkInterfaces", "item": {"type": "@NetworkInterface_read"}}, {"readOnly": true, "type": "string", "name": "owner"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "InterfaceEndpoint_read"}, {"type": "array<@NetworkInterfaceIPConfiguration_read>", "name": "ipConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_read"}}, {"type": "string", "name": "macAddress"}, {"type": "@NetworkSecurityGroup_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "resourceGuid"}, {"type": "array<@NetworkInterfaceTapConfiguration_read>", "name": "tapConfigurations", "item": {"type": "@NetworkInterfaceTapConfiguration_read"}}, {"readOnly": true, "type": "@SubResource_read", "name": "virtualMachine"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkInterface_read"}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "securityRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "access", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "destinationAddressPrefix"}, {"type": "array<string>", "name": "destinationAddressPrefixes", "item": {"type": "string"}}, {"type": "array<@ApplicationSecurityGroup_read>", "name": "destinationApplicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_read"}}, {"type": "string", "name": "destinationPortRange"}, {"type": "array<string>", "name": "destinationPortRanges", "item": {"type": "string"}}, {"type": "string", "name": "direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "integer32", "name": "priority"}, {"type": "string", "name": "protocol", "required": true, "enum": {"items": [{"value": "*"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "sourceAddressPrefix"}, {"type": "array<string>", "name": "sourceAddressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "sourceApplicationSecurityGroups", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ApplicationSecurityGroup_read"}}, {"type": "string", "name": "sourcePortRange"}, {"type": "array<string>", "name": "sourcePortRanges", "item": {"type": "string"}}], "clientFlatten": true}], "cls": "SecurityRule_read"}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkSecurityGroup_read"}, {"type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "purpose"}, {"type": "array<object>", "name": "resourceNavigationLinks", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link"}, {"type": "string", "name": "linkedResourceType"}, {"readOnly": true, "type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "object", "name": "routeTable", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "disableBgpRoutePropagation"}, {"type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "routes", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix"}, {"type": "string", "name": "nextHopIpAddress"}, {"type": "string", "name": "nextHopType", "required": true, "enum": {"items": [{"value": "Internet"}, {"value": "None"}, {"value": "VirtualAppliance"}, {"value": "VirtualNetworkGateway"}, {"value": "VnetLocal"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}, {"type": "array<object>", "name": "serviceAssociationLinks", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link"}, {"type": "string", "name": "linkedResourceType"}, {"readOnly": true, "type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "serviceEndpointPolicies", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "serviceEndpointPolicyDefinitions", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "description"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "service"}, {"type": "array<string>", "name": "serviceResources", "item": {"type": "string"}}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "serviceEndpoints", "item": {"type": "object", "props": [{"type": "array<string>", "name": "locations", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "service"}]}}], "clientFlatten": true}], "cls": "Subnet_read"}], "clientFlatten": true}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}, {"type": "@NetworkInterfaceIPConfiguration_read", "name": "destinationNetworkInterfaceIPConfiguration"}, {"type": "integer", "name": "destinationPort"}, {"readOnly": true, "type": "array<object>", "name": "networkInterfaceTapConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/tapConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@VirtualNetworkTap_read", "name": "virtualNetworkTap"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkInterfaceTapConfiguration_read"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "VirtualNetworkTap_read"}}], "clientFlatten": true}], "cls": "NetworkInterfaceIPConfiguration_read"}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}], "cls": "ApplicationGatewayBackendAddressPool_read"}}, {"type": "array<object>", "name": "backendHttpSettingsCollection", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "affinityCookieName"}, {"type": "array<@SubResource_read>", "name": "authenticationCertificates", "item": {"type": "@SubResource_read"}}, {"type": "object", "name": "connectionDraining", "props": [{"type": "integer32", "name": "drainTimeoutInSec", "required": true, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "name": "enabled", "required": true}]}, {"type": "string", "name": "cookieBasedAffinity", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "hostName"}, {"type": "string", "name": "path"}, {"type": "boolean", "name": "pickHostNameFromBackendAddress"}, {"type": "integer32", "name": "port"}, {"type": "@SubResource_read", "name": "probe"}, {"type": "boolean", "name": "probeEnabled"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "integer32", "name": "requestTimeout"}, {"type": "array<@SubResource_read>", "name": "trustedRootCertificates", "item": {"type": "@SubResource_read"}}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<@ApplicationGatewayCustomError_read>", "name": "customErrorConfigurations", "item": {"type": "@ApplicationGatewayCustomError_read"}}, {"type": "boolean", "name": "enableFips"}, {"type": "boolean", "name": "enableHttp2"}, {"type": "array<object>", "name": "frontendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "publicIPAddress"}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "frontendPorts", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "port"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "gatewayIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState"}, {"type": "object", "name": "subnet", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "httpListeners", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "customErrorConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "customErrorPageUrl"}, {"type": "string", "name": "statusCode", "enum": {"items": [{"value": "HttpStatus403"}, {"value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_read"}}, {"type": "@SubResource_read", "name": "frontendIPConfiguration"}, {"type": "@SubResource_read", "name": "frontendPort"}, {"type": "string", "name": "hostName"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "boolean", "name": "requireServerNameIndication"}, {"type": "@SubResource_read", "name": "sslCertificate"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "operationalState", "enum": {"items": [{"value": "Running"}, {"value": "Starting"}, {"value": "Stopped"}, {"value": "Stopping"}]}}, {"type": "array<object>", "name": "probes", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "host"}, {"type": "integer32", "name": "interval"}, {"type": "object", "name": "match", "props": [{"type": "string", "name": "body"}, {"type": "array<string>", "name": "statusCodes", "item": {"type": "string"}}]}, {"type": "integer32", "name": "minServers"}, {"type": "string", "name": "path"}, {"type": "boolean", "name": "pickHostNameFromBackendHttpSettings"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "integer32", "name": "timeout"}, {"type": "integer32", "name": "unhealthyThreshold"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "redirectConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "includePath"}, {"type": "boolean", "name": "includeQueryString"}, {"type": "array<@SubResource_read>", "name": "pathRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "redirectType", "enum": {"items": [{"value": "Found"}, {"value": "Permanent"}, {"value": "SeeOther"}, {"value": "Temporary"}]}}, {"type": "array<@SubResource_read>", "name": "requestRoutingRules", "item": {"type": "@SubResource_read"}}, {"type": "@SubResource_read", "name": "targetListener"}, {"type": "string", "name": "targetUrl"}, {"type": "array<@SubResource_read>", "name": "urlPathMaps", "item": {"type": "@SubResource_read"}}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "requestRoutingRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "backendAddressPool"}, {"type": "@SubResource_read", "name": "backendHttpSettings"}, {"type": "@SubResource_read", "name": "httpListener"}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "redirectConfiguration"}, {"type": "@SubResource_read", "name": "rewriteRuleSet"}, {"type": "string", "name": "ruleType", "enum": {"items": [{"value": "Basic"}, {"value": "PathBasedRouting"}]}}, {"type": "@SubResource_read", "name": "urlPathMap"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "rewriteRuleSets", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "rewriteRules", "item": {"type": "object", "props": [{"type": "object", "name": "actionSet", "props": [{"type": "array<object>", "name": "requestHeaderConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "headerName"}, {"type": "string", "name": "headerValue"}], "cls": "ApplicationGatewayHeaderConfiguration_read"}}, {"type": "array<@ApplicationGatewayHeaderConfiguration_read>", "name": "responseHeaderConfigurations", "item": {"type": "@ApplicationGatewayHeaderConfiguration_read"}}]}, {"type": "string", "name": "name"}]}}], "clientFlatten": true}]}}, {"type": "object", "name": "sku", "props": [{"type": "integer32", "name": "capacity"}, {"type": "string", "name": "name", "enum": {"items": [{"value": "Standard_Large"}, {"value": "Standard_Medium"}, {"value": "Standard_Small"}, {"value": "Standard_v2"}, {"value": "WAF_Large"}, {"value": "WAF_Medium"}, {"value": "WAF_v2"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Standard"}, {"value": "Standard_v2"}, {"value": "WAF"}, {"value": "WAF_v2"}]}}]}, {"type": "array<object>", "name": "sslCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "keyVaultSecretId"}, {"type": "string", "name": "password"}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "publicCertData"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "sslPolicy", "props": [{"type": "array<string>", "name": "cipherSuites", "item": {"type": "string", "enum": {"items": [{"value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"type": "array<string>", "name": "disabledSslProtocols", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}}, {"type": "string", "name": "minProtocolVersion", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}, {"type": "string", "name": "policyName", "enum": {"items": [{"value": "AppGwSslPolicy20150501"}, {"value": "AppGwSslPolicy20170401"}, {"value": "AppGwSslPolicy20170401S"}]}}, {"type": "string", "name": "policyType", "enum": {"items": [{"value": "Custom"}, {"value": "Predefined"}]}}]}, {"type": "array<object>", "name": "trustedRootCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "keyVaultSecretId"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "urlPathMaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "defaultBackendAddressPool"}, {"type": "@SubResource_read", "name": "defaultBackendHttpSettings"}, {"type": "@SubResource_read", "name": "defaultRedirectConfiguration"}, {"type": "@SubResource_read", "name": "defaultRewriteRuleSet"}, {"type": "array<object>", "name": "pathRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "backendAddressPool"}, {"type": "@SubResource_read", "name": "backendHttpSettings"}, {"type": "array<string>", "name": "paths", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "redirectConfiguration"}, {"type": "@SubResource_read", "name": "rewriteRuleSet"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "webApplicationFirewallConfiguration", "props": [{"type": "array<object>", "name": "disabledRuleGroups", "item": {"type": "object", "props": [{"type": "string", "name": "ruleGroupName", "required": true}, {"type": "array<integer32>", "name": "rules", "item": {"type": "integer32"}}]}}, {"type": "boolean", "name": "enabled", "required": true}, {"type": "array<object>", "name": "exclusions", "item": {"type": "object", "props": [{"type": "string", "name": "matchVariable", "required": true}, {"type": "string", "name": "selector", "required": true}, {"type": "string", "name": "selectorMatchOperator", "required": true}]}}, {"type": "integer32", "name": "fileUploadLimitInMb", "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "name": "firewallMode", "required": true, "enum": {"items": [{"value": "Detection"}, {"value": "Prevention"}]}}, {"type": "integer32", "name": "maxRequestBodySize", "format": {"maximum": 128, "minimum": 8}}, {"type": "integer32", "name": "maxRequestBodySizeInKb", "format": {"maximum": 128, "minimum": 8}}, {"type": "boolean", "name": "requestBodyCheck"}, {"type": "string", "name": "ruleSetType", "required": true}, {"type": "string", "name": "ruleSetVersion", "required": true}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2018-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/applicationgateways/{}", "version": "2018-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9hcHBsaWNhdGlvbkdhdGV3YXlzL3thcHBsaWNhdGlvbkdhdGV3YXlOYW1lfQ==/V/MjAxOC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the application gateway."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "ApplicationGateways_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "applicationGatewayName", "arg": "$Path.applicationGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2018-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/applicationgateways/{}", "version": "2018-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9hcHBsaWNhdGlvbkdhdGV3YXlzL3thcHBsaWNhdGlvbkdhdGV3YXlOYW1lfQ==/V/MjAxOC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the application gateway."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"type": "string", "var": "$parameters.etag", "options": ["etag"], "group": "Parameters", "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "$parameters.id", "options": ["id"], "hide": true, "group": "Parameters", "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"type": "object", "var": "$parameters.identity", "options": ["identity"], "group": "Parameters", "help": {"short": "The identity of the application gateway, if configured."}, "args": [{"type": "string", "var": "$parameters.identity.type", "options": ["type"], "help": {"short": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "group": "Parameters", "help": {"short": "Resource location."}}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "var": "$parameters.zones", "options": ["zones"], "group": "Parameters", "help": {"short": "A list of availability zones denoting where the resource needs to come from."}, "item": {"type": "string"}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$parameters.properties.authenticationCertificates", "options": ["authentication-certificates"], "group": "Properties", "help": {"short": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.authenticationCertificates[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.authenticationCertificates[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.authenticationCertificates[].name", "options": ["name"], "help": {"short": "Name of the authentication certificate that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.authenticationCertificates[].properties.data", "options": ["data"], "group": "Properties", "help": {"short": "Certificate public data."}}, {"type": "string", "var": "$parameters.properties.authenticationCertificates[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "$parameters.properties.authenticationCertificates[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "object", "var": "$parameters.properties.autoscaleConfiguration", "options": ["autoscale-configuration"], "group": "Properties", "help": {"short": "Autoscale Configuration."}, "args": [{"type": "integer32", "var": "$parameters.properties.autoscaleConfiguration.maxCapacity", "options": ["max-capacity"], "help": {"short": "Upper bound on number of Application Gateway capacity."}, "format": {"minimum": 2}}, {"type": "integer32", "var": "$parameters.properties.autoscaleConfiguration.minCapacity", "options": ["min-capacity"], "required": true, "help": {"short": "Lower bound on number of Application Gateway capacity."}, "format": {"minimum": 0}}]}, {"type": "array<object>", "var": "$parameters.properties.backendAddressPools", "options": ["backend-address-pools"], "group": "Properties", "help": {"short": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.backendAddressPools[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.backendAddressPools[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.backendAddressPools[].name", "options": ["name"], "help": {"short": "Name of the backend address pool that is unique within an Application Gateway."}}, {"type": "array<object>", "var": "$parameters.properties.backendAddressPools[].properties.backendAddresses", "options": ["backend-addresses"], "group": "Properties", "help": {"short": "Backend addresses."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].fqdn", "options": ["fqdn"], "help": {"short": "Fully qualified domain name (FQDN)."}}, {"type": "string", "var": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].ipAddress", "options": ["ip-address"], "help": {"short": "IP address."}}]}}, {"type": "array<object>", "var": "$parameters.properties.backendAddressPools[].properties.backendIPConfigurations", "options": ["backend-ip-configurations"], "group": "Properties", "help": {"short": "Collection of references to IPs defined in network interfaces."}, "item": {"type": "object", "args": [{"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_create.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_create.properties.applicationGatewayBackendAddressPools", "options": ["application-gateway-backend-address-pools"], "group": "Properties", "help": {"short": "The reference of ApplicationGatewayBackendAddressPool resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.name", "options": ["name"], "help": {"short": "Name of the backend address pool that is unique within an Application Gateway."}}, {"type": "array<object>", "var": "@ApplicationGatewayBackendAddressPool_create.properties.backendAddresses", "options": ["backend-addresses"], "group": "Properties", "help": {"short": "Backend addresses"}, "item": {"type": "object", "args": [{"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.properties.backendAddresses[].fqdn", "options": ["fqdn"], "help": {"short": "Fully qualified domain name (FQDN)."}}, {"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.properties.backendAddresses[].ipAddress", "options": ["ip-address"], "help": {"short": "IP address"}}]}}, {"type": "array<@NetworkInterfaceIPConfiguration_create>", "var": "@ApplicationGatewayBackendAddressPool_create.properties.backendIPConfigurations", "options": ["backend-ip-configurations"], "group": "Properties", "help": {"short": "Collection of references to IPs defined in network interfaces."}, "item": {"type": "@NetworkInterfaceIPConfiguration_create"}}, {"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "@ApplicationGatewayBackendAddressPool_create.type", "options": ["type"], "help": {"short": "Type of the resource."}}], "cls": "ApplicationGatewayBackendAddressPool_create"}}, {"type": "array<@ApplicationSecurityGroup_create>", "var": "@NetworkInterfaceIPConfiguration_create.properties.applicationSecurityGroups", "options": ["application-security-groups"], "group": "Properties", "help": {"short": "Application security groups in which the IP configuration is included."}, "item": {"type": "@ApplicationSecurityGroup_create"}}, {"type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools", "options": ["load-balancer-backend-address-pools"], "group": "Properties", "help": {"short": "The reference of LoadBalancerBackendAddressPool resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].name", "options": ["name"], "help": {"short": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}]}}, {"type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules", "options": ["load-balancer-inbound-nat-rules"], "group": "Properties", "help": {"short": "A list of references of LoadBalancerInboundNatRules."}, "item": {"type": "object", "args": [{"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].name", "options": ["name"], "help": {"short": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "integer32", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.backendPort", "options": ["backend-port"], "group": "Properties", "help": {"short": "The port used for the internal endpoint. Acceptable values range from 1 to 65535."}}, {"type": "boolean", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP", "options": ["enable-floating-ip"], "group": "Properties", "help": {"short": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."}}, {"type": "boolean", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.enableTcpReset", "options": ["enable-tcp-reset"], "group": "Properties", "help": {"short": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."}}, {"type": "@SubResource_create", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration", "options": ["frontend-ip-configuration"], "group": "Properties", "help": {"short": "A reference to frontend IP addresses."}}, {"type": "integer32", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.frontendPort", "options": ["frontend-port"], "group": "Properties", "help": {"short": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."}}, {"type": "integer32", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes", "options": ["idle-timeout-in-minutes"], "group": "Properties", "help": {"short": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'."}, "enum": {"items": [{"name": "All", "value": "All"}, {"name": "Tcp", "value": "Tcp"}, {"name": "Udp", "value": "Udp"}]}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}]}}, {"type": "boolean", "var": "@NetworkInterfaceIPConfiguration_create.properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Gets whether this is a primary customer address on the network interface."}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.privateIPAddress", "options": ["private-ip-address"], "group": "Properties", "help": {"short": "Private IP address of the IP configuration."}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.privateIPAddressVersion", "options": ["private-ip-address-version"], "group": "Properties", "help": {"short": "Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "group": "Properties", "help": {"short": "Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "@PublicIPAddress_create", "var": "@NetworkInterfaceIPConfiguration_create.properties.publicIPAddress", "options": ["public-ip-address"], "group": "Properties", "help": {"short": "Public IP address bound to the IP configuration."}}, {"type": "@Subnet_create", "var": "@NetworkInterfaceIPConfiguration_create.properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Subnet bound to the IP configuration."}}, {"type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps", "options": ["virtual-network-taps"], "group": "Properties", "help": {"short": "The reference to Virtual Network Taps."}, "item": {"type": "object", "args": [{"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].etag", "options": ["etag"], "help": {"short": "Gets a unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"type": "ResourceLocation", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"type": "object", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration", "options": ["destination-load-balancer-front-end-ip-configuration"], "group": "Properties", "help": {"short": "The reference to the private IP address on the internal Load Balancer that will receive the tap"}, "args": [{"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress", "options": ["private-ip-address"], "group": "Properties", "help": {"short": "The private IP address of the IP configuration."}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "group": "Properties", "help": {"short": "The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"type": "string", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "object", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress", "options": ["public-ip-address"], "group": "Properties", "help": {"short": "The reference of the Public IP resource."}, "args": [{"type": "string", "var": "@PublicIPAddress_create.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@PublicIPAddress_create.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"type": "ResourceLocation", "var": "@PublicIPAddress_create.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"type": "object", "var": "@PublicIPAddress_create.properties.ddosSettings", "options": ["ddos-settings"], "group": "Properties", "help": {"short": "The DDoS protection custom policy associated with the public IP address."}, "args": [{"type": "@SubResource_create", "var": "@PublicIPAddress_create.properties.ddosSettings.ddosCustomPolicy", "options": ["ddos-custom-policy"], "help": {"short": "The DDoS custom policy associated with the public IP."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.ddosSettings.protectionCoverage", "options": ["protection-coverage"], "help": {"short": "The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Standard", "value": "Standard"}]}}]}, {"type": "object", "var": "@PublicIPAddress_create.properties.dnsSettings", "options": ["dns-settings"], "group": "Properties", "help": {"short": "The FQDN of the DNS record associated with the public IP address."}, "args": [{"type": "string", "var": "@PublicIPAddress_create.properties.dnsSettings.domainNameLabel", "options": ["domain-name-label"], "help": {"short": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.dnsSettings.fqdn", "options": ["fqdn"], "help": {"short": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.dnsSettings.reverseFqdn", "options": ["reverse-fqdn"], "help": {"short": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "}}]}, {"type": "integer32", "var": "@PublicIPAddress_create.properties.idleTimeoutInMinutes", "options": ["idle-timeout-in-minutes"], "group": "Properties", "help": {"short": "The idle timeout of the public IP address."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.ipAddress", "options": ["ip-address"], "group": "Properties", "help": {"short": "The IP address associated with the public IP address resource."}}, {"type": "array<object>", "var": "@PublicIPAddress_create.properties.ipTags", "options": ["ip-tags"], "group": "Properties", "help": {"short": "The list of tags associated with the public IP address."}, "item": {"type": "object", "args": [{"type": "string", "var": "@PublicIPAddress_create.properties.ipTags[].ipTagType", "options": ["ip-tag-type"], "help": {"short": "Gets or sets the ipTag type: Example FirstPartyUsage."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.ipTags[].tag", "options": ["tag"], "help": {"short": "Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc"}}]}}, {"type": "string", "var": "@PublicIPAddress_create.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.publicIPAddressVersion", "options": ["public-ip-address-version"], "group": "Properties", "help": {"short": "The public IP address version. Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"type": "string", "var": "@PublicIPAddress_create.properties.publicIPAllocationMethod", "options": ["public-ip-allocation-method"], "group": "Properties", "help": {"short": "The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"type": "@SubResource_create", "var": "@PublicIPAddress_create.properties.publicIPPrefix", "options": ["public-ip-prefix"], "group": "Properties", "help": {"short": "The Public IP Prefix this Public IP Address should be allocated from."}}, {"type": "string", "var": "@PublicIPAddress_create.properties.resourceGuid", "options": ["resource-guid"], "group": "Properties", "help": {"short": "The resource GUID property of the public IP resource."}}, {"type": "object", "var": "@PublicIPAddress_create.sku", "options": ["sku"], "help": {"short": "The public IP address SKU."}, "args": [{"type": "string", "var": "@PublicIPAddress_create.sku.name", "options": ["name"], "help": {"short": "Name of a public IP address SKU."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Standard", "value": "Standard"}]}}]}, {"type": "object", "var": "@PublicIPAddress_create.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "var": "@PublicIPAddress_create.zones", "options": ["zones"], "help": {"short": "A list of availability zones denoting the IP allocated for the resource needs to come from."}, "item": {"type": "string"}}], "cls": "PublicIPAddress_create"}, {"type": "@SubResource_create", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix", "options": ["public-ip-prefix"], "group": "Properties", "help": {"short": "The reference of the Public IP Prefix resource."}}, {"type": "object", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "The reference of the subnet resource."}, "args": [{"type": "string", "var": "@Subnet_create.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@Subnet_create.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"type": "string", "var": "@Subnet_create.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@Subnet_create.properties.addressPrefix", "options": ["address-prefix"], "group": "Properties", "help": {"short": "The address prefix for the subnet."}}, {"type": "array<string>", "var": "@Subnet_create.properties.addressPrefixes", "options": ["address-prefixes"], "group": "Properties", "help": {"short": "List of  address prefixes for the subnet."}, "item": {"type": "string"}}, {"type": "array<object>", "var": "@Subnet_create.properties.delegations", "options": ["delegations"], "group": "Properties", "help": {"short": "Gets an array of references to the delegations on the subnet."}, "item": {"type": "object", "args": [{"type": "string", "var": "@Subnet_create.properties.delegations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "@Subnet_create.properties.delegations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "@Subnet_create.properties.delegations[].name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a subnet. This name can be used to access the resource."}}, {"type": "array<string>", "var": "@Subnet_create.properties.delegations[].properties.actions", "options": ["actions"], "group": "Properties", "help": {"short": "Describes the actions permitted to the service upon delegation"}, "item": {"type": "string"}}, {"type": "string", "var": "@Subnet_create.properties.delegations[].properties.serviceName", "options": ["service-name"], "group": "Properties", "help": {"short": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)"}}]}}, {"type": "object", "var": "@Subnet_create.properties.networkSecurityGroup", "options": ["network-security-group"], "group": "Properties", "help": {"short": "The reference of the NetworkSecurityGroup resource."}, "args": [{"type": "string", "var": "@Subnet_create.properties.networkSecurityGroup.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@Subnet_create.properties.networkSecurityGroup.id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"type": "ResourceLocation", "var": "@Subnet_create.properties.networkSecurityGroup.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"type": "array<@SecurityRule_create>", "var": "@Subnet_create.properties.networkSecurityGroup.properties.defaultSecurityRules", "options": ["default-security-rules"], "group": "Properties", "help": {"short": "The default security rules of network security group."}, "item": {"type": "@SecurityRule_create"}}, {"type": "string", "var": "@Subnet_create.properties.networkSecurityGroup.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "@Subnet_create.properties.networkSecurityGroup.properties.resourceGuid", "options": ["resource-guid"], "group": "Properties", "help": {"short": "The resource GUID property of the network security group resource."}}, {"type": "array<object>", "var": "@Subnet_create.properties.networkSecurityGroup.properties.securityRules", "options": ["security-rules"], "group": "Properties", "help": {"short": "A collection of security rules of the network security group."}, "item": {"type": "object", "args": [{"type": "string", "var": "@SecurityRule_create.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@SecurityRule_create.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}}, {"type": "string", "var": "@SecurityRule_create.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@SecurityRule_create.properties.access", "options": ["access"], "group": "Properties", "help": {"short": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."}, "enum": {"items": [{"name": "Allow", "value": "Allow"}, {"name": "Deny", "value": "Deny"}]}}, {"type": "string", "var": "@SecurityRule_create.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "A description for this rule. Restricted to 140 chars."}}, {"type": "string", "var": "@SecurityRule_create.properties.destinationAddressPrefix", "options": ["destination-address-prefix"], "group": "Properties", "help": {"short": "The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."}}, {"type": "array<string>", "var": "@SecurityRule_create.properties.destinationAddressPrefixes", "options": ["destination-address-prefixes"], "group": "Properties", "help": {"short": "The destination address prefixes. CIDR or destination IP ranges."}, "item": {"type": "string"}}, {"type": "array<@ApplicationSecurityGroup_create>", "var": "@SecurityRule_create.properties.destinationApplicationSecurityGroups", "options": ["destination-application-security-groups"], "group": "Properties", "help": {"short": "The application security group specified as destination."}, "item": {"type": "@ApplicationSecurityGroup_create"}}, {"type": "string", "var": "@SecurityRule_create.properties.destinationPortRange", "options": ["destination-port-range"], "group": "Properties", "help": {"short": "The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."}}, {"type": "array<string>", "var": "@SecurityRule_create.properties.destinationPortRanges", "options": ["destination-port-ranges"], "group": "Properties", "help": {"short": "The destination port ranges."}, "item": {"type": "string"}}, {"type": "string", "var": "@SecurityRule_create.properties.direction", "options": ["direction"], "group": "Properties", "help": {"short": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."}, "enum": {"items": [{"name": "Inbound", "value": "Inbound"}, {"name": "Outbound", "value": "Outbound"}]}}, {"type": "integer32", "var": "@SecurityRule_create.properties.priority", "options": ["priority"], "group": "Properties", "help": {"short": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."}}, {"type": "string", "var": "@SecurityRule_create.properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."}, "enum": {"items": [{"name": "*", "value": "*"}, {"name": "Tcp", "value": "Tcp"}, {"name": "Udp", "value": "Udp"}]}}, {"type": "string", "var": "@SecurityRule_create.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "@SecurityRule_create.properties.sourceAddressPrefix", "options": ["source-address-prefix"], "group": "Properties", "help": {"short": "The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "}}, {"type": "array<string>", "var": "@SecurityRule_create.properties.sourceAddressPrefixes", "options": ["source-address-prefixes"], "group": "Properties", "help": {"short": "The CIDR or source IP ranges."}, "item": {"type": "string"}}, {"type": "array<object>", "var": "@SecurityRule_create.properties.sourceApplicationSecurityGroups", "options": ["source-application-security-groups"], "group": "Properties", "help": {"short": "The application security group specified as source."}, "item": {"type": "object", "args": [{"type": "ResourceId", "var": "@ApplicationSecurityGroup_create.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"type": "ResourceLocation", "var": "@ApplicationSecurityGroup_create.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"type": "object", "var": "@ApplicationSecurityGroup_create.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}], "cls": "ApplicationSecurityGroup_create"}}, {"type": "string", "var": "@SecurityRule_create.properties.sourcePortRange", "options": ["source-port-range"], "group": "Properties", "help": {"short": "The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."}}, {"type": "array<string>", "var": "@SecurityRule_create.properties.sourcePortRanges", "options": ["source-port-ranges"], "group": "Properties", "help": {"short": "The source port ranges."}, "item": {"type": "string"}}], "cls": "SecurityRule_create"}}, {"type": "object", "var": "@Subnet_create.properties.networkSecurityGroup.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"type": "string", "var": "@Subnet_create.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the resource."}}, {"type": "array<object>", "var": "@Subnet_create.properties.resourceNavigationLinks", "options": ["resource-navigation-links"], "group": "Properties", "help": {"short": "Gets an array of references to the external resources using subnet."}, "item": {"type": "object", "args": [{"type": "string", "var": "@Subnet_create.properties.resourceNavigationLinks[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "@Subnet_create.properties.resourceNavigationLinks[].name", "options": ["name"], "help": {"short": "Name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@Subnet_create.properties.resourceNavigationLinks[].properties.link", "options": ["link"], "group": "Properties", "help": {"short": "Link to the external resource"}}, {"type": "string", "var": "@Subnet_create.properties.resourceNavigationLinks[].properties.linkedResourceType", "options": ["linked-resource-type"], "group": "Properties", "help": {"short": "Resource type of the linked resource."}}]}}, {"type": "object", "var": "@Subnet_create.properties.routeTable", "options": ["route-table"], "group": "Properties", "help": {"short": "The reference of the RouteTable resource."}, "args": [{"type": "string", "var": "@Subnet_create.properties.routeTable.etag", "options": ["etag"], "help": {"short": "Gets a unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@Subnet_create.properties.routeTable.id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"type": "ResourceLocation", "var": "@Subnet_create.properties.routeTable.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"type": "boolean", "var": "@Subnet_create.properties.routeTable.properties.disableBgpRoutePropagation", "options": ["disable-bgp-route-propagation"], "group": "Properties", "help": {"short": "Gets or sets whether to disable the routes learned by BGP on that route table. True means disable."}}, {"type": "string", "var": "@Subnet_create.properties.routeTable.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "array<object>", "var": "@Subnet_create.properties.routeTable.properties.routes", "options": ["routes"], "group": "Properties", "help": {"short": "Collection of routes contained within a route table."}, "item": {"type": "object", "args": [{"type": "string", "var": "@Subnet_create.properties.routeTable.properties.routes[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@Subnet_create.properties.routeTable.properties.routes[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"type": "string", "var": "@Subnet_create.properties.routeTable.properties.routes[].name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@Subnet_create.properties.routeTable.properties.routes[].properties.addressPrefix", "options": ["address-prefix"], "group": "Properties", "help": {"short": "The destination CIDR to which the route applies."}}, {"type": "string", "var": "@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopIpAddress", "options": ["next-hop-ip-address"], "group": "Properties", "help": {"short": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."}}, {"type": "string", "var": "@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopType", "options": ["next-hop-type"], "group": "Properties", "help": {"short": "The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"}, "enum": {"items": [{"name": "Internet", "value": "Internet"}, {"name": "None", "value": "None"}, {"name": "VirtualAppliance", "value": "VirtualAppliance"}, {"name": "VirtualNetworkGateway", "value": "VirtualNetworkGateway"}, {"name": "VnetLocal", "value": "VnetLocal"}]}}, {"type": "string", "var": "@Subnet_create.properties.routeTable.properties.routes[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}]}}, {"type": "object", "var": "@Subnet_create.properties.routeTable.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"type": "array<object>", "var": "@Subnet_create.properties.serviceAssociationLinks", "options": ["service-association-links"], "group": "Properties", "help": {"short": "Gets an array of references to services injecting into this subnet."}, "item": {"type": "object", "args": [{"type": "string", "var": "@Subnet_create.properties.serviceAssociationLinks[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "@Subnet_create.properties.serviceAssociationLinks[].name", "options": ["name"], "help": {"short": "Name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@Subnet_create.properties.serviceAssociationLinks[].properties.link", "options": ["link"], "group": "Properties", "help": {"short": "Link to the external resource."}}, {"type": "string", "var": "@Subnet_create.properties.serviceAssociationLinks[].properties.linkedResourceType", "options": ["linked-resource-type"], "group": "Properties", "help": {"short": "Resource type of the linked resource."}}]}}, {"type": "array<object>", "var": "@Subnet_create.properties.serviceEndpointPolicies", "options": ["service-endpoint-policies"], "group": "Properties", "help": {"short": "An array of service endpoint policies."}, "item": {"type": "object", "args": [{"type": "string", "var": "@Subnet_create.properties.serviceEndpointPolicies[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@Subnet_create.properties.serviceEndpointPolicies[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"type": "ResourceLocation", "var": "@Subnet_create.properties.serviceEndpointPolicies[].location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"type": "array<object>", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions", "options": ["service-endpoint-policy-definitions"], "group": "Properties", "help": {"short": "A collection of service endpoint policy definitions of the service endpoint policy."}, "item": {"type": "object", "args": [{"type": "string", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "ResourceId", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"type": "string", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description", "options": ["description"], "group": "Properties", "help": {"short": "A description for this rule. Restricted to 140 chars."}}, {"type": "string", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service", "options": ["service"], "group": "Properties", "help": {"short": "service endpoint name."}}, {"type": "array<string>", "var": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources", "options": ["service-resources"], "group": "Properties", "help": {"short": "A list of service resources."}, "item": {"type": "string"}}]}}, {"type": "object", "var": "@Subnet_create.properties.serviceEndpointPolicies[].tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}}, {"type": "array<object>", "var": "@Subnet_create.properties.serviceEndpoints", "options": ["service-endpoints"], "group": "Properties", "help": {"short": "An array of service endpoints."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "@Subnet_create.properties.serviceEndpoints[].locations", "options": ["locations"], "help": {"short": "A list of locations."}, "item": {"type": "string"}}, {"type": "string", "var": "@Subnet_create.properties.serviceEndpoints[].provisioningState", "options": ["provisioning-state"], "help": {"short": "The provisioning state of the resource."}}, {"type": "string", "var": "@Subnet_create.properties.serviceEndpoints[].service", "options": ["service"], "help": {"short": "The type of the endpoint service."}}]}}], "cls": "Subnet_create"}, {"type": "array<string>", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.zones", "options": ["zones"], "help": {"short": "A list of availability zones denoting the IP allocated for the resource needs to come from."}, "item": {"type": "string"}}]}, {"type": "@NetworkInterfaceIPConfiguration_create", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationNetworkInterfaceIPConfiguration", "options": ["destination-network-interface-ip-configuration"], "group": "Properties", "help": {"short": "The reference to the private IP Address of the collector nic that will receive the tap"}}, {"type": "integer", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationPort", "options": ["destination-port"], "group": "Properties", "help": {"short": "The VXLAN destination port that will receive the tapped traffic."}}, {"type": "object", "var": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}}], "cls": "NetworkInterfaceIPConfiguration_create"}}, {"type": "string", "var": "$parameters.properties.backendAddressPools[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "$parameters.properties.backendAddressPools[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.backendHttpSettingsCollection", "options": ["backend-http-settings-collection"], "group": "Properties", "help": {"short": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].name", "options": ["name"], "help": {"short": "Name of the backend http settings that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.affinityCookieName", "options": ["affinity-cookie-name"], "group": "Properties", "help": {"short": "Cookie name to use for the affinity cookie."}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.authenticationCertificates", "options": ["authentication-certificates"], "group": "Properties", "help": {"short": "Array of references to application gateway authentication certificates."}, "item": {"type": "@SubResource_create"}}, {"type": "object", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining", "options": ["connection-draining"], "group": "Properties", "help": {"short": "Connection draining of the backend http settings resource."}, "args": [{"type": "integer32", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.drainTimeoutInSec", "options": ["drain-timeout-in-sec"], "required": true, "help": {"short": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds."}, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.enabled", "options": ["enabled"], "required": true, "help": {"short": "Whether connection draining is enabled or not."}}]}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.cookieBasedAffinity", "options": ["cookie-based-affinity"], "group": "Properties", "help": {"short": "Cookie based affinity."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.hostName", "options": ["host-name"], "group": "Properties", "help": {"short": "Host header to be sent to the backend servers."}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.path", "options": ["path"], "group": "Properties", "help": {"short": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null."}}, {"type": "boolean", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.pickHostNameFromBackendAddress", "options": ["pick-host-name-from-backend-address"], "group": "Properties", "help": {"short": "Whether to pick host header should be picked from the host name of the backend server. Default value is false."}}, {"type": "integer32", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.port", "options": ["port"], "group": "Properties", "help": {"short": "The destination port on the backend."}}, {"type": "@SubResource_create", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.probe", "options": ["probe"], "group": "Properties", "help": {"short": "Probe resource of an application gateway."}}, {"type": "boolean", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.probeEnabled", "options": ["probe-enabled"], "group": "Properties", "help": {"short": "Whether the probe is enabled. Default value is false."}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "The protocol used to communicate with the backend."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "integer32", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.requestTimeout", "options": ["request-timeout"], "group": "Properties", "help": {"short": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds."}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.trustedRootCertificates", "options": ["trusted-root-certificates"], "group": "Properties", "help": {"short": "Array of references to application gateway trusted root certificates."}, "item": {"type": "@SubResource_create"}}, {"type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<@ApplicationGatewayCustomError_create>", "var": "$parameters.properties.customErrorConfigurations", "options": ["custom-error-configurations"], "group": "Properties", "help": {"short": "Custom error configurations of the application gateway resource."}, "item": {"type": "@ApplicationGatewayCustomError_create"}}, {"type": "boolean", "var": "$parameters.properties.enableFips", "options": ["enable-fips"], "group": "Properties", "help": {"short": "Whether FIPS is enabled on the application gateway resource."}}, {"type": "boolean", "var": "$parameters.properties.enableHttp2", "options": ["enable-http2"], "group": "Properties", "help": {"short": "Whether HTTP2 is enabled on the application gateway resource."}}, {"type": "array<object>", "var": "$parameters.properties.frontendIPConfigurations", "options": ["frontend-ip-configurations"], "group": "Properties", "help": {"short": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].name", "options": ["name"], "help": {"short": "Name of the frontend IP configuration that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAddress", "options": ["private-ip-address"], "group": "Properties", "help": {"short": "PrivateIPAddress of the network interface IP Configuration."}}, {"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "group": "Properties", "help": {"short": "The private IP address allocation method."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "@SubResource_create", "var": "$parameters.properties.frontendIPConfigurations[].properties.publicIPAddress", "options": ["public-ip-address"], "group": "Properties", "help": {"short": "Reference to the PublicIP resource."}}, {"type": "@SubResource_create", "var": "$parameters.properties.frontendIPConfigurations[].properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Reference to the subnet resource."}}, {"type": "string", "var": "$parameters.properties.frontendIPConfigurations[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.frontendPorts", "options": ["frontend-ports"], "group": "Properties", "help": {"short": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.frontendPorts[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.frontendPorts[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.frontendPorts[].name", "options": ["name"], "help": {"short": "Name of the frontend port that is unique within an Application Gateway."}}, {"type": "integer32", "var": "$parameters.properties.frontendPorts[].properties.port", "options": ["port"], "group": "Properties", "help": {"short": "Frontend port."}}, {"type": "string", "var": "$parameters.properties.frontendPorts[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "$parameters.properties.frontendPorts[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.gatewayIPConfigurations", "options": ["gateway-ip-configurations"], "group": "Properties", "help": {"short": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].name", "options": ["name"], "help": {"short": "Name of the IP configuration that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "object", "var": "$parameters.properties.gatewayIPConfigurations[].properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Reference to the subnet resource. A subnet from where application gateway gets its private address."}, "args": [{"type": "string", "var": "@SubResource_create.id", "options": ["id"], "help": {"short": "Resource ID."}}], "cls": "SubResource_create"}, {"type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.httpListeners", "options": ["http-listeners"], "group": "Properties", "help": {"short": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.httpListeners[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.httpListeners[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.httpListeners[].name", "options": ["name"], "help": {"short": "Name of the HTTP listener that is unique within an Application Gateway."}}, {"type": "array<object>", "var": "$parameters.properties.httpListeners[].properties.customErrorConfigurations", "options": ["custom-error-configurations"], "group": "Properties", "help": {"short": "Custom error configurations of the HTTP listener."}, "item": {"type": "object", "args": [{"type": "string", "var": "@ApplicationGatewayCustomError_create.customErrorPageUrl", "options": ["custom-error-page-url"], "help": {"short": "Error page URL of the application gateway customer error."}}, {"type": "string", "var": "@ApplicationGatewayCustomError_create.statusCode", "options": ["status-code"], "help": {"short": "Status code of the application gateway customer error."}, "enum": {"items": [{"name": "HttpStatus403", "value": "HttpStatus403"}, {"name": "HttpStatus502", "value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_create"}}, {"type": "@SubResource_create", "var": "$parameters.properties.httpListeners[].properties.frontendIPConfiguration", "options": ["frontend-ip-configuration"], "group": "Properties", "help": {"short": "Frontend IP configuration resource of an application gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.httpListeners[].properties.frontendPort", "options": ["frontend-port"], "group": "Properties", "help": {"short": "Frontend port resource of an application gateway."}}, {"type": "string", "var": "$parameters.properties.httpListeners[].properties.hostName", "options": ["host-name"], "group": "Properties", "help": {"short": "Host name of HTTP listener."}}, {"type": "string", "var": "$parameters.properties.httpListeners[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "Protocol of the HTTP listener."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}, {"type": "string", "var": "$parameters.properties.httpListeners[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "boolean", "var": "$parameters.properties.httpListeners[].properties.requireServerNameIndication", "options": ["require-server-name-indication"], "group": "Properties", "help": {"short": "Applicable only if protocol is https. Enables SNI for multi-hosting."}}, {"type": "@SubResource_create", "var": "$parameters.properties.httpListeners[].properties.sslCertificate", "options": ["ssl-certificate"], "group": "Properties", "help": {"short": "SSL certificate resource of an application gateway."}}, {"type": "string", "var": "$parameters.properties.httpListeners[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.probes", "options": ["probes"], "group": "Properties", "help": {"short": "Probes of the application gateway resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.probes[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.probes[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.probes[].name", "options": ["name"], "help": {"short": "Name of the probe that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.probes[].properties.host", "options": ["host"], "group": "Properties", "help": {"short": "Host name to send the probe to."}}, {"type": "integer32", "var": "$parameters.properties.probes[].properties.interval", "options": ["interval"], "group": "Properties", "help": {"short": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds."}}, {"type": "object", "var": "$parameters.properties.probes[].properties.match", "options": ["match"], "group": "Properties", "help": {"short": "Criterion for classifying a healthy probe response."}, "args": [{"type": "string", "var": "$parameters.properties.probes[].properties.match.body", "options": ["body"], "help": {"short": "Body that must be contained in the health response. Default value is empty."}}, {"type": "array<string>", "var": "$parameters.properties.probes[].properties.match.statusCodes", "options": ["status-codes"], "help": {"short": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399."}, "item": {"type": "string"}}]}, {"type": "integer32", "var": "$parameters.properties.probes[].properties.minServers", "options": ["min-servers"], "group": "Properties", "help": {"short": "Minimum number of servers that are always marked healthy. Default value is 0."}}, {"type": "string", "var": "$parameters.properties.probes[].properties.path", "options": ["path"], "group": "Properties", "help": {"short": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."}}, {"type": "boolean", "var": "$parameters.properties.probes[].properties.pickHostNameFromBackendHttpSettings", "options": ["pick-host-name-from-backend-http-settings"], "group": "Properties", "help": {"short": "Whether the host header should be picked from the backend http settings. Default value is false."}}, {"type": "string", "var": "$parameters.properties.probes[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "The protocol used for the probe."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}, {"type": "string", "var": "$parameters.properties.probes[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "integer32", "var": "$parameters.properties.probes[].properties.timeout", "options": ["timeout"], "group": "Properties", "help": {"short": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."}}, {"type": "integer32", "var": "$parameters.properties.probes[].properties.unhealthyThreshold", "options": ["unhealthy-threshold"], "group": "Properties", "help": {"short": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20."}}, {"type": "string", "var": "$parameters.properties.probes[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "string", "var": "$parameters.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "array<object>", "var": "$parameters.properties.redirectConfigurations", "options": ["redirect-configurations"], "group": "Properties", "help": {"short": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.redirectConfigurations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.redirectConfigurations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.redirectConfigurations[].name", "options": ["name"], "help": {"short": "Name of the redirect configuration that is unique within an Application Gateway."}}, {"type": "boolean", "var": "$parameters.properties.redirectConfigurations[].properties.includePath", "options": ["include-path"], "group": "Properties", "help": {"short": "Include path in the redirected url."}}, {"type": "boolean", "var": "$parameters.properties.redirectConfigurations[].properties.includeQueryString", "options": ["include-query-string"], "group": "Properties", "help": {"short": "Include query string in the redirected url."}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.redirectConfigurations[].properties.pathRules", "options": ["path-rules"], "group": "Properties", "help": {"short": "Path rules specifying redirect configuration."}, "item": {"type": "@SubResource_create"}}, {"type": "string", "var": "$parameters.properties.redirectConfigurations[].properties.redirectType", "options": ["redirect-type"], "group": "Properties", "help": {"short": "HTTP redirection type."}, "enum": {"items": [{"name": "Found", "value": "Found"}, {"name": "Permanent", "value": "Permanent"}, {"name": "SeeOther", "value": "SeeOther"}, {"name": "Temporary", "value": "Temporary"}]}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.redirectConfigurations[].properties.requestRoutingRules", "options": ["request-routing-rules"], "group": "Properties", "help": {"short": "Request routing specifying redirect configuration."}, "item": {"type": "@SubResource_create"}}, {"type": "@SubResource_create", "var": "$parameters.properties.redirectConfigurations[].properties.targetListener", "options": ["target-listener"], "group": "Properties", "help": {"short": "Reference to a listener to redirect the request to."}}, {"type": "string", "var": "$parameters.properties.redirectConfigurations[].properties.targetUrl", "options": ["target-url"], "group": "Properties", "help": {"short": "Url to redirect the request to."}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.redirectConfigurations[].properties.urlPathMaps", "options": ["url-path-maps"], "group": "Properties", "help": {"short": "Url path maps specifying default redirect configuration."}, "item": {"type": "@SubResource_create"}}, {"type": "string", "var": "$parameters.properties.redirectConfigurations[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.requestRoutingRules", "options": ["request-routing-rules"], "group": "Properties", "help": {"short": "Request routing rules of the application gateway resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.requestRoutingRules[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.requestRoutingRules[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.requestRoutingRules[].name", "options": ["name"], "help": {"short": "Name of the request routing rule that is unique within an Application Gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.requestRoutingRules[].properties.backendAddressPool", "options": ["backend-address-pool"], "group": "Properties", "help": {"short": "Backend address pool resource of the application gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.requestRoutingRules[].properties.backendHttpSettings", "options": ["backend-http-settings"], "group": "Properties", "help": {"short": "Backend http settings resource of the application gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.requestRoutingRules[].properties.httpListener", "options": ["http-listener"], "group": "Properties", "help": {"short": "Http listener resource of the application gateway."}}, {"type": "string", "var": "$parameters.properties.requestRoutingRules[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "@SubResource_create", "var": "$parameters.properties.requestRoutingRules[].properties.redirectConfiguration", "options": ["redirect-configuration"], "group": "Properties", "help": {"short": "Redirect configuration resource of the application gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.requestRoutingRules[].properties.rewriteRuleSet", "options": ["rewrite-rule-set"], "group": "Properties", "help": {"short": "Rewrite Rule Set resource in Basic rule of the application gateway."}}, {"type": "string", "var": "$parameters.properties.requestRoutingRules[].properties.ruleType", "options": ["rule-type"], "group": "Properties", "help": {"short": "Rule type."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "PathBasedRouting", "value": "PathBasedRouting"}]}}, {"type": "@SubResource_create", "var": "$parameters.properties.requestRoutingRules[].properties.urlPathMap", "options": ["url-path-map"], "group": "Properties", "help": {"short": "URL path map resource of the application gateway."}}, {"type": "string", "var": "$parameters.properties.requestRoutingRules[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "string", "var": "$parameters.properties.resourceGuid", "options": ["resource-guid"], "group": "Properties", "help": {"short": "Resource GUID property of the application gateway resource."}}, {"type": "array<object>", "var": "$parameters.properties.rewriteRuleSets", "options": ["rewrite-rule-sets"], "group": "Properties", "help": {"short": "Rewrite rules for the application gateway resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.rewriteRuleSets[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.rewriteRuleSets[].name", "options": ["name"], "help": {"short": "Name of the rewrite rule set that is unique within an Application Gateway."}}, {"type": "array<object>", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules", "options": ["rewrite-rules"], "group": "Properties", "help": {"short": "Rewrite rules in the rewrite rule set."}, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet", "options": ["action-set"], "help": {"short": "Set of actions to be done as part of the rewrite Rule."}, "args": [{"type": "array<object>", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations", "options": ["request-header-configurations"], "help": {"short": "Request Header Actions in the Action Set."}, "item": {"type": "object", "args": [{"type": "string", "var": "@ApplicationGatewayHeaderConfiguration_create.headerName", "options": ["header-name"], "help": {"short": "Header name of the header configuration."}}, {"type": "string", "var": "@ApplicationGatewayHeaderConfiguration_create.headerValue", "options": ["header-value"], "help": {"short": "Header value of the header configuration."}}], "cls": "ApplicationGatewayHeaderConfiguration_create"}}, {"type": "array<@ApplicationGatewayHeaderConfiguration_create>", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations", "options": ["response-header-configurations"], "help": {"short": "Response Header Actions in the Action Set."}, "item": {"type": "@ApplicationGatewayHeaderConfiguration_create"}}]}, {"type": "string", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].name", "options": ["name"], "help": {"short": "Name of the rewrite rule that is unique within an Application Gateway."}}]}}]}}, {"type": "object", "var": "$parameters.properties.sku", "options": ["sku"], "group": "Properties", "help": {"short": "SKU of the application gateway resource."}, "args": [{"type": "integer32", "var": "$parameters.properties.sku.capacity", "options": ["capacity"], "help": {"short": "Capacity (instance count) of an application gateway."}}, {"type": "string", "var": "$parameters.properties.sku.name", "options": ["name"], "help": {"short": "Name of an application gateway SKU."}, "enum": {"items": [{"name": "Standard_Large", "value": "Standard_Large"}, {"name": "Standard_Medium", "value": "Standard_Medium"}, {"name": "Standard_Small", "value": "Standard_Small"}, {"name": "Standard_v2", "value": "Standard_v2"}, {"name": "WAF_Large", "value": "WAF_Large"}, {"name": "WAF_Medium", "value": "WAF_Medium"}, {"name": "WAF_v2", "value": "WAF_v2"}]}}, {"type": "string", "var": "$parameters.properties.sku.tier", "options": ["tier"], "help": {"short": "Tier of an application gateway."}, "enum": {"items": [{"name": "Standard", "value": "Standard"}, {"name": "Standard_v2", "value": "Standard_v2"}, {"name": "WAF", "value": "WAF"}, {"name": "WAF_v2", "value": "WAF_v2"}]}}]}, {"type": "array<object>", "var": "$parameters.properties.sslCertificates", "options": ["ssl-certificates"], "group": "Properties", "help": {"short": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.sslCertificates[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].name", "options": ["name"], "help": {"short": "Name of the SSL certificate that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].properties.data", "options": ["data"], "group": "Properties", "help": {"short": "Base-64 encoded pfx certificate. Only applicable in PUT Request."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].properties.keyVaultSecretId", "options": ["key-vault-secret-id"], "group": "Properties", "help": {"short": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].properties.password", "options": ["password"], "group": "Properties", "help": {"short": "Password for the pfx file specified in data. Only applicable in PUT request."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].properties.publicCertData", "options": ["public-cert-data"], "group": "Properties", "help": {"short": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request."}}, {"type": "string", "var": "$parameters.properties.sslCertificates[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "object", "var": "$parameters.properties.sslPolicy", "options": ["ssl-policy"], "group": "Properties", "help": {"short": "SSL policy of the application gateway resource."}, "args": [{"type": "array<string>", "var": "$parameters.properties.sslPolicy.cipherSuites", "options": ["cipher-suites"], "help": {"short": "Ssl cipher suites to be enabled in the specified order to application gateway."}, "item": {"type": "string", "enum": {"items": [{"name": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA", "value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"name": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA", "value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"name": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", "value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA", "value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"name": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", "value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"name": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", "value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA", "value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", "value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", "value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", "value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", "value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", "value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"name": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", "value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", "value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", "value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", "value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", "value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"name": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"name": "TLS_RSA_WITH_3DES_EDE_CBC_SHA", "value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"name": "TLS_RSA_WITH_AES_128_CBC_SHA", "value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_RSA_WITH_AES_128_CBC_SHA256", "value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_RSA_WITH_AES_128_GCM_SHA256", "value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_RSA_WITH_AES_256_CBC_SHA", "value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_RSA_WITH_AES_256_CBC_SHA256", "value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"name": "TLS_RSA_WITH_AES_256_GCM_SHA384", "value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"type": "array<string>", "var": "$parameters.properties.sslPolicy.disabledSslProtocols", "options": ["disabled-ssl-protocols"], "help": {"short": "Ssl protocols to be disabled on application gateway."}, "item": {"type": "string", "enum": {"items": [{"name": "TLSv1_0", "value": "TLSv1_0"}, {"name": "TLSv1_1", "value": "TLSv1_1"}, {"name": "TLSv1_2", "value": "TLSv1_2"}]}}}, {"type": "string", "var": "$parameters.properties.sslPolicy.minProtocolVersion", "options": ["min-protocol-version"], "help": {"short": "Minimum version of Ssl protocol to be supported on application gateway."}, "enum": {"items": [{"name": "TLSv1_0", "value": "TLSv1_0"}, {"name": "TLSv1_1", "value": "TLSv1_1"}, {"name": "TLSv1_2", "value": "TLSv1_2"}]}}, {"type": "string", "var": "$parameters.properties.sslPolicy.policyName", "options": ["policy-name"], "help": {"short": "Name of Ssl predefined policy"}, "enum": {"items": [{"name": "AppGwSslPolicy20150501", "value": "AppGwSslPolicy20150501"}, {"name": "AppGwSslPolicy20170401", "value": "AppGwSslPolicy20170401"}, {"name": "AppGwSslPolicy20170401S", "value": "AppGwSslPolicy20170401S"}]}}, {"type": "string", "var": "$parameters.properties.sslPolicy.policyType", "options": ["policy-type"], "help": {"short": "Type of Ssl Policy"}, "enum": {"items": [{"name": "Custom", "value": "Custom"}, {"name": "Predefined", "value": "Predefined"}]}}]}, {"type": "array<object>", "var": "$parameters.properties.trustedRootCertificates", "options": ["trusted-root-certificates"], "group": "Properties", "help": {"short": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.trustedRootCertificates[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.trustedRootCertificates[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.trustedRootCertificates[].name", "options": ["name"], "help": {"short": "Name of the trusted root certificate that is unique within an Application Gateway."}}, {"type": "string", "var": "$parameters.properties.trustedRootCertificates[].properties.data", "options": ["data"], "group": "Properties", "help": {"short": "Certificate public data."}}, {"type": "string", "var": "$parameters.properties.trustedRootCertificates[].properties.keyVaultSecretId", "options": ["key-vault-secret-id"], "group": "Properties", "help": {"short": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."}}, {"type": "string", "var": "$parameters.properties.trustedRootCertificates[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "$parameters.properties.trustedRootCertificates[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "array<object>", "var": "$parameters.properties.urlPathMaps", "options": ["url-path-maps"], "group": "Properties", "help": {"short": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.urlPathMaps[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].name", "options": ["name"], "help": {"short": "Name of the URL path map that is unique within an Application Gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.defaultBackendAddressPool", "options": ["default-backend-address-pool"], "group": "Properties", "help": {"short": "Default backend address pool resource of URL path map."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.defaultBackendHttpSettings", "options": ["default-backend-http-settings"], "group": "Properties", "help": {"short": "Default backend http settings resource of URL path map."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.defaultRedirectConfiguration", "options": ["default-redirect-configuration"], "group": "Properties", "help": {"short": "Default redirect configuration resource of URL path map."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.defaultRewriteRuleSet", "options": ["default-rewrite-rule-set"], "group": "Properties", "help": {"short": "Default Rewrite rule set resource of URL path map."}}, {"type": "array<object>", "var": "$parameters.properties.urlPathMaps[].properties.pathRules", "options": ["path-rules"], "group": "Properties", "help": {"short": "Path rule of URL path map resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].name", "options": ["name"], "help": {"short": "Name of the path rule that is unique within an Application Gateway."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendAddressPool", "options": ["backend-address-pool"], "group": "Properties", "help": {"short": "Backend address pool resource of URL path map path rule."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendHttpSettings", "options": ["backend-http-settings"], "group": "Properties", "help": {"short": "Backend http settings resource of URL path map path rule."}}, {"type": "array<string>", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.paths", "options": ["paths"], "group": "Properties", "help": {"short": "Path rules of URL path map."}, "item": {"type": "string"}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.redirectConfiguration", "options": ["redirect-configuration"], "group": "Properties", "help": {"short": "Redirect configuration resource of URL path map path rule."}}, {"type": "@SubResource_create", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.rewriteRuleSet", "options": ["rewrite-rule-set"], "group": "Properties", "help": {"short": "Rewrite rule set resource of URL path map path rule."}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"type": "string", "var": "$parameters.properties.urlPathMaps[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"type": "object", "var": "$parameters.properties.webApplicationFirewallConfiguration", "options": ["web-application-firewall-configuration"], "group": "Properties", "help": {"short": "Web application firewall configuration."}, "args": [{"type": "array<object>", "var": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups", "options": ["disabled-rule-groups"], "help": {"short": "The disabled rule groups."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].ruleGroupName", "options": ["rule-group-name"], "required": true, "help": {"short": "The name of the rule group that will be disabled."}}, {"type": "array<integer32>", "var": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].rules", "options": ["rules"], "help": {"short": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled."}, "item": {"type": "integer32"}}]}}, {"type": "boolean", "var": "$parameters.properties.webApplicationFirewallConfiguration.enabled", "options": ["enabled"], "required": true, "help": {"short": "Whether the web application firewall is enabled or not."}}, {"type": "array<object>", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions", "options": ["exclusions"], "help": {"short": "The exclusion list."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].matchVariable", "options": ["match-variable"], "required": true, "help": {"short": "The variable to be excluded."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selector", "options": ["selector"], "required": true, "help": {"short": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selectorMatchOperator", "options": ["selector-match-operator"], "required": true, "help": {"short": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to."}}]}}, {"type": "integer32", "var": "$parameters.properties.webApplicationFirewallConfiguration.fileUploadLimitInMb", "options": ["file-upload-limit-in-mb"], "help": {"short": "Maximum file upload size in Mb for WAF."}, "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.firewallMode", "options": ["firewall-mode"], "required": true, "help": {"short": "Web application firewall mode."}, "enum": {"items": [{"name": "Detection", "value": "Detection"}, {"name": "Prevention", "value": "Prevention"}]}}, {"type": "integer32", "var": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySize", "options": ["max-request-body-size"], "help": {"short": "Maximum request body size for WAF."}, "format": {"maximum": 128, "minimum": 8}}, {"type": "integer32", "var": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb", "options": ["max-request-body-size-in-kb"], "help": {"short": "Maximum request body size in Kb for WAF."}, "format": {"maximum": 128, "minimum": 8}}, {"type": "boolean", "var": "$parameters.properties.webApplicationFirewallConfiguration.requestBodyCheck", "options": ["request-body-check"], "help": {"short": "Whether allow WAF to check request Body."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetType", "options": ["rule-set-type"], "required": true, "help": {"short": "The type of the web application firewall rule set. Possible values are: 'OWASP'."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetVersion", "options": ["rule-set-version"], "required": true, "help": {"short": "The version of the rule set type."}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "ApplicationGateways_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "applicationGatewayName", "arg": "$Path.applicationGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "etag", "arg": "$parameters.etag"}, {"type": "ResourceId", "name": "id", "arg": "$parameters.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"type": "IdentityObject", "name": "identity", "arg": "$parameters.identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "authenticationCertificates", "arg": "$parameters.properties.authenticationCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.authenticationCertificates[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.authenticationCertificates[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.authenticationCertificates[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data", "arg": "$parameters.properties.authenticationCertificates[].properties.data"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.authenticationCertificates[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.authenticationCertificates[].type"}]}}, {"type": "object", "name": "autoscaleConfiguration", "arg": "$parameters.properties.autoscaleConfiguration", "props": [{"type": "integer32", "name": "maxCapacity", "arg": "$parameters.properties.autoscaleConfiguration.maxCapacity", "format": {"minimum": 2}}, {"type": "integer32", "name": "minCapacity", "arg": "$parameters.properties.autoscaleConfiguration.minCapacity", "required": true, "format": {"minimum": 0}}]}, {"type": "array<object>", "name": "backendAddressPools", "arg": "$parameters.properties.backendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.backendAddressPools[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.backendAddressPools[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.backendAddressPools[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "arg": "$parameters.properties.backendAddressPools[].properties.backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn", "arg": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].fqdn"}, {"type": "string", "name": "ipAddress", "arg": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].ipAddress"}]}}, {"type": "array<object>", "name": "backendIPConfigurations", "arg": "$parameters.properties.backendAddressPools[].properties.backendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_create.etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_create.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_create.name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "applicationGatewayBackendAddressPools", "arg": "@NetworkInterfaceIPConfiguration_create.properties.applicationGatewayBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@ApplicationGatewayBackendAddressPool_create.etag"}, {"type": "string", "name": "id", "arg": "@ApplicationGatewayBackendAddressPool_create.id"}, {"type": "string", "name": "name", "arg": "@ApplicationGatewayBackendAddressPool_create.name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "arg": "@ApplicationGatewayBackendAddressPool_create.properties.backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn", "arg": "@ApplicationGatewayBackendAddressPool_create.properties.backendAddresses[].fqdn"}, {"type": "string", "name": "ipAddress", "arg": "@ApplicationGatewayBackendAddressPool_create.properties.backendAddresses[].ipAddress"}]}}, {"type": "array<@NetworkInterfaceIPConfiguration_create>", "name": "backendIPConfigurations", "arg": "@ApplicationGatewayBackendAddressPool_create.properties.backendIPConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_create"}}, {"type": "string", "name": "provisioningState", "arg": "@ApplicationGatewayBackendAddressPool_create.properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "@ApplicationGatewayBackendAddressPool_create.type"}], "cls": "ApplicationGatewayBackendAddressPool_create"}}, {"type": "array<@ApplicationSecurityGroup_create>", "name": "applicationSecurityGroups", "arg": "@NetworkInterfaceIPConfiguration_create.properties.applicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_create"}}, {"type": "array<object>", "name": "loadBalancerBackendAddressPools", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerBackendAddressPools[].properties.provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "loadBalancerInboundNatRules", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "backendPort", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.backendPort"}, {"type": "boolean", "name": "enableFloatingIP", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"}, {"type": "boolean", "name": "enableTcpReset", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.enableTcpReset"}, {"type": "@SubResource_create", "name": "frontendIPConfiguration", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"}, {"type": "integer32", "name": "frontendPort", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.frontendPort"}, {"type": "integer32", "name": "idleTimeoutInMinutes", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"}, {"type": "string", "name": "protocol", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.protocol", "enum": {"items": [{"value": "All"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_create.properties.loadBalancerInboundNatRules[].properties.provisioningState"}], "clientFlatten": true}]}}, {"type": "boolean", "name": "primary", "arg": "@NetworkInterfaceIPConfiguration_create.properties.primary"}, {"type": "string", "name": "privateIPAddress", "arg": "@NetworkInterfaceIPConfiguration_create.properties.privateIPAddress"}, {"type": "string", "name": "privateIPAddressVersion", "arg": "@NetworkInterfaceIPConfiguration_create.properties.privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "@NetworkInterfaceIPConfiguration_create.properties.privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_create.properties.provisioningState"}, {"type": "@PublicIPAddress_create", "name": "publicIPAddress", "arg": "@NetworkInterfaceIPConfiguration_create.properties.publicIPAddress"}, {"type": "@Subnet_create", "name": "subnet", "arg": "@NetworkInterfaceIPConfiguration_create.properties.subnet"}, {"type": "array<object>", "name": "virtualNetworkTaps", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "destinationLoadBalancerFrontEndIPConfiguration", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState"}, {"type": "object", "name": "publicIPAddress", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress", "props": [{"type": "string", "name": "etag", "arg": "@PublicIPAddress_create.etag"}, {"type": "ResourceId", "name": "id", "arg": "@PublicIPAddress_create.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@PublicIPAddress_create.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "ddosSettings", "arg": "@PublicIPAddress_create.properties.ddosSettings", "props": [{"type": "@SubResource_create", "name": "ddosCustomPolicy", "arg": "@PublicIPAddress_create.properties.ddosSettings.ddosCustomPolicy"}, {"type": "string", "name": "protectionCoverage", "arg": "@PublicIPAddress_create.properties.ddosSettings.protectionCoverage", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "dnsSettings", "arg": "@PublicIPAddress_create.properties.dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "arg": "@PublicIPAddress_create.properties.dnsSettings.domainNameLabel"}, {"type": "string", "name": "fqdn", "arg": "@PublicIPAddress_create.properties.dnsSettings.fqdn"}, {"type": "string", "name": "reverseFqdn", "arg": "@PublicIPAddress_create.properties.dnsSettings.reverseFqdn"}]}, {"type": "integer32", "name": "idleTimeoutInMinutes", "arg": "@PublicIPAddress_create.properties.idleTimeoutInMinutes"}, {"type": "string", "name": "ipAddress", "arg": "@PublicIPAddress_create.properties.ipAddress"}, {"type": "array<object>", "name": "ipTags", "arg": "@PublicIPAddress_create.properties.ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType", "arg": "@PublicIPAddress_create.properties.ipTags[].ipTagType"}, {"type": "string", "name": "tag", "arg": "@PublicIPAddress_create.properties.ipTags[].tag"}]}}, {"type": "string", "name": "provisioningState", "arg": "@PublicIPAddress_create.properties.provisioningState"}, {"type": "string", "name": "publicIPAddressVersion", "arg": "@PublicIPAddress_create.properties.publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "arg": "@PublicIPAddress_create.properties.publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_create", "name": "publicIPPrefix", "arg": "@PublicIPAddress_create.properties.publicIPPrefix"}, {"type": "string", "name": "resourceGuid", "arg": "@PublicIPAddress_create.properties.resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "sku", "arg": "@PublicIPAddress_create.sku", "props": [{"type": "string", "name": "name", "arg": "@PublicIPAddress_create.sku.name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "arg": "@PublicIPAddress_create.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "@PublicIPAddress_create.zones", "item": {"type": "string"}}], "cls": "PublicIPAddress_create"}, {"type": "@SubResource_create", "name": "publicIPPrefix", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix"}, {"type": "object", "name": "subnet", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_create.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"type": "string", "name": "name", "arg": "@Subnet_create.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix", "arg": "@Subnet_create.properties.addressPrefix"}, {"type": "array<string>", "name": "addressPrefixes", "arg": "@Subnet_create.properties.addressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "delegations", "arg": "@Subnet_create.properties.delegations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.properties.delegations[].etag"}, {"type": "string", "name": "id", "arg": "@Subnet_create.properties.delegations[].id"}, {"type": "string", "name": "name", "arg": "@Subnet_create.properties.delegations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "actions", "arg": "@Subnet_create.properties.delegations[].properties.actions", "item": {"type": "string"}}, {"type": "string", "name": "serviceName", "arg": "@Subnet_create.properties.delegations[].properties.serviceName"}], "clientFlatten": true}]}}, {"type": "object", "name": "networkSecurityGroup", "arg": "@Subnet_create.properties.networkSecurityGroup", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.properties.networkSecurityGroup.etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_create.properties.networkSecurityGroup.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@Subnet_create.properties.networkSecurityGroup.location"}, {"type": "object", "name": "properties", "props": [{"type": "array<@SecurityRule_create>", "name": "defaultSecurityRules", "arg": "@Subnet_create.properties.networkSecurityGroup.properties.defaultSecurityRules", "item": {"type": "@SecurityRule_create"}}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_create.properties.networkSecurityGroup.properties.provisioningState"}, {"type": "string", "name": "resourceGuid", "arg": "@Subnet_create.properties.networkSecurityGroup.properties.resourceGuid"}, {"type": "array<object>", "name": "securityRules", "arg": "@Subnet_create.properties.networkSecurityGroup.properties.securityRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@SecurityRule_create.etag"}, {"type": "ResourceId", "name": "id", "arg": "@SecurityRule_create.id"}, {"type": "string", "name": "name", "arg": "@SecurityRule_create.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "access", "arg": "@SecurityRule_create.properties.access", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "string", "name": "description", "arg": "@SecurityRule_create.properties.description"}, {"type": "string", "name": "destinationAddressPrefix", "arg": "@SecurityRule_create.properties.destinationAddressPrefix"}, {"type": "array<string>", "name": "destinationAddressPrefixes", "arg": "@SecurityRule_create.properties.destinationAddressPrefixes", "item": {"type": "string"}}, {"type": "array<@ApplicationSecurityGroup_create>", "name": "destinationApplicationSecurityGroups", "arg": "@SecurityRule_create.properties.destinationApplicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_create"}}, {"type": "string", "name": "destinationPortRange", "arg": "@SecurityRule_create.properties.destinationPortRange"}, {"type": "array<string>", "name": "destinationPortRanges", "arg": "@SecurityRule_create.properties.destinationPortRanges", "item": {"type": "string"}}, {"type": "string", "name": "direction", "arg": "@SecurityRule_create.properties.direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "integer32", "name": "priority", "arg": "@SecurityRule_create.properties.priority"}, {"type": "string", "name": "protocol", "arg": "@SecurityRule_create.properties.protocol", "required": true, "enum": {"items": [{"value": "*"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState", "arg": "@SecurityRule_create.properties.provisioningState"}, {"type": "string", "name": "sourceAddressPrefix", "arg": "@SecurityRule_create.properties.sourceAddressPrefix"}, {"type": "array<string>", "name": "sourceAddressPrefixes", "arg": "@SecurityRule_create.properties.sourceAddressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "sourceApplicationSecurityGroups", "arg": "@SecurityRule_create.properties.sourceApplicationSecurityGroups", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "@ApplicationSecurityGroup_create.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@ApplicationSecurityGroup_create.location"}, {"type": "object", "name": "tags", "arg": "@ApplicationSecurityGroup_create.tags", "additionalProps": {"item": {"type": "string"}}}], "cls": "ApplicationSecurityGroup_create"}}, {"type": "string", "name": "sourcePortRange", "arg": "@SecurityRule_create.properties.sourcePortRange"}, {"type": "array<string>", "name": "sourcePortRanges", "arg": "@SecurityRule_create.properties.sourcePortRanges", "item": {"type": "string"}}], "clientFlatten": true}], "cls": "SecurityRule_create"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@Subnet_create.properties.networkSecurityGroup.tags", "additionalProps": {"item": {"type": "string"}}}]}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_create.properties.provisioningState"}, {"type": "array<object>", "name": "resourceNavigationLinks", "arg": "@Subnet_create.properties.resourceNavigationLinks", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "@Subnet_create.properties.resourceNavigationLinks[].id"}, {"type": "string", "name": "name", "arg": "@Subnet_create.properties.resourceNavigationLinks[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link", "arg": "@Subnet_create.properties.resourceNavigationLinks[].properties.link"}, {"type": "string", "name": "linkedResourceType", "arg": "@Subnet_create.properties.resourceNavigationLinks[].properties.linkedResourceType"}], "clientFlatten": true}]}}, {"type": "object", "name": "routeTable", "arg": "@Subnet_create.properties.routeTable", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.properties.routeTable.etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_create.properties.routeTable.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@Subnet_create.properties.routeTable.location"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "disableBgpRoutePropagation", "arg": "@Subnet_create.properties.routeTable.properties.disableBgpRoutePropagation"}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_create.properties.routeTable.properties.provisioningState"}, {"type": "array<object>", "name": "routes", "arg": "@Subnet_create.properties.routeTable.properties.routes", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.properties.routeTable.properties.routes[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_create.properties.routeTable.properties.routes[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"type": "string", "name": "name", "arg": "@Subnet_create.properties.routeTable.properties.routes[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix", "arg": "@Subnet_create.properties.routeTable.properties.routes[].properties.addressPrefix"}, {"type": "string", "name": "nextHopIpAddress", "arg": "@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopIpAddress"}, {"type": "string", "name": "nextHopType", "arg": "@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopType", "required": true, "enum": {"items": [{"value": "Internet"}, {"value": "None"}, {"value": "VirtualAppliance"}, {"value": "VirtualNetworkGateway"}, {"value": "VnetLocal"}]}}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_create.properties.routeTable.properties.routes[].properties.provisioningState"}], "clientFlatten": true}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@Subnet_create.properties.routeTable.tags", "additionalProps": {"item": {"type": "string"}}}]}, {"type": "array<object>", "name": "serviceAssociationLinks", "arg": "@Subnet_create.properties.serviceAssociationLinks", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "@Subnet_create.properties.serviceAssociationLinks[].id"}, {"type": "string", "name": "name", "arg": "@Subnet_create.properties.serviceAssociationLinks[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link", "arg": "@Subnet_create.properties.serviceAssociationLinks[].properties.link"}, {"type": "string", "name": "linkedResourceType", "arg": "@Subnet_create.properties.serviceAssociationLinks[].properties.linkedResourceType"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "serviceEndpointPolicies", "arg": "@Subnet_create.properties.serviceEndpointPolicies", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].location"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "serviceEndpointPolicyDefinitions", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"type": "string", "name": "name", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description"}, {"type": "string", "name": "service", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service"}, {"type": "array<string>", "name": "serviceResources", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources", "item": {"type": "string"}}], "clientFlatten": true}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@Subnet_create.properties.serviceEndpointPolicies[].tags", "additionalProps": {"item": {"type": "string"}}}]}}, {"type": "array<object>", "name": "serviceEndpoints", "arg": "@Subnet_create.properties.serviceEndpoints", "item": {"type": "object", "props": [{"type": "array<string>", "name": "locations", "arg": "@Subnet_create.properties.serviceEndpoints[].locations", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_create.properties.serviceEndpoints[].provisioningState"}, {"type": "string", "name": "service", "arg": "@Subnet_create.properties.serviceEndpoints[].service"}]}}], "clientFlatten": true}], "cls": "Subnet_create"}], "clientFlatten": true}, {"type": "array<string>", "name": "zones", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.zones", "item": {"type": "string"}}]}, {"type": "@NetworkInterfaceIPConfiguration_create", "name": "destinationNetworkInterfaceIPConfiguration", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationNetworkInterfaceIPConfiguration"}, {"type": "integer", "name": "destinationPort", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].properties.destinationPort"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@NetworkInterfaceIPConfiguration_create.properties.virtualNetworkTaps[].tags", "additionalProps": {"item": {"type": "string"}}}]}}], "clientFlatten": true}], "cls": "NetworkInterfaceIPConfiguration_create"}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.backendAddressPools[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.backendAddressPools[].type"}]}}, {"type": "array<object>", "name": "backendHttpSettingsCollection", "arg": "$parameters.properties.backendHttpSettingsCollection", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.backendHttpSettingsCollection[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.backendHttpSettingsCollection[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.backendHttpSettingsCollection[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "affinityCookieName", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.affinityCookieName"}, {"type": "array<@SubResource_create>", "name": "authenticationCertificates", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.authenticationCertificates", "item": {"type": "@SubResource_create"}}, {"type": "object", "name": "connectionDraining", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining", "props": [{"type": "integer32", "name": "drainTimeoutInSec", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.drainTimeoutInSec", "required": true, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.enabled", "required": true}]}, {"type": "string", "name": "cookieBasedAffinity", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.cookieBasedAffinity", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "hostName", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.hostName"}, {"type": "string", "name": "path", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.path"}, {"type": "boolean", "name": "pickHostNameFromBackendAddress", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.pickHostNameFromBackendAddress"}, {"type": "integer32", "name": "port", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.port"}, {"type": "@SubResource_create", "name": "probe", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.probe"}, {"type": "boolean", "name": "probeEnabled", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.probeEnabled"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.provisioningState"}, {"type": "integer32", "name": "requestTimeout", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.requestTimeout"}, {"type": "array<@SubResource_create>", "name": "trustedRootCertificates", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.trustedRootCertificates", "item": {"type": "@SubResource_create"}}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.backendHttpSettingsCollection[].type"}]}}, {"type": "array<@ApplicationGatewayCustomError_create>", "name": "customErrorConfigurations", "arg": "$parameters.properties.customErrorConfigurations", "item": {"type": "@ApplicationGatewayCustomError_create"}}, {"type": "boolean", "name": "enableFips", "arg": "$parameters.properties.enableFips"}, {"type": "boolean", "name": "enableHttp2", "arg": "$parameters.properties.enableHttp2"}, {"type": "array<object>", "name": "frontendIPConfigurations", "arg": "$parameters.properties.frontendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.frontendIPConfigurations[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.frontendIPConfigurations[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.frontendIPConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress", "arg": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.frontendIPConfigurations[].properties.provisioningState"}, {"type": "@SubResource_create", "name": "publicIPAddress", "arg": "$parameters.properties.frontendIPConfigurations[].properties.publicIPAddress"}, {"type": "@SubResource_create", "name": "subnet", "arg": "$parameters.properties.frontendIPConfigurations[].properties.subnet"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.frontendIPConfigurations[].type"}]}}, {"type": "array<object>", "name": "frontendPorts", "arg": "$parameters.properties.frontendPorts", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.frontendPorts[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.frontendPorts[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.frontendPorts[].name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "port", "arg": "$parameters.properties.frontendPorts[].properties.port"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.frontendPorts[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.frontendPorts[].type"}]}}, {"type": "array<object>", "name": "gatewayIPConfigurations", "arg": "$parameters.properties.gatewayIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.gatewayIPConfigurations[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.gatewayIPConfigurations[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.gatewayIPConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState", "arg": "$parameters.properties.gatewayIPConfigurations[].properties.provisioningState"}, {"type": "object", "name": "subnet", "arg": "$parameters.properties.gatewayIPConfigurations[].properties.subnet", "props": [{"type": "string", "name": "id", "arg": "@SubResource_create.id"}], "cls": "SubResource_create"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.gatewayIPConfigurations[].type"}]}}, {"type": "array<object>", "name": "httpListeners", "arg": "$parameters.properties.httpListeners", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.httpListeners[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.httpListeners[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.httpListeners[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "customErrorConfigurations", "arg": "$parameters.properties.httpListeners[].properties.customErrorConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "customErrorPageUrl", "arg": "@ApplicationGatewayCustomError_create.customErrorPageUrl"}, {"type": "string", "name": "statusCode", "arg": "@ApplicationGatewayCustomError_create.statusCode", "enum": {"items": [{"value": "HttpStatus403"}, {"value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_create"}}, {"type": "@SubResource_create", "name": "frontendIPConfiguration", "arg": "$parameters.properties.httpListeners[].properties.frontendIPConfiguration"}, {"type": "@SubResource_create", "name": "frontendPort", "arg": "$parameters.properties.httpListeners[].properties.frontendPort"}, {"type": "string", "name": "hostName", "arg": "$parameters.properties.httpListeners[].properties.hostName"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.httpListeners[].properties.protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.httpListeners[].properties.provisioningState"}, {"type": "boolean", "name": "requireServerNameIndication", "arg": "$parameters.properties.httpListeners[].properties.requireServerNameIndication"}, {"type": "@SubResource_create", "name": "sslCertificate", "arg": "$parameters.properties.httpListeners[].properties.sslCertificate"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.httpListeners[].type"}]}}, {"type": "array<object>", "name": "probes", "arg": "$parameters.properties.probes", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.probes[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.probes[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.probes[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "host", "arg": "$parameters.properties.probes[].properties.host"}, {"type": "integer32", "name": "interval", "arg": "$parameters.properties.probes[].properties.interval"}, {"type": "object", "name": "match", "arg": "$parameters.properties.probes[].properties.match", "props": [{"type": "string", "name": "body", "arg": "$parameters.properties.probes[].properties.match.body"}, {"type": "array<string>", "name": "statusCodes", "arg": "$parameters.properties.probes[].properties.match.statusCodes", "item": {"type": "string"}}]}, {"type": "integer32", "name": "minServers", "arg": "$parameters.properties.probes[].properties.minServers"}, {"type": "string", "name": "path", "arg": "$parameters.properties.probes[].properties.path"}, {"type": "boolean", "name": "pickHostNameFromBackendHttpSettings", "arg": "$parameters.properties.probes[].properties.pickHostNameFromBackendHttpSettings"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.probes[].properties.protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.probes[].properties.provisioningState"}, {"type": "integer32", "name": "timeout", "arg": "$parameters.properties.probes[].properties.timeout"}, {"type": "integer32", "name": "unhealthyThreshold", "arg": "$parameters.properties.probes[].properties.unhealthyThreshold"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.probes[].type"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.provisioningState"}, {"type": "array<object>", "name": "redirectConfigurations", "arg": "$parameters.properties.redirectConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.redirectConfigurations[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.redirectConfigurations[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.redirectConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "includePath", "arg": "$parameters.properties.redirectConfigurations[].properties.includePath"}, {"type": "boolean", "name": "includeQueryString", "arg": "$parameters.properties.redirectConfigurations[].properties.includeQueryString"}, {"type": "array<@SubResource_create>", "name": "pathRules", "arg": "$parameters.properties.redirectConfigurations[].properties.pathRules", "item": {"type": "@SubResource_create"}}, {"type": "string", "name": "redirectType", "arg": "$parameters.properties.redirectConfigurations[].properties.redirectType", "enum": {"items": [{"value": "Found"}, {"value": "Permanent"}, {"value": "SeeOther"}, {"value": "Temporary"}]}}, {"type": "array<@SubResource_create>", "name": "requestRoutingRules", "arg": "$parameters.properties.redirectConfigurations[].properties.requestRoutingRules", "item": {"type": "@SubResource_create"}}, {"type": "@SubResource_create", "name": "targetListener", "arg": "$parameters.properties.redirectConfigurations[].properties.targetListener"}, {"type": "string", "name": "targetUrl", "arg": "$parameters.properties.redirectConfigurations[].properties.targetUrl"}, {"type": "array<@SubResource_create>", "name": "urlPathMaps", "arg": "$parameters.properties.redirectConfigurations[].properties.urlPathMaps", "item": {"type": "@SubResource_create"}}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.redirectConfigurations[].type"}]}}, {"type": "array<object>", "name": "requestRoutingRules", "arg": "$parameters.properties.requestRoutingRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.requestRoutingRules[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.requestRoutingRules[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.requestRoutingRules[].name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_create", "name": "backendAddressPool", "arg": "$parameters.properties.requestRoutingRules[].properties.backendAddressPool"}, {"type": "@SubResource_create", "name": "backendHttpSettings", "arg": "$parameters.properties.requestRoutingRules[].properties.backendHttpSettings"}, {"type": "@SubResource_create", "name": "httpListener", "arg": "$parameters.properties.requestRoutingRules[].properties.httpListener"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.requestRoutingRules[].properties.provisioningState"}, {"type": "@SubResource_create", "name": "redirectConfiguration", "arg": "$parameters.properties.requestRoutingRules[].properties.redirectConfiguration"}, {"type": "@SubResource_create", "name": "rewriteRuleSet", "arg": "$parameters.properties.requestRoutingRules[].properties.rewriteRuleSet"}, {"type": "string", "name": "ruleType", "arg": "$parameters.properties.requestRoutingRules[].properties.ruleType", "enum": {"items": [{"value": "Basic"}, {"value": "PathBasedRouting"}]}}, {"type": "@SubResource_create", "name": "urlPathMap", "arg": "$parameters.properties.requestRoutingRules[].properties.urlPathMap"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.requestRoutingRules[].type"}]}}, {"type": "string", "name": "resourceGuid", "arg": "$parameters.properties.resourceGuid"}, {"type": "array<object>", "name": "rewriteRuleSets", "arg": "$parameters.properties.rewriteRuleSets", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.rewriteRuleSets[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.rewriteRuleSets[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "rewriteRules", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules", "item": {"type": "object", "props": [{"type": "object", "name": "actionSet", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet", "props": [{"type": "array<object>", "name": "requestHeaderConfigurations", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "headerName", "arg": "@ApplicationGatewayHeaderConfiguration_create.headerName"}, {"type": "string", "name": "headerValue", "arg": "@ApplicationGatewayHeaderConfiguration_create.headerValue"}], "cls": "ApplicationGatewayHeaderConfiguration_create"}}, {"type": "array<@ApplicationGatewayHeaderConfiguration_create>", "name": "responseHeaderConfigurations", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations", "item": {"type": "@ApplicationGatewayHeaderConfiguration_create"}}]}, {"type": "string", "name": "name", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].name"}]}}], "clientFlatten": true}]}}, {"type": "object", "name": "sku", "arg": "$parameters.properties.sku", "props": [{"type": "integer32", "name": "capacity", "arg": "$parameters.properties.sku.capacity"}, {"type": "string", "name": "name", "arg": "$parameters.properties.sku.name", "enum": {"items": [{"value": "Standard_Large"}, {"value": "Standard_Medium"}, {"value": "Standard_Small"}, {"value": "Standard_v2"}, {"value": "WAF_Large"}, {"value": "WAF_Medium"}, {"value": "WAF_v2"}]}}, {"type": "string", "name": "tier", "arg": "$parameters.properties.sku.tier", "enum": {"items": [{"value": "Standard"}, {"value": "Standard_v2"}, {"value": "WAF"}, {"value": "WAF_v2"}]}}]}, {"type": "array<object>", "name": "sslCertificates", "arg": "$parameters.properties.sslCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.sslCertificates[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.sslCertificates[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.sslCertificates[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data", "arg": "$parameters.properties.sslCertificates[].properties.data"}, {"type": "string", "name": "keyVaultSecretId", "arg": "$parameters.properties.sslCertificates[].properties.keyVaultSecretId"}, {"type": "string", "name": "password", "arg": "$parameters.properties.sslCertificates[].properties.password"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.sslCertificates[].properties.provisioningState"}, {"type": "string", "name": "publicCertData", "arg": "$parameters.properties.sslCertificates[].properties.publicCertData"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.sslCertificates[].type"}]}}, {"type": "object", "name": "sslPolicy", "arg": "$parameters.properties.sslPolicy", "props": [{"type": "array<string>", "name": "cipherSuites", "arg": "$parameters.properties.sslPolicy.cipherSuites", "item": {"type": "string", "enum": {"items": [{"value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"type": "array<string>", "name": "disabledSslProtocols", "arg": "$parameters.properties.sslPolicy.disabledSslProtocols", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}}, {"type": "string", "name": "minProtocolVersion", "arg": "$parameters.properties.sslPolicy.minProtocolVersion", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}, {"type": "string", "name": "policyName", "arg": "$parameters.properties.sslPolicy.policyName", "enum": {"items": [{"value": "AppGwSslPolicy20150501"}, {"value": "AppGwSslPolicy20170401"}, {"value": "AppGwSslPolicy20170401S"}]}}, {"type": "string", "name": "policyType", "arg": "$parameters.properties.sslPolicy.policyType", "enum": {"items": [{"value": "Custom"}, {"value": "Predefined"}]}}]}, {"type": "array<object>", "name": "trustedRootCertificates", "arg": "$parameters.properties.trustedRootCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.trustedRootCertificates[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.trustedRootCertificates[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.trustedRootCertificates[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data", "arg": "$parameters.properties.trustedRootCertificates[].properties.data"}, {"type": "string", "name": "keyVaultSecretId", "arg": "$parameters.properties.trustedRootCertificates[].properties.keyVaultSecretId"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.trustedRootCertificates[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.trustedRootCertificates[].type"}]}}, {"type": "array<object>", "name": "urlPathMaps", "arg": "$parameters.properties.urlPathMaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.urlPathMaps[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.urlPathMaps[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.urlPathMaps[].name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_create", "name": "defaultBackendAddressPool", "arg": "$parameters.properties.urlPathMaps[].properties.defaultBackendAddressPool"}, {"type": "@SubResource_create", "name": "defaultBackendHttpSettings", "arg": "$parameters.properties.urlPathMaps[].properties.defaultBackendHttpSettings"}, {"type": "@SubResource_create", "name": "defaultRedirectConfiguration", "arg": "$parameters.properties.urlPathMaps[].properties.defaultRedirectConfiguration"}, {"type": "@SubResource_create", "name": "defaultRewriteRuleSet", "arg": "$parameters.properties.urlPathMaps[].properties.defaultRewriteRuleSet"}, {"type": "array<object>", "name": "pathRules", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_create", "name": "backendAddressPool", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendAddressPool"}, {"type": "@SubResource_create", "name": "backendHttpSettings", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendHttpSettings"}, {"type": "array<string>", "name": "paths", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.paths", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.provisioningState"}, {"type": "@SubResource_create", "name": "redirectConfiguration", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.redirectConfiguration"}, {"type": "@SubResource_create", "name": "rewriteRuleSet", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.rewriteRuleSet"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].type"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.urlPathMaps[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.urlPathMaps[].type"}]}}, {"type": "object", "name": "webApplicationFirewallConfiguration", "arg": "$parameters.properties.webApplicationFirewallConfiguration", "props": [{"type": "array<object>", "name": "disabledRuleGroups", "arg": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups", "item": {"type": "object", "props": [{"type": "string", "name": "ruleGroupName", "arg": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].ruleGroupName", "required": true}, {"type": "array<integer32>", "name": "rules", "arg": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].rules", "item": {"type": "integer32"}}]}}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.webApplicationFirewallConfiguration.enabled", "required": true}, {"type": "array<object>", "name": "exclusions", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions", "item": {"type": "object", "props": [{"type": "string", "name": "matchVariable", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].matchVariable", "required": true}, {"type": "string", "name": "selector", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selector", "required": true}, {"type": "string", "name": "selectorMatchOperator", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selectorMatchOperator", "required": true}]}}, {"type": "integer32", "name": "fileUploadLimitInMb", "arg": "$parameters.properties.webApplicationFirewallConfiguration.fileUploadLimitInMb", "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "name": "firewallMode", "arg": "$parameters.properties.webApplicationFirewallConfiguration.firewallMode", "required": true, "enum": {"items": [{"value": "Detection"}, {"value": "Prevention"}]}}, {"type": "integer32", "name": "maxRequestBodySize", "arg": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySize", "format": {"maximum": 128, "minimum": 8}}, {"type": "integer32", "name": "maxRequestBodySizeInKb", "arg": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb", "format": {"maximum": 128, "minimum": 8}}, {"type": "boolean", "name": "requestBodyCheck", "arg": "$parameters.properties.webApplicationFirewallConfiguration.requestBodyCheck"}, {"type": "string", "name": "ruleSetType", "arg": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetType", "required": true}, {"type": "string", "name": "ruleSetVersion", "arg": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetVersion", "required": true}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$parameters.zones", "item": {"type": "string"}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "authenticationCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "autoscaleConfiguration", "props": [{"type": "integer32", "name": "maxCapacity", "format": {"minimum": 2}}, {"type": "integer32", "name": "minCapacity", "required": true, "format": {"minimum": 0}}]}, {"type": "array<object>", "name": "backendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn"}, {"type": "string", "name": "ipAddress"}]}}, {"type": "array<object>", "name": "backendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@ApplicationGatewayBackendAddressPool_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@ApplicationGatewayBackendAddressPool_read"}}, {"type": "array<@ApplicationSecurityGroup_read>", "name": "applicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_read"}}, {"type": "array<object>", "name": "loadBalancerBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "array<@NetworkInterfaceIPConfiguration_read>", "name": "backendIPConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "loadBalancingRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "@SubResource_read", "name": "outboundRule"}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "outboundRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "loadBalancerInboundNatRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "@NetworkInterfaceIPConfiguration_read", "name": "backendIPConfiguration"}, {"type": "integer32", "name": "backendPort"}, {"type": "boolean", "name": "enableFloatingIP"}, {"type": "boolean", "name": "enableTcpReset"}, {"type": "@SubResource_read", "name": "frontendIPConfiguration"}, {"type": "integer32", "name": "frontendPort"}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "All"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@PublicIPAddress_read", "name": "publicIPAddress"}, {"type": "@Subnet_read", "name": "subnet"}, {"type": "array<object>", "name": "virtualNetworkTaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "destinationLoadBalancerFrontEndIPConfiguration", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundNatPools", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundNatRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "loadBalancingRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "outboundRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@PublicIPAddress_read", "name": "publicIPAddress"}, {"type": "@SubResource_read", "name": "publicIPPrefix"}, {"type": "object", "name": "subnet", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix"}, {"type": "array<string>", "name": "addressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "delegations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "actions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "serviceName"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@InterfaceEndpoint_read>", "name": "interfaceEndpoints", "item": {"type": "@InterfaceEndpoint_read"}}, {"readOnly": true, "type": "array<object>", "name": "ipConfigurationProfiles", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "array<object>", "name": "ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "object", "name": "publicIPAddress", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "ddosSettings", "props": [{"type": "@SubResource_read", "name": "ddosCustomPolicy"}, {"type": "string", "name": "protectionCoverage", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel"}, {"type": "string", "name": "fqdn"}, {"type": "string", "name": "reverseFqdn"}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "string", "name": "ipAddress"}, {"readOnly": true, "type": "@IPConfiguration_read", "name": "ipConfiguration"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}, {"type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "PublicIPAddress_read"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}], "cls": "IPConfiguration_read"}}, {"type": "object", "name": "networkSecurityGroup", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@SecurityRule_read>", "name": "defaultSecurityRules", "item": {"type": "@SecurityRule_read"}}, {"readOnly": true, "type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "appliedDnsServers", "item": {"type": "string"}}, {"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}, {"type": "string", "name": "internalDnsNameLabel"}, {"type": "string", "name": "internalDomainNameSuffix"}, {"type": "string", "name": "internalFqdn"}]}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableIPForwarding"}, {"readOnly": true, "type": "array<string>", "name": "hostedWorkloads", "item": {"type": "string"}}, {"type": "object", "name": "interfaceEndpoint", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/interfaceEndpoints/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "endpointService", "props": [{"type": "string", "name": "id"}]}, {"type": "string", "name": "fqdn"}, {"readOnly": true, "type": "array<@NetworkInterface_read>", "name": "networkInterfaces", "item": {"type": "@NetworkInterface_read"}}, {"readOnly": true, "type": "string", "name": "owner"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "InterfaceEndpoint_read"}, {"type": "array<@NetworkInterfaceIPConfiguration_read>", "name": "ipConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_read"}}, {"type": "string", "name": "macAddress"}, {"type": "@NetworkSecurityGroup_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "resourceGuid"}, {"type": "array<@NetworkInterfaceTapConfiguration_read>", "name": "tapConfigurations", "item": {"type": "@NetworkInterfaceTapConfiguration_read"}}, {"readOnly": true, "type": "@SubResource_read", "name": "virtualMachine"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkInterface_read"}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "securityRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "access", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "destinationAddressPrefix"}, {"type": "array<string>", "name": "destinationAddressPrefixes", "item": {"type": "string"}}, {"type": "array<@ApplicationSecurityGroup_read>", "name": "destinationApplicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_read"}}, {"type": "string", "name": "destinationPortRange"}, {"type": "array<string>", "name": "destinationPortRanges", "item": {"type": "string"}}, {"type": "string", "name": "direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "integer32", "name": "priority"}, {"type": "string", "name": "protocol", "required": true, "enum": {"items": [{"value": "*"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "sourceAddressPrefix"}, {"type": "array<string>", "name": "sourceAddressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "sourceApplicationSecurityGroups", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ApplicationSecurityGroup_read"}}, {"type": "string", "name": "sourcePortRange"}, {"type": "array<string>", "name": "sourcePortRanges", "item": {"type": "string"}}], "clientFlatten": true}], "cls": "SecurityRule_read"}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkSecurityGroup_read"}, {"type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "purpose"}, {"type": "array<object>", "name": "resourceNavigationLinks", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link"}, {"type": "string", "name": "linkedResourceType"}, {"readOnly": true, "type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "object", "name": "routeTable", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "disableBgpRoutePropagation"}, {"type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "routes", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix"}, {"type": "string", "name": "nextHopIpAddress"}, {"type": "string", "name": "nextHopType", "required": true, "enum": {"items": [{"value": "Internet"}, {"value": "None"}, {"value": "VirtualAppliance"}, {"value": "VirtualNetworkGateway"}, {"value": "VnetLocal"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}, {"type": "array<object>", "name": "serviceAssociationLinks", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link"}, {"type": "string", "name": "linkedResourceType"}, {"readOnly": true, "type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "serviceEndpointPolicies", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "serviceEndpointPolicyDefinitions", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "description"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "service"}, {"type": "array<string>", "name": "serviceResources", "item": {"type": "string"}}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "serviceEndpoints", "item": {"type": "object", "props": [{"type": "array<string>", "name": "locations", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "service"}]}}], "clientFlatten": true}], "cls": "Subnet_read"}], "clientFlatten": true}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}, {"type": "@NetworkInterfaceIPConfiguration_read", "name": "destinationNetworkInterfaceIPConfiguration"}, {"type": "integer", "name": "destinationPort"}, {"readOnly": true, "type": "array<object>", "name": "networkInterfaceTapConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/tapConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@VirtualNetworkTap_read", "name": "virtualNetworkTap"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkInterfaceTapConfiguration_read"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "VirtualNetworkTap_read"}}], "clientFlatten": true}], "cls": "NetworkInterfaceIPConfiguration_read"}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}], "cls": "ApplicationGatewayBackendAddressPool_read"}}, {"type": "array<object>", "name": "backendHttpSettingsCollection", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "affinityCookieName"}, {"type": "array<@SubResource_read>", "name": "authenticationCertificates", "item": {"type": "@SubResource_read"}}, {"type": "object", "name": "connectionDraining", "props": [{"type": "integer32", "name": "drainTimeoutInSec", "required": true, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "name": "enabled", "required": true}]}, {"type": "string", "name": "cookieBasedAffinity", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "hostName"}, {"type": "string", "name": "path"}, {"type": "boolean", "name": "pickHostNameFromBackendAddress"}, {"type": "integer32", "name": "port"}, {"type": "@SubResource_read", "name": "probe"}, {"type": "boolean", "name": "probeEnabled"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "integer32", "name": "requestTimeout"}, {"type": "array<@SubResource_read>", "name": "trustedRootCertificates", "item": {"type": "@SubResource_read"}}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<@ApplicationGatewayCustomError_read>", "name": "customErrorConfigurations", "item": {"type": "@ApplicationGatewayCustomError_read"}}, {"type": "boolean", "name": "enableFips"}, {"type": "boolean", "name": "enableHttp2"}, {"type": "array<object>", "name": "frontendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "publicIPAddress"}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "frontendPorts", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "port"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "gatewayIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState"}, {"type": "object", "name": "subnet", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "httpListeners", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "customErrorConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "customErrorPageUrl"}, {"type": "string", "name": "statusCode", "enum": {"items": [{"value": "HttpStatus403"}, {"value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_read"}}, {"type": "@SubResource_read", "name": "frontendIPConfiguration"}, {"type": "@SubResource_read", "name": "frontendPort"}, {"type": "string", "name": "hostName"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "boolean", "name": "requireServerNameIndication"}, {"type": "@SubResource_read", "name": "sslCertificate"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "operationalState", "enum": {"items": [{"value": "Running"}, {"value": "Starting"}, {"value": "Stopped"}, {"value": "Stopping"}]}}, {"type": "array<object>", "name": "probes", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "host"}, {"type": "integer32", "name": "interval"}, {"type": "object", "name": "match", "props": [{"type": "string", "name": "body"}, {"type": "array<string>", "name": "statusCodes", "item": {"type": "string"}}]}, {"type": "integer32", "name": "minServers"}, {"type": "string", "name": "path"}, {"type": "boolean", "name": "pickHostNameFromBackendHttpSettings"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "integer32", "name": "timeout"}, {"type": "integer32", "name": "unhealthyThreshold"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "redirectConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "includePath"}, {"type": "boolean", "name": "includeQueryString"}, {"type": "array<@SubResource_read>", "name": "pathRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "redirectType", "enum": {"items": [{"value": "Found"}, {"value": "Permanent"}, {"value": "SeeOther"}, {"value": "Temporary"}]}}, {"type": "array<@SubResource_read>", "name": "requestRoutingRules", "item": {"type": "@SubResource_read"}}, {"type": "@SubResource_read", "name": "targetListener"}, {"type": "string", "name": "targetUrl"}, {"type": "array<@SubResource_read>", "name": "urlPathMaps", "item": {"type": "@SubResource_read"}}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "requestRoutingRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "backendAddressPool"}, {"type": "@SubResource_read", "name": "backendHttpSettings"}, {"type": "@SubResource_read", "name": "httpListener"}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "redirectConfiguration"}, {"type": "@SubResource_read", "name": "rewriteRuleSet"}, {"type": "string", "name": "ruleType", "enum": {"items": [{"value": "Basic"}, {"value": "PathBasedRouting"}]}}, {"type": "@SubResource_read", "name": "urlPathMap"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "rewriteRuleSets", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "rewriteRules", "item": {"type": "object", "props": [{"type": "object", "name": "actionSet", "props": [{"type": "array<object>", "name": "requestHeaderConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "headerName"}, {"type": "string", "name": "headerValue"}], "cls": "ApplicationGatewayHeaderConfiguration_read"}}, {"type": "array<@ApplicationGatewayHeaderConfiguration_read>", "name": "responseHeaderConfigurations", "item": {"type": "@ApplicationGatewayHeaderConfiguration_read"}}]}, {"type": "string", "name": "name"}]}}], "clientFlatten": true}]}}, {"type": "object", "name": "sku", "props": [{"type": "integer32", "name": "capacity"}, {"type": "string", "name": "name", "enum": {"items": [{"value": "Standard_Large"}, {"value": "Standard_Medium"}, {"value": "Standard_Small"}, {"value": "Standard_v2"}, {"value": "WAF_Large"}, {"value": "WAF_Medium"}, {"value": "WAF_v2"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Standard"}, {"value": "Standard_v2"}, {"value": "WAF"}, {"value": "WAF_v2"}]}}]}, {"type": "array<object>", "name": "sslCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "keyVaultSecretId"}, {"type": "string", "name": "password"}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "publicCertData"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "sslPolicy", "props": [{"type": "array<string>", "name": "cipherSuites", "item": {"type": "string", "enum": {"items": [{"value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"type": "array<string>", "name": "disabledSslProtocols", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}}, {"type": "string", "name": "minProtocolVersion", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}, {"type": "string", "name": "policyName", "enum": {"items": [{"value": "AppGwSslPolicy20150501"}, {"value": "AppGwSslPolicy20170401"}, {"value": "AppGwSslPolicy20170401S"}]}}, {"type": "string", "name": "policyType", "enum": {"items": [{"value": "Custom"}, {"value": "Predefined"}]}}]}, {"type": "array<object>", "name": "trustedRootCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "keyVaultSecretId"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "urlPathMaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "defaultBackendAddressPool"}, {"type": "@SubResource_read", "name": "defaultBackendHttpSettings"}, {"type": "@SubResource_read", "name": "defaultRedirectConfiguration"}, {"type": "@SubResource_read", "name": "defaultRewriteRuleSet"}, {"type": "array<object>", "name": "pathRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "backendAddressPool"}, {"type": "@SubResource_read", "name": "backendHttpSettings"}, {"type": "array<string>", "name": "paths", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "redirectConfiguration"}, {"type": "@SubResource_read", "name": "rewriteRuleSet"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "webApplicationFirewallConfiguration", "props": [{"type": "array<object>", "name": "disabledRuleGroups", "item": {"type": "object", "props": [{"type": "string", "name": "ruleGroupName", "required": true}, {"type": "array<integer32>", "name": "rules", "item": {"type": "integer32"}}]}}, {"type": "boolean", "name": "enabled", "required": true}, {"type": "array<object>", "name": "exclusions", "item": {"type": "object", "props": [{"type": "string", "name": "matchVariable", "required": true}, {"type": "string", "name": "selector", "required": true}, {"type": "string", "name": "selectorMatchOperator", "required": true}]}}, {"type": "integer32", "name": "fileUploadLimitInMb", "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "name": "firewallMode", "required": true, "enum": {"items": [{"value": "Detection"}, {"value": "Prevention"}]}}, {"type": "integer32", "name": "maxRequestBodySize", "format": {"maximum": 128, "minimum": 8}}, {"type": "integer32", "name": "maxRequestBodySizeInKb", "format": {"maximum": 128, "minimum": 8}}, {"type": "boolean", "name": "requestBodyCheck"}, {"type": "string", "name": "ruleSetType", "required": true}, {"type": "string", "name": "ruleSetVersion", "required": true}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2018-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/applicationgateways/{}", "version": "2018-11-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9hcHBsaWNhdGlvbkdhdGV3YXlzL3thcHBsaWNhdGlvbkdhdGV3YXlOYW1lfQ==/V/MjAxOC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the application gateway."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"nullable": true, "type": "object", "var": "$parameters.identity", "options": ["identity"], "group": "", "help": {"short": "The identity of the application gateway, if configured."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.identity.type", "options": ["type"], "help": {"short": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.autoscaleConfiguration.maxCapacity", "options": ["max-capacity"], "group": "", "help": {"short": "Upper bound on the number of application gateway instances."}, "format": {"minimum": 2}}, {"type": "integer32", "var": "$parameters.properties.autoscaleConfiguration.minCapacity", "options": ["min-capacity"], "group": "", "help": {"short": "Lower bound on the number of application gateway instances."}, "format": {"minimum": 0}}, {"nullable": true, "type": "array<@ApplicationGatewayCustomError_update>", "var": "$parameters.properties.customErrorConfigurations", "options": ["custom-error-configurations"], "group": "", "help": {"short": "Custom error configurations of the application gateway resource."}, "item": {"nullable": true, "type": "@ApplicationGatewayCustomError_update"}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.enableHttp2", "options": ["http2"], "group": "", "help": {"short": "Use HTTP2 for the application gateway"}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.sku.capacity", "options": ["capacity"], "group": "", "help": {"short": "Number of instances to use with the application gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sku.name", "options": ["sku"], "group": "", "help": {"short": "Name of an application gateway SKU."}, "enum": {"items": [{"name": "Standard_Large", "value": "Standard_Large"}, {"name": "Standard_Medium", "value": "Standard_Medium"}, {"name": "Standard_Small", "value": "Standard_Small"}, {"name": "Standard_v2", "value": "Standard_v2"}, {"name": "WAF_Large", "value": "WAF_Large"}, {"name": "WAF_Medium", "value": "WAF_Medium"}, {"name": "WAF_v2", "value": "WAF_v2"}]}}, {"nullable": true, "type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "", "help": {"short": "Space-separated tags: key[=value] [key[=value] ...]."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "string", "var": "$parameters.etag", "options": ["etag"], "group": "Parameters", "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "$parameters.id", "options": ["id"], "hide": true, "group": "Parameters", "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "hide": true, "group": "Parameters", "help": {"short": "Resource location."}}, {"nullable": true, "type": "array<string>", "var": "$parameters.zones", "options": ["zones"], "hide": true, "group": "Parameters", "help": {"short": "A list of availability zones denoting where the resource needs to come from."}, "item": {"nullable": true, "type": "string"}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.authenticationCertificates", "options": ["authentication-certificates"], "hide": true, "group": "Properties", "help": {"short": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.authenticationCertificates[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.authenticationCertificates[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.authenticationCertificates[].name", "options": ["name"], "help": {"short": "Name of the authentication certificate that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.authenticationCertificates[].properties.data", "options": ["data"], "group": "Properties", "help": {"short": "Certificate public data."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.authenticationCertificates[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.authenticationCertificates[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.backendAddressPools", "options": ["backend-address-pools"], "hide": true, "group": "Properties", "help": {"short": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].name", "options": ["name"], "help": {"short": "Name of the backend address pool that is unique within an Application Gateway."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.backendAddressPools[].properties.backendAddresses", "options": ["backend-addresses"], "group": "Properties", "help": {"short": "Backend addresses."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].fqdn", "options": ["fqdn"], "help": {"short": "Fully qualified domain name (FQDN)."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].ipAddress", "options": ["ip-address"], "help": {"short": "IP address."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.backendAddressPools[].properties.backendIPConfigurations", "options": ["backend-ip-configurations"], "group": "Properties", "help": {"short": "Collection of references to IPs defined in network interfaces."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_update.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_update.properties.applicationGatewayBackendAddressPools", "options": ["application-gateway-backend-address-pools"], "group": "Properties", "help": {"short": "The reference of ApplicationGatewayBackendAddressPool resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.name", "options": ["name"], "help": {"short": "Name of the backend address pool that is unique within an Application Gateway."}}, {"nullable": true, "type": "array<object>", "var": "@ApplicationGatewayBackendAddressPool_update.properties.backendAddresses", "options": ["backend-addresses"], "group": "Properties", "help": {"short": "Backend addresses"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.properties.backendAddresses[].fqdn", "options": ["fqdn"], "help": {"short": "Fully qualified domain name (FQDN)."}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.properties.backendAddresses[].ipAddress", "options": ["ip-address"], "help": {"short": "IP address"}}]}}, {"nullable": true, "type": "array<@NetworkInterfaceIPConfiguration_update>", "var": "@ApplicationGatewayBackendAddressPool_update.properties.backendIPConfigurations", "options": ["backend-ip-configurations"], "group": "Properties", "help": {"short": "Collection of references to IPs defined in network interfaces."}, "item": {"nullable": true, "type": "@NetworkInterfaceIPConfiguration_update"}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayBackendAddressPool_update.type", "options": ["type"], "help": {"short": "Type of the resource."}}], "cls": "ApplicationGatewayBackendAddressPool_update"}}, {"nullable": true, "type": "array<@ApplicationSecurityGroup_update>", "var": "@NetworkInterfaceIPConfiguration_update.properties.applicationSecurityGroups", "options": ["application-security-groups"], "group": "Properties", "help": {"short": "Application security groups in which the IP configuration is included."}, "item": {"nullable": true, "type": "@ApplicationSecurityGroup_update"}}, {"nullable": true, "type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools", "options": ["load-balancer-backend-address-pools"], "group": "Properties", "help": {"short": "The reference of LoadBalancerBackendAddressPool resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].name", "options": ["name"], "help": {"short": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}]}}, {"nullable": true, "type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules", "options": ["load-balancer-inbound-nat-rules"], "group": "Properties", "help": {"short": "A list of references of LoadBalancerInboundNatRules."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].name", "options": ["name"], "help": {"short": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "integer32", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.backendPort", "options": ["backend-port"], "group": "Properties", "help": {"short": "The port used for the internal endpoint. Acceptable values range from 1 to 65535."}}, {"nullable": true, "type": "boolean", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP", "options": ["enable-floating-ip"], "group": "Properties", "help": {"short": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."}}, {"nullable": true, "type": "boolean", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.enableTcpReset", "options": ["enable-tcp-reset"], "group": "Properties", "help": {"short": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."}}, {"nullable": true, "type": "@SubResource_update", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration", "options": ["frontend-ip-configuration"], "group": "Properties", "help": {"short": "A reference to frontend IP addresses."}}, {"nullable": true, "type": "integer32", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.frontendPort", "options": ["frontend-port"], "group": "Properties", "help": {"short": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."}}, {"nullable": true, "type": "integer32", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes", "options": ["idle-timeout-in-minutes"], "group": "Properties", "help": {"short": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'."}, "enum": {"items": [{"name": "All", "value": "All"}, {"name": "Tcp", "value": "Tcp"}, {"name": "Udp", "value": "Udp"}]}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}]}}, {"nullable": true, "type": "boolean", "var": "@NetworkInterfaceIPConfiguration_update.properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Gets whether this is a primary customer address on the network interface."}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.privateIPAddress", "options": ["private-ip-address"], "group": "Properties", "help": {"short": "Private IP address of the IP configuration."}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.privateIPAddressVersion", "options": ["private-ip-address-version"], "group": "Properties", "help": {"short": "Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "group": "Properties", "help": {"short": "Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "@PublicIPAddress_update", "var": "@NetworkInterfaceIPConfiguration_update.properties.publicIPAddress", "options": ["public-ip-address"], "group": "Properties", "help": {"short": "Public IP address bound to the IP configuration."}}, {"nullable": true, "type": "@Subnet_update", "var": "@NetworkInterfaceIPConfiguration_update.properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Subnet bound to the IP configuration."}}, {"nullable": true, "type": "array<object>", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps", "options": ["virtual-network-taps"], "group": "Properties", "help": {"short": "The reference to Virtual Network Taps."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].etag", "options": ["etag"], "help": {"short": "Gets a unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"nullable": true, "type": "object", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration", "options": ["destination-load-balancer-front-end-ip-configuration"], "group": "Properties", "help": {"short": "The reference to the private IP address on the internal Load Balancer that will receive the tap"}, "args": [{"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress", "options": ["private-ip-address"], "group": "Properties", "help": {"short": "The private IP address of the IP configuration."}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "group": "Properties", "help": {"short": "The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"nullable": true, "type": "string", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "object", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress", "options": ["public-ip-address"], "group": "Properties", "help": {"short": "The reference of the Public IP resource."}, "args": [{"nullable": true, "type": "string", "var": "@PublicIPAddress_update.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@PublicIPAddress_update.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "@PublicIPAddress_update.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"nullable": true, "type": "object", "var": "@PublicIPAddress_update.properties.ddosSettings", "options": ["ddos-settings"], "group": "Properties", "help": {"short": "The DDoS protection custom policy associated with the public IP address."}, "args": [{"nullable": true, "type": "@SubResource_update", "var": "@PublicIPAddress_update.properties.ddosSettings.ddosCustomPolicy", "options": ["ddos-custom-policy"], "help": {"short": "The DDoS custom policy associated with the public IP."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.ddosSettings.protectionCoverage", "options": ["protection-coverage"], "help": {"short": "The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Standard", "value": "Standard"}]}}]}, {"nullable": true, "type": "object", "var": "@PublicIPAddress_update.properties.dnsSettings", "options": ["dns-settings"], "group": "Properties", "help": {"short": "The FQDN of the DNS record associated with the public IP address."}, "args": [{"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.dnsSettings.domainNameLabel", "options": ["domain-name-label"], "help": {"short": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.dnsSettings.fqdn", "options": ["fqdn"], "help": {"short": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.dnsSettings.reverseFqdn", "options": ["reverse-fqdn"], "help": {"short": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "}}]}, {"nullable": true, "type": "integer32", "var": "@PublicIPAddress_update.properties.idleTimeoutInMinutes", "options": ["idle-timeout-in-minutes"], "group": "Properties", "help": {"short": "The idle timeout of the public IP address."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.ipAddress", "options": ["ip-address"], "group": "Properties", "help": {"short": "The IP address associated with the public IP address resource."}}, {"nullable": true, "type": "array<object>", "var": "@PublicIPAddress_update.properties.ipTags", "options": ["ip-tags"], "group": "Properties", "help": {"short": "The list of tags associated with the public IP address."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.ipTags[].ipTagType", "options": ["ip-tag-type"], "help": {"short": "Gets or sets the ipTag type: Example FirstPartyUsage."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.ipTags[].tag", "options": ["tag"], "help": {"short": "Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc"}}]}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.publicIPAddressVersion", "options": ["public-ip-address-version"], "group": "Properties", "help": {"short": "The public IP address version. Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.publicIPAllocationMethod", "options": ["public-ip-allocation-method"], "group": "Properties", "help": {"short": "The public IP allocation method. Possible values are: 'Static' and 'Dynamic'."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"nullable": true, "type": "@SubResource_update", "var": "@PublicIPAddress_update.properties.publicIPPrefix", "options": ["public-ip-prefix"], "group": "Properties", "help": {"short": "The Public IP Prefix this Public IP Address should be allocated from."}}, {"nullable": true, "type": "string", "var": "@PublicIPAddress_update.properties.resourceGuid", "options": ["resource-guid"], "group": "Properties", "help": {"short": "The resource GUID property of the public IP resource."}}, {"nullable": true, "type": "object", "var": "@PublicIPAddress_update.sku", "options": ["sku"], "help": {"short": "The public IP address SKU."}, "args": [{"nullable": true, "type": "string", "var": "@PublicIPAddress_update.sku.name", "options": ["name"], "help": {"short": "Name of a public IP address SKU."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Standard", "value": "Standard"}]}}]}, {"nullable": true, "type": "object", "var": "@PublicIPAddress_update.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "array<string>", "var": "@PublicIPAddress_update.zones", "options": ["zones"], "help": {"short": "A list of availability zones denoting the IP allocated for the resource needs to come from."}, "item": {"nullable": true, "type": "string"}}], "cls": "PublicIPAddress_update"}, {"nullable": true, "type": "@SubResource_update", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix", "options": ["public-ip-prefix"], "group": "Properties", "help": {"short": "The reference of the Public IP Prefix resource."}}, {"nullable": true, "type": "object", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "The reference of the subnet resource."}, "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@Subnet_update.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.addressPrefix", "options": ["address-prefix"], "group": "Properties", "help": {"short": "The address prefix for the subnet."}}, {"nullable": true, "type": "array<string>", "var": "@Subnet_update.properties.addressPrefixes", "options": ["address-prefixes"], "group": "Properties", "help": {"short": "List of  address prefixes for the subnet."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.delegations", "options": ["delegations"], "group": "Properties", "help": {"short": "Gets an array of references to the delegations on the subnet."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.delegations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.delegations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.delegations[].name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a subnet. This name can be used to access the resource."}}, {"nullable": true, "type": "array<string>", "var": "@Subnet_update.properties.delegations[].properties.actions", "options": ["actions"], "group": "Properties", "help": {"short": "Describes the actions permitted to the service upon delegation"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.delegations[].properties.serviceName", "options": ["service-name"], "group": "Properties", "help": {"short": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)"}}]}}, {"nullable": true, "type": "object", "var": "@Subnet_update.properties.networkSecurityGroup", "options": ["network-security-group"], "group": "Properties", "help": {"short": "The reference of the NetworkSecurityGroup resource."}, "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.networkSecurityGroup.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@Subnet_update.properties.networkSecurityGroup.id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "@Subnet_update.properties.networkSecurityGroup.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"nullable": true, "type": "array<@SecurityRule_update>", "var": "@Subnet_update.properties.networkSecurityGroup.properties.defaultSecurityRules", "options": ["default-security-rules"], "group": "Properties", "help": {"short": "The default security rules of network security group."}, "item": {"nullable": true, "type": "@SecurityRule_update"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.networkSecurityGroup.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.networkSecurityGroup.properties.resourceGuid", "options": ["resource-guid"], "group": "Properties", "help": {"short": "The resource GUID property of the network security group resource."}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.networkSecurityGroup.properties.securityRules", "options": ["security-rules"], "group": "Properties", "help": {"short": "A collection of security rules of the network security group."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@SecurityRule_update.etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@SecurityRule_update.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"type": "string", "var": "@SecurityRule_update.properties.access", "options": ["access"], "group": "Properties", "help": {"short": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."}, "enum": {"items": [{"name": "Allow", "value": "Allow"}, {"name": "Deny", "value": "Deny"}]}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "A description for this rule. Restricted to 140 chars."}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.properties.destinationAddressPrefix", "options": ["destination-address-prefix"], "group": "Properties", "help": {"short": "The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."}}, {"nullable": true, "type": "array<string>", "var": "@SecurityRule_update.properties.destinationAddressPrefixes", "options": ["destination-address-prefixes"], "group": "Properties", "help": {"short": "The destination address prefixes. CIDR or destination IP ranges."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<@ApplicationSecurityGroup_update>", "var": "@SecurityRule_update.properties.destinationApplicationSecurityGroups", "options": ["destination-application-security-groups"], "group": "Properties", "help": {"short": "The application security group specified as destination."}, "item": {"nullable": true, "type": "@ApplicationSecurityGroup_update"}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.properties.destinationPortRange", "options": ["destination-port-range"], "group": "Properties", "help": {"short": "The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."}}, {"nullable": true, "type": "array<string>", "var": "@SecurityRule_update.properties.destinationPortRanges", "options": ["destination-port-ranges"], "group": "Properties", "help": {"short": "The destination port ranges."}, "item": {"nullable": true, "type": "string"}}, {"type": "string", "var": "@SecurityRule_update.properties.direction", "options": ["direction"], "group": "Properties", "help": {"short": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'."}, "enum": {"items": [{"name": "Inbound", "value": "Inbound"}, {"name": "Outbound", "value": "Outbound"}]}}, {"nullable": true, "type": "integer32", "var": "@SecurityRule_update.properties.priority", "options": ["priority"], "group": "Properties", "help": {"short": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."}}, {"type": "string", "var": "@SecurityRule_update.properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."}, "enum": {"items": [{"name": "*", "value": "*"}, {"name": "Tcp", "value": "Tcp"}, {"name": "Udp", "value": "Udp"}]}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.properties.sourceAddressPrefix", "options": ["source-address-prefix"], "group": "Properties", "help": {"short": "The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "}}, {"nullable": true, "type": "array<string>", "var": "@SecurityRule_update.properties.sourceAddressPrefixes", "options": ["source-address-prefixes"], "group": "Properties", "help": {"short": "The CIDR or source IP ranges."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<object>", "var": "@SecurityRule_update.properties.sourceApplicationSecurityGroups", "options": ["source-application-security-groups"], "group": "Properties", "help": {"short": "The application security group specified as source."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "ResourceId", "var": "@ApplicationSecurityGroup_update.id", "options": ["id"], "hide": true, "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "@ApplicationSecurityGroup_update.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"nullable": true, "type": "object", "var": "@ApplicationSecurityGroup_update.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}], "cls": "ApplicationSecurityGroup_update"}}, {"nullable": true, "type": "string", "var": "@SecurityRule_update.properties.sourcePortRange", "options": ["source-port-range"], "group": "Properties", "help": {"short": "The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports."}}, {"nullable": true, "type": "array<string>", "var": "@SecurityRule_update.properties.sourcePortRanges", "options": ["source-port-ranges"], "group": "Properties", "help": {"short": "The source port ranges."}, "item": {"nullable": true, "type": "string"}}], "cls": "SecurityRule_update"}}, {"nullable": true, "type": "object", "var": "@Subnet_update.properties.networkSecurityGroup.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the resource."}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.resourceNavigationLinks", "options": ["resource-navigation-links"], "group": "Properties", "help": {"short": "Gets an array of references to the external resources using subnet."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.resourceNavigationLinks[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.resourceNavigationLinks[].name", "options": ["name"], "help": {"short": "Name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.resourceNavigationLinks[].properties.link", "options": ["link"], "group": "Properties", "help": {"short": "Link to the external resource"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.resourceNavigationLinks[].properties.linkedResourceType", "options": ["linked-resource-type"], "group": "Properties", "help": {"short": "Resource type of the linked resource."}}]}}, {"nullable": true, "type": "object", "var": "@Subnet_update.properties.routeTable", "options": ["route-table"], "group": "Properties", "help": {"short": "The reference of the RouteTable resource."}, "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.etag", "options": ["etag"], "help": {"short": "Gets a unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@Subnet_update.properties.routeTable.id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "@Subnet_update.properties.routeTable.location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"nullable": true, "type": "boolean", "var": "@Subnet_update.properties.routeTable.properties.disableBgpRoutePropagation", "options": ["disable-bgp-route-propagation"], "group": "Properties", "help": {"short": "Gets or sets whether to disable the routes learned by BGP on that route table. True means disable."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.routeTable.properties.routes", "options": ["routes"], "group": "Properties", "help": {"short": "Collection of routes contained within a route table."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.properties.routes[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@Subnet_update.properties.routeTable.properties.routes[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.properties.routes[].name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix", "options": ["address-prefix"], "group": "Properties", "help": {"short": "The destination CIDR to which the route applies."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress", "options": ["next-hop-ip-address"], "group": "Properties", "help": {"short": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."}}, {"type": "string", "var": "@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType", "options": ["next-hop-type"], "group": "Properties", "help": {"short": "The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'"}, "enum": {"items": [{"name": "Internet", "value": "Internet"}, {"name": "None", "value": "None"}, {"name": "VirtualAppliance", "value": "VirtualAppliance"}, {"name": "VirtualNetworkGateway", "value": "VirtualNetworkGateway"}, {"name": "VnetLocal", "value": "VnetLocal"}]}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}]}}, {"nullable": true, "type": "object", "var": "@Subnet_update.properties.routeTable.tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.serviceAssociationLinks", "options": ["service-association-links"], "group": "Properties", "help": {"short": "Gets an array of references to services injecting into this subnet."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceAssociationLinks[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceAssociationLinks[].name", "options": ["name"], "help": {"short": "Name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceAssociationLinks[].properties.link", "options": ["link"], "group": "Properties", "help": {"short": "Link to the external resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceAssociationLinks[].properties.linkedResourceType", "options": ["linked-resource-type"], "group": "Properties", "help": {"short": "Resource type of the linked resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.serviceEndpointPolicies", "options": ["service-endpoint-policies"], "group": "Properties", "help": {"short": "An array of service endpoint policies."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpointPolicies[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@Subnet_update.properties.serviceEndpointPolicies[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"nullable": true, "type": "ResourceLocation", "var": "@Subnet_update.properties.serviceEndpointPolicies[].location", "options": ["l", "location"], "help": {"short": "Resource location."}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions", "options": ["service-endpoint-policy-definitions"], "group": "Properties", "help": {"short": "A collection of service endpoint policy definitions of the service endpoint policy."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "ResourceId", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name", "options": ["name"], "help": {"short": "The name of the resource that is unique within a resource group. This name can be used to access the resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description", "options": ["description"], "group": "Properties", "help": {"short": "A description for this rule. Restricted to 140 chars."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service", "options": ["service"], "group": "Properties", "help": {"short": "service endpoint name."}}, {"nullable": true, "type": "array<string>", "var": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources", "options": ["service-resources"], "group": "Properties", "help": {"short": "A list of service resources."}, "item": {"nullable": true, "type": "string"}}]}}, {"nullable": true, "type": "object", "var": "@Subnet_update.properties.serviceEndpointPolicies[].tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}}, {"nullable": true, "type": "array<object>", "var": "@Subnet_update.properties.serviceEndpoints", "options": ["service-endpoints"], "group": "Properties", "help": {"short": "An array of service endpoints."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "@Subnet_update.properties.serviceEndpoints[].locations", "options": ["locations"], "help": {"short": "A list of locations."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpoints[].provisioningState", "options": ["provisioning-state"], "help": {"short": "The provisioning state of the resource."}}, {"nullable": true, "type": "string", "var": "@Subnet_update.properties.serviceEndpoints[].service", "options": ["service"], "help": {"short": "The type of the endpoint service."}}]}}], "cls": "Subnet_update"}, {"nullable": true, "type": "array<string>", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.zones", "options": ["zones"], "help": {"short": "A list of availability zones denoting the IP allocated for the resource needs to come from."}, "item": {"nullable": true, "type": "string"}}]}, {"nullable": true, "type": "@NetworkInterfaceIPConfiguration_update", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationNetworkInterfaceIPConfiguration", "options": ["destination-network-interface-ip-configuration"], "group": "Properties", "help": {"short": "The reference to the private IP Address of the collector nic that will receive the tap"}}, {"nullable": true, "type": "integer", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationPort", "options": ["destination-port"], "group": "Properties", "help": {"short": "The VXLAN destination port that will receive the tapped traffic."}}, {"nullable": true, "type": "object", "var": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].tags", "options": ["tags"], "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}}], "cls": "NetworkInterfaceIPConfiguration_update"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendAddressPools[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.backendHttpSettingsCollection", "options": ["backend-http-settings-collection"], "hide": true, "group": "Properties", "help": {"short": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].name", "options": ["name"], "help": {"short": "Name of the backend http settings that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.affinityCookieName", "options": ["affinity-cookie-name"], "group": "Properties", "help": {"short": "Cookie name to use for the affinity cookie."}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.authenticationCertificates", "options": ["authentication-certificates"], "group": "Properties", "help": {"short": "Array of references to application gateway authentication certificates."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "object", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining", "options": ["connection-draining"], "group": "Properties", "help": {"short": "Connection draining of the backend http settings resource."}, "args": [{"type": "integer32", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.drainTimeoutInSec", "options": ["drain-timeout-in-sec"], "help": {"short": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds."}, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.enabled", "options": ["enabled"], "help": {"short": "Whether connection draining is enabled or not."}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.cookieBasedAffinity", "options": ["cookie-based-affinity"], "group": "Properties", "help": {"short": "Cookie based affinity."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.hostName", "options": ["host-name"], "group": "Properties", "help": {"short": "Host header to be sent to the backend servers."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.path", "options": ["path"], "group": "Properties", "help": {"short": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.pickHostNameFromBackendAddress", "options": ["pick-host-name-from-backend-address"], "group": "Properties", "help": {"short": "Whether to pick host header should be picked from the host name of the backend server. Default value is false."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.port", "options": ["port"], "group": "Properties", "help": {"short": "The destination port on the backend."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.probe", "options": ["probe"], "group": "Properties", "help": {"short": "Probe resource of an application gateway."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.probeEnabled", "options": ["probe-enabled"], "group": "Properties", "help": {"short": "Whether the probe is enabled. Default value is false."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "The protocol used to communicate with the backend."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.requestTimeout", "options": ["request-timeout"], "group": "Properties", "help": {"short": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds."}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.backendHttpSettingsCollection[].properties.trustedRootCertificates", "options": ["trusted-root-certificates"], "group": "Properties", "help": {"short": "Array of references to application gateway trusted root certificates."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.backendHttpSettingsCollection[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.enableFips", "options": ["enable-fips"], "hide": true, "group": "Properties", "help": {"short": "Whether FIPS is enabled on the application gateway resource."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.frontendIPConfigurations", "options": ["frontend-ip-configurations"], "hide": true, "group": "Properties", "help": {"short": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].name", "options": ["name"], "help": {"short": "Name of the frontend IP configuration that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAddress", "options": ["private-ip-address"], "group": "Properties", "help": {"short": "PrivateIPAddress of the network interface IP Configuration."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "group": "Properties", "help": {"short": "The private IP address allocation method."}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.frontendIPConfigurations[].properties.publicIPAddress", "options": ["public-ip-address"], "group": "Properties", "help": {"short": "Reference to the PublicIP resource."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.frontendIPConfigurations[].properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Reference to the subnet resource."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendIPConfigurations[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.frontendPorts", "options": ["frontend-ports"], "hide": true, "group": "Properties", "help": {"short": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.frontendPorts[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendPorts[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendPorts[].name", "options": ["name"], "help": {"short": "Name of the frontend port that is unique within an Application Gateway."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.frontendPorts[].properties.port", "options": ["port"], "group": "Properties", "help": {"short": "Frontend port."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendPorts[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.frontendPorts[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.gatewayIPConfigurations", "options": ["gateway-ip-configurations"], "hide": true, "group": "Properties", "help": {"short": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].name", "options": ["name"], "help": {"short": "Name of the IP configuration that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.gatewayIPConfigurations[].properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Reference to the subnet resource. A subnet from where application gateway gets its private address."}, "args": [{"nullable": true, "type": "string", "var": "@SubResource_update.id", "options": ["id"], "help": {"short": "Resource ID."}}], "cls": "SubResource_update"}, {"nullable": true, "type": "string", "var": "$parameters.properties.gatewayIPConfigurations[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.httpListeners", "options": ["http-listeners"], "hide": true, "group": "Properties", "help": {"short": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].name", "options": ["name"], "help": {"short": "Name of the HTTP listener that is unique within an Application Gateway."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.httpListeners[].properties.customErrorConfigurations", "options": ["custom-error-configurations"], "group": "Properties", "help": {"short": "Custom error configurations of the HTTP listener."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@ApplicationGatewayCustomError_update.customErrorPageUrl", "options": ["custom-error-page-url"], "help": {"short": "Error page URL of the application gateway customer error."}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayCustomError_update.statusCode", "options": ["status-code"], "help": {"short": "Status code of the application gateway customer error."}, "enum": {"items": [{"name": "HttpStatus403", "value": "HttpStatus403"}, {"name": "HttpStatus502", "value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_update"}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.httpListeners[].properties.frontendIPConfiguration", "options": ["frontend-ip-configuration"], "group": "Properties", "help": {"short": "Frontend IP configuration resource of an application gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.httpListeners[].properties.frontendPort", "options": ["frontend-port"], "group": "Properties", "help": {"short": "Frontend port resource of an application gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].properties.hostName", "options": ["host-name"], "group": "Properties", "help": {"short": "Host name of HTTP listener."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "Protocol of the HTTP listener."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.httpListeners[].properties.requireServerNameIndication", "options": ["require-server-name-indication"], "group": "Properties", "help": {"short": "Applicable only if protocol is https. Enables SNI for multi-hosting."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.httpListeners[].properties.sslCertificate", "options": ["ssl-certificate"], "group": "Properties", "help": {"short": "SSL certificate resource of an application gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.httpListeners[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.probes", "options": ["probes"], "hide": true, "group": "Properties", "help": {"short": "Probes of the application gateway resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.probes[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].name", "options": ["name"], "help": {"short": "Name of the probe that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].properties.host", "options": ["host"], "group": "Properties", "help": {"short": "Host name to send the probe to."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.probes[].properties.interval", "options": ["interval"], "group": "Properties", "help": {"short": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.probes[].properties.match", "options": ["match"], "group": "Properties", "help": {"short": "Criterion for classifying a healthy probe response."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.probes[].properties.match.body", "options": ["body"], "help": {"short": "Body that must be contained in the health response. Default value is empty."}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.probes[].properties.match.statusCodes", "options": ["status-codes"], "help": {"short": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399."}, "item": {"nullable": true, "type": "string"}}]}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.probes[].properties.minServers", "options": ["min-servers"], "group": "Properties", "help": {"short": "Minimum number of servers that are always marked healthy. Default value is 0."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].properties.path", "options": ["path"], "group": "Properties", "help": {"short": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.probes[].properties.pickHostNameFromBackendHttpSettings", "options": ["pick-host-name-from-backend-http-settings"], "group": "Properties", "help": {"short": "Whether the host header should be picked from the backend http settings. Default value is false."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].properties.protocol", "options": ["protocol"], "group": "Properties", "help": {"short": "The protocol used for the probe."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.probes[].properties.timeout", "options": ["timeout"], "group": "Properties", "help": {"short": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.probes[].properties.unhealthyThreshold", "options": ["unhealthy-threshold"], "group": "Properties", "help": {"short": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.probes[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.redirectConfigurations", "options": ["redirect-configurations"], "hide": true, "group": "Properties", "help": {"short": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.redirectConfigurations[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redirectConfigurations[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redirectConfigurations[].name", "options": ["name"], "help": {"short": "Name of the redirect configuration that is unique within an Application Gateway."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.redirectConfigurations[].properties.includePath", "options": ["include-path"], "group": "Properties", "help": {"short": "Include path in the redirected url."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.redirectConfigurations[].properties.includeQueryString", "options": ["include-query-string"], "group": "Properties", "help": {"short": "Include query string in the redirected url."}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.redirectConfigurations[].properties.pathRules", "options": ["path-rules"], "group": "Properties", "help": {"short": "Path rules specifying redirect configuration."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redirectConfigurations[].properties.redirectType", "options": ["redirect-type"], "group": "Properties", "help": {"short": "HTTP redirection type."}, "enum": {"items": [{"name": "Found", "value": "Found"}, {"name": "Permanent", "value": "Permanent"}, {"name": "SeeOther", "value": "SeeOther"}, {"name": "Temporary", "value": "Temporary"}]}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.redirectConfigurations[].properties.requestRoutingRules", "options": ["request-routing-rules"], "group": "Properties", "help": {"short": "Request routing specifying redirect configuration."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.redirectConfigurations[].properties.targetListener", "options": ["target-listener"], "group": "Properties", "help": {"short": "Reference to a listener to redirect the request to."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redirectConfigurations[].properties.targetUrl", "options": ["target-url"], "group": "Properties", "help": {"short": "Url to redirect the request to."}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.redirectConfigurations[].properties.urlPathMaps", "options": ["url-path-maps"], "group": "Properties", "help": {"short": "Url path maps specifying default redirect configuration."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redirectConfigurations[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.requestRoutingRules", "options": ["request-routing-rules"], "hide": true, "group": "Properties", "help": {"short": "Request routing rules of the application gateway resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.requestRoutingRules[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.requestRoutingRules[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.requestRoutingRules[].name", "options": ["name"], "help": {"short": "Name of the request routing rule that is unique within an Application Gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.requestRoutingRules[].properties.backendAddressPool", "options": ["backend-address-pool"], "group": "Properties", "help": {"short": "Backend address pool resource of the application gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.requestRoutingRules[].properties.backendHttpSettings", "options": ["backend-http-settings"], "group": "Properties", "help": {"short": "Backend http settings resource of the application gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.requestRoutingRules[].properties.httpListener", "options": ["http-listener"], "group": "Properties", "help": {"short": "Http listener resource of the application gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.requestRoutingRules[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.requestRoutingRules[].properties.redirectConfiguration", "options": ["redirect-configuration"], "group": "Properties", "help": {"short": "Redirect configuration resource of the application gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.requestRoutingRules[].properties.rewriteRuleSet", "options": ["rewrite-rule-set"], "group": "Properties", "help": {"short": "Rewrite Rule Set resource in Basic rule of the application gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.requestRoutingRules[].properties.ruleType", "options": ["rule-type"], "group": "Properties", "help": {"short": "Rule type."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "PathBasedRouting", "value": "PathBasedRouting"}]}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.requestRoutingRules[].properties.urlPathMap", "options": ["url-path-map"], "group": "Properties", "help": {"short": "URL path map resource of the application gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.requestRoutingRules[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.resourceGuid", "options": ["resource-guid"], "group": "Properties", "help": {"short": "Resource GUID property of the application gateway resource."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.rewriteRuleSets", "options": ["rewrite-rule-sets"], "hide": true, "group": "Properties", "help": {"short": "Rewrite rules for the application gateway resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.rewriteRuleSets[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.rewriteRuleSets[].name", "options": ["name"], "help": {"short": "Name of the rewrite rule set that is unique within an Application Gateway."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules", "options": ["rewrite-rules"], "group": "Properties", "help": {"short": "Rewrite rules in the rewrite rule set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet", "options": ["action-set"], "help": {"short": "Set of actions to be done as part of the rewrite Rule."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations", "options": ["request-header-configurations"], "help": {"short": "Request Header Actions in the Action Set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@ApplicationGatewayHeaderConfiguration_update.headerName", "options": ["header-name"], "help": {"short": "Header name of the header configuration."}}, {"nullable": true, "type": "string", "var": "@ApplicationGatewayHeaderConfiguration_update.headerValue", "options": ["header-value"], "help": {"short": "Header value of the header configuration."}}], "cls": "ApplicationGatewayHeaderConfiguration_update"}}, {"nullable": true, "type": "array<@ApplicationGatewayHeaderConfiguration_update>", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations", "options": ["response-header-configurations"], "help": {"short": "Response Header Actions in the Action Set."}, "item": {"nullable": true, "type": "@ApplicationGatewayHeaderConfiguration_update"}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].name", "options": ["name"], "help": {"short": "Name of the rewrite rule that is unique within an Application Gateway."}}]}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.sslCertificates", "options": ["ssl-certificates"], "hide": true, "group": "Properties", "help": {"short": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].name", "options": ["name"], "help": {"short": "Name of the SSL certificate that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].properties.data", "options": ["data"], "group": "Properties", "help": {"short": "Base-64 encoded pfx certificate. Only applicable in PUT Request."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].properties.keyVaultSecretId", "options": ["key-vault-secret-id"], "group": "Properties", "help": {"short": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].properties.password", "options": ["password"], "group": "Properties", "help": {"short": "Password for the pfx file specified in data. Only applicable in PUT request."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].properties.publicCertData", "options": ["public-cert-data"], "group": "Properties", "help": {"short": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslCertificates[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.sslPolicy", "options": ["ssl-policy"], "hide": true, "group": "Properties", "help": {"short": "SSL policy of the application gateway resource."}, "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.sslPolicy.cipherSuites", "options": ["cipher-suites"], "help": {"short": "Ssl cipher suites to be enabled in the specified order to application gateway."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA", "value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"name": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA", "value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"name": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", "value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA", "value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"name": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", "value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"name": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", "value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA", "value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", "value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", "value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", "value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", "value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", "value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"name": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"name": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", "value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", "value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", "value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", "value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", "value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"name": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"name": "TLS_RSA_WITH_3DES_EDE_CBC_SHA", "value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"name": "TLS_RSA_WITH_AES_128_CBC_SHA", "value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"name": "TLS_RSA_WITH_AES_128_CBC_SHA256", "value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"name": "TLS_RSA_WITH_AES_128_GCM_SHA256", "value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"name": "TLS_RSA_WITH_AES_256_CBC_SHA", "value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"name": "TLS_RSA_WITH_AES_256_CBC_SHA256", "value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"name": "TLS_RSA_WITH_AES_256_GCM_SHA384", "value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.sslPolicy.disabledSslProtocols", "options": ["disabled-ssl-protocols"], "help": {"short": "Ssl protocols to be disabled on application gateway."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "TLSv1_0", "value": "TLSv1_0"}, {"name": "TLSv1_1", "value": "TLSv1_1"}, {"name": "TLSv1_2", "value": "TLSv1_2"}]}}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslPolicy.minProtocolVersion", "options": ["min-protocol-version"], "help": {"short": "Minimum version of Ssl protocol to be supported on application gateway."}, "enum": {"items": [{"name": "TLSv1_0", "value": "TLSv1_0"}, {"name": "TLSv1_1", "value": "TLSv1_1"}, {"name": "TLSv1_2", "value": "TLSv1_2"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslPolicy.policyName", "options": ["policy-name"], "help": {"short": "Name of Ssl predefined policy"}, "enum": {"items": [{"name": "AppGwSslPolicy20150501", "value": "AppGwSslPolicy20150501"}, {"name": "AppGwSslPolicy20170401", "value": "AppGwSslPolicy20170401"}, {"name": "AppGwSslPolicy20170401S", "value": "AppGwSslPolicy20170401S"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.sslPolicy.policyType", "options": ["policy-type"], "help": {"short": "Type of Ssl Policy"}, "enum": {"items": [{"name": "Custom", "value": "Custom"}, {"name": "Predefined", "value": "Predefined"}]}}]}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.trustedRootCertificates", "options": ["trusted-root-certificates"], "hide": true, "group": "Properties", "help": {"short": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].name", "options": ["name"], "help": {"short": "Name of the trusted root certificate that is unique within an Application Gateway."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].properties.data", "options": ["data"], "group": "Properties", "help": {"short": "Certificate public data."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].properties.keyVaultSecretId", "options": ["key-vault-secret-id"], "group": "Properties", "help": {"short": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trustedRootCertificates[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.urlPathMaps", "options": ["url-path-maps"], "hide": true, "group": "Properties", "help": {"short": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].name", "options": ["name"], "help": {"short": "Name of the URL path map that is unique within an Application Gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.defaultBackendAddressPool", "options": ["default-backend-address-pool"], "group": "Properties", "help": {"short": "Default backend address pool resource of URL path map."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.defaultBackendHttpSettings", "options": ["default-backend-http-settings"], "group": "Properties", "help": {"short": "Default backend http settings resource of URL path map."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.defaultRedirectConfiguration", "options": ["default-redirect-configuration"], "group": "Properties", "help": {"short": "Default redirect configuration resource of URL path map."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.defaultRewriteRuleSet", "options": ["default-rewrite-rule-set"], "group": "Properties", "help": {"short": "Default Rewrite rule set resource of URL path map."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.urlPathMaps[].properties.pathRules", "options": ["path-rules"], "group": "Properties", "help": {"short": "Path rule of URL path map resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].etag", "options": ["etag"], "help": {"short": "A unique read-only string that changes whenever the resource is updated."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].id", "options": ["id"], "help": {"short": "Resource ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].name", "options": ["name"], "help": {"short": "Name of the path rule that is unique within an Application Gateway."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendAddressPool", "options": ["backend-address-pool"], "group": "Properties", "help": {"short": "Backend address pool resource of URL path map path rule."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendHttpSettings", "options": ["backend-http-settings"], "group": "Properties", "help": {"short": "Backend http settings resource of URL path map path rule."}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.paths", "options": ["paths"], "group": "Properties", "help": {"short": "Path rules of URL path map."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.redirectConfiguration", "options": ["redirect-configuration"], "group": "Properties", "help": {"short": "Redirect configuration resource of URL path map path rule."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.rewriteRuleSet", "options": ["rewrite-rule-set"], "group": "Properties", "help": {"short": "Rewrite rule set resource of URL path map path rule."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].properties.pathRules[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].properties.provisioningState", "options": ["provisioning-state"], "group": "Properties", "help": {"short": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.urlPathMaps[].type", "options": ["type"], "help": {"short": "Type of the resource."}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.webApplicationFirewallConfiguration", "options": ["web-application-firewall-configuration"], "hide": true, "group": "Properties", "help": {"short": "Web application firewall configuration."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups", "options": ["disabled-rule-groups"], "help": {"short": "The disabled rule groups."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].ruleGroupName", "options": ["rule-group-name"], "help": {"short": "The name of the rule group that will be disabled."}}, {"nullable": true, "type": "array<integer32>", "var": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].rules", "options": ["rules"], "help": {"short": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled."}, "item": {"nullable": true, "type": "integer32"}}]}}, {"type": "boolean", "var": "$parameters.properties.webApplicationFirewallConfiguration.enabled", "options": ["enabled"], "help": {"short": "Whether the web application firewall is enabled or not."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions", "options": ["exclusions"], "help": {"short": "The exclusion list."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].matchVariable", "options": ["match-variable"], "help": {"short": "The variable to be excluded."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selector", "options": ["selector"], "help": {"short": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selectorMatchOperator", "options": ["selector-match-operator"], "help": {"short": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to."}}]}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.webApplicationFirewallConfiguration.fileUploadLimitInMb", "options": ["file-upload-limit-in-mb"], "help": {"short": "Maximum file upload size in Mb for WAF."}, "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.firewallMode", "options": ["firewall-mode"], "help": {"short": "Web application firewall mode."}, "enum": {"items": [{"name": "Detection", "value": "Detection"}, {"name": "Prevention", "value": "Prevention"}]}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySize", "options": ["max-request-body-size"], "help": {"short": "Maximum request body size for WAF."}, "format": {"maximum": 128, "minimum": 8}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb", "options": ["max-request-body-size-in-kb"], "help": {"short": "Maximum request body size in Kb for WAF."}, "format": {"maximum": 128, "minimum": 8}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.webApplicationFirewallConfiguration.requestBodyCheck", "options": ["request-body-check"], "help": {"short": "Whether allow WAF to check request Body."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetType", "options": ["rule-set-type"], "help": {"short": "The type of the web application firewall rule set. Possible values are: 'OWASP'."}}, {"type": "string", "var": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetVersion", "options": ["rule-set-version"], "help": {"short": "The version of the rule set type."}}]}]}, {"name": "Sku", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.sku.tier", "options": ["tier"], "hide": true, "group": "Sku", "help": {"short": "Tier of an application gateway."}, "enum": {"items": [{"name": "Standard", "value": "Standard"}, {"name": "Standard_v2", "value": "Standard_v2"}, {"name": "WAF", "value": "WAF"}, {"name": "WAF_v2", "value": "WAF_v2"}]}}]}], "operations": [{"operationId": "ApplicationGateways_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "applicationGatewayName", "arg": "$Path.applicationGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "authenticationCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "autoscaleConfiguration", "props": [{"type": "integer32", "name": "maxCapacity", "format": {"minimum": 2}}, {"type": "integer32", "name": "minCapacity", "required": true, "format": {"minimum": 0}}]}, {"type": "array<object>", "name": "backendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn"}, {"type": "string", "name": "ipAddress"}]}}, {"type": "array<object>", "name": "backendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@ApplicationGatewayBackendAddressPool_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@ApplicationGatewayBackendAddressPool_read"}}, {"type": "array<@ApplicationSecurityGroup_read>", "name": "applicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_read"}}, {"type": "array<object>", "name": "loadBalancerBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "array<@NetworkInterfaceIPConfiguration_read>", "name": "backendIPConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "loadBalancingRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "@SubResource_read", "name": "outboundRule"}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "outboundRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "loadBalancerInboundNatRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "@NetworkInterfaceIPConfiguration_read", "name": "backendIPConfiguration"}, {"type": "integer32", "name": "backendPort"}, {"type": "boolean", "name": "enableFloatingIP"}, {"type": "boolean", "name": "enableTcpReset"}, {"type": "@SubResource_read", "name": "frontendIPConfiguration"}, {"type": "integer32", "name": "frontendPort"}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "All"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@PublicIPAddress_read", "name": "publicIPAddress"}, {"type": "@Subnet_read", "name": "subnet"}, {"type": "array<object>", "name": "virtualNetworkTaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "destinationLoadBalancerFrontEndIPConfiguration", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundNatPools", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "inboundNatRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "loadBalancingRules", "item": {"type": "@SubResource_read"}}, {"readOnly": true, "type": "array<@SubResource_read>", "name": "outboundRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@PublicIPAddress_read", "name": "publicIPAddress"}, {"type": "@SubResource_read", "name": "publicIPPrefix"}, {"type": "object", "name": "subnet", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix"}, {"type": "array<string>", "name": "addressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "delegations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "actions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "serviceName"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@InterfaceEndpoint_read>", "name": "interfaceEndpoints", "item": {"type": "@InterfaceEndpoint_read"}}, {"readOnly": true, "type": "array<object>", "name": "ipConfigurationProfiles", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "array<object>", "name": "ipConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "object", "name": "publicIPAddress", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "ddosSettings", "props": [{"type": "@SubResource_read", "name": "ddosCustomPolicy"}, {"type": "string", "name": "protectionCoverage", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel"}, {"type": "string", "name": "fqdn"}, {"type": "string", "name": "reverseFqdn"}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "string", "name": "ipAddress"}, {"readOnly": true, "type": "@IPConfiguration_read", "name": "ipConfiguration"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}, {"type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "PublicIPAddress_read"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}], "cls": "IPConfiguration_read"}}, {"type": "object", "name": "networkSecurityGroup", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<@SecurityRule_read>", "name": "defaultSecurityRules", "item": {"type": "@SecurityRule_read"}}, {"readOnly": true, "type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "appliedDnsServers", "item": {"type": "string"}}, {"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}, {"type": "string", "name": "internalDnsNameLabel"}, {"type": "string", "name": "internalDomainNameSuffix"}, {"type": "string", "name": "internalFqdn"}]}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableIPForwarding"}, {"readOnly": true, "type": "array<string>", "name": "hostedWorkloads", "item": {"type": "string"}}, {"type": "object", "name": "interfaceEndpoint", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/interfaceEndpoints/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "endpointService", "props": [{"type": "string", "name": "id"}]}, {"type": "string", "name": "fqdn"}, {"readOnly": true, "type": "array<@NetworkInterface_read>", "name": "networkInterfaces", "item": {"type": "@NetworkInterface_read"}}, {"readOnly": true, "type": "string", "name": "owner"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@Subnet_read", "name": "subnet"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "InterfaceEndpoint_read"}, {"type": "array<@NetworkInterfaceIPConfiguration_read>", "name": "ipConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_read"}}, {"type": "string", "name": "macAddress"}, {"type": "@NetworkSecurityGroup_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "resourceGuid"}, {"type": "array<@NetworkInterfaceTapConfiguration_read>", "name": "tapConfigurations", "item": {"type": "@NetworkInterfaceTapConfiguration_read"}}, {"readOnly": true, "type": "@SubResource_read", "name": "virtualMachine"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkInterface_read"}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "securityRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "access", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "destinationAddressPrefix"}, {"type": "array<string>", "name": "destinationAddressPrefixes", "item": {"type": "string"}}, {"type": "array<@ApplicationSecurityGroup_read>", "name": "destinationApplicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_read"}}, {"type": "string", "name": "destinationPortRange"}, {"type": "array<string>", "name": "destinationPortRanges", "item": {"type": "string"}}, {"type": "string", "name": "direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "integer32", "name": "priority"}, {"type": "string", "name": "protocol", "required": true, "enum": {"items": [{"value": "*"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "sourceAddressPrefix"}, {"type": "array<string>", "name": "sourceAddressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "sourceApplicationSecurityGroups", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ApplicationSecurityGroup_read"}}, {"type": "string", "name": "sourcePortRange"}, {"type": "array<string>", "name": "sourcePortRanges", "item": {"type": "string"}}], "clientFlatten": true}], "cls": "SecurityRule_read"}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkSecurityGroup_read"}, {"type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "purpose"}, {"type": "array<object>", "name": "resourceNavigationLinks", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link"}, {"type": "string", "name": "linkedResourceType"}, {"readOnly": true, "type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "object", "name": "routeTable", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "disableBgpRoutePropagation"}, {"type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "routes", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix"}, {"type": "string", "name": "nextHopIpAddress"}, {"type": "string", "name": "nextHopType", "required": true, "enum": {"items": [{"value": "Internet"}, {"value": "None"}, {"value": "VirtualAppliance"}, {"value": "VirtualNetworkGateway"}, {"value": "VnetLocal"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}, {"type": "array<object>", "name": "serviceAssociationLinks", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link"}, {"type": "string", "name": "linkedResourceType"}, {"readOnly": true, "type": "string", "name": "provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "serviceEndpointPolicies", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "serviceEndpointPolicyDefinitions", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "description"}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "service"}, {"type": "array<string>", "name": "serviceResources", "item": {"type": "string"}}], "clientFlatten": true}]}}, {"readOnly": true, "type": "array<@Subnet_read>", "name": "subnets", "item": {"type": "@Subnet_read"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "serviceEndpoints", "item": {"type": "object", "props": [{"type": "array<string>", "name": "locations", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "service"}]}}], "clientFlatten": true}], "cls": "Subnet_read"}], "clientFlatten": true}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}, {"type": "@NetworkInterfaceIPConfiguration_read", "name": "destinationNetworkInterfaceIPConfiguration"}, {"type": "integer", "name": "destinationPort"}, {"readOnly": true, "type": "array<object>", "name": "networkInterfaceTapConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/tapConfigurations/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@VirtualNetworkTap_read", "name": "virtualNetworkTap"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NetworkInterfaceTapConfiguration_read"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "string", "name": "resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "VirtualNetworkTap_read"}}], "clientFlatten": true}], "cls": "NetworkInterfaceIPConfiguration_read"}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}], "cls": "ApplicationGatewayBackendAddressPool_read"}}, {"type": "array<object>", "name": "backendHttpSettingsCollection", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "affinityCookieName"}, {"type": "array<@SubResource_read>", "name": "authenticationCertificates", "item": {"type": "@SubResource_read"}}, {"type": "object", "name": "connectionDraining", "props": [{"type": "integer32", "name": "drainTimeoutInSec", "required": true, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "name": "enabled", "required": true}]}, {"type": "string", "name": "cookieBasedAffinity", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "hostName"}, {"type": "string", "name": "path"}, {"type": "boolean", "name": "pickHostNameFromBackendAddress"}, {"type": "integer32", "name": "port"}, {"type": "@SubResource_read", "name": "probe"}, {"type": "boolean", "name": "probeEnabled"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "integer32", "name": "requestTimeout"}, {"type": "array<@SubResource_read>", "name": "trustedRootCertificates", "item": {"type": "@SubResource_read"}}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<@ApplicationGatewayCustomError_read>", "name": "customErrorConfigurations", "item": {"type": "@ApplicationGatewayCustomError_read"}}, {"type": "boolean", "name": "enableFips"}, {"type": "boolean", "name": "enableHttp2"}, {"type": "array<object>", "name": "frontendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "publicIPAddress"}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "frontendPorts", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "port"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "gatewayIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState"}, {"type": "object", "name": "subnet", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "httpListeners", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "customErrorConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "customErrorPageUrl"}, {"type": "string", "name": "statusCode", "enum": {"items": [{"value": "HttpStatus403"}, {"value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_read"}}, {"type": "@SubResource_read", "name": "frontendIPConfiguration"}, {"type": "@SubResource_read", "name": "frontendPort"}, {"type": "string", "name": "hostName"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "boolean", "name": "requireServerNameIndication"}, {"type": "@SubResource_read", "name": "sslCertificate"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "operationalState", "enum": {"items": [{"value": "Running"}, {"value": "Starting"}, {"value": "Stopped"}, {"value": "Stopping"}]}}, {"type": "array<object>", "name": "probes", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "host"}, {"type": "integer32", "name": "interval"}, {"type": "object", "name": "match", "props": [{"type": "string", "name": "body"}, {"type": "array<string>", "name": "statusCodes", "item": {"type": "string"}}]}, {"type": "integer32", "name": "minServers"}, {"type": "string", "name": "path"}, {"type": "boolean", "name": "pickHostNameFromBackendHttpSettings"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "integer32", "name": "timeout"}, {"type": "integer32", "name": "unhealthyThreshold"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "redirectConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "includePath"}, {"type": "boolean", "name": "includeQueryString"}, {"type": "array<@SubResource_read>", "name": "pathRules", "item": {"type": "@SubResource_read"}}, {"type": "string", "name": "redirectType", "enum": {"items": [{"value": "Found"}, {"value": "Permanent"}, {"value": "SeeOther"}, {"value": "Temporary"}]}}, {"type": "array<@SubResource_read>", "name": "requestRoutingRules", "item": {"type": "@SubResource_read"}}, {"type": "@SubResource_read", "name": "targetListener"}, {"type": "string", "name": "targetUrl"}, {"type": "array<@SubResource_read>", "name": "urlPathMaps", "item": {"type": "@SubResource_read"}}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "requestRoutingRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "backendAddressPool"}, {"type": "@SubResource_read", "name": "backendHttpSettings"}, {"type": "@SubResource_read", "name": "httpListener"}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "redirectConfiguration"}, {"type": "@SubResource_read", "name": "rewriteRuleSet"}, {"type": "string", "name": "ruleType", "enum": {"items": [{"value": "Basic"}, {"value": "PathBasedRouting"}]}}, {"type": "@SubResource_read", "name": "urlPathMap"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "resourceGuid"}, {"type": "array<object>", "name": "rewriteRuleSets", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "array<object>", "name": "rewriteRules", "item": {"type": "object", "props": [{"type": "object", "name": "actionSet", "props": [{"type": "array<object>", "name": "requestHeaderConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "headerName"}, {"type": "string", "name": "headerValue"}], "cls": "ApplicationGatewayHeaderConfiguration_read"}}, {"type": "array<@ApplicationGatewayHeaderConfiguration_read>", "name": "responseHeaderConfigurations", "item": {"type": "@ApplicationGatewayHeaderConfiguration_read"}}]}, {"type": "string", "name": "name"}]}}], "clientFlatten": true}]}}, {"type": "object", "name": "sku", "props": [{"type": "integer32", "name": "capacity"}, {"type": "string", "name": "name", "enum": {"items": [{"value": "Standard_Large"}, {"value": "Standard_Medium"}, {"value": "Standard_Small"}, {"value": "Standard_v2"}, {"value": "WAF_Large"}, {"value": "WAF_Medium"}, {"value": "WAF_v2"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Standard"}, {"value": "Standard_v2"}, {"value": "WAF"}, {"value": "WAF_v2"}]}}]}, {"type": "array<object>", "name": "sslCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "keyVaultSecretId"}, {"type": "string", "name": "password"}, {"type": "string", "name": "provisioningState"}, {"type": "string", "name": "publicCertData"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "sslPolicy", "props": [{"type": "array<string>", "name": "cipherSuites", "item": {"type": "string", "enum": {"items": [{"value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"type": "array<string>", "name": "disabledSslProtocols", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}}, {"type": "string", "name": "minProtocolVersion", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}, {"type": "string", "name": "policyName", "enum": {"items": [{"value": "AppGwSslPolicy20150501"}, {"value": "AppGwSslPolicy20170401"}, {"value": "AppGwSslPolicy20170401S"}]}}, {"type": "string", "name": "policyType", "enum": {"items": [{"value": "Custom"}, {"value": "Predefined"}]}}]}, {"type": "array<object>", "name": "trustedRootCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data"}, {"type": "string", "name": "keyVaultSecretId"}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "array<object>", "name": "urlPathMaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "defaultBackendAddressPool"}, {"type": "@SubResource_read", "name": "defaultBackendHttpSettings"}, {"type": "@SubResource_read", "name": "defaultRedirectConfiguration"}, {"type": "@SubResource_read", "name": "defaultRewriteRuleSet"}, {"type": "array<object>", "name": "pathRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"type": "string", "name": "id"}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_read", "name": "backendAddressPool"}, {"type": "@SubResource_read", "name": "backendHttpSettings"}, {"type": "array<string>", "name": "paths", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "redirectConfiguration"}, {"type": "@SubResource_read", "name": "rewriteRuleSet"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "string", "name": "provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type"}]}}, {"type": "object", "name": "webApplicationFirewallConfiguration", "props": [{"type": "array<object>", "name": "disabledRuleGroups", "item": {"type": "object", "props": [{"type": "string", "name": "ruleGroupName", "required": true}, {"type": "array<integer32>", "name": "rules", "item": {"type": "integer32"}}]}}, {"type": "boolean", "name": "enabled", "required": true}, {"type": "array<object>", "name": "exclusions", "item": {"type": "object", "props": [{"type": "string", "name": "matchVariable", "required": true}, {"type": "string", "name": "selector", "required": true}, {"type": "string", "name": "selectorMatchOperator", "required": true}]}}, {"type": "integer32", "name": "fileUploadLimitInMb", "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "name": "firewallMode", "required": true, "enum": {"items": [{"value": "Detection"}, {"value": "Prevention"}]}}, {"type": "integer32", "name": "maxRequestBodySize", "format": {"maximum": 128, "minimum": 8}}, {"type": "integer32", "name": "maxRequestBodySizeInKb", "format": {"maximum": 128, "minimum": 8}}, {"type": "boolean", "name": "requestBodyCheck"}, {"type": "string", "name": "ruleSetType", "required": true}, {"type": "string", "name": "ruleSetVersion", "required": true}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "ApplicationGateway_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "etag", "arg": "$parameters.etag"}, {"type": "ResourceId", "name": "id", "arg": "$parameters.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationGateways/{}"}}, {"type": "IdentityObject", "name": "identity", "arg": "$parameters.identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "authenticationCertificates", "arg": "$parameters.properties.authenticationCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.authenticationCertificates[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.authenticationCertificates[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.authenticationCertificates[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data", "arg": "$parameters.properties.authenticationCertificates[].properties.data"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.authenticationCertificates[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.authenticationCertificates[].type"}]}}, {"type": "object", "name": "autoscaleConfiguration", "props": [{"type": "integer32", "name": "maxCapacity", "arg": "$parameters.properties.autoscaleConfiguration.maxCapacity", "format": {"minimum": 2}}, {"type": "integer32", "name": "minCapacity", "arg": "$parameters.properties.autoscaleConfiguration.minCapacity", "required": true, "format": {"minimum": 0}}]}, {"type": "array<object>", "name": "backendAddressPools", "arg": "$parameters.properties.backendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.backendAddressPools[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.backendAddressPools[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.backendAddressPools[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "arg": "$parameters.properties.backendAddressPools[].properties.backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn", "arg": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].fqdn"}, {"type": "string", "name": "ipAddress", "arg": "$parameters.properties.backendAddressPools[].properties.backendAddresses[].ipAddress"}]}}, {"type": "array<object>", "name": "backendIPConfigurations", "arg": "$parameters.properties.backendAddressPools[].properties.backendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_update.etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_update.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_update.name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "applicationGatewayBackendAddressPools", "arg": "@NetworkInterfaceIPConfiguration_update.properties.applicationGatewayBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@ApplicationGatewayBackendAddressPool_update.etag"}, {"type": "string", "name": "id", "arg": "@ApplicationGatewayBackendAddressPool_update.id"}, {"type": "string", "name": "name", "arg": "@ApplicationGatewayBackendAddressPool_update.name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "backendAddresses", "arg": "@ApplicationGatewayBackendAddressPool_update.properties.backendAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "fqdn", "arg": "@ApplicationGatewayBackendAddressPool_update.properties.backendAddresses[].fqdn"}, {"type": "string", "name": "ipAddress", "arg": "@ApplicationGatewayBackendAddressPool_update.properties.backendAddresses[].ipAddress"}]}}, {"type": "array<@NetworkInterfaceIPConfiguration_update>", "name": "backendIPConfigurations", "arg": "@ApplicationGatewayBackendAddressPool_update.properties.backendIPConfigurations", "item": {"type": "@NetworkInterfaceIPConfiguration_update"}}, {"type": "string", "name": "provisioningState", "arg": "@ApplicationGatewayBackendAddressPool_update.properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "@ApplicationGatewayBackendAddressPool_update.type"}], "cls": "ApplicationGatewayBackendAddressPool_update"}}, {"type": "array<@ApplicationSecurityGroup_update>", "name": "applicationSecurityGroups", "arg": "@NetworkInterfaceIPConfiguration_update.properties.applicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_update"}}, {"type": "array<object>", "name": "loadBalancerBackendAddressPools", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerBackendAddressPools[].properties.provisioningState"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "loadBalancerInboundNatRules", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "backendPort", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.backendPort"}, {"type": "boolean", "name": "enableFloatingIP", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"}, {"type": "boolean", "name": "enableTcpReset", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.enableTcpReset"}, {"type": "@SubResource_update", "name": "frontendIPConfiguration", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"}, {"type": "integer32", "name": "frontendPort", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.frontendPort"}, {"type": "integer32", "name": "idleTimeoutInMinutes", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"}, {"type": "string", "name": "protocol", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.protocol", "enum": {"items": [{"value": "All"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_update.properties.loadBalancerInboundNatRules[].properties.provisioningState"}], "clientFlatten": true}]}}, {"type": "boolean", "name": "primary", "arg": "@NetworkInterfaceIPConfiguration_update.properties.primary"}, {"type": "string", "name": "privateIPAddress", "arg": "@NetworkInterfaceIPConfiguration_update.properties.privateIPAddress"}, {"type": "string", "name": "privateIPAddressVersion", "arg": "@NetworkInterfaceIPConfiguration_update.properties.privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "@NetworkInterfaceIPConfiguration_update.properties.privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_update.properties.provisioningState"}, {"type": "@PublicIPAddress_update", "name": "publicIPAddress", "arg": "@NetworkInterfaceIPConfiguration_update.properties.publicIPAddress"}, {"type": "@Subnet_update", "name": "subnet", "arg": "@NetworkInterfaceIPConfiguration_update.properties.subnet"}, {"type": "array<object>", "name": "virtualNetworkTaps", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "destinationLoadBalancerFrontEndIPConfiguration", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration", "props": [{"type": "string", "name": "etag", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.etag"}, {"type": "ResourceId", "name": "id", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"}}, {"type": "string", "name": "name", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState"}, {"type": "object", "name": "publicIPAddress", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress", "props": [{"type": "string", "name": "etag", "arg": "@PublicIPAddress_update.etag"}, {"type": "ResourceId", "name": "id", "arg": "@PublicIPAddress_update.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@PublicIPAddress_update.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "ddosSettings", "arg": "@PublicIPAddress_update.properties.ddosSettings", "props": [{"type": "@SubResource_update", "name": "ddosCustomPolicy", "arg": "@PublicIPAddress_update.properties.ddosSettings.ddosCustomPolicy"}, {"type": "string", "name": "protectionCoverage", "arg": "@PublicIPAddress_update.properties.ddosSettings.protectionCoverage", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "dnsSettings", "arg": "@PublicIPAddress_update.properties.dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "arg": "@PublicIPAddress_update.properties.dnsSettings.domainNameLabel"}, {"type": "string", "name": "fqdn", "arg": "@PublicIPAddress_update.properties.dnsSettings.fqdn"}, {"type": "string", "name": "reverseFqdn", "arg": "@PublicIPAddress_update.properties.dnsSettings.reverseFqdn"}]}, {"type": "integer32", "name": "idleTimeoutInMinutes", "arg": "@PublicIPAddress_update.properties.idleTimeoutInMinutes"}, {"type": "string", "name": "ipAddress", "arg": "@PublicIPAddress_update.properties.ipAddress"}, {"type": "array<object>", "name": "ipTags", "arg": "@PublicIPAddress_update.properties.ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType", "arg": "@PublicIPAddress_update.properties.ipTags[].ipTagType"}, {"type": "string", "name": "tag", "arg": "@PublicIPAddress_update.properties.ipTags[].tag"}]}}, {"type": "string", "name": "provisioningState", "arg": "@PublicIPAddress_update.properties.provisioningState"}, {"type": "string", "name": "publicIPAddressVersion", "arg": "@PublicIPAddress_update.properties.publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "arg": "@PublicIPAddress_update.properties.publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_update", "name": "publicIPPrefix", "arg": "@PublicIPAddress_update.properties.publicIPPrefix"}, {"type": "string", "name": "resourceGuid", "arg": "@PublicIPAddress_update.properties.resourceGuid"}], "clientFlatten": true}, {"type": "object", "name": "sku", "arg": "@PublicIPAddress_update.sku", "props": [{"type": "string", "name": "name", "arg": "@PublicIPAddress_update.sku.name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "arg": "@PublicIPAddress_update.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "@PublicIPAddress_update.zones", "item": {"type": "string"}}], "cls": "PublicIPAddress_update"}, {"type": "@SubResource_update", "name": "publicIPPrefix", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix"}, {"type": "object", "name": "subnet", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_update.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"}}, {"type": "string", "name": "name", "arg": "@Subnet_update.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix", "arg": "@Subnet_update.properties.addressPrefix"}, {"type": "array<string>", "name": "addressPrefixes", "arg": "@Subnet_update.properties.addressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "delegations", "arg": "@Subnet_update.properties.delegations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.properties.delegations[].etag"}, {"type": "string", "name": "id", "arg": "@Subnet_update.properties.delegations[].id"}, {"type": "string", "name": "name", "arg": "@Subnet_update.properties.delegations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "actions", "arg": "@Subnet_update.properties.delegations[].properties.actions", "item": {"type": "string"}}, {"type": "string", "name": "serviceName", "arg": "@Subnet_update.properties.delegations[].properties.serviceName"}], "clientFlatten": true}]}}, {"type": "object", "name": "networkSecurityGroup", "arg": "@Subnet_update.properties.networkSecurityGroup", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.properties.networkSecurityGroup.etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_update.properties.networkSecurityGroup.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@Subnet_update.properties.networkSecurityGroup.location"}, {"type": "object", "name": "properties", "props": [{"type": "array<@SecurityRule_update>", "name": "defaultSecurityRules", "arg": "@Subnet_update.properties.networkSecurityGroup.properties.defaultSecurityRules", "item": {"type": "@SecurityRule_update"}}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_update.properties.networkSecurityGroup.properties.provisioningState"}, {"type": "string", "name": "resourceGuid", "arg": "@Subnet_update.properties.networkSecurityGroup.properties.resourceGuid"}, {"type": "array<object>", "name": "securityRules", "arg": "@Subnet_update.properties.networkSecurityGroup.properties.securityRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@SecurityRule_update.etag"}, {"type": "ResourceId", "name": "id", "arg": "@SecurityRule_update.id"}, {"type": "string", "name": "name", "arg": "@SecurityRule_update.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "access", "arg": "@SecurityRule_update.properties.access", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "string", "name": "description", "arg": "@SecurityRule_update.properties.description"}, {"type": "string", "name": "destinationAddressPrefix", "arg": "@SecurityRule_update.properties.destinationAddressPrefix"}, {"type": "array<string>", "name": "destinationAddressPrefixes", "arg": "@SecurityRule_update.properties.destinationAddressPrefixes", "item": {"type": "string"}}, {"type": "array<@ApplicationSecurityGroup_update>", "name": "destinationApplicationSecurityGroups", "arg": "@SecurityRule_update.properties.destinationApplicationSecurityGroups", "item": {"type": "@ApplicationSecurityGroup_update"}}, {"type": "string", "name": "destinationPortRange", "arg": "@SecurityRule_update.properties.destinationPortRange"}, {"type": "array<string>", "name": "destinationPortRanges", "arg": "@SecurityRule_update.properties.destinationPortRanges", "item": {"type": "string"}}, {"type": "string", "name": "direction", "arg": "@SecurityRule_update.properties.direction", "required": true, "enum": {"items": [{"value": "Inbound"}, {"value": "Outbound"}]}}, {"type": "integer32", "name": "priority", "arg": "@SecurityRule_update.properties.priority"}, {"type": "string", "name": "protocol", "arg": "@SecurityRule_update.properties.protocol", "required": true, "enum": {"items": [{"value": "*"}, {"value": "Tcp"}, {"value": "Udp"}]}}, {"type": "string", "name": "provisioningState", "arg": "@SecurityRule_update.properties.provisioningState"}, {"type": "string", "name": "sourceAddressPrefix", "arg": "@SecurityRule_update.properties.sourceAddressPrefix"}, {"type": "array<string>", "name": "sourceAddressPrefixes", "arg": "@SecurityRule_update.properties.sourceAddressPrefixes", "item": {"type": "string"}}, {"type": "array<object>", "name": "sourceApplicationSecurityGroups", "arg": "@SecurityRule_update.properties.sourceApplicationSecurityGroups", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "@ApplicationSecurityGroup_update.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@ApplicationSecurityGroup_update.location"}, {"type": "object", "name": "tags", "arg": "@ApplicationSecurityGroup_update.tags", "additionalProps": {"item": {"type": "string"}}}], "cls": "ApplicationSecurityGroup_update"}}, {"type": "string", "name": "sourcePortRange", "arg": "@SecurityRule_update.properties.sourcePortRange"}, {"type": "array<string>", "name": "sourcePortRanges", "arg": "@SecurityRule_update.properties.sourcePortRanges", "item": {"type": "string"}}], "clientFlatten": true}], "cls": "SecurityRule_update"}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@Subnet_update.properties.networkSecurityGroup.tags", "additionalProps": {"item": {"type": "string"}}}]}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_update.properties.provisioningState"}, {"type": "array<object>", "name": "resourceNavigationLinks", "arg": "@Subnet_update.properties.resourceNavigationLinks", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "@Subnet_update.properties.resourceNavigationLinks[].id"}, {"type": "string", "name": "name", "arg": "@Subnet_update.properties.resourceNavigationLinks[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link", "arg": "@Subnet_update.properties.resourceNavigationLinks[].properties.link"}, {"type": "string", "name": "linkedResourceType", "arg": "@Subnet_update.properties.resourceNavigationLinks[].properties.linkedResourceType"}], "clientFlatten": true}]}}, {"type": "object", "name": "routeTable", "arg": "@Subnet_update.properties.routeTable", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.properties.routeTable.etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_update.properties.routeTable.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@Subnet_update.properties.routeTable.location"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "disableBgpRoutePropagation", "arg": "@Subnet_update.properties.routeTable.properties.disableBgpRoutePropagation"}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_update.properties.routeTable.properties.provisioningState"}, {"type": "array<object>", "name": "routes", "arg": "@Subnet_update.properties.routeTable.properties.routes", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.properties.routeTable.properties.routes[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_update.properties.routeTable.properties.routes[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"}}, {"type": "string", "name": "name", "arg": "@Subnet_update.properties.routeTable.properties.routes[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "addressPrefix", "arg": "@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix"}, {"type": "string", "name": "nextHopIpAddress", "arg": "@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress"}, {"type": "string", "name": "nextHopType", "arg": "@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType", "required": true, "enum": {"items": [{"value": "Internet"}, {"value": "None"}, {"value": "VirtualAppliance"}, {"value": "VirtualNetworkGateway"}, {"value": "VnetLocal"}]}}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_update.properties.routeTable.properties.routes[].properties.provisioningState"}], "clientFlatten": true}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@Subnet_update.properties.routeTable.tags", "additionalProps": {"item": {"type": "string"}}}]}, {"type": "array<object>", "name": "serviceAssociationLinks", "arg": "@Subnet_update.properties.serviceAssociationLinks", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "@Subnet_update.properties.serviceAssociationLinks[].id"}, {"type": "string", "name": "name", "arg": "@Subnet_update.properties.serviceAssociationLinks[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "link", "arg": "@Subnet_update.properties.serviceAssociationLinks[].properties.link"}, {"type": "string", "name": "linkedResourceType", "arg": "@Subnet_update.properties.serviceAssociationLinks[].properties.linkedResourceType"}], "clientFlatten": true}]}}, {"type": "array<object>", "name": "serviceEndpointPolicies", "arg": "@Subnet_update.properties.serviceEndpointPolicies", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].location"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "serviceEndpointPolicyDefinitions", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].etag"}, {"type": "ResourceId", "name": "id", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"}}, {"type": "string", "name": "name", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description"}, {"type": "string", "name": "service", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service"}, {"type": "array<string>", "name": "serviceResources", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources", "item": {"type": "string"}}], "clientFlatten": true}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@Subnet_update.properties.serviceEndpointPolicies[].tags", "additionalProps": {"item": {"type": "string"}}}]}}, {"type": "array<object>", "name": "serviceEndpoints", "arg": "@Subnet_update.properties.serviceEndpoints", "item": {"type": "object", "props": [{"type": "array<string>", "name": "locations", "arg": "@Subnet_update.properties.serviceEndpoints[].locations", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState", "arg": "@Subnet_update.properties.serviceEndpoints[].provisioningState"}, {"type": "string", "name": "service", "arg": "@Subnet_update.properties.serviceEndpoints[].service"}]}}], "clientFlatten": true}], "cls": "Subnet_update"}], "clientFlatten": true}, {"type": "array<string>", "name": "zones", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationLoadBalancerFrontEndIPConfiguration.zones", "item": {"type": "string"}}]}, {"type": "@NetworkInterfaceIPConfiguration_update", "name": "destinationNetworkInterfaceIPConfiguration", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationNetworkInterfaceIPConfiguration"}, {"type": "integer", "name": "destinationPort", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].properties.destinationPort"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "@NetworkInterfaceIPConfiguration_update.properties.virtualNetworkTaps[].tags", "additionalProps": {"item": {"type": "string"}}}]}}], "clientFlatten": true}], "cls": "NetworkInterfaceIPConfiguration_update"}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.backendAddressPools[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.backendAddressPools[].type"}]}}, {"type": "array<object>", "name": "backendHttpSettingsCollection", "arg": "$parameters.properties.backendHttpSettingsCollection", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.backendHttpSettingsCollection[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.backendHttpSettingsCollection[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.backendHttpSettingsCollection[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "affinityCookieName", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.affinityCookieName"}, {"type": "array<@SubResource_update>", "name": "authenticationCertificates", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.authenticationCertificates", "item": {"type": "@SubResource_update"}}, {"type": "object", "name": "connectionDraining", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining", "props": [{"type": "integer32", "name": "drainTimeoutInSec", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.drainTimeoutInSec", "required": true, "format": {"maximum": 3600, "minimum": 1}}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.connectionDraining.enabled", "required": true}]}, {"type": "string", "name": "cookieBasedAffinity", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.cookieBasedAffinity", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "hostName", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.hostName"}, {"type": "string", "name": "path", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.path"}, {"type": "boolean", "name": "pickHostNameFromBackendAddress", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.pickHostNameFromBackendAddress"}, {"type": "integer32", "name": "port", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.port"}, {"type": "@SubResource_update", "name": "probe", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.probe"}, {"type": "boolean", "name": "probeEnabled", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.probeEnabled"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.provisioningState"}, {"type": "integer32", "name": "requestTimeout", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.requestTimeout"}, {"type": "array<@SubResource_update>", "name": "trustedRootCertificates", "arg": "$parameters.properties.backendHttpSettingsCollection[].properties.trustedRootCertificates", "item": {"type": "@SubResource_update"}}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.backendHttpSettingsCollection[].type"}]}}, {"type": "array<@ApplicationGatewayCustomError_update>", "name": "customErrorConfigurations", "arg": "$parameters.properties.customErrorConfigurations", "item": {"type": "@ApplicationGatewayCustomError_update"}}, {"type": "boolean", "name": "enableFips", "arg": "$parameters.properties.enableFips"}, {"type": "boolean", "name": "enableHttp2", "arg": "$parameters.properties.enableHttp2"}, {"type": "array<object>", "name": "frontendIPConfigurations", "arg": "$parameters.properties.frontendIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.frontendIPConfigurations[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.frontendIPConfigurations[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.frontendIPConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "privateIPAddress", "arg": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "$parameters.properties.frontendIPConfigurations[].properties.privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.frontendIPConfigurations[].properties.provisioningState"}, {"type": "@SubResource_update", "name": "publicIPAddress", "arg": "$parameters.properties.frontendIPConfigurations[].properties.publicIPAddress"}, {"type": "@SubResource_update", "name": "subnet", "arg": "$parameters.properties.frontendIPConfigurations[].properties.subnet"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.frontendIPConfigurations[].type"}]}}, {"type": "array<object>", "name": "frontendPorts", "arg": "$parameters.properties.frontendPorts", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.frontendPorts[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.frontendPorts[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.frontendPorts[].name"}, {"type": "object", "name": "properties", "props": [{"type": "integer32", "name": "port", "arg": "$parameters.properties.frontendPorts[].properties.port"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.frontendPorts[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.frontendPorts[].type"}]}}, {"type": "array<object>", "name": "gatewayIPConfigurations", "arg": "$parameters.properties.gatewayIPConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.gatewayIPConfigurations[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.gatewayIPConfigurations[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.gatewayIPConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "provisioningState", "arg": "$parameters.properties.gatewayIPConfigurations[].properties.provisioningState"}, {"type": "object", "name": "subnet", "arg": "$parameters.properties.gatewayIPConfigurations[].properties.subnet", "props": [{"type": "string", "name": "id", "arg": "@SubResource_update.id"}], "cls": "SubResource_update"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.gatewayIPConfigurations[].type"}]}}, {"type": "array<object>", "name": "httpListeners", "arg": "$parameters.properties.httpListeners", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.httpListeners[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.httpListeners[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.httpListeners[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "customErrorConfigurations", "arg": "$parameters.properties.httpListeners[].properties.customErrorConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "customErrorPageUrl", "arg": "@ApplicationGatewayCustomError_update.customErrorPageUrl"}, {"type": "string", "name": "statusCode", "arg": "@ApplicationGatewayCustomError_update.statusCode", "enum": {"items": [{"value": "HttpStatus403"}, {"value": "HttpStatus502"}]}}], "cls": "ApplicationGatewayCustomError_update"}}, {"type": "@SubResource_update", "name": "frontendIPConfiguration", "arg": "$parameters.properties.httpListeners[].properties.frontendIPConfiguration"}, {"type": "@SubResource_update", "name": "frontendPort", "arg": "$parameters.properties.httpListeners[].properties.frontendPort"}, {"type": "string", "name": "hostName", "arg": "$parameters.properties.httpListeners[].properties.hostName"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.httpListeners[].properties.protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.httpListeners[].properties.provisioningState"}, {"type": "boolean", "name": "requireServerNameIndication", "arg": "$parameters.properties.httpListeners[].properties.requireServerNameIndication"}, {"type": "@SubResource_update", "name": "sslCertificate", "arg": "$parameters.properties.httpListeners[].properties.sslCertificate"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.httpListeners[].type"}]}}, {"type": "array<object>", "name": "probes", "arg": "$parameters.properties.probes", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.probes[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.probes[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.probes[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "host", "arg": "$parameters.properties.probes[].properties.host"}, {"type": "integer32", "name": "interval", "arg": "$parameters.properties.probes[].properties.interval"}, {"type": "object", "name": "match", "arg": "$parameters.properties.probes[].properties.match", "props": [{"type": "string", "name": "body", "arg": "$parameters.properties.probes[].properties.match.body"}, {"type": "array<string>", "name": "statusCodes", "arg": "$parameters.properties.probes[].properties.match.statusCodes", "item": {"type": "string"}}]}, {"type": "integer32", "name": "minServers", "arg": "$parameters.properties.probes[].properties.minServers"}, {"type": "string", "name": "path", "arg": "$parameters.properties.probes[].properties.path"}, {"type": "boolean", "name": "pickHostNameFromBackendHttpSettings", "arg": "$parameters.properties.probes[].properties.pickHostNameFromBackendHttpSettings"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.probes[].properties.protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.probes[].properties.provisioningState"}, {"type": "integer32", "name": "timeout", "arg": "$parameters.properties.probes[].properties.timeout"}, {"type": "integer32", "name": "unhealthyThreshold", "arg": "$parameters.properties.probes[].properties.unhealthyThreshold"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.probes[].type"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.provisioningState"}, {"type": "array<object>", "name": "redirectConfigurations", "arg": "$parameters.properties.redirectConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.redirectConfigurations[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.redirectConfigurations[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.redirectConfigurations[].name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "includePath", "arg": "$parameters.properties.redirectConfigurations[].properties.includePath"}, {"type": "boolean", "name": "includeQueryString", "arg": "$parameters.properties.redirectConfigurations[].properties.includeQueryString"}, {"type": "array<@SubResource_update>", "name": "pathRules", "arg": "$parameters.properties.redirectConfigurations[].properties.pathRules", "item": {"type": "@SubResource_update"}}, {"type": "string", "name": "redirectType", "arg": "$parameters.properties.redirectConfigurations[].properties.redirectType", "enum": {"items": [{"value": "Found"}, {"value": "Permanent"}, {"value": "SeeOther"}, {"value": "Temporary"}]}}, {"type": "array<@SubResource_update>", "name": "requestRoutingRules", "arg": "$parameters.properties.redirectConfigurations[].properties.requestRoutingRules", "item": {"type": "@SubResource_update"}}, {"type": "@SubResource_update", "name": "targetListener", "arg": "$parameters.properties.redirectConfigurations[].properties.targetListener"}, {"type": "string", "name": "targetUrl", "arg": "$parameters.properties.redirectConfigurations[].properties.targetUrl"}, {"type": "array<@SubResource_update>", "name": "urlPathMaps", "arg": "$parameters.properties.redirectConfigurations[].properties.urlPathMaps", "item": {"type": "@SubResource_update"}}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.redirectConfigurations[].type"}]}}, {"type": "array<object>", "name": "requestRoutingRules", "arg": "$parameters.properties.requestRoutingRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.requestRoutingRules[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.requestRoutingRules[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.requestRoutingRules[].name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_update", "name": "backendAddressPool", "arg": "$parameters.properties.requestRoutingRules[].properties.backendAddressPool"}, {"type": "@SubResource_update", "name": "backendHttpSettings", "arg": "$parameters.properties.requestRoutingRules[].properties.backendHttpSettings"}, {"type": "@SubResource_update", "name": "httpListener", "arg": "$parameters.properties.requestRoutingRules[].properties.httpListener"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.requestRoutingRules[].properties.provisioningState"}, {"type": "@SubResource_update", "name": "redirectConfiguration", "arg": "$parameters.properties.requestRoutingRules[].properties.redirectConfiguration"}, {"type": "@SubResource_update", "name": "rewriteRuleSet", "arg": "$parameters.properties.requestRoutingRules[].properties.rewriteRuleSet"}, {"type": "string", "name": "ruleType", "arg": "$parameters.properties.requestRoutingRules[].properties.ruleType", "enum": {"items": [{"value": "Basic"}, {"value": "PathBasedRouting"}]}}, {"type": "@SubResource_update", "name": "urlPathMap", "arg": "$parameters.properties.requestRoutingRules[].properties.urlPathMap"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.requestRoutingRules[].type"}]}}, {"type": "string", "name": "resourceGuid", "arg": "$parameters.properties.resourceGuid"}, {"type": "array<object>", "name": "rewriteRuleSets", "arg": "$parameters.properties.rewriteRuleSets", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.rewriteRuleSets[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.rewriteRuleSets[].name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "rewriteRules", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules", "item": {"type": "object", "props": [{"type": "object", "name": "actionSet", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet", "props": [{"type": "array<object>", "name": "requestHeaderConfigurations", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "headerName", "arg": "@ApplicationGatewayHeaderConfiguration_update.headerName"}, {"type": "string", "name": "headerValue", "arg": "@ApplicationGatewayHeaderConfiguration_update.headerValue"}], "cls": "ApplicationGatewayHeaderConfiguration_update"}}, {"type": "array<@ApplicationGatewayHeaderConfiguration_update>", "name": "responseHeaderConfigurations", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations", "item": {"type": "@ApplicationGatewayHeaderConfiguration_update"}}]}, {"type": "string", "name": "name", "arg": "$parameters.properties.rewriteRuleSets[].properties.rewriteRules[].name"}]}}], "clientFlatten": true}]}}, {"type": "object", "name": "sku", "props": [{"type": "integer32", "name": "capacity", "arg": "$parameters.properties.sku.capacity"}, {"type": "string", "name": "name", "arg": "$parameters.properties.sku.name", "enum": {"items": [{"value": "Standard_Large"}, {"value": "Standard_Medium"}, {"value": "Standard_Small"}, {"value": "Standard_v2"}, {"value": "WAF_Large"}, {"value": "WAF_Medium"}, {"value": "WAF_v2"}]}}, {"type": "string", "name": "tier", "arg": "$parameters.properties.sku.tier", "enum": {"items": [{"value": "Standard"}, {"value": "Standard_v2"}, {"value": "WAF"}, {"value": "WAF_v2"}]}}]}, {"type": "array<object>", "name": "sslCertificates", "arg": "$parameters.properties.sslCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.sslCertificates[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.sslCertificates[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.sslCertificates[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data", "arg": "$parameters.properties.sslCertificates[].properties.data"}, {"type": "string", "name": "keyVaultSecretId", "arg": "$parameters.properties.sslCertificates[].properties.keyVaultSecretId"}, {"type": "string", "name": "password", "arg": "$parameters.properties.sslCertificates[].properties.password"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.sslCertificates[].properties.provisioningState"}, {"type": "string", "name": "publicCertData", "arg": "$parameters.properties.sslCertificates[].properties.publicCertData"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.sslCertificates[].type"}]}}, {"type": "object", "name": "sslPolicy", "arg": "$parameters.properties.sslPolicy", "props": [{"type": "array<string>", "name": "cipherSuites", "arg": "$parameters.properties.sslPolicy.cipherSuites", "item": {"type": "string", "enum": {"items": [{"value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"}, {"value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"}, {"value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_128_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_128_GCM_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA"}, {"value": "TLS_RSA_WITH_AES_256_CBC_SHA256"}, {"value": "TLS_RSA_WITH_AES_256_GCM_SHA384"}]}}}, {"type": "array<string>", "name": "disabledSslProtocols", "arg": "$parameters.properties.sslPolicy.disabledSslProtocols", "item": {"type": "string", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}}, {"type": "string", "name": "minProtocolVersion", "arg": "$parameters.properties.sslPolicy.minProtocolVersion", "enum": {"items": [{"value": "TLSv1_0"}, {"value": "TLSv1_1"}, {"value": "TLSv1_2"}]}}, {"type": "string", "name": "policyName", "arg": "$parameters.properties.sslPolicy.policyName", "enum": {"items": [{"value": "AppGwSslPolicy20150501"}, {"value": "AppGwSslPolicy20170401"}, {"value": "AppGwSslPolicy20170401S"}]}}, {"type": "string", "name": "policyType", "arg": "$parameters.properties.sslPolicy.policyType", "enum": {"items": [{"value": "Custom"}, {"value": "Predefined"}]}}]}, {"type": "array<object>", "name": "trustedRootCertificates", "arg": "$parameters.properties.trustedRootCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.trustedRootCertificates[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.trustedRootCertificates[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.trustedRootCertificates[].name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "data", "arg": "$parameters.properties.trustedRootCertificates[].properties.data"}, {"type": "string", "name": "keyVaultSecretId", "arg": "$parameters.properties.trustedRootCertificates[].properties.keyVaultSecretId"}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.trustedRootCertificates[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.trustedRootCertificates[].type"}]}}, {"type": "array<object>", "name": "urlPathMaps", "arg": "$parameters.properties.urlPathMaps", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.urlPathMaps[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.urlPathMaps[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.urlPathMaps[].name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_update", "name": "defaultBackendAddressPool", "arg": "$parameters.properties.urlPathMaps[].properties.defaultBackendAddressPool"}, {"type": "@SubResource_update", "name": "defaultBackendHttpSettings", "arg": "$parameters.properties.urlPathMaps[].properties.defaultBackendHttpSettings"}, {"type": "@SubResource_update", "name": "defaultRedirectConfiguration", "arg": "$parameters.properties.urlPathMaps[].properties.defaultRedirectConfiguration"}, {"type": "@SubResource_update", "name": "defaultRewriteRuleSet", "arg": "$parameters.properties.urlPathMaps[].properties.defaultRewriteRuleSet"}, {"type": "array<object>", "name": "pathRules", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules", "item": {"type": "object", "props": [{"type": "string", "name": "etag", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].etag"}, {"type": "string", "name": "id", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].id"}, {"type": "string", "name": "name", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].name"}, {"type": "object", "name": "properties", "props": [{"type": "@SubResource_update", "name": "backendAddressPool", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendAddressPool"}, {"type": "@SubResource_update", "name": "backendHttpSettings", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.backendHttpSettings"}, {"type": "array<string>", "name": "paths", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.paths", "item": {"type": "string"}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.provisioningState"}, {"type": "@SubResource_update", "name": "redirectConfiguration", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.redirectConfiguration"}, {"type": "@SubResource_update", "name": "rewriteRuleSet", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].properties.rewriteRuleSet"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.urlPathMaps[].properties.pathRules[].type"}]}}, {"type": "string", "name": "provisioningState", "arg": "$parameters.properties.urlPathMaps[].properties.provisioningState"}], "clientFlatten": true}, {"type": "string", "name": "type", "arg": "$parameters.properties.urlPathMaps[].type"}]}}, {"type": "object", "name": "webApplicationFirewallConfiguration", "arg": "$parameters.properties.webApplicationFirewallConfiguration", "props": [{"type": "array<object>", "name": "disabledRuleGroups", "arg": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups", "item": {"type": "object", "props": [{"type": "string", "name": "ruleGroupName", "arg": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].ruleGroupName", "required": true}, {"type": "array<integer32>", "name": "rules", "arg": "$parameters.properties.webApplicationFirewallConfiguration.disabledRuleGroups[].rules", "item": {"type": "integer32"}}]}}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.webApplicationFirewallConfiguration.enabled", "required": true}, {"type": "array<object>", "name": "exclusions", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions", "item": {"type": "object", "props": [{"type": "string", "name": "matchVariable", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].matchVariable", "required": true}, {"type": "string", "name": "selector", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selector", "required": true}, {"type": "string", "name": "selectorMatchOperator", "arg": "$parameters.properties.webApplicationFirewallConfiguration.exclusions[].selectorMatchOperator", "required": true}]}}, {"type": "integer32", "name": "fileUploadLimitInMb", "arg": "$parameters.properties.webApplicationFirewallConfiguration.fileUploadLimitInMb", "format": {"maximum": 500, "minimum": 0}}, {"type": "string", "name": "firewallMode", "arg": "$parameters.properties.webApplicationFirewallConfiguration.firewallMode", "required": true, "enum": {"items": [{"value": "Detection"}, {"value": "Prevention"}]}}, {"type": "integer32", "name": "maxRequestBodySize", "arg": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySize", "format": {"maximum": 128, "minimum": 8}}, {"type": "integer32", "name": "maxRequestBodySizeInKb", "arg": "$parameters.properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb", "format": {"maximum": 128, "minimum": 8}}, {"type": "boolean", "name": "requestBodyCheck", "arg": "$parameters.properties.webApplicationFirewallConfiguration.requestBodyCheck"}, {"type": "string", "name": "ruleSetType", "arg": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetType", "required": true}, {"type": "string", "name": "ruleSetVersion", "arg": "$parameters.properties.webApplicationFirewallConfiguration.ruleSetVersion", "required": true}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$parameters.zones", "item": {"type": "string"}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "ApplicationGateways_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "applicationGatewayName", "arg": "$Path.applicationGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@ApplicationGateway_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}