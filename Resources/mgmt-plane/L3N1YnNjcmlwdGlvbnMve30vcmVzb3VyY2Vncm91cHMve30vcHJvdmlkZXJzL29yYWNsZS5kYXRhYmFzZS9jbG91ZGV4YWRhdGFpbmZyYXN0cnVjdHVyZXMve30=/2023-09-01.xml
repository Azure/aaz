<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVzL3tjbG91ZGV4YWRhdGFpbmZyYXN0cnVjdHVyZW5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="oracle-database cloud-exadata-infrastructure">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVzL3tjbG91ZGV4YWRhdGFpbmZyYXN0cnVjdHVyZW5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudexadatainfrastructurename" options="cloudexadatainfrastructurename name n" required="True" idPart="name">
          <help short="CloudExadataInfrastructure name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CloudExadataInfrastructures_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}">
          <request method="get">
            <path>
              <param type="string" name="cloudexadatainfrastructurename" arg="$Path.cloudexadatainfrastructurename" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudExadataInfrastructures/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="integer32" name="activatedStorageCount"/>
                    <prop readOnly="True" type="integer32" name="additionalStorageCount"/>
                    <prop readOnly="True" type="integer32" name="availableStorageSizeInGbs"/>
                    <prop type="integer32" name="computeCount"/>
                    <prop readOnly="True" type="integer32" name="cpuCount"/>
                    <prop type="array<object>" name="customerContacts">
                      <item type="object">
                        <prop type="string" name="email" required="True">
                          <format maxLength="320" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="float64" name="dataStorageSizeInTbs"/>
                    <prop readOnly="True" type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop readOnly="True" type="string" name="dbServerVersion"/>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="object" name="estimatedPatchingTime">
                      <prop readOnly="True" type="integer32" name="estimatedDbServerPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="estimatedNetworkSwitchesPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="estimatedStorageServerPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="totalEstimatedPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                    </prop>
                    <prop type="string" name="lastMaintenanceRunId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="maintenanceWindow">
                      <prop type="integer32" name="customActionTimeoutInMins">
                        <format maximum="120" minimum="0"/>
                      </prop>
                      <prop type="array<object>" name="daysOfWeek" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<integer32>" name="hoursOfDay">
                        <item type="integer32"/>
                      </prop>
                      <prop type="boolean" name="isCustomActionTimeoutEnabled"/>
                      <prop type="boolean" name="isMonthlyPatchingEnabled"/>
                      <prop type="integer32" name="leadTimeInWeeks"/>
                      <prop type="array<object>" name="months" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;April&quot;"/>
                              <item value="&quot;August&quot;"/>
                              <item value="&quot;December&quot;"/>
                              <item value="&quot;February&quot;"/>
                              <item value="&quot;January&quot;"/>
                              <item value="&quot;July&quot;"/>
                              <item value="&quot;June&quot;"/>
                              <item value="&quot;March&quot;"/>
                              <item value="&quot;May&quot;"/>
                              <item value="&quot;November&quot;"/>
                              <item value="&quot;October&quot;"/>
                              <item value="&quot;September&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="patchingMode">
                        <enum>
                          <item value="&quot;NonRolling&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="preference">
                        <enum>
                          <item value="&quot;CustomPreference&quot;"/>
                          <item value="&quot;NoPreference&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<integer32>" name="weeksOfMonth">
                        <item type="integer32"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer32" name="maxCpuCount"/>
                    <prop readOnly="True" type="float64" name="maxDataStorageInTbs"/>
                    <prop readOnly="True" type="integer32" name="maxDbNodeStorageSizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="maxMemoryInGbs"/>
                    <prop readOnly="True" type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="string" name="monthlyDbServerVersion"/>
                    <prop readOnly="True" type="string" name="monthlyStorageServerVersion"/>
                    <prop type="string" name="nextMaintenanceRunId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="shape" required="True"/>
                    <prop type="integer32" name="storageCount"/>
                    <prop readOnly="True" type="string" name="storageServerVersion"/>
                    <prop readOnly="True" type="string" name="timeCreated"/>
                    <prop readOnly="True" type="integer32" name="totalStorageSizeInGbs"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones" required="True">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVzL3tjbG91ZGV4YWRhdGFpbmZyYXN0cnVjdHVyZW5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudexadatainfrastructurename" options="cloudexadatainfrastructurename name n" required="True" idPart="name">
          <help short="CloudExadataInfrastructure name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CloudExadataInfrastructures_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}">
          <request method="delete">
            <path>
              <param type="string" name="cloudexadatainfrastructurename" arg="$Path.cloudexadatainfrastructurename" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVzL3tjbG91ZGV4YWRhdGFpbmZyYXN0cnVjdHVyZW5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudexadatainfrastructurename" options="cloudexadatainfrastructurename name n" required="True" idPart="name">
          <help short="CloudExadataInfrastructure name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="integer32" var="$resource.properties.computeCount" options="compute-count" group="Properties">
          <help short="The number of compute servers for the cloud Exadata infrastructure."/>
        </arg>
        <arg type="array<object>" var="$resource.properties.customerContacts" options="customer-contacts" group="Properties">
          <help short="The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. "/>
          <item type="object">
            <arg type="string" var="$resource.properties.customerContacts[].email" options="email" required="True">
              <help short="The email address used by Oracle to send notifications regarding databases and infrastructure."/>
              <format maxLength="320" minLength="1"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.displayName" options="display-name" group="Properties">
          <help short="The name for the Exadata infrastructure."/>
          <format maxLength="255" minLength="1"/>
        </arg>
        <arg type="object" var="$resource.properties.maintenanceWindow" options="maintenance-window" group="Properties">
          <help short="maintenanceWindow property"/>
          <arg type="integer32" var="$resource.properties.maintenanceWindow.customActionTimeoutInMins" options="custom-action-timeout-in-mins">
            <help short="Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive)."/>
            <format maximum="120" minimum="0"/>
          </arg>
          <arg type="array<object>" var="$resource.properties.maintenanceWindow.daysOfWeek" options="days-of-week">
            <help short="Days during the week when maintenance should be performed."/>
            <item type="object">
              <arg type="string" var="$resource.properties.maintenanceWindow.daysOfWeek[].name" options="name" required="True">
                <help short="Name of the day of the week."/>
                <enum>
                  <item name="Friday" value="&quot;Friday&quot;"/>
                  <item name="Monday" value="&quot;Monday&quot;"/>
                  <item name="Saturday" value="&quot;Saturday&quot;"/>
                  <item name="Sunday" value="&quot;Sunday&quot;"/>
                  <item name="Thursday" value="&quot;Thursday&quot;"/>
                  <item name="Tuesday" value="&quot;Tuesday&quot;"/>
                  <item name="Wednesday" value="&quot;Wednesday&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="array<integer32>" var="$resource.properties.maintenanceWindow.hoursOfDay" options="hours-of-day">
            <help short="The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC"/>
            <item type="integer32"/>
          </arg>
          <arg type="boolean" var="$resource.properties.maintenanceWindow.isCustomActionTimeoutEnabled" options="is-custom-action-timeout-enabled">
            <help short="If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations."/>
          </arg>
          <arg type="boolean" var="$resource.properties.maintenanceWindow.isMonthlyPatchingEnabled" options="is-monthly-patching-enabled">
            <help short="is Monthly Patching Enabled"/>
          </arg>
          <arg type="integer32" var="$resource.properties.maintenanceWindow.leadTimeInWeeks" options="lead-time-in-weeks">
            <help short="Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. "/>
          </arg>
          <arg type="array<object>" var="$resource.properties.maintenanceWindow.months" options="months">
            <help short="Months during the year when maintenance should be performed."/>
            <item type="object">
              <arg type="string" var="$resource.properties.maintenanceWindow.months[].name" options="name" required="True">
                <help short="Name of the month of the year."/>
                <enum>
                  <item name="April" value="&quot;April&quot;"/>
                  <item name="August" value="&quot;August&quot;"/>
                  <item name="December" value="&quot;December&quot;"/>
                  <item name="February" value="&quot;February&quot;"/>
                  <item name="January" value="&quot;January&quot;"/>
                  <item name="July" value="&quot;July&quot;"/>
                  <item name="June" value="&quot;June&quot;"/>
                  <item name="March" value="&quot;March&quot;"/>
                  <item name="May" value="&quot;May&quot;"/>
                  <item name="November" value="&quot;November&quot;"/>
                  <item name="October" value="&quot;October&quot;"/>
                  <item name="September" value="&quot;September&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$resource.properties.maintenanceWindow.patchingMode" options="patching-mode">
            <help short="Cloud Exadata infrastructure node patching method."/>
            <enum>
              <item name="NonRolling" value="&quot;NonRolling&quot;"/>
              <item name="Rolling" value="&quot;Rolling&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.maintenanceWindow.preference" options="preference">
            <help short="The maintenance window scheduling preference."/>
            <enum>
              <item name="CustomPreference" value="&quot;CustomPreference&quot;"/>
              <item name="NoPreference" value="&quot;NoPreference&quot;"/>
            </enum>
          </arg>
          <arg type="array<integer32>" var="$resource.properties.maintenanceWindow.weeksOfMonth" options="weeks-of-month">
            <help short="Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. "/>
            <item type="integer32"/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.shape" options="shape" group="Properties">
          <help short="The model name of the cloud Exadata infrastructure resource."/>
        </arg>
        <arg type="integer32" var="$resource.properties.storageCount" options="storage-count" group="Properties">
          <help short="The number of storage servers for the cloud Exadata infrastructure."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$resource.zones" options="zones" required="True" group="Resource">
          <help short="CloudExadataInfrastructure zones"/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="CloudExadataInfrastructures_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}">
          <request method="put">
            <path>
              <param type="string" name="cloudexadatainfrastructurename" arg="$Path.cloudexadatainfrastructurename" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="computeCount" arg="$resource.properties.computeCount"/>
                    <prop type="array<object>" name="customerContacts" arg="$resource.properties.customerContacts">
                      <item type="object">
                        <prop type="string" name="email" arg="$resource.properties.customerContacts[].email" required="True">
                          <format maxLength="320" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="displayName" arg="$resource.properties.displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="object" name="maintenanceWindow" arg="$resource.properties.maintenanceWindow">
                      <prop type="integer32" name="customActionTimeoutInMins" arg="$resource.properties.maintenanceWindow.customActionTimeoutInMins">
                        <format maximum="120" minimum="0"/>
                      </prop>
                      <prop type="array<object>" name="daysOfWeek" arg="$resource.properties.maintenanceWindow.daysOfWeek" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$resource.properties.maintenanceWindow.daysOfWeek[].name" required="True">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<integer32>" name="hoursOfDay" arg="$resource.properties.maintenanceWindow.hoursOfDay">
                        <item type="integer32"/>
                      </prop>
                      <prop type="boolean" name="isCustomActionTimeoutEnabled" arg="$resource.properties.maintenanceWindow.isCustomActionTimeoutEnabled"/>
                      <prop type="boolean" name="isMonthlyPatchingEnabled" arg="$resource.properties.maintenanceWindow.isMonthlyPatchingEnabled"/>
                      <prop type="integer32" name="leadTimeInWeeks" arg="$resource.properties.maintenanceWindow.leadTimeInWeeks"/>
                      <prop type="array<object>" name="months" arg="$resource.properties.maintenanceWindow.months" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$resource.properties.maintenanceWindow.months[].name" required="True">
                            <enum>
                              <item value="&quot;April&quot;"/>
                              <item value="&quot;August&quot;"/>
                              <item value="&quot;December&quot;"/>
                              <item value="&quot;February&quot;"/>
                              <item value="&quot;January&quot;"/>
                              <item value="&quot;July&quot;"/>
                              <item value="&quot;June&quot;"/>
                              <item value="&quot;March&quot;"/>
                              <item value="&quot;May&quot;"/>
                              <item value="&quot;November&quot;"/>
                              <item value="&quot;October&quot;"/>
                              <item value="&quot;September&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="patchingMode" arg="$resource.properties.maintenanceWindow.patchingMode">
                        <enum>
                          <item value="&quot;NonRolling&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="preference" arg="$resource.properties.maintenanceWindow.preference">
                        <enum>
                          <item value="&quot;CustomPreference&quot;"/>
                          <item value="&quot;NoPreference&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<integer32>" name="weeksOfMonth" arg="$resource.properties.maintenanceWindow.weeksOfMonth">
                        <item type="integer32"/>
                      </prop>
                    </prop>
                    <prop type="string" name="shape" arg="$resource.properties.shape" required="True"/>
                    <prop type="integer32" name="storageCount" arg="$resource.properties.storageCount"/>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$resource.zones" required="True">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudExadataInfrastructures/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="integer32" name="activatedStorageCount"/>
                    <prop readOnly="True" type="integer32" name="additionalStorageCount"/>
                    <prop readOnly="True" type="integer32" name="availableStorageSizeInGbs"/>
                    <prop type="integer32" name="computeCount"/>
                    <prop readOnly="True" type="integer32" name="cpuCount"/>
                    <prop type="array<object>" name="customerContacts">
                      <item type="object">
                        <prop type="string" name="email" required="True">
                          <format maxLength="320" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="float64" name="dataStorageSizeInTbs"/>
                    <prop readOnly="True" type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop readOnly="True" type="string" name="dbServerVersion"/>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="object" name="estimatedPatchingTime">
                      <prop readOnly="True" type="integer32" name="estimatedDbServerPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="estimatedNetworkSwitchesPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="estimatedStorageServerPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="totalEstimatedPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                    </prop>
                    <prop type="string" name="lastMaintenanceRunId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="maintenanceWindow">
                      <prop type="integer32" name="customActionTimeoutInMins">
                        <format maximum="120" minimum="0"/>
                      </prop>
                      <prop type="array<object>" name="daysOfWeek" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<integer32>" name="hoursOfDay">
                        <item type="integer32"/>
                      </prop>
                      <prop type="boolean" name="isCustomActionTimeoutEnabled"/>
                      <prop type="boolean" name="isMonthlyPatchingEnabled"/>
                      <prop type="integer32" name="leadTimeInWeeks"/>
                      <prop type="array<object>" name="months" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;April&quot;"/>
                              <item value="&quot;August&quot;"/>
                              <item value="&quot;December&quot;"/>
                              <item value="&quot;February&quot;"/>
                              <item value="&quot;January&quot;"/>
                              <item value="&quot;July&quot;"/>
                              <item value="&quot;June&quot;"/>
                              <item value="&quot;March&quot;"/>
                              <item value="&quot;May&quot;"/>
                              <item value="&quot;November&quot;"/>
                              <item value="&quot;October&quot;"/>
                              <item value="&quot;September&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="patchingMode">
                        <enum>
                          <item value="&quot;NonRolling&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="preference">
                        <enum>
                          <item value="&quot;CustomPreference&quot;"/>
                          <item value="&quot;NoPreference&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<integer32>" name="weeksOfMonth">
                        <item type="integer32"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer32" name="maxCpuCount"/>
                    <prop readOnly="True" type="float64" name="maxDataStorageInTbs"/>
                    <prop readOnly="True" type="integer32" name="maxDbNodeStorageSizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="maxMemoryInGbs"/>
                    <prop readOnly="True" type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="string" name="monthlyDbServerVersion"/>
                    <prop readOnly="True" type="string" name="monthlyStorageServerVersion"/>
                    <prop type="string" name="nextMaintenanceRunId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="shape" required="True"/>
                    <prop type="integer32" name="storageCount"/>
                    <prop readOnly="True" type="string" name="storageServerVersion"/>
                    <prop readOnly="True" type="string" name="timeCreated"/>
                    <prop readOnly="True" type="integer32" name="totalStorageSizeInGbs"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones" required="True">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVzL3tjbG91ZGV4YWRhdGFpbmZyYXN0cnVjdHVyZW5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudexadatainfrastructurename" options="cloudexadatainfrastructurename name n" required="True" idPart="name">
          <help short="CloudExadataInfrastructure name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="integer32" var="$resource.properties.computeCount" options="compute-count" group="Properties">
          <help short="The number of compute servers for the cloud Exadata infrastructure."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$resource.properties.customerContacts" options="customer-contacts" group="Properties">
          <help short="The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. "/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.customerContacts[].email" options="email">
              <help short="The email address used by Oracle to send notifications regarding databases and infrastructure."/>
              <format maxLength="320" minLength="1"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.displayName" options="display-name" group="Properties">
          <help short="The name for the Exadata infrastructure."/>
          <format maxLength="255" minLength="1"/>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.maintenanceWindow" options="maintenance-window" group="Properties">
          <help short="maintenanceWindow property"/>
          <arg nullable="True" type="integer32" var="$resource.properties.maintenanceWindow.customActionTimeoutInMins" options="custom-action-timeout-in-mins">
            <help short="Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive)."/>
            <format maximum="120" minimum="0"/>
          </arg>
          <arg nullable="True" type="array<object>" var="$resource.properties.maintenanceWindow.daysOfWeek" options="days-of-week">
            <help short="Days during the week when maintenance should be performed."/>
            <item nullable="True" type="object">
              <arg type="string" var="$resource.properties.maintenanceWindow.daysOfWeek[].name" options="name">
                <help short="Name of the day of the week."/>
                <enum>
                  <item name="Friday" value="&quot;Friday&quot;"/>
                  <item name="Monday" value="&quot;Monday&quot;"/>
                  <item name="Saturday" value="&quot;Saturday&quot;"/>
                  <item name="Sunday" value="&quot;Sunday&quot;"/>
                  <item name="Thursday" value="&quot;Thursday&quot;"/>
                  <item name="Tuesday" value="&quot;Tuesday&quot;"/>
                  <item name="Wednesday" value="&quot;Wednesday&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<integer32>" var="$resource.properties.maintenanceWindow.hoursOfDay" options="hours-of-day">
            <help short="The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC"/>
            <item nullable="True" type="integer32"/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.maintenanceWindow.isCustomActionTimeoutEnabled" options="is-custom-action-timeout-enabled">
            <help short="If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.maintenanceWindow.isMonthlyPatchingEnabled" options="is-monthly-patching-enabled">
            <help short="is Monthly Patching Enabled"/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.maintenanceWindow.leadTimeInWeeks" options="lead-time-in-weeks">
            <help short="Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. "/>
          </arg>
          <arg nullable="True" type="array<object>" var="$resource.properties.maintenanceWindow.months" options="months">
            <help short="Months during the year when maintenance should be performed."/>
            <item nullable="True" type="object">
              <arg type="string" var="$resource.properties.maintenanceWindow.months[].name" options="name">
                <help short="Name of the month of the year."/>
                <enum>
                  <item name="April" value="&quot;April&quot;"/>
                  <item name="August" value="&quot;August&quot;"/>
                  <item name="December" value="&quot;December&quot;"/>
                  <item name="February" value="&quot;February&quot;"/>
                  <item name="January" value="&quot;January&quot;"/>
                  <item name="July" value="&quot;July&quot;"/>
                  <item name="June" value="&quot;June&quot;"/>
                  <item name="March" value="&quot;March&quot;"/>
                  <item name="May" value="&quot;May&quot;"/>
                  <item name="November" value="&quot;November&quot;"/>
                  <item name="October" value="&quot;October&quot;"/>
                  <item name="September" value="&quot;September&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.maintenanceWindow.patchingMode" options="patching-mode">
            <help short="Cloud Exadata infrastructure node patching method."/>
            <enum>
              <item name="NonRolling" value="&quot;NonRolling&quot;"/>
              <item name="Rolling" value="&quot;Rolling&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.maintenanceWindow.preference" options="preference">
            <help short="The maintenance window scheduling preference."/>
            <enum>
              <item name="CustomPreference" value="&quot;CustomPreference&quot;"/>
              <item name="NoPreference" value="&quot;NoPreference&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<integer32>" var="$resource.properties.maintenanceWindow.weeksOfMonth" options="weeks-of-month">
            <help short="Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. "/>
            <item nullable="True" type="integer32"/>
          </arg>
        </arg>
        <arg nullable="True" type="integer32" var="$resource.properties.storageCount" options="storage-count" group="Properties">
          <help short="The number of storage servers for the cloud Exadata infrastructure."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$resource.zones" options="zones" group="Resource">
          <help short="CloudExadataInfrastructure zones"/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <operation operationId="CloudExadataInfrastructures_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}">
          <request method="get">
            <path>
              <param type="string" name="cloudexadatainfrastructurename" arg="$Path.cloudexadatainfrastructurename" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="CloudExadataInfrastructure_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudExadataInfrastructures/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="integer32" name="activatedStorageCount"/>
                    <prop readOnly="True" type="integer32" name="additionalStorageCount"/>
                    <prop readOnly="True" type="integer32" name="availableStorageSizeInGbs"/>
                    <prop type="integer32" name="computeCount"/>
                    <prop readOnly="True" type="integer32" name="cpuCount"/>
                    <prop type="array<object>" name="customerContacts">
                      <item type="object">
                        <prop type="string" name="email" required="True">
                          <format maxLength="320" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="float64" name="dataStorageSizeInTbs"/>
                    <prop readOnly="True" type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop readOnly="True" type="string" name="dbServerVersion"/>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="object" name="estimatedPatchingTime">
                      <prop readOnly="True" type="integer32" name="estimatedDbServerPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="estimatedNetworkSwitchesPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="estimatedStorageServerPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="totalEstimatedPatchingTime">
                        <format maximum="3000" minimum="1"/>
                      </prop>
                    </prop>
                    <prop type="string" name="lastMaintenanceRunId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="maintenanceWindow">
                      <prop type="integer32" name="customActionTimeoutInMins">
                        <format maximum="120" minimum="0"/>
                      </prop>
                      <prop type="array<object>" name="daysOfWeek" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;Friday&quot;"/>
                              <item value="&quot;Monday&quot;"/>
                              <item value="&quot;Saturday&quot;"/>
                              <item value="&quot;Sunday&quot;"/>
                              <item value="&quot;Thursday&quot;"/>
                              <item value="&quot;Tuesday&quot;"/>
                              <item value="&quot;Wednesday&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<integer32>" name="hoursOfDay">
                        <item type="integer32"/>
                      </prop>
                      <prop type="boolean" name="isCustomActionTimeoutEnabled"/>
                      <prop type="boolean" name="isMonthlyPatchingEnabled"/>
                      <prop type="integer32" name="leadTimeInWeeks"/>
                      <prop type="array<object>" name="months" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;April&quot;"/>
                              <item value="&quot;August&quot;"/>
                              <item value="&quot;December&quot;"/>
                              <item value="&quot;February&quot;"/>
                              <item value="&quot;January&quot;"/>
                              <item value="&quot;July&quot;"/>
                              <item value="&quot;June&quot;"/>
                              <item value="&quot;March&quot;"/>
                              <item value="&quot;May&quot;"/>
                              <item value="&quot;November&quot;"/>
                              <item value="&quot;October&quot;"/>
                              <item value="&quot;September&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="patchingMode">
                        <enum>
                          <item value="&quot;NonRolling&quot;"/>
                          <item value="&quot;Rolling&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="preference">
                        <enum>
                          <item value="&quot;CustomPreference&quot;"/>
                          <item value="&quot;NoPreference&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<integer32>" name="weeksOfMonth">
                        <item type="integer32"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer32" name="maxCpuCount"/>
                    <prop readOnly="True" type="float64" name="maxDataStorageInTbs"/>
                    <prop readOnly="True" type="integer32" name="maxDbNodeStorageSizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="maxMemoryInGbs"/>
                    <prop readOnly="True" type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="string" name="monthlyDbServerVersion"/>
                    <prop readOnly="True" type="string" name="monthlyStorageServerVersion"/>
                    <prop type="string" name="nextMaintenanceRunId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="shape" required="True"/>
                    <prop type="integer32" name="storageCount"/>
                    <prop readOnly="True" type="string" name="storageServerVersion"/>
                    <prop readOnly="True" type="string" name="timeCreated"/>
                    <prop readOnly="True" type="integer32" name="totalStorageSizeInGbs"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones" required="True">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="integer32" name="computeCount" arg="$resource.properties.computeCount"/>
                <prop type="array<object>" name="customerContacts" arg="$resource.properties.customerContacts">
                  <item type="object">
                    <prop type="string" name="email" arg="$resource.properties.customerContacts[].email" required="True">
                      <format maxLength="320" minLength="1"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="displayName" arg="$resource.properties.displayName" required="True">
                  <format maxLength="255" minLength="1"/>
                </prop>
                <prop type="object" name="maintenanceWindow" arg="$resource.properties.maintenanceWindow">
                  <prop type="integer32" name="customActionTimeoutInMins" arg="$resource.properties.maintenanceWindow.customActionTimeoutInMins">
                    <format maximum="120" minimum="0"/>
                  </prop>
                  <prop type="array<object>" name="daysOfWeek" arg="$resource.properties.maintenanceWindow.daysOfWeek" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$resource.properties.maintenanceWindow.daysOfWeek[].name" required="True">
                        <enum>
                          <item value="&quot;Friday&quot;"/>
                          <item value="&quot;Monday&quot;"/>
                          <item value="&quot;Saturday&quot;"/>
                          <item value="&quot;Sunday&quot;"/>
                          <item value="&quot;Thursday&quot;"/>
                          <item value="&quot;Tuesday&quot;"/>
                          <item value="&quot;Wednesday&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<integer32>" name="hoursOfDay" arg="$resource.properties.maintenanceWindow.hoursOfDay">
                    <item type="integer32"/>
                  </prop>
                  <prop type="boolean" name="isCustomActionTimeoutEnabled" arg="$resource.properties.maintenanceWindow.isCustomActionTimeoutEnabled"/>
                  <prop type="boolean" name="isMonthlyPatchingEnabled" arg="$resource.properties.maintenanceWindow.isMonthlyPatchingEnabled"/>
                  <prop type="integer32" name="leadTimeInWeeks" arg="$resource.properties.maintenanceWindow.leadTimeInWeeks"/>
                  <prop type="array<object>" name="months" arg="$resource.properties.maintenanceWindow.months" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$resource.properties.maintenanceWindow.months[].name" required="True">
                        <enum>
                          <item value="&quot;April&quot;"/>
                          <item value="&quot;August&quot;"/>
                          <item value="&quot;December&quot;"/>
                          <item value="&quot;February&quot;"/>
                          <item value="&quot;January&quot;"/>
                          <item value="&quot;July&quot;"/>
                          <item value="&quot;June&quot;"/>
                          <item value="&quot;March&quot;"/>
                          <item value="&quot;May&quot;"/>
                          <item value="&quot;November&quot;"/>
                          <item value="&quot;October&quot;"/>
                          <item value="&quot;September&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="patchingMode" arg="$resource.properties.maintenanceWindow.patchingMode">
                    <enum>
                      <item value="&quot;NonRolling&quot;"/>
                      <item value="&quot;Rolling&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="preference" arg="$resource.properties.maintenanceWindow.preference">
                    <enum>
                      <item value="&quot;CustomPreference&quot;"/>
                      <item value="&quot;NoPreference&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<integer32>" name="weeksOfMonth" arg="$resource.properties.maintenanceWindow.weeksOfMonth">
                    <item type="integer32"/>
                  </prop>
                </prop>
                <prop type="integer32" name="storageCount" arg="$resource.properties.storageCount"/>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
              <prop type="array<string>" name="zones" arg="$resource.zones" required="True">
                <item type="string"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="CloudExadataInfrastructures_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}">
          <request method="put">
            <path>
              <param type="string" name="cloudexadatainfrastructurename" arg="$Path.cloudexadatainfrastructurename" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@CloudExadataInfrastructure_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
