<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.standbypool/standbycontainergrouppools/{}" version="2023-12-01-preview" swagger="mgmt-plane/standbypool/ResourceProviders/Microsoft.StandbyPool/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RhbmRieVBvb2wvc3RhbmRieUNvbnRhaW5lckdyb3VwUG9vbHMve3N0YW5kYnlDb250YWluZXJHcm91cFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="standby-container-group-pool">
    <command name="show" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.standbypool/standbycontainergrouppools/{}" version="2023-12-01-preview" swagger="mgmt-plane/standbypool/ResourceProviders/Microsoft.StandbyPool/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RhbmRieVBvb2wvc3RhbmRieUNvbnRhaW5lckdyb3VwUG9vbHMve3N0YW5kYnlDb250YWluZXJHcm91cFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="The resource group"/>
        </arg>
        <arg type="string" var="$Path.standbyContainerGroupPoolName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the standby container group pool"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="The subscription id"/>
        </arg>
      </argGroup>
      <operation operationId="StandbyContainerGroupPools_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="standbyContainerGroupPoolName" arg="$Path.standbyContainerGroupPoolName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="containerGroupProperties" required="True">
                      <prop type="object" name="containerGroupProfile" required="True">
                        <prop type="ResourceId" name="id" required="True"/>
                        <prop type="integer64" name="revision"/>
                      </prop>
                      <prop type="array<object>" name="subnetIds">
                        <item type="object">
                          <prop type="ResourceId" name="id" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="elasticityProfile" required="True">
                      <prop type="integer64" name="maxReadyCapacity" required="True">
                        <format maximum="2000" minimum="0"/>
                      </prop>
                      <prop type="string" name="refillPolicy">
                        <enum>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-12-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.standbypool/standbycontainergrouppools/{}" version="2023-12-01-preview" swagger="mgmt-plane/standbypool/ResourceProviders/Microsoft.StandbyPool/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RhbmRieVBvb2wvc3RhbmRieUNvbnRhaW5lckdyb3VwUG9vbHMve3N0YW5kYnlDb250YWluZXJHcm91cFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="The resource group"/>
        </arg>
        <arg type="string" var="$Path.standbyContainerGroupPoolName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the standby container group pool"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="The subscription id"/>
        </arg>
      </argGroup>
      <operation operationId="StandbyContainerGroupPools_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="standbyContainerGroupPoolName" arg="$Path.standbyContainerGroupPoolName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.standbypool/standbycontainergrouppools/{}" version="2023-12-01-preview" swagger="mgmt-plane/standbypool/ResourceProviders/Microsoft.StandbyPool/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RhbmRieVBvb2wvc3RhbmRieUNvbnRhaW5lckdyb3VwUG9vbHMve3N0YW5kYnlDb250YWluZXJHcm91cFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="The resource group"/>
        </arg>
        <arg type="string" var="$Path.standbyContainerGroupPoolName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the standby container group pool"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="The subscription id"/>
        </arg>
      </argGroup>
      <argGroup name="ContainerGroupProfile">
        <arg type="ResourceId" var="$resource.properties.containerGroupProperties.containerGroupProfile.id" options="container-profile-id" group="ContainerGroupProfile">
          <help short="Specifies container group profile id of standby container groups."/>
        </arg>
        <arg type="integer64" var="$resource.properties.containerGroupProperties.containerGroupProfile.revision" options="profile-revision" group="ContainerGroupProfile">
          <help short="Specifies revision of container group profile."/>
        </arg>
      </argGroup>
      <argGroup name="ContainerGroupProperties">
        <arg type="array<object>" var="$resource.properties.containerGroupProperties.subnetIds" options="subnet-ids" group="ContainerGroupProperties">
          <help short="Specifies subnet Ids for container group."/>
          <item type="object">
            <arg type="ResourceId" var="$resource.properties.containerGroupProperties.subnetIds[].id" options="id" required="True">
              <help short="Specifies ARM resource id of the subnet."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="ElasticityProfile">
        <arg type="integer64" var="$resource.properties.elasticityProfile.maxReadyCapacity" options="max-ready-capacity" group="ElasticityProfile">
          <help short="Specifies maximum number of standby container groups in the standby pool."/>
          <format maximum="2000" minimum="0"/>
        </arg>
        <arg type="string" var="$resource.properties.elasticityProfile.refillPolicy" options="refill-policy" group="ElasticityProfile">
          <help short="Specifies refill policy of the pool."/>
          <enum>
            <item name="always" value="&quot;always&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="StandbyContainerGroupPools_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="standbyContainerGroupPoolName" arg="$Path.standbyContainerGroupPoolName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="containerGroupProperties" required="True">
                      <prop type="object" name="containerGroupProfile" required="True">
                        <prop type="ResourceId" name="id" arg="$resource.properties.containerGroupProperties.containerGroupProfile.id" required="True"/>
                        <prop type="integer64" name="revision" arg="$resource.properties.containerGroupProperties.containerGroupProfile.revision"/>
                      </prop>
                      <prop type="array<object>" name="subnetIds" arg="$resource.properties.containerGroupProperties.subnetIds">
                        <item type="object">
                          <prop type="ResourceId" name="id" arg="$resource.properties.containerGroupProperties.subnetIds[].id" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="elasticityProfile" required="True">
                      <prop type="integer64" name="maxReadyCapacity" arg="$resource.properties.elasticityProfile.maxReadyCapacity" required="True">
                        <format maximum="2000" minimum="0"/>
                      </prop>
                      <prop type="string" name="refillPolicy" arg="$resource.properties.elasticityProfile.refillPolicy">
                        <enum>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="containerGroupProperties" required="True">
                      <prop type="object" name="containerGroupProfile" required="True">
                        <prop type="ResourceId" name="id" required="True"/>
                        <prop type="integer64" name="revision"/>
                      </prop>
                      <prop type="array<object>" name="subnetIds">
                        <item type="object">
                          <prop type="ResourceId" name="id" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="elasticityProfile" required="True">
                      <prop type="integer64" name="maxReadyCapacity" required="True">
                        <format maximum="2000" minimum="0"/>
                      </prop>
                      <prop type="string" name="refillPolicy">
                        <enum>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.standbypool/standbycontainergrouppools/{}" version="2023-12-01-preview" swagger="mgmt-plane/standbypool/ResourceProviders/Microsoft.StandbyPool/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RhbmRieVBvb2wvc3RhbmRieUNvbnRhaW5lckdyb3VwUG9vbHMve3N0YW5kYnlDb250YWluZXJHcm91cFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="The resource group"/>
        </arg>
        <arg type="string" var="$Path.standbyContainerGroupPoolName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the standby container group pool"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="The subscription id"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.containerGroupProperties" options="container-group-properties" group="Properties">
          <help short="Specifies container group properties of standby container group pools."/>
          <arg type="object" var="$resource.properties.containerGroupProperties.containerGroupProfile" options="container-group-profile">
            <help short="Specifies container group profile of standby container groups."/>
            <arg type="ResourceId" var="$resource.properties.containerGroupProperties.containerGroupProfile.id" options="id">
              <help short="Specifies container group profile id of standby container groups."/>
            </arg>
            <arg nullable="True" type="integer64" var="$resource.properties.containerGroupProperties.containerGroupProfile.revision" options="revision">
              <help short="Specifies revision of container group profile."/>
            </arg>
          </arg>
          <arg nullable="True" type="array<object>" var="$resource.properties.containerGroupProperties.subnetIds" options="subnet-ids">
            <help short="Specifies subnet Ids for container group."/>
            <item nullable="True" type="object">
              <arg type="ResourceId" var="$resource.properties.containerGroupProperties.subnetIds[].id" options="id">
                <help short="Specifies ARM resource id of the subnet."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.elasticityProfile" options="elasticity-profile" group="Properties">
          <help short="Specifies elasticity profile of standby container group pools."/>
          <arg type="integer64" var="$resource.properties.elasticityProfile.maxReadyCapacity" options="max-ready-capacity">
            <help short="Specifies maximum number of standby container groups in the standby pool."/>
            <format maximum="2000" minimum="0"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.elasticityProfile.refillPolicy" options="refill-policy">
            <help short="Specifies refill policy of the pool."/>
            <enum>
              <item name="always" value="&quot;always&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="StandbyContainerGroupPools_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="standbyContainerGroupPoolName" arg="$Path.standbyContainerGroupPoolName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="StandbyContainerGroupPoolResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="containerGroupProperties" required="True">
                      <prop type="object" name="containerGroupProfile" required="True">
                        <prop type="ResourceId" name="id" required="True"/>
                        <prop type="integer64" name="revision"/>
                      </prop>
                      <prop type="array<object>" name="subnetIds">
                        <item type="object">
                          <prop type="ResourceId" name="id" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="elasticityProfile" required="True">
                      <prop type="integer64" name="maxReadyCapacity" required="True">
                        <format maximum="2000" minimum="0"/>
                      </prop>
                      <prop type="string" name="refillPolicy">
                        <enum>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="containerGroupProperties" arg="$resource.properties.containerGroupProperties" required="True">
                  <prop type="object" name="containerGroupProfile" arg="$resource.properties.containerGroupProperties.containerGroupProfile" required="True">
                    <prop type="ResourceId" name="id" arg="$resource.properties.containerGroupProperties.containerGroupProfile.id" required="True"/>
                    <prop type="integer64" name="revision" arg="$resource.properties.containerGroupProperties.containerGroupProfile.revision"/>
                  </prop>
                  <prop type="array<object>" name="subnetIds" arg="$resource.properties.containerGroupProperties.subnetIds">
                    <item type="object">
                      <prop type="ResourceId" name="id" arg="$resource.properties.containerGroupProperties.subnetIds[].id" required="True"/>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="elasticityProfile" arg="$resource.properties.elasticityProfile" required="True">
                  <prop type="integer64" name="maxReadyCapacity" arg="$resource.properties.elasticityProfile.maxReadyCapacity" required="True">
                    <format maximum="2000" minimum="0"/>
                  </prop>
                  <prop type="string" name="refillPolicy" arg="$resource.properties.elasticityProfile.refillPolicy">
                    <enum>
                      <item value="&quot;always&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="StandbyContainerGroupPools_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="standbyContainerGroupPoolName" arg="$Path.standbyContainerGroupPoolName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@StandbyContainerGroupPoolResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
