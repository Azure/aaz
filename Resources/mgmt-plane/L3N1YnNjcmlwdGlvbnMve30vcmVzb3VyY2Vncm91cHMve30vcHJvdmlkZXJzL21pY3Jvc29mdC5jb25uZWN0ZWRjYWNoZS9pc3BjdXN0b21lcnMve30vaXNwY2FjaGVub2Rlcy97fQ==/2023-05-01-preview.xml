<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers/{}/ispcachenodes/{}" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJzL3tjdXN0b21lclJlc291cmNlTmFtZX0vaXNwQ2FjaGVOb2Rlcy97Y2FjaGVOb2RlUmVzb3VyY2VOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="mcc isp node">
    <command name="show" version="2023-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers/{}/ispcachenodes/{}" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJzL3tjdXN0b21lclJlc291cmNlTmFtZX0vaXNwQ2FjaGVOb2Rlcy97Y2FjaGVOb2RlUmVzb3VyY2VOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cacheNodeResourceName" options="cache-node-name" required="True" group="" idPart="child_name_1">
          <help short="Name of Microsoft Connected Cache for Enterprise cache node."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.customerResourceName" options="mcc-resource-name" required="True" group="" idPart="name">
          <help short="Name of Microsoft Connected Cache for Enterprise resource."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="IspCacheNodesOperations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}">
          <request method="get">
            <path>
              <param type="string" name="cacheNodeResourceName" arg="$Path.cacheNodeResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="customerResourceName" arg="$Path.customerResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ConnectedCache/ispCustomers/{}/ispCacheNodes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="additionalCacheNodeProperties">
                      <prop readOnly="True" type="integer32" name="aggregatedStatusCode"/>
                      <prop readOnly="True" type="string" name="aggregatedStatusDetails"/>
                      <prop readOnly="True" type="string" name="aggregatedStatusText"/>
                      <prop readOnly="True" type="string" name="autoUpdateAppliedVersion"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateLastAppliedDateTime"/>
                      <prop readOnly="True" type="string" name="autoUpdateLastAppliedDetails"/>
                      <prop readOnly="True" type="string" name="autoUpdateLastAppliedState"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateLastTriggeredDateTime"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateNextAvailableDateTime"/>
                      <prop readOnly="True" type="string" name="autoUpdateNextAvailableVersion"/>
                      <prop type="string" name="autoUpdateVersion"/>
                      <prop type="object" name="bgpConfiguration">
                        <prop type="string" name="asnToIpAddressMapping"/>
                      </prop>
                      <prop type="array<string>" name="cacheNodePropertiesDetailsIssuesList">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="cacheNodeState"/>
                      <prop readOnly="True" type="string" name="cacheNodeStateDetailedText"/>
                      <prop readOnly="True" type="string" name="cacheNodeStateShortText"/>
                      <prop type="array<object>" name="driveConfiguration">
                        <item type="object">
                          <prop type="integer32" name="cacheNumber">
                            <format maximum="20" minimum="1"/>
                          </prop>
                          <prop type="string" name="nginxMapping"/>
                          <prop type="string" name="physicalPath"/>
                          <prop type="integer32" name="sizeInGb"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isProvisioned"/>
                      <prop type="string" name="isProxyRequired">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optionalProperty1"/>
                      <prop type="string" name="optionalProperty2"/>
                      <prop type="string" name="optionalProperty3"/>
                      <prop type="string" name="optionalProperty4"/>
                      <prop type="string" name="optionalProperty5"/>
                      <prop type="string" name="osType">
                        <enum>
                          <item value="&quot;Eflow&quot;"/>
                          <item value="&quot;Linux&quot;"/>
                          <item value="&quot;Windows&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="productVersion"/>
                      <prop type="string" name="proxyUrl"/>
                      <prop type="object" name="proxyUrlConfiguration">
                        <prop type="string" name="proxyUrl"/>
                      </prop>
                      <prop type="string" name="updateCycleType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="updateInfoDetails"/>
                      <prop type="dateTime" name="updateRequestedDateTime"/>
                    </prop>
                    <prop type="object" name="cacheNode">
                      <prop readOnly="True" type="integer32" name="addressSpace"/>
                      <prop type="integer32" name="autoUpdateRequestedDay">
                        <format maximum="7" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRequestedTime">
                        <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                      <prop type="integer32" name="autoUpdateRequestedWeek">
                        <format maximum="5" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRingType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="integer32" name="bgpAddressSpace"/>
                      <prop readOnly="True" type="integer32" name="bgpCidrBlocksCount"/>
                      <prop readOnly="True" type="dateTime" name="bgpCidrCsvLastUpdateTime"/>
                      <prop readOnly="True" type="integer32" name="bgpFileBytesTruncated"/>
                      <prop readOnly="True" type="dateTime" name="bgpLastReportedTime"/>
                      <prop readOnly="True" type="integer32" name="bgpNumberOfRecords"/>
                      <prop readOnly="True" type="integer32" name="bgpNumberOfTimesUpdated"/>
                      <prop readOnly="True" type="string" name="bgpReviewFeedback"/>
                      <prop readOnly="True" type="string" name="bgpReviewState">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;AttentionRequired&quot;"/>
                          <item value="&quot;InReview&quot;"/>
                          <item value="&quot;NotConfigured&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="bgpReviewStateText"/>
                      <prop type="string" name="cacheNodeId"/>
                      <prop type="string" name="cacheNodeName"/>
                      <prop readOnly="True" type="string" name="category"/>
                      <prop type="array<string>" name="cidrCsv">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="cidrCsvLastUpdateTime"/>
                      <prop type="integer32" name="cidrSelectionType"/>
                      <prop readOnly="True" type="string" name="clientTenantId"/>
                      <prop readOnly="True" type="string" name="configurationState">
                        <enum>
                          <item value="&quot;Configured&quot;"/>
                          <item value="&quot;NotConfigured_Ip&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="configurationStateText"/>
                      <prop readOnly="True" type="string" name="containerConfigurations"/>
                      <prop readOnly="True" type="integer32" name="containerResyncTrigger"/>
                      <prop readOnly="True" type="string" name="createAsyncOperationId"/>
                      <prop type="integer32" name="customerAsn"/>
                      <prop readOnly="True" type="string" name="customerId"/>
                      <prop type="string" name="customerIndex"/>
                      <prop type="string" name="customerName"/>
                      <prop readOnly="True" type="string" name="deleteAsyncOperationId"/>
                      <prop type="string" name="fullyQualifiedDomainName"/>
                      <prop type="string" name="fullyQualifiedResourceId"/>
                      <prop readOnly="True" type="string" name="imageUri"/>
                      <prop type="string" name="ipAddress"/>
                      <prop type="boolean" name="isEnabled"/>
                      <prop type="boolean" name="isEnterpriseManaged"/>
                      <prop readOnly="True" type="boolean" name="isFrozen"/>
                      <prop readOnly="True" type="dateTime" name="lastSyncWithAzureTimestamp"/>
                      <prop readOnly="True" type="dateTime" name="lastUpdatedTimestamp"/>
                      <prop type="integer32" name="maxAllowableEgressInMbps"/>
                      <prop readOnly="True" type="float32" name="maxAllowableProbability"/>
                      <prop readOnly="True" type="integer32" name="releaseVersion"/>
                      <prop readOnly="True" type="string" name="reviewFeedback"/>
                      <prop readOnly="True" type="integer32" name="reviewState"/>
                      <prop readOnly="True" type="string" name="reviewStateText"/>
                      <prop type="boolean" name="shouldMigrate"/>
                      <prop readOnly="True" type="integer32" name="synchWithAzureAttemptsCount"/>
                      <prop readOnly="True" type="integer32" name="workerConnections"/>
                      <prop readOnly="True" type="dateTime" name="workerConnectionsLastUpdatedDateTime"/>
                      <prop readOnly="True" type="string" name="xCid"/>
                    </prop>
                    <prop type="object" name="error" cls="ErrorDetail_read">
                      <prop readOnly="True" type="array<object>" name="additionalInfo">
                        <item type="object">
                          <prop readOnly="True" type="object" name="info"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="code"/>
                      <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                        <item type="@ErrorDetail_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="message"/>
                      <prop readOnly="True" type="string" name="target"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Upgrading&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="status"/>
                    <prop type="string" name="statusCode"/>
                    <prop type="string" name="statusDetails"/>
                    <prop type="string" name="statusText"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-05-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers/{}/ispcachenodes/{}" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJzL3tjdXN0b21lclJlc291cmNlTmFtZX0vaXNwQ2FjaGVOb2Rlcy97Y2FjaGVOb2RlUmVzb3VyY2VOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cacheNodeResourceName" options="cache-node-name" required="True" group="" idPart="child_name_1">
          <help short="Name of Microsoft Connected Cache for Enterprise cache node."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.customerResourceName" options="mcc-resource-name" required="True" group="" idPart="name">
          <help short="Name of Microsoft Connected Cache for Enterprise resource."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="IspCacheNodesOperations_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}">
          <request method="delete">
            <path>
              <param type="string" name="cacheNodeResourceName" arg="$Path.cacheNodeResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="customerResourceName" arg="$Path.customerResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers/{}/ispcachenodes/{}" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJzL3tjdXN0b21lclJlc291cmNlTmFtZX0vaXNwQ2FjaGVOb2Rlcy97Y2FjaGVOb2RlUmVzb3VyY2VOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cacheNodeResourceName" options="cache-node-name" required="True" group="" idPart="child_name_1">
          <help short="Name of Microsoft Connected Cache for Enterprise cache node."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.customerResourceName" options="mcc-resource-name" required="True" group="" idPart="name">
          <help short="Name of Microsoft Connected Cache for Enterprise resource."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Configuration">
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.autoUpdateVersion" options="auto-update-version" group="Configuration">
          <help short="Auto update or fast update version"/>
        </arg>
        <arg type="object" var="$resource.properties.additionalCacheNodeProperties.bgpConfiguration" options="bgp-configuration" group="Configuration">
          <help short="Cache node resource Bgp configuration."/>
          <arg type="string" var="$resource.properties.additionalCacheNodeProperties.bgpConfiguration.asnToIpAddressMapping" options="asn-to-ip-address-mapping">
            <help short="Asn to ip address mapping"/>
          </arg>
        </arg>
        <arg type="array<string>" var="$resource.properties.additionalCacheNodeProperties.cacheNodePropertiesDetailsIssuesList" options="cache-node-properties-details-issues-list" group="Configuration">
          <help short="issues list to return the issues as part of the additional cache node properties"/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration" options="cache-drive" group="Configuration">
          <help short="The physical path and size of cache drive. For Windows cache node physical path should be &quot;/var/mcc&quot;. Minimum cache drive size should be 50gb."/>
          <item type="object">
            <arg type="integer32" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].cacheNumber" options="cache-number">
              <help short="corresponding nginx cache number. Valid cache numbers are 1 - 20"/>
              <format maximum="20" minimum="1"/>
            </arg>
            <arg type="string" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].nginxMapping" options="nginx-mapping">
              <help short="full binding for corresponding nginx cache drive"/>
            </arg>
            <arg type="string" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].physicalPath" options="physical-path">
              <help short="physical path location of the folder used for caching content"/>
            </arg>
            <arg type="integer32" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].sizeInGb" options="size-in-gb">
              <help short="physical size of the drive used for caching content"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.isProxyRequired" options="enable-proxy" group="Configuration">
          <help short="Cache node resource requires a proxy"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
            <item name="Required" value="&quot;Required&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty1" options="optional-property1" group="Configuration">
          <help short="Optional property #1 of Mcc response object"/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty2" options="optional-property2" group="Configuration">
          <help short="Optional property #2 of Mcc response object"/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty3" options="optional-property3" group="Configuration">
          <help short="Optional property #3 of Mcc response object"/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty4" options="optional-property4" group="Configuration">
          <help short="Optional property #4 of Mcc response object"/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty5" options="optional-property5" group="Configuration">
          <help short="Optional property #5 of Mcc response object"/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.osType" options="host-os" group="Configuration">
          <help short="Host operating system of the cache node."/>
          <enum>
            <item name="Eflow" value="&quot;Eflow&quot;"/>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.proxyUrl" options="proxy-url" group="Configuration">
          <help short="Host proxy address configuration. Ex: xxx.xxx.x.x or http://exampleproxy.com."/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.proxyUrlConfiguration.proxyUrl" options="proxy-host" group="Configuration">
          <help short="Host proxy address configuration. Ex: xxx.xxx.x.x or http://exampleproxy.com."/>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.updateCycleType" options="update-cycle-type" group="Configuration">
          <help short="Update Cycle Type"/>
          <enum>
            <item name="Fast" value="&quot;Fast&quot;"/>
            <item name="Preview" value="&quot;Preview&quot;"/>
            <item name="Slow" value="&quot;Slow&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.additionalCacheNodeProperties.updateInfoDetails" options="update-info-details" group="Configuration">
          <help short="Update related information details"/>
        </arg>
        <arg type="dateTime" var="$resource.properties.additionalCacheNodeProperties.updateRequestedDateTime" options="update-requested-date-time" group="Configuration">
          <help short="customer requested date time for mcc install of update cycle"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Properties">
          <help short="Geo-location of the cache node. This should be the same as Microsoft Connected Cache for Enterprise  resource. When not specified, location of Microsoft Connected Cache for Enterprise resource will be used."/>
        </arg>
        <arg type="object" var="$resource.properties.cacheNode" options="cache-node" group="Properties">
          <help short="Mcc cache node resource (cache node entity)."/>
          <arg type="integer32" var="$resource.properties.cacheNode.autoUpdateRequestedDay" options="auto-update-day" group="Configuration">
            <help short="Day of week (1-7) that cache node will automatically install software update"/>
            <format maximum="7" minimum="1"/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.autoUpdateRequestedTime" options="auto-update-time" group="Configuration">
            <help short="Time of day in 24-hour time (hh:mm) that cache node will automatically install software update"/>
            <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
          </arg>
          <arg type="integer32" var="$resource.properties.cacheNode.autoUpdateRequestedWeek" options="auto-update-week" group="Configuration">
            <help short="Week of month (1-4) that cache node will automatically install software update"/>
            <format maximum="5" minimum="1"/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.autoUpdateRingType" options="auto-update-ring" group="Configuration">
            <help short="Cache node automatic software update periodicity ring"/>
            <enum>
              <item name="Fast" value="&quot;Fast&quot;"/>
              <item name="Preview" value="&quot;Preview&quot;"/>
              <item name="Slow" value="&quot;Slow&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.cacheNodeId" options="cache-node-id">
            <help short="Cache node resource identifier of the cache node"/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.cacheNodeName" options="cache-node-name">
            <help short="Cache node resource name."/>
          </arg>
          <arg type="array<string>" var="$resource.properties.cacheNode.cidrCsv" options="cidr-csv">
            <help short="Cache node resource comma separated values of Cidrs."/>
            <item type="string"/>
          </arg>
          <arg type="integer32" var="$resource.properties.cacheNode.cidrSelectionType" options="cidr-selection-type">
            <help short="Cache node resource current Cidr range precedence selection type."/>
          </arg>
          <arg type="integer32" var="$resource.properties.cacheNode.customerAsn" options="customer-asn">
            <help short="Cache node resource customer resource Asn (autonomous system number)"/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.customerIndex" options="customer-index">
            <help short="Cache node resource customer index as string."/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.customerName" options="customer-name">
            <help short="Cache node resource customer resource name."/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.fullyQualifiedDomainName" options="fully-qualified-domain-name fqdn" group="Configuration">
            <help short="FQDN (fully qualified domain name) value of the cache node"/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.fullyQualifiedResourceId" options="fully-qualified-resource-id">
            <help short="Cache node resource Azure fully qualified resource Id."/>
          </arg>
          <arg type="string" var="$resource.properties.cacheNode.ipAddress" options="ip-address" group="Configuration">
            <help short="IP address of host machine."/>
          </arg>
          <arg type="boolean" var="$resource.properties.cacheNode.isEnabled" options="is-enabled">
            <help short="Cache node resource flag for indicating if cache node is enabled."/>
          </arg>
          <arg type="boolean" var="$resource.properties.cacheNode.isEnterpriseManaged" options="is-enterprise-managed">
            <help short="Cache node resource flag for determining if managed by enterprise as boolean."/>
          </arg>
          <arg type="integer32" var="$resource.properties.cacheNode.maxAllowableEgressInMbps" options="max-allowable-egress-in-mbps">
            <help short="Cache node resource maximum allowed egress in Mbps."/>
          </arg>
          <arg type="boolean" var="$resource.properties.cacheNode.shouldMigrate" options="should-migrate">
            <help short="Cache node resource flag for determining if customer will be migrated."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.statusCode" options="status-code" group="Properties">
          <help short="Mcc response status code."/>
        </arg>
        <arg type="string" var="$resource.properties.statusDetails" options="status-details" group="Properties">
          <help short="Mcc response status details for retrieving response inner details."/>
        </arg>
        <arg type="string" var="$resource.properties.statusText" options="status-text" group="Properties">
          <help short="Mcc response status text as string for retrieving status details."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="IspCacheNodesOperations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}">
          <request method="put">
            <path>
              <param type="string" name="cacheNodeResourceName" arg="$Path.cacheNodeResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="customerResourceName" arg="$Path.customerResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="additionalCacheNodeProperties">
                      <prop type="string" name="autoUpdateVersion" arg="$resource.properties.additionalCacheNodeProperties.autoUpdateVersion"/>
                      <prop type="object" name="bgpConfiguration" arg="$resource.properties.additionalCacheNodeProperties.bgpConfiguration">
                        <prop type="string" name="asnToIpAddressMapping" arg="$resource.properties.additionalCacheNodeProperties.bgpConfiguration.asnToIpAddressMapping"/>
                      </prop>
                      <prop type="array<string>" name="cacheNodePropertiesDetailsIssuesList" arg="$resource.properties.additionalCacheNodeProperties.cacheNodePropertiesDetailsIssuesList">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="driveConfiguration" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration">
                        <item type="object">
                          <prop type="integer32" name="cacheNumber" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].cacheNumber">
                            <format maximum="20" minimum="1"/>
                          </prop>
                          <prop type="string" name="nginxMapping" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].nginxMapping"/>
                          <prop type="string" name="physicalPath" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].physicalPath"/>
                          <prop type="integer32" name="sizeInGb" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].sizeInGb"/>
                        </item>
                      </prop>
                      <prop type="string" name="isProxyRequired" arg="$resource.properties.additionalCacheNodeProperties.isProxyRequired">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optionalProperty1" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty1"/>
                      <prop type="string" name="optionalProperty2" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty2"/>
                      <prop type="string" name="optionalProperty3" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty3"/>
                      <prop type="string" name="optionalProperty4" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty4"/>
                      <prop type="string" name="optionalProperty5" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty5"/>
                      <prop type="string" name="osType" arg="$resource.properties.additionalCacheNodeProperties.osType">
                        <enum>
                          <item value="&quot;Eflow&quot;"/>
                          <item value="&quot;Linux&quot;"/>
                          <item value="&quot;Windows&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="proxyUrl" arg="$resource.properties.additionalCacheNodeProperties.proxyUrl"/>
                      <prop type="object" name="proxyUrlConfiguration">
                        <prop type="string" name="proxyUrl" arg="$resource.properties.additionalCacheNodeProperties.proxyUrlConfiguration.proxyUrl"/>
                      </prop>
                      <prop type="string" name="updateCycleType" arg="$resource.properties.additionalCacheNodeProperties.updateCycleType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="updateInfoDetails" arg="$resource.properties.additionalCacheNodeProperties.updateInfoDetails"/>
                      <prop type="dateTime" name="updateRequestedDateTime" arg="$resource.properties.additionalCacheNodeProperties.updateRequestedDateTime"/>
                    </prop>
                    <prop type="object" name="cacheNode" arg="$resource.properties.cacheNode">
                      <prop type="integer32" name="autoUpdateRequestedDay" arg="$resource.properties.cacheNode.autoUpdateRequestedDay">
                        <format maximum="7" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRequestedTime" arg="$resource.properties.cacheNode.autoUpdateRequestedTime">
                        <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                      <prop type="integer32" name="autoUpdateRequestedWeek" arg="$resource.properties.cacheNode.autoUpdateRequestedWeek">
                        <format maximum="5" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRingType" arg="$resource.properties.cacheNode.autoUpdateRingType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="cacheNodeId" arg="$resource.properties.cacheNode.cacheNodeId"/>
                      <prop type="string" name="cacheNodeName" arg="$resource.properties.cacheNode.cacheNodeName"/>
                      <prop type="array<string>" name="cidrCsv" arg="$resource.properties.cacheNode.cidrCsv">
                        <item type="string"/>
                      </prop>
                      <prop type="integer32" name="cidrSelectionType" arg="$resource.properties.cacheNode.cidrSelectionType"/>
                      <prop type="integer32" name="customerAsn" arg="$resource.properties.cacheNode.customerAsn"/>
                      <prop type="string" name="customerIndex" arg="$resource.properties.cacheNode.customerIndex"/>
                      <prop type="string" name="customerName" arg="$resource.properties.cacheNode.customerName"/>
                      <prop type="string" name="fullyQualifiedDomainName" arg="$resource.properties.cacheNode.fullyQualifiedDomainName"/>
                      <prop type="string" name="fullyQualifiedResourceId" arg="$resource.properties.cacheNode.fullyQualifiedResourceId"/>
                      <prop type="string" name="ipAddress" arg="$resource.properties.cacheNode.ipAddress"/>
                      <prop type="boolean" name="isEnabled" arg="$resource.properties.cacheNode.isEnabled"/>
                      <prop type="boolean" name="isEnterpriseManaged" arg="$resource.properties.cacheNode.isEnterpriseManaged"/>
                      <prop type="integer32" name="maxAllowableEgressInMbps" arg="$resource.properties.cacheNode.maxAllowableEgressInMbps"/>
                      <prop type="boolean" name="shouldMigrate" arg="$resource.properties.cacheNode.shouldMigrate"/>
                    </prop>
                    <prop type="string" name="statusCode" arg="$resource.properties.statusCode"/>
                    <prop type="string" name="statusDetails" arg="$resource.properties.statusDetails"/>
                    <prop type="string" name="statusText" arg="$resource.properties.statusText"/>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ConnectedCache/ispCustomers/{}/ispCacheNodes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="additionalCacheNodeProperties">
                      <prop readOnly="True" type="integer32" name="aggregatedStatusCode"/>
                      <prop readOnly="True" type="string" name="aggregatedStatusDetails"/>
                      <prop readOnly="True" type="string" name="aggregatedStatusText"/>
                      <prop readOnly="True" type="string" name="autoUpdateAppliedVersion"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateLastAppliedDateTime"/>
                      <prop readOnly="True" type="string" name="autoUpdateLastAppliedDetails"/>
                      <prop readOnly="True" type="string" name="autoUpdateLastAppliedState"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateLastTriggeredDateTime"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateNextAvailableDateTime"/>
                      <prop readOnly="True" type="string" name="autoUpdateNextAvailableVersion"/>
                      <prop type="string" name="autoUpdateVersion"/>
                      <prop type="object" name="bgpConfiguration">
                        <prop type="string" name="asnToIpAddressMapping"/>
                      </prop>
                      <prop type="array<string>" name="cacheNodePropertiesDetailsIssuesList">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="cacheNodeState"/>
                      <prop readOnly="True" type="string" name="cacheNodeStateDetailedText"/>
                      <prop readOnly="True" type="string" name="cacheNodeStateShortText"/>
                      <prop type="array<object>" name="driveConfiguration">
                        <item type="object">
                          <prop type="integer32" name="cacheNumber">
                            <format maximum="20" minimum="1"/>
                          </prop>
                          <prop type="string" name="nginxMapping"/>
                          <prop type="string" name="physicalPath"/>
                          <prop type="integer32" name="sizeInGb"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isProvisioned"/>
                      <prop type="string" name="isProxyRequired">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optionalProperty1"/>
                      <prop type="string" name="optionalProperty2"/>
                      <prop type="string" name="optionalProperty3"/>
                      <prop type="string" name="optionalProperty4"/>
                      <prop type="string" name="optionalProperty5"/>
                      <prop type="string" name="osType">
                        <enum>
                          <item value="&quot;Eflow&quot;"/>
                          <item value="&quot;Linux&quot;"/>
                          <item value="&quot;Windows&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="productVersion"/>
                      <prop type="string" name="proxyUrl"/>
                      <prop type="object" name="proxyUrlConfiguration">
                        <prop type="string" name="proxyUrl"/>
                      </prop>
                      <prop type="string" name="updateCycleType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="updateInfoDetails"/>
                      <prop type="dateTime" name="updateRequestedDateTime"/>
                    </prop>
                    <prop type="object" name="cacheNode">
                      <prop readOnly="True" type="integer32" name="addressSpace"/>
                      <prop type="integer32" name="autoUpdateRequestedDay">
                        <format maximum="7" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRequestedTime">
                        <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                      <prop type="integer32" name="autoUpdateRequestedWeek">
                        <format maximum="5" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRingType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="integer32" name="bgpAddressSpace"/>
                      <prop readOnly="True" type="integer32" name="bgpCidrBlocksCount"/>
                      <prop readOnly="True" type="dateTime" name="bgpCidrCsvLastUpdateTime"/>
                      <prop readOnly="True" type="integer32" name="bgpFileBytesTruncated"/>
                      <prop readOnly="True" type="dateTime" name="bgpLastReportedTime"/>
                      <prop readOnly="True" type="integer32" name="bgpNumberOfRecords"/>
                      <prop readOnly="True" type="integer32" name="bgpNumberOfTimesUpdated"/>
                      <prop readOnly="True" type="string" name="bgpReviewFeedback"/>
                      <prop readOnly="True" type="string" name="bgpReviewState">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;AttentionRequired&quot;"/>
                          <item value="&quot;InReview&quot;"/>
                          <item value="&quot;NotConfigured&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="bgpReviewStateText"/>
                      <prop type="string" name="cacheNodeId"/>
                      <prop type="string" name="cacheNodeName"/>
                      <prop readOnly="True" type="string" name="category"/>
                      <prop type="array<string>" name="cidrCsv">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="cidrCsvLastUpdateTime"/>
                      <prop type="integer32" name="cidrSelectionType"/>
                      <prop readOnly="True" type="string" name="clientTenantId"/>
                      <prop readOnly="True" type="string" name="configurationState">
                        <enum>
                          <item value="&quot;Configured&quot;"/>
                          <item value="&quot;NotConfigured_Ip&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="configurationStateText"/>
                      <prop readOnly="True" type="string" name="containerConfigurations"/>
                      <prop readOnly="True" type="integer32" name="containerResyncTrigger"/>
                      <prop readOnly="True" type="string" name="createAsyncOperationId"/>
                      <prop type="integer32" name="customerAsn"/>
                      <prop readOnly="True" type="string" name="customerId"/>
                      <prop type="string" name="customerIndex"/>
                      <prop type="string" name="customerName"/>
                      <prop readOnly="True" type="string" name="deleteAsyncOperationId"/>
                      <prop type="string" name="fullyQualifiedDomainName"/>
                      <prop type="string" name="fullyQualifiedResourceId"/>
                      <prop readOnly="True" type="string" name="imageUri"/>
                      <prop type="string" name="ipAddress"/>
                      <prop type="boolean" name="isEnabled"/>
                      <prop type="boolean" name="isEnterpriseManaged"/>
                      <prop readOnly="True" type="boolean" name="isFrozen"/>
                      <prop readOnly="True" type="dateTime" name="lastSyncWithAzureTimestamp"/>
                      <prop readOnly="True" type="dateTime" name="lastUpdatedTimestamp"/>
                      <prop type="integer32" name="maxAllowableEgressInMbps"/>
                      <prop readOnly="True" type="float32" name="maxAllowableProbability"/>
                      <prop readOnly="True" type="integer32" name="releaseVersion"/>
                      <prop readOnly="True" type="string" name="reviewFeedback"/>
                      <prop readOnly="True" type="integer32" name="reviewState"/>
                      <prop readOnly="True" type="string" name="reviewStateText"/>
                      <prop type="boolean" name="shouldMigrate"/>
                      <prop readOnly="True" type="integer32" name="synchWithAzureAttemptsCount"/>
                      <prop readOnly="True" type="integer32" name="workerConnections"/>
                      <prop readOnly="True" type="dateTime" name="workerConnectionsLastUpdatedDateTime"/>
                      <prop readOnly="True" type="string" name="xCid"/>
                    </prop>
                    <prop type="object" name="error" cls="ErrorDetail_read">
                      <prop readOnly="True" type="array<object>" name="additionalInfo">
                        <item type="object">
                          <prop readOnly="True" type="object" name="info"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="code"/>
                      <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                        <item type="@ErrorDetail_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="message"/>
                      <prop readOnly="True" type="string" name="target"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Upgrading&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="status"/>
                    <prop type="string" name="statusCode"/>
                    <prop type="string" name="statusDetails"/>
                    <prop type="string" name="statusText"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers/{}/ispcachenodes/{}" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJzL3tjdXN0b21lclJlc291cmNlTmFtZX0vaXNwQ2FjaGVOb2Rlcy97Y2FjaGVOb2RlUmVzb3VyY2VOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cacheNodeResourceName" options="cache-node-name" required="True" group="" idPart="child_name_1">
          <help short="Name of Microsoft Connected Cache for Enterprise cache node."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.customerResourceName" options="mcc-resource-name" required="True" group="" idPart="name">
          <help short="Name of Microsoft Connected Cache for Enterprise resource."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Configuration">
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.autoUpdateVersion" options="auto-update-version" group="Configuration">
          <help short="Auto update or fast update version"/>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.additionalCacheNodeProperties.bgpConfiguration" options="bgp-configuration" group="Configuration">
          <help short="Cache node resource Bgp configuration."/>
          <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.bgpConfiguration.asnToIpAddressMapping" options="asn-to-ip-address-mapping">
            <help short="Asn to ip address mapping"/>
          </arg>
        </arg>
        <arg nullable="True" type="array<string>" var="$resource.properties.additionalCacheNodeProperties.cacheNodePropertiesDetailsIssuesList" options="cache-node-properties-details-issues-list" group="Configuration">
          <help short="issues list to return the issues as part of the additional cache node properties"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration" options="cache-drive" group="Configuration">
          <help short="The physical path and size of cache drive. For Windows cache node physical path should be &quot;/var/mcc&quot;. Minimum cache drive size should be 50gb."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="integer32" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].cacheNumber" options="cache-number">
              <help short="corresponding nginx cache number. Valid cache numbers are 1 - 20"/>
              <format maximum="20" minimum="1"/>
            </arg>
            <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].nginxMapping" options="nginx-mapping">
              <help short="full binding for corresponding nginx cache drive"/>
            </arg>
            <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].physicalPath" options="physical-path">
              <help short="physical path location of the folder used for caching content"/>
            </arg>
            <arg nullable="True" type="integer32" var="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].sizeInGb" options="size-in-gb">
              <help short="physical size of the drive used for caching content"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.isProxyRequired" options="enable-proxy" group="Configuration">
          <help short="Cache node resource requires a proxy"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
            <item name="Required" value="&quot;Required&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty1" options="optional-property1" group="Configuration">
          <help short="Optional property #1 of Mcc response object"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty2" options="optional-property2" group="Configuration">
          <help short="Optional property #2 of Mcc response object"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty3" options="optional-property3" group="Configuration">
          <help short="Optional property #3 of Mcc response object"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty4" options="optional-property4" group="Configuration">
          <help short="Optional property #4 of Mcc response object"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.optionalProperty5" options="optional-property5" group="Configuration">
          <help short="Optional property #5 of Mcc response object"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.osType" options="host-os" group="Configuration">
          <help short="Host operating system of the cache node."/>
          <enum>
            <item name="Eflow" value="&quot;Eflow&quot;"/>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.proxyUrl" options="proxy-url" group="Configuration">
          <help short="Host proxy address configuration. Ex: xxx.xxx.x.x or http://exampleproxy.com."/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.proxyUrlConfiguration.proxyUrl" options="proxy-host" group="Configuration">
          <help short="Host proxy address configuration. Ex: xxx.xxx.x.x or http://exampleproxy.com."/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.updateCycleType" options="update-cycle-type" group="Configuration">
          <help short="Update Cycle Type"/>
          <enum>
            <item name="Fast" value="&quot;Fast&quot;"/>
            <item name="Preview" value="&quot;Preview&quot;"/>
            <item name="Slow" value="&quot;Slow&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.additionalCacheNodeProperties.updateInfoDetails" options="update-info-details" group="Configuration">
          <help short="Update related information details"/>
        </arg>
        <arg nullable="True" type="dateTime" var="$resource.properties.additionalCacheNodeProperties.updateRequestedDateTime" options="update-requested-date-time" group="Configuration">
          <help short="customer requested date time for mcc install of update cycle"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$resource.properties.cacheNode" options="cache-node" group="Properties">
          <help short="Mcc cache node resource (cache node entity)."/>
          <arg nullable="True" type="integer32" var="$resource.properties.cacheNode.autoUpdateRequestedDay" options="auto-update-day" group="Configuration">
            <help short="Day of week (1-7) that cache node will automatically install software update"/>
            <format maximum="7" minimum="1"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.autoUpdateRequestedTime" options="auto-update-time" group="Configuration">
            <help short="Time of day in 24-hour time (hh:mm) that cache node will automatically install software update"/>
            <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.cacheNode.autoUpdateRequestedWeek" options="auto-update-week" group="Configuration">
            <help short="Week of month (1-4) that cache node will automatically install software update"/>
            <format maximum="5" minimum="1"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.autoUpdateRingType" options="auto-update-ring" group="Configuration">
            <help short="Cache node automatic software update periodicity ring"/>
            <enum>
              <item name="Fast" value="&quot;Fast&quot;"/>
              <item name="Preview" value="&quot;Preview&quot;"/>
              <item name="Slow" value="&quot;Slow&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.cacheNodeId" options="cache-node-id">
            <help short="Cache node resource identifier of the cache node"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.cacheNodeName" options="cache-node-name">
            <help short="Cache node resource name."/>
          </arg>
          <arg nullable="True" type="array<string>" var="$resource.properties.cacheNode.cidrCsv" options="cidr-csv">
            <help short="Cache node resource comma separated values of Cidrs."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.cacheNode.cidrSelectionType" options="cidr-selection-type">
            <help short="Cache node resource current Cidr range precedence selection type."/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.cacheNode.customerAsn" options="customer-asn">
            <help short="Cache node resource customer resource Asn (autonomous system number)"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.customerIndex" options="customer-index">
            <help short="Cache node resource customer index as string."/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.customerName" options="customer-name">
            <help short="Cache node resource customer resource name."/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.fullyQualifiedDomainName" options="fully-qualified-domain-name fqdn" group="Configuration">
            <help short="FQDN (fully qualified domain name) value of the cache node"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.fullyQualifiedResourceId" options="fully-qualified-resource-id">
            <help short="Cache node resource Azure fully qualified resource Id."/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.cacheNode.ipAddress" options="ip-address" group="Configuration">
            <help short="IP address of host machine."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.cacheNode.isEnabled" options="is-enabled">
            <help short="Cache node resource flag for indicating if cache node is enabled."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.cacheNode.isEnterpriseManaged" options="is-enterprise-managed">
            <help short="Cache node resource flag for determining if managed by enterprise as boolean."/>
          </arg>
          <arg nullable="True" type="integer32" var="$resource.properties.cacheNode.maxAllowableEgressInMbps" options="max-allowable-egress-in-mbps">
            <help short="Cache node resource maximum allowed egress in Mbps."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.cacheNode.shouldMigrate" options="should-migrate">
            <help short="Cache node resource flag for determining if customer will be migrated."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.statusCode" options="status-code" group="Properties">
          <help short="Mcc response status code."/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.statusDetails" options="status-details" group="Properties">
          <help short="Mcc response status details for retrieving response inner details."/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.statusText" options="status-text" group="Properties">
          <help short="Mcc response status text as string for retrieving status details."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="IspCacheNodesOperations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}">
          <request method="get">
            <path>
              <param type="string" name="cacheNodeResourceName" arg="$Path.cacheNodeResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="customerResourceName" arg="$Path.customerResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="IspCacheNodeResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ConnectedCache/ispCustomers/{}/ispCacheNodes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="additionalCacheNodeProperties">
                      <prop readOnly="True" type="integer32" name="aggregatedStatusCode"/>
                      <prop readOnly="True" type="string" name="aggregatedStatusDetails"/>
                      <prop readOnly="True" type="string" name="aggregatedStatusText"/>
                      <prop readOnly="True" type="string" name="autoUpdateAppliedVersion"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateLastAppliedDateTime"/>
                      <prop readOnly="True" type="string" name="autoUpdateLastAppliedDetails"/>
                      <prop readOnly="True" type="string" name="autoUpdateLastAppliedState"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateLastTriggeredDateTime"/>
                      <prop readOnly="True" type="dateTime" name="autoUpdateNextAvailableDateTime"/>
                      <prop readOnly="True" type="string" name="autoUpdateNextAvailableVersion"/>
                      <prop type="string" name="autoUpdateVersion"/>
                      <prop type="object" name="bgpConfiguration">
                        <prop type="string" name="asnToIpAddressMapping"/>
                      </prop>
                      <prop type="array<string>" name="cacheNodePropertiesDetailsIssuesList">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="integer32" name="cacheNodeState"/>
                      <prop readOnly="True" type="string" name="cacheNodeStateDetailedText"/>
                      <prop readOnly="True" type="string" name="cacheNodeStateShortText"/>
                      <prop type="array<object>" name="driveConfiguration">
                        <item type="object">
                          <prop type="integer32" name="cacheNumber">
                            <format maximum="20" minimum="1"/>
                          </prop>
                          <prop type="string" name="nginxMapping"/>
                          <prop type="string" name="physicalPath"/>
                          <prop type="integer32" name="sizeInGb"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isProvisioned"/>
                      <prop type="string" name="isProxyRequired">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;Required&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optionalProperty1"/>
                      <prop type="string" name="optionalProperty2"/>
                      <prop type="string" name="optionalProperty3"/>
                      <prop type="string" name="optionalProperty4"/>
                      <prop type="string" name="optionalProperty5"/>
                      <prop type="string" name="osType">
                        <enum>
                          <item value="&quot;Eflow&quot;"/>
                          <item value="&quot;Linux&quot;"/>
                          <item value="&quot;Windows&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="productVersion"/>
                      <prop type="string" name="proxyUrl"/>
                      <prop type="object" name="proxyUrlConfiguration">
                        <prop type="string" name="proxyUrl"/>
                      </prop>
                      <prop type="string" name="updateCycleType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="updateInfoDetails"/>
                      <prop type="dateTime" name="updateRequestedDateTime"/>
                    </prop>
                    <prop type="object" name="cacheNode">
                      <prop readOnly="True" type="integer32" name="addressSpace"/>
                      <prop type="integer32" name="autoUpdateRequestedDay">
                        <format maximum="7" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRequestedTime">
                        <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                      <prop type="integer32" name="autoUpdateRequestedWeek">
                        <format maximum="5" minimum="1"/>
                      </prop>
                      <prop type="string" name="autoUpdateRingType">
                        <enum>
                          <item value="&quot;Fast&quot;"/>
                          <item value="&quot;Preview&quot;"/>
                          <item value="&quot;Slow&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="integer32" name="bgpAddressSpace"/>
                      <prop readOnly="True" type="integer32" name="bgpCidrBlocksCount"/>
                      <prop readOnly="True" type="dateTime" name="bgpCidrCsvLastUpdateTime"/>
                      <prop readOnly="True" type="integer32" name="bgpFileBytesTruncated"/>
                      <prop readOnly="True" type="dateTime" name="bgpLastReportedTime"/>
                      <prop readOnly="True" type="integer32" name="bgpNumberOfRecords"/>
                      <prop readOnly="True" type="integer32" name="bgpNumberOfTimesUpdated"/>
                      <prop readOnly="True" type="string" name="bgpReviewFeedback"/>
                      <prop readOnly="True" type="string" name="bgpReviewState">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;AttentionRequired&quot;"/>
                          <item value="&quot;InReview&quot;"/>
                          <item value="&quot;NotConfigured&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="bgpReviewStateText"/>
                      <prop type="string" name="cacheNodeId"/>
                      <prop type="string" name="cacheNodeName"/>
                      <prop readOnly="True" type="string" name="category"/>
                      <prop type="array<string>" name="cidrCsv">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="cidrCsvLastUpdateTime"/>
                      <prop type="integer32" name="cidrSelectionType"/>
                      <prop readOnly="True" type="string" name="clientTenantId"/>
                      <prop readOnly="True" type="string" name="configurationState">
                        <enum>
                          <item value="&quot;Configured&quot;"/>
                          <item value="&quot;NotConfigured_Ip&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="configurationStateText"/>
                      <prop readOnly="True" type="string" name="containerConfigurations"/>
                      <prop readOnly="True" type="integer32" name="containerResyncTrigger"/>
                      <prop readOnly="True" type="string" name="createAsyncOperationId"/>
                      <prop type="integer32" name="customerAsn"/>
                      <prop readOnly="True" type="string" name="customerId"/>
                      <prop type="string" name="customerIndex"/>
                      <prop type="string" name="customerName"/>
                      <prop readOnly="True" type="string" name="deleteAsyncOperationId"/>
                      <prop type="string" name="fullyQualifiedDomainName"/>
                      <prop type="string" name="fullyQualifiedResourceId"/>
                      <prop readOnly="True" type="string" name="imageUri"/>
                      <prop type="string" name="ipAddress"/>
                      <prop type="boolean" name="isEnabled"/>
                      <prop type="boolean" name="isEnterpriseManaged"/>
                      <prop readOnly="True" type="boolean" name="isFrozen"/>
                      <prop readOnly="True" type="dateTime" name="lastSyncWithAzureTimestamp"/>
                      <prop readOnly="True" type="dateTime" name="lastUpdatedTimestamp"/>
                      <prop type="integer32" name="maxAllowableEgressInMbps"/>
                      <prop readOnly="True" type="float32" name="maxAllowableProbability"/>
                      <prop readOnly="True" type="integer32" name="releaseVersion"/>
                      <prop readOnly="True" type="string" name="reviewFeedback"/>
                      <prop readOnly="True" type="integer32" name="reviewState"/>
                      <prop readOnly="True" type="string" name="reviewStateText"/>
                      <prop type="boolean" name="shouldMigrate"/>
                      <prop readOnly="True" type="integer32" name="synchWithAzureAttemptsCount"/>
                      <prop readOnly="True" type="integer32" name="workerConnections"/>
                      <prop readOnly="True" type="dateTime" name="workerConnectionsLastUpdatedDateTime"/>
                      <prop readOnly="True" type="string" name="xCid"/>
                    </prop>
                    <prop type="object" name="error" cls="ErrorDetail_read">
                      <prop readOnly="True" type="array<object>" name="additionalInfo">
                        <item type="object">
                          <prop readOnly="True" type="object" name="info"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="code"/>
                      <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                        <item type="@ErrorDetail_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="message"/>
                      <prop readOnly="True" type="string" name="target"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Upgrading&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="status"/>
                    <prop type="string" name="statusCode"/>
                    <prop type="string" name="statusDetails"/>
                    <prop type="string" name="statusText"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="object" name="additionalCacheNodeProperties">
                  <prop type="string" name="autoUpdateVersion" arg="$resource.properties.additionalCacheNodeProperties.autoUpdateVersion"/>
                  <prop type="object" name="bgpConfiguration" arg="$resource.properties.additionalCacheNodeProperties.bgpConfiguration">
                    <prop type="string" name="asnToIpAddressMapping" arg="$resource.properties.additionalCacheNodeProperties.bgpConfiguration.asnToIpAddressMapping"/>
                  </prop>
                  <prop type="array<string>" name="cacheNodePropertiesDetailsIssuesList" arg="$resource.properties.additionalCacheNodeProperties.cacheNodePropertiesDetailsIssuesList">
                    <item type="string"/>
                  </prop>
                  <prop type="array<object>" name="driveConfiguration" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration">
                    <item type="object">
                      <prop type="integer32" name="cacheNumber" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].cacheNumber">
                        <format maximum="20" minimum="1"/>
                      </prop>
                      <prop type="string" name="nginxMapping" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].nginxMapping"/>
                      <prop type="string" name="physicalPath" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].physicalPath"/>
                      <prop type="integer32" name="sizeInGb" arg="$resource.properties.additionalCacheNodeProperties.driveConfiguration[].sizeInGb"/>
                    </item>
                  </prop>
                  <prop type="string" name="isProxyRequired" arg="$resource.properties.additionalCacheNodeProperties.isProxyRequired">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                      <item value="&quot;None&quot;"/>
                      <item value="&quot;Required&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="optionalProperty1" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty1"/>
                  <prop type="string" name="optionalProperty2" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty2"/>
                  <prop type="string" name="optionalProperty3" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty3"/>
                  <prop type="string" name="optionalProperty4" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty4"/>
                  <prop type="string" name="optionalProperty5" arg="$resource.properties.additionalCacheNodeProperties.optionalProperty5"/>
                  <prop type="string" name="osType" arg="$resource.properties.additionalCacheNodeProperties.osType">
                    <enum>
                      <item value="&quot;Eflow&quot;"/>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="proxyUrl" arg="$resource.properties.additionalCacheNodeProperties.proxyUrl"/>
                  <prop type="object" name="proxyUrlConfiguration">
                    <prop type="string" name="proxyUrl" arg="$resource.properties.additionalCacheNodeProperties.proxyUrlConfiguration.proxyUrl"/>
                  </prop>
                  <prop type="string" name="updateCycleType" arg="$resource.properties.additionalCacheNodeProperties.updateCycleType">
                    <enum>
                      <item value="&quot;Fast&quot;"/>
                      <item value="&quot;Preview&quot;"/>
                      <item value="&quot;Slow&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="updateInfoDetails" arg="$resource.properties.additionalCacheNodeProperties.updateInfoDetails"/>
                  <prop type="dateTime" name="updateRequestedDateTime" arg="$resource.properties.additionalCacheNodeProperties.updateRequestedDateTime"/>
                </prop>
                <prop type="object" name="cacheNode" arg="$resource.properties.cacheNode">
                  <prop type="integer32" name="autoUpdateRequestedDay" arg="$resource.properties.cacheNode.autoUpdateRequestedDay">
                    <format maximum="7" minimum="1"/>
                  </prop>
                  <prop type="string" name="autoUpdateRequestedTime" arg="$resource.properties.cacheNode.autoUpdateRequestedTime">
                    <format pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                  </prop>
                  <prop type="integer32" name="autoUpdateRequestedWeek" arg="$resource.properties.cacheNode.autoUpdateRequestedWeek">
                    <format maximum="5" minimum="1"/>
                  </prop>
                  <prop type="string" name="autoUpdateRingType" arg="$resource.properties.cacheNode.autoUpdateRingType">
                    <enum>
                      <item value="&quot;Fast&quot;"/>
                      <item value="&quot;Preview&quot;"/>
                      <item value="&quot;Slow&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="cacheNodeId" arg="$resource.properties.cacheNode.cacheNodeId"/>
                  <prop type="string" name="cacheNodeName" arg="$resource.properties.cacheNode.cacheNodeName"/>
                  <prop type="array<string>" name="cidrCsv" arg="$resource.properties.cacheNode.cidrCsv">
                    <item type="string"/>
                  </prop>
                  <prop type="integer32" name="cidrSelectionType" arg="$resource.properties.cacheNode.cidrSelectionType"/>
                  <prop type="integer32" name="customerAsn" arg="$resource.properties.cacheNode.customerAsn"/>
                  <prop type="string" name="customerIndex" arg="$resource.properties.cacheNode.customerIndex"/>
                  <prop type="string" name="customerName" arg="$resource.properties.cacheNode.customerName"/>
                  <prop type="string" name="fullyQualifiedDomainName" arg="$resource.properties.cacheNode.fullyQualifiedDomainName"/>
                  <prop type="string" name="fullyQualifiedResourceId" arg="$resource.properties.cacheNode.fullyQualifiedResourceId"/>
                  <prop type="string" name="ipAddress" arg="$resource.properties.cacheNode.ipAddress"/>
                  <prop type="boolean" name="isEnabled" arg="$resource.properties.cacheNode.isEnabled"/>
                  <prop type="boolean" name="isEnterpriseManaged" arg="$resource.properties.cacheNode.isEnterpriseManaged"/>
                  <prop type="integer32" name="maxAllowableEgressInMbps" arg="$resource.properties.cacheNode.maxAllowableEgressInMbps"/>
                  <prop type="boolean" name="shouldMigrate" arg="$resource.properties.cacheNode.shouldMigrate"/>
                </prop>
                <prop type="string" name="statusCode" arg="$resource.properties.statusCode"/>
                <prop type="string" name="statusDetails" arg="$resource.properties.statusDetails"/>
                <prop type="string" name="statusText" arg="$resource.properties.statusText"/>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="IspCacheNodesOperations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}">
          <request method="put">
            <path>
              <param type="string" name="cacheNodeResourceName" arg="$Path.cacheNodeResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="customerResourceName" arg="$Path.customerResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@IspCacheNodeResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
