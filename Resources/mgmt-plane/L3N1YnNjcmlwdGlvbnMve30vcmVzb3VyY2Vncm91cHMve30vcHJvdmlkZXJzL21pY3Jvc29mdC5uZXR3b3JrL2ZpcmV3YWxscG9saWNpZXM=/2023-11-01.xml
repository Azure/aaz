<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVz/V/MjAyMy0xMS0wMQ=="/>
  <commandGroup name="network firewall policy">
    <command name="list" version="2023-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVz/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FirewallPolicies_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="@SubResource_read" name="basePolicy"/>
                        <prop readOnly="True" type="array<@SubResource_read>" name="childPolicies">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="object" name="dnsSettings">
                          <prop type="boolean" name="enableProxy"/>
                          <prop nullable="True" type="boolean" name="requireProxyForNetworkRules"/>
                          <prop type="array<string>" name="servers">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="object" name="explicitProxy">
                          <prop nullable="True" type="boolean" name="enableExplicitProxy"/>
                          <prop nullable="True" type="boolean" name="enablePacFile"/>
                          <prop type="integer32" name="httpPort">
                            <format maximum="64000" minimum="0"/>
                          </prop>
                          <prop type="integer32" name="httpsPort">
                            <format maximum="64000" minimum="0"/>
                          </prop>
                          <prop type="string" name="pacFile"/>
                          <prop type="integer32" name="pacFilePort">
                            <format maximum="64000" minimum="0"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<@SubResource_read>" name="firewalls">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="object" name="insights">
                          <prop type="boolean" name="isEnabled"/>
                          <prop type="object" name="logAnalyticsResources">
                            <prop type="@SubResource_read" name="defaultWorkspaceId"/>
                            <prop type="array<object>" name="workspaces">
                              <item type="object">
                                <prop type="string" name="region"/>
                                <prop type="@SubResource_read" name="workspaceId"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="integer32" name="retentionDays"/>
                        </prop>
                        <prop type="object" name="intrusionDetection">
                          <prop type="object" name="configuration">
                            <prop type="array<object>" name="bypassTrafficSettings">
                              <item type="object">
                                <prop type="string" name="description"/>
                                <prop type="array<string>" name="destinationAddresses">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="destinationIpGroups">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="destinationPorts">
                                  <item type="string"/>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;ANY&quot;"/>
                                    <item value="&quot;ICMP&quot;"/>
                                    <item value="&quot;TCP&quot;"/>
                                    <item value="&quot;UDP&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="array<string>" name="sourceAddresses">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="sourceIpGroups">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<string>" name="privateRanges">
                              <item type="string"/>
                            </prop>
                            <prop type="array<object>" name="signatureOverrides">
                              <item type="object">
                                <prop type="string" name="id"/>
                                <prop type="string" name="mode">
                                  <enum>
                                    <item value="&quot;Alert&quot;"/>
                                    <item value="&quot;Deny&quot;"/>
                                    <item value="&quot;Off&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Alert&quot;"/>
                              <item value="&quot;Deny&quot;"/>
                              <item value="&quot;Off&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="profile">
                            <enum>
                              <item value="&quot;Advanced&quot;"/>
                              <item value="&quot;Basic&quot;"/>
                              <item value="&quot;Extended&quot;"/>
                              <item value="&quot;Standard&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="ruleCollectionGroups">
                          <item type="object" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="size"/>
                        <prop type="object" name="sku">
                          <prop type="string" name="tier">
                            <enum>
                              <item value="&quot;Basic&quot;"/>
                              <item value="&quot;Premium&quot;"/>
                              <item value="&quot;Standard&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="snat">
                          <prop type="string" name="autoLearnPrivateRanges">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="privateRanges">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="object" name="sql">
                          <prop type="boolean" name="allowSqlRedirect"/>
                        </prop>
                        <prop type="string" name="threatIntelMode">
                          <enum>
                            <item value="&quot;Alert&quot;"/>
                            <item value="&quot;Deny&quot;"/>
                            <item value="&quot;Off&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="threatIntelWhitelist">
                          <prop type="array<string>" name="fqdns">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="ipAddresses">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="object" name="transportSecurity">
                          <prop type="object" name="certificateAuthority">
                            <prop type="string" name="keyVaultSecretId"/>
                            <prop type="string" name="name"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
