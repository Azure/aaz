<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.network/routefilters" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmsvcm91dGVGaWx0ZXJz/V/MjAyMS0wOC0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnM=/V/MjAyMS0wOC0wMQ=="/>
  <commandGroup name="network route-filter">
    <command name="list" version="2021-08-01">
      <resource id="/subscriptions/{}/providers/microsoft.network/routefilters" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmsvcm91dGVGaWx0ZXJz/V/MjAyMS0wOC0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnM=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_RouteFilters_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_RouteFilters_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_RouteFilters_ListByResourceGroup" operationId="RouteFilters_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="array<@ExpressRouteCircuitPeering_read>" name="ipv6Peerings">
                          <item type="@ExpressRouteCircuitPeering_read"/>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="peerings">
                          <item type="object" cls="ExpressRouteCircuitPeering_read">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="integer32" name="azureASN"/>
                              <prop type="array<object>" name="connections">
                                <item type="object">
                                  <prop readOnly="True" type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                                  </prop>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="addressPrefix"/>
                                    <prop type="string" name="authorizationKey"/>
                                    <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                      <enum>
                                        <item value="&quot;Connected&quot;"/>
                                        <item value="&quot;Connecting&quot;"/>
                                        <item value="&quot;Disconnected&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                    <prop type="object" name="ipv6CircuitConnectionConfig">
                                      <prop type="string" name="addressPrefix"/>
                                      <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                        <enum>
                                          <item value="&quot;Connected&quot;"/>
                                          <item value="&quot;Connecting&quot;"/>
                                          <item value="&quot;Disconnected&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                    <prop readOnly="True" type="string" name="provisioningState">
                                      <enum>
                                        <item value="&quot;Deleting&quot;"/>
                                        <item value="&quot;Failed&quot;"/>
                                        <item value="&quot;Succeeded&quot;"/>
                                        <item value="&quot;Updating&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </item>
                              </prop>
                              <prop type="object" name="expressRouteConnection">
                                <prop readOnly="True" type="string" name="id"/>
                              </prop>
                              <prop type="string" name="gatewayManagerEtag"/>
                              <prop type="object" name="ipv6PeeringConfig">
                                <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                                <prop type="string" name="primaryPeerAddressPrefix"/>
                                <prop type="@SubResource_read" name="routeFilter"/>
                                <prop type="string" name="secondaryPeerAddressPrefix"/>
                                <prop type="string" name="state">
                                  <enum>
                                    <item value="&quot;Disabled&quot;"/>
                                    <item value="&quot;Enabled&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="lastModifiedBy"/>
                              <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                                <prop type="array<string>" name="advertisedCommunities">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="advertisedPublicPrefixes">
                                  <item type="string"/>
                                </prop>
                                <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                                  <enum>
                                    <item value="&quot;Configured&quot;"/>
                                    <item value="&quot;Configuring&quot;"/>
                                    <item value="&quot;NotConfigured&quot;"/>
                                    <item value="&quot;ValidationNeeded&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="customerASN"/>
                                <prop type="integer32" name="legacyMode"/>
                                <prop type="string" name="routingRegistryName"/>
                              </prop>
                              <prop type="integer64" name="peerASN">
                                <format maximum="4294967295" minimum="1"/>
                              </prop>
                              <prop readOnly="True" type="array<object>" name="peeredConnections">
                                <item type="object">
                                  <prop readOnly="True" type="string" name="etag"/>
                                  <prop type="ResourceId" name="id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                                  </prop>
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="addressPrefix"/>
                                    <prop type="string" name="authResourceGuid"/>
                                    <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                      <enum>
                                        <item value="&quot;Connected&quot;"/>
                                        <item value="&quot;Connecting&quot;"/>
                                        <item value="&quot;Disconnected&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="connectionName"/>
                                    <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                    <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                    <prop readOnly="True" type="string" name="provisioningState">
                                      <enum>
                                        <item value="&quot;Deleting&quot;"/>
                                        <item value="&quot;Failed&quot;"/>
                                        <item value="&quot;Succeeded&quot;"/>
                                        <item value="&quot;Updating&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type"/>
                                </item>
                              </prop>
                              <prop type="string" name="peeringType">
                                <enum>
                                  <item value="&quot;AzurePrivatePeering&quot;"/>
                                  <item value="&quot;AzurePublicPeering&quot;"/>
                                  <item value="&quot;MicrosoftPeering&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="primaryAzurePort"/>
                              <prop type="string" name="primaryPeerAddressPrefix"/>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="routeFilter" cls="SubResource_read">
                                <prop type="string" name="id"/>
                              </prop>
                              <prop type="string" name="secondaryAzurePort"/>
                              <prop type="string" name="secondaryPeerAddressPrefix"/>
                              <prop type="string" name="sharedKey"/>
                              <prop type="string" name="state">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="stats">
                                <prop type="integer64" name="primarybytesIn"/>
                                <prop type="integer64" name="primarybytesOut"/>
                                <prop type="integer64" name="secondarybytesIn"/>
                                <prop type="integer64" name="secondarybytesOut"/>
                              </prop>
                              <prop type="integer32" name="vlanId"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="rules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="access" required="True">
                                <enum>
                                  <item value="&quot;Allow&quot;"/>
                                  <item value="&quot;Deny&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="communities" required="True">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="routeFilterRuleType" required="True">
                                <enum>
                                  <item value="&quot;Community&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_RouteFilters_List" operationId="RouteFilters_List">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="array<@ExpressRouteCircuitPeering_read>" name="ipv6Peerings">
                          <item type="@ExpressRouteCircuitPeering_read"/>
                        </prop>
                        <prop readOnly="True" type="array<@ExpressRouteCircuitPeering_read>" name="peerings">
                          <item type="@ExpressRouteCircuitPeering_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="rules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="access" required="True">
                                <enum>
                                  <item value="&quot;Allow&quot;"/>
                                  <item value="&quot;Deny&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="communities" required="True">
                                <item type="string"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="routeFilterRuleType" required="True">
                                <enum>
                                  <item value="&quot;Community&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
