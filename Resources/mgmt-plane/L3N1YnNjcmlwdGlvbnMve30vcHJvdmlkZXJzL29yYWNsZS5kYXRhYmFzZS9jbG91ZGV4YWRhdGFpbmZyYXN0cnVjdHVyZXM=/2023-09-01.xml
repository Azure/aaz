<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/oracle.database/cloudexadatainfrastructures" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL2Nsb3VkRXhhZGF0YUluZnJhc3RydWN0dXJlcw==/V/MjAyMy0wOS0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVz/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="oracle-database cloud-exadata-infrastructure">
    <command name="list" version="2023-09-01">
      <resource id="/subscriptions/{}/providers/oracle.database/cloudexadatainfrastructures" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL2Nsb3VkRXhhZGF0YUluZnJhc3RydWN0dXJlcw==/V/MjAyMy0wOS0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudexadatainfrastructures" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmVz/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_CloudExadataInfrastructures_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_CloudExadataInfrastructures_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_CloudExadataInfrastructures_ListByResourceGroup" operationId="CloudExadataInfrastructures_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudExadataInfrastructures/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="integer32" name="activatedStorageCount"/>
                        <prop readOnly="True" type="integer32" name="additionalStorageCount"/>
                        <prop readOnly="True" type="integer32" name="availableStorageSizeInGbs"/>
                        <prop type="integer32" name="computeCount"/>
                        <prop readOnly="True" type="integer32" name="cpuCount"/>
                        <prop type="array<object>" name="customerContacts">
                          <item type="object">
                            <prop type="string" name="email" required="True">
                              <format maxLength="320" minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="float64" name="dataStorageSizeInTbs"/>
                        <prop readOnly="True" type="integer32" name="dbNodeStorageSizeInGbs"/>
                        <prop readOnly="True" type="string" name="dbServerVersion"/>
                        <prop type="string" name="displayName" required="True">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="object" name="estimatedPatchingTime">
                          <prop readOnly="True" type="integer32" name="estimatedDbServerPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="estimatedNetworkSwitchesPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="estimatedStorageServerPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="totalEstimatedPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="lastMaintenanceRunId">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="string" name="lifecycleDetails"/>
                        <prop type="string" name="lifecycleState">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;MaintenanceInProgress&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Terminated&quot;"/>
                            <item value="&quot;Terminating&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="maintenanceWindow">
                          <prop type="integer32" name="customActionTimeoutInMins">
                            <format maximum="120" minimum="0"/>
                          </prop>
                          <prop type="array<object>" name="daysOfWeek" identifiers="name">
                            <item type="object">
                              <prop type="string" name="name" required="True">
                                <enum>
                                  <item value="&quot;Friday&quot;"/>
                                  <item value="&quot;Monday&quot;"/>
                                  <item value="&quot;Saturday&quot;"/>
                                  <item value="&quot;Sunday&quot;"/>
                                  <item value="&quot;Thursday&quot;"/>
                                  <item value="&quot;Tuesday&quot;"/>
                                  <item value="&quot;Wednesday&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<integer32>" name="hoursOfDay">
                            <item type="integer32"/>
                          </prop>
                          <prop type="boolean" name="isCustomActionTimeoutEnabled"/>
                          <prop type="boolean" name="isMonthlyPatchingEnabled"/>
                          <prop type="integer32" name="leadTimeInWeeks"/>
                          <prop type="array<object>" name="months" identifiers="name">
                            <item type="object">
                              <prop type="string" name="name" required="True">
                                <enum>
                                  <item value="&quot;April&quot;"/>
                                  <item value="&quot;August&quot;"/>
                                  <item value="&quot;December&quot;"/>
                                  <item value="&quot;February&quot;"/>
                                  <item value="&quot;January&quot;"/>
                                  <item value="&quot;July&quot;"/>
                                  <item value="&quot;June&quot;"/>
                                  <item value="&quot;March&quot;"/>
                                  <item value="&quot;May&quot;"/>
                                  <item value="&quot;November&quot;"/>
                                  <item value="&quot;October&quot;"/>
                                  <item value="&quot;September&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="patchingMode">
                            <enum>
                              <item value="&quot;NonRolling&quot;"/>
                              <item value="&quot;Rolling&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="preference">
                            <enum>
                              <item value="&quot;CustomPreference&quot;"/>
                              <item value="&quot;NoPreference&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<integer32>" name="weeksOfMonth">
                            <item type="integer32"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="integer32" name="maxCpuCount"/>
                        <prop readOnly="True" type="float64" name="maxDataStorageInTbs"/>
                        <prop readOnly="True" type="integer32" name="maxDbNodeStorageSizeInGbs"/>
                        <prop readOnly="True" type="integer32" name="maxMemoryInGbs"/>
                        <prop readOnly="True" type="integer32" name="memorySizeInGbs"/>
                        <prop readOnly="True" type="string" name="monthlyDbServerVersion"/>
                        <prop readOnly="True" type="string" name="monthlyStorageServerVersion"/>
                        <prop type="string" name="nextMaintenanceRunId">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="string" name="ociUrl"/>
                        <prop type="string" name="ocid">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="shape" required="True"/>
                        <prop type="integer32" name="storageCount"/>
                        <prop readOnly="True" type="string" name="storageServerVersion"/>
                        <prop readOnly="True" type="string" name="timeCreated"/>
                        <prop readOnly="True" type="integer32" name="totalStorageSizeInGbs"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones" required="True">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_CloudExadataInfrastructures_ListBySubscription" operationId="CloudExadataInfrastructures_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/cloudExadataInfrastructures">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudExadataInfrastructures/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="integer32" name="activatedStorageCount"/>
                        <prop readOnly="True" type="integer32" name="additionalStorageCount"/>
                        <prop readOnly="True" type="integer32" name="availableStorageSizeInGbs"/>
                        <prop type="integer32" name="computeCount"/>
                        <prop readOnly="True" type="integer32" name="cpuCount"/>
                        <prop type="array<object>" name="customerContacts">
                          <item type="object">
                            <prop type="string" name="email" required="True">
                              <format maxLength="320" minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="float64" name="dataStorageSizeInTbs"/>
                        <prop readOnly="True" type="integer32" name="dbNodeStorageSizeInGbs"/>
                        <prop readOnly="True" type="string" name="dbServerVersion"/>
                        <prop type="string" name="displayName" required="True">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="object" name="estimatedPatchingTime">
                          <prop readOnly="True" type="integer32" name="estimatedDbServerPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="estimatedNetworkSwitchesPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="estimatedStorageServerPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="totalEstimatedPatchingTime">
                            <format maximum="3000" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="lastMaintenanceRunId">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="string" name="lifecycleDetails"/>
                        <prop type="string" name="lifecycleState">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;MaintenanceInProgress&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Terminated&quot;"/>
                            <item value="&quot;Terminating&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="maintenanceWindow">
                          <prop type="integer32" name="customActionTimeoutInMins">
                            <format maximum="120" minimum="0"/>
                          </prop>
                          <prop type="array<object>" name="daysOfWeek" identifiers="name">
                            <item type="object">
                              <prop type="string" name="name" required="True">
                                <enum>
                                  <item value="&quot;Friday&quot;"/>
                                  <item value="&quot;Monday&quot;"/>
                                  <item value="&quot;Saturday&quot;"/>
                                  <item value="&quot;Sunday&quot;"/>
                                  <item value="&quot;Thursday&quot;"/>
                                  <item value="&quot;Tuesday&quot;"/>
                                  <item value="&quot;Wednesday&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<integer32>" name="hoursOfDay">
                            <item type="integer32"/>
                          </prop>
                          <prop type="boolean" name="isCustomActionTimeoutEnabled"/>
                          <prop type="boolean" name="isMonthlyPatchingEnabled"/>
                          <prop type="integer32" name="leadTimeInWeeks"/>
                          <prop type="array<object>" name="months" identifiers="name">
                            <item type="object">
                              <prop type="string" name="name" required="True">
                                <enum>
                                  <item value="&quot;April&quot;"/>
                                  <item value="&quot;August&quot;"/>
                                  <item value="&quot;December&quot;"/>
                                  <item value="&quot;February&quot;"/>
                                  <item value="&quot;January&quot;"/>
                                  <item value="&quot;July&quot;"/>
                                  <item value="&quot;June&quot;"/>
                                  <item value="&quot;March&quot;"/>
                                  <item value="&quot;May&quot;"/>
                                  <item value="&quot;November&quot;"/>
                                  <item value="&quot;October&quot;"/>
                                  <item value="&quot;September&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="patchingMode">
                            <enum>
                              <item value="&quot;NonRolling&quot;"/>
                              <item value="&quot;Rolling&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="preference">
                            <enum>
                              <item value="&quot;CustomPreference&quot;"/>
                              <item value="&quot;NoPreference&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<integer32>" name="weeksOfMonth">
                            <item type="integer32"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="integer32" name="maxCpuCount"/>
                        <prop readOnly="True" type="float64" name="maxDataStorageInTbs"/>
                        <prop readOnly="True" type="integer32" name="maxDbNodeStorageSizeInGbs"/>
                        <prop readOnly="True" type="integer32" name="maxMemoryInGbs"/>
                        <prop readOnly="True" type="integer32" name="memorySizeInGbs"/>
                        <prop readOnly="True" type="string" name="monthlyDbServerVersion"/>
                        <prop readOnly="True" type="string" name="monthlyStorageServerVersion"/>
                        <prop type="string" name="nextMaintenanceRunId">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="string" name="ociUrl"/>
                        <prop type="string" name="ocid">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="shape" required="True"/>
                        <prop type="integer32" name="storageCount"/>
                        <prop readOnly="True" type="string" name="storageServerVersion"/>
                        <prop readOnly="True" type="string" name="timeCreated"/>
                        <prop readOnly="True" type="integer32" name="totalStorageSizeInGbs"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones" required="True">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
