<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network express-route">
    <command name="show" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCircuits_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}">
          <request method="get">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowClassicOperations"/>
                    <prop type="string" name="authorizationKey"/>
                    <prop type="array<object>" name="authorizations">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey"/>
                          <prop type="string" name="authorizationUseStatus">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;InUse&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="float" name="bandwidthInGbps"/>
                    <prop type="string" name="circuitProvisioningState"/>
                    <prop type="@SubResource_read" name="expressRoutePort"/>
                    <prop type="string" name="gatewayManagerEtag"/>
                    <prop type="boolean" name="globalReachEnabled"/>
                    <prop type="array<object>" name="peerings">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN"/>
                          <prop type="array<object>" name="connections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authorizationKey"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                    <enum>
                                      <item value="&quot;Connected&quot;"/>
                                      <item value="&quot;Connecting&quot;"/>
                                      <item value="&quot;Disconnected&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="object" name="expressRouteConnection">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_read" name="routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="peeredConnections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authResourceGuid"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="connectionName"/>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routeFilter" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats">
                            <prop type="integer64" name="primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceKey"/>
                    <prop type="string" name="serviceProviderNotes"/>
                    <prop type="object" name="serviceProviderProperties">
                      <prop type="integer32" name="bandwidthInMbps"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop type="string" name="serviceProviderName"/>
                    </prop>
                    <prop type="string" name="serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="stag"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="family">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCircuits_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}">
          <request method="delete">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.allowClassicOperations" options="allow-classic-operations" group="">
          <help short="Allow classic operations. Allowed values: false, true."/>
        </arg>
        <arg type="float" var="$parameters.properties.bandwidthInGbps" options="bandwidth-in-gbps" group="">
          <help short="Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps.  Values from: az network express-route list-service-providers."/>
        </arg>
        <arg type="string" var="$parameters.properties.expressRoutePort.id" options="express-route-port" group="">
          <help short="Name or ID of an ExpressRoute port."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.globalReachEnabled" options="allow-global-reach" group="">
          <help short="Enable global reach on the circuit."/>
        </arg>
        <arg type="string" var="$parameters.properties.serviceProviderProperties.peeringLocation" options="peering-location" group="">
          <help short="Name of the peering location.  Values from: az network express-route list-service-providers."/>
        </arg>
        <arg type="string" var="$parameters.properties.serviceProviderProperties.serviceProviderName" options="provider" group="">
          <help short="Name of the ExpressRoute Service Provider.  Values from: az network express-route list-service-providers."/>
        </arg>
        <arg type="string" var="$parameters.sku.family" options="sku-family" group="">
          <help short="Chosen SKU family of ExpressRoute circuit.  Allowed values: MeteredData, UnlimitedData.  Default: MeteredData."/>
          <default value="&quot;MeteredData&quot;"/>
          <enum>
            <item name="MeteredData" value="&quot;MeteredData&quot;"/>
            <item name="UnlimitedData" value="&quot;UnlimitedData&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.sku.name" options="sku-name" group="">
          <help short="The name of the SKU."/>
        </arg>
        <arg type="string" var="$parameters.sku.tier" options="sku-tier" group="">
          <help short="SKU Tier of ExpressRoute circuit.  Allowed values: Basic, Local, Premium, Standard.  Default: Standard."/>
          <default value="&quot;Standard&quot;"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="Local" value="&quot;Local&quot;"/>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.authorizationKey" options="authorization-key" hide="True" group="Properties">
          <help short="The authorizationKey."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.authorizations" options="authorizations" hide="True" group="Properties">
          <help short="The list of authorizations."/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.authorizations[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.authorizations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$parameters.properties.authorizations[].properties.authorizationKey" options="authorization-key" group="Properties">
              <help short="The authorization key."/>
            </arg>
            <arg type="string" var="$parameters.properties.authorizations[].properties.authorizationUseStatus" options="authorization-use-status" group="Properties">
              <help short="The authorization use status."/>
              <enum>
                <item name="Available" value="&quot;Available&quot;"/>
                <item name="InUse" value="&quot;InUse&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.circuitProvisioningState" options="circuit-provisioning-state" hide="True" group="Properties">
          <help short="The CircuitProvisioningState state of the resource."/>
        </arg>
        <arg type="string" var="$parameters.properties.gatewayManagerEtag" options="gateway-manager-etag" hide="True" group="Properties">
          <help short="The GatewayManager Etag."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.peerings" options="peerings" hide="True" group="Properties">
          <help short="The list of peerings."/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.peerings[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.peerings[].properties.azureASN" options="azure-asn" group="Properties">
              <help short="The Azure ASN."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.peerings[].properties.connections" options="connections" group="Properties">
              <help short="The list of circuit connections associated with Azure Private Peering for this circuit."/>
              <item type="object">
                <arg type="ResourceId" var="$parameters.properties.peerings[].properties.connections[].id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                </arg>
                <arg type="string" var="$parameters.properties.peerings[].properties.connections[].name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg type="string" var="$parameters.properties.peerings[].properties.connections[].properties.addressPrefix" options="address-prefix" group="Properties">
                  <help short="/29 IP address space to carve out Customer addresses for tunnels."/>
                </arg>
                <arg type="string" var="$parameters.properties.peerings[].properties.connections[].properties.authorizationKey" options="authorization-key" group="Properties">
                  <help short="The authorization key."/>
                </arg>
                <arg type="@SubResource_create" var="$parameters.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties">
                  <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
                </arg>
                <arg type="object" var="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig" options="ipv6-circuit-connection-config" group="Properties">
                  <help short="IPv6 Address PrefixProperties of the express route circuit connection."/>
                  <arg type="string" var="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix">
                    <help short="/125 IP address space to carve out customer addresses for global reach."/>
                  </arg>
                </arg>
                <arg type="@SubResource_create" var="$parameters.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
                  <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.gatewayManagerEtag" options="gateway-manager-etag" group="Properties">
              <help short="The GatewayManager Etag."/>
            </arg>
            <arg type="object" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties">
              <help short="The IPv6 peering configuration."/>
              <arg type="@ExpressRouteCircuitPeeringConfig_create" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig" options="microsoft-peering-config">
                <help short="The Microsoft peering configuration."/>
              </arg>
              <arg type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
                <help short="The primary address prefix."/>
              </arg>
              <arg type="@SubResource_create" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter" options="route-filter">
                <help short="The reference to the RouteFilter resource."/>
              </arg>
              <arg type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
                <help short="The secondary address prefix."/>
              </arg>
              <arg type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state" options="state">
                <help short="The state of peering."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.peerings[].properties.microsoftPeeringConfig" options="microsoft-peering-config" group="Properties" cls="ExpressRouteCircuitPeeringConfig_create">
              <help short="The Microsoft peering configuration."/>
              <arg type="array<string>" var="@ExpressRouteCircuitPeeringConfig_create.advertisedCommunities" options="advertised-communities">
                <help short="The communities of bgp peering. Specified for microsoft peering."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixes" options="advertised-public-prefixes">
                <help short="The reference to AdvertisedPublicPrefixes."/>
                <item type="string"/>
              </arg>
              <arg type="integer32" var="@ExpressRouteCircuitPeeringConfig_create.customerASN" options="customer-asn">
                <help short="The CustomerASN of the peering."/>
              </arg>
              <arg type="integer32" var="@ExpressRouteCircuitPeeringConfig_create.legacyMode" options="legacy-mode">
                <help short="The legacy mode of the peering."/>
              </arg>
              <arg type="string" var="@ExpressRouteCircuitPeeringConfig_create.routingRegistryName" options="routing-registry-name">
                <help short="The RoutingRegistryName of the configuration."/>
              </arg>
            </arg>
            <arg type="integer64" var="$parameters.properties.peerings[].properties.peerASN" options="peer-asn" group="Properties">
              <help short="The peer ASN."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.peeringType" options="peering-type" group="Properties">
              <help short="The peering type."/>
              <enum>
                <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
                <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
                <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.primaryAzurePort" options="primary-azure-port" group="Properties">
              <help short="The primary port."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix" options="primary-peer-address-prefix" group="Properties">
              <help short="The primary address prefix."/>
            </arg>
            <arg type="object" var="$parameters.properties.peerings[].properties.routeFilter" options="route-filter" group="Properties" cls="SubResource_create">
              <help short="The reference to the RouteFilter resource."/>
              <arg type="string" var="@SubResource_create.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.secondaryAzurePort" options="secondary-azure-port" group="Properties">
              <help short="The secondary port."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix" group="Properties">
              <help short="The secondary address prefix."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.sharedKey" options="shared-key" group="Properties">
              <help short="The shared key."/>
            </arg>
            <arg type="string" var="$parameters.properties.peerings[].properties.state" options="state" group="Properties">
              <help short="The peering state."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.properties.peerings[].properties.stats" options="stats" group="Properties">
              <help short="The peering stats of express route circuit."/>
              <arg type="integer64" var="$parameters.properties.peerings[].properties.stats.primarybytesIn" options="primarybytes-in">
                <help short="The Primary BytesIn of the peering."/>
              </arg>
              <arg type="integer64" var="$parameters.properties.peerings[].properties.stats.primarybytesOut" options="primarybytes-out">
                <help short="The primary BytesOut of the peering."/>
              </arg>
              <arg type="integer64" var="$parameters.properties.peerings[].properties.stats.secondarybytesIn" options="secondarybytes-in">
                <help short="The secondary BytesIn of the peering."/>
              </arg>
              <arg type="integer64" var="$parameters.properties.peerings[].properties.stats.secondarybytesOut" options="secondarybytes-out">
                <help short="The secondary BytesOut of the peering."/>
              </arg>
            </arg>
            <arg type="integer32" var="$parameters.properties.peerings[].properties.vlanId" options="vlan-id" group="Properties">
              <help short="The VLAN ID."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.serviceKey" options="service-key" hide="True" group="Properties">
          <help short="The ServiceKey."/>
        </arg>
        <arg type="string" var="$parameters.properties.serviceProviderNotes" options="service-provider-notes" hide="True" group="Properties">
          <help short="The ServiceProviderNotes."/>
        </arg>
        <arg type="string" var="$parameters.properties.serviceProviderProvisioningState" options="service-provider-provisioning-state" hide="True" group="Properties">
          <help short="The ServiceProviderProvisioningState state of the resource."/>
          <enum>
            <item name="Deprovisioning" value="&quot;Deprovisioning&quot;"/>
            <item name="NotProvisioned" value="&quot;NotProvisioned&quot;"/>
            <item name="Provisioned" value="&quot;Provisioned&quot;"/>
            <item name="Provisioning" value="&quot;Provisioning&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="ServiceProviderProperties">
        <arg type="integer32" var="$parameters.properties.serviceProviderProperties.bandwidthInMbps" options="bandwidth-in-mbps" group="ServiceProviderProperties">
          <help short="Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps. Values from: az network express-route list-service-providers."/>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCircuits_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}">
          <request method="put">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowClassicOperations" arg="$parameters.properties.allowClassicOperations"/>
                    <prop type="string" name="authorizationKey" arg="$parameters.properties.authorizationKey"/>
                    <prop type="array<object>" name="authorizations" arg="$parameters.properties.authorizations">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.authorizations[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.authorizations[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey" arg="$parameters.properties.authorizations[].properties.authorizationKey"/>
                          <prop type="string" name="authorizationUseStatus" arg="$parameters.properties.authorizations[].properties.authorizationUseStatus">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;InUse&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="float" name="bandwidthInGbps" arg="$parameters.properties.bandwidthInGbps"/>
                    <prop type="string" name="circuitProvisioningState" arg="$parameters.properties.circuitProvisioningState"/>
                    <prop type="object" name="expressRoutePort">
                      <prop type="string" name="id" arg="$parameters.properties.expressRoutePort.id"/>
                    </prop>
                    <prop type="string" name="gatewayManagerEtag" arg="$parameters.properties.gatewayManagerEtag"/>
                    <prop type="boolean" name="globalReachEnabled" arg="$parameters.properties.globalReachEnabled"/>
                    <prop type="array<object>" name="peerings" arg="$parameters.properties.peerings">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.peerings[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.peerings[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN" arg="$parameters.properties.peerings[].properties.azureASN"/>
                          <prop type="array<object>" name="connections" arg="$parameters.properties.peerings[].properties.connections">
                            <item type="object">
                              <prop type="ResourceId" name="id" arg="$parameters.properties.peerings[].properties.connections[].id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name" arg="$parameters.properties.peerings[].properties.connections[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix" arg="$parameters.properties.peerings[].properties.connections[].properties.addressPrefix"/>
                                <prop type="string" name="authorizationKey" arg="$parameters.properties.peerings[].properties.connections[].properties.authorizationKey"/>
                                <prop type="@SubResource_create" name="expressRouteCircuitPeering" arg="$parameters.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig" arg="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix" arg="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix"/>
                                </prop>
                                <prop type="@SubResource_create" name="peerExpressRouteCircuitPeering" arg="$parameters.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag" arg="$parameters.properties.peerings[].properties.gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_create" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_create" name="routeFilter" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_create">
                            <prop type="array<string>" name="advertisedCommunities" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="integer32" name="customerASN" arg="@ExpressRouteCircuitPeeringConfig_create.customerASN"/>
                            <prop type="integer32" name="legacyMode" arg="@ExpressRouteCircuitPeeringConfig_create.legacyMode"/>
                            <prop type="string" name="routingRegistryName" arg="@ExpressRouteCircuitPeeringConfig_create.routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN" arg="$parameters.properties.peerings[].properties.peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop type="string" name="peeringType" arg="$parameters.properties.peerings[].properties.peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort" arg="$parameters.properties.peerings[].properties.primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix"/>
                          <prop type="object" name="routeFilter" arg="$parameters.properties.peerings[].properties.routeFilter" cls="SubResource_create">
                            <prop type="string" name="id" arg="@SubResource_create.id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort" arg="$parameters.properties.peerings[].properties.secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey" arg="$parameters.properties.peerings[].properties.sharedKey"/>
                          <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats" arg="$parameters.properties.peerings[].properties.stats">
                            <prop type="integer64" name="primarybytesIn" arg="$parameters.properties.peerings[].properties.stats.primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut" arg="$parameters.properties.peerings[].properties.stats.primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn" arg="$parameters.properties.peerings[].properties.stats.secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut" arg="$parameters.properties.peerings[].properties.stats.secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId" arg="$parameters.properties.peerings[].properties.vlanId"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="serviceKey" arg="$parameters.properties.serviceKey"/>
                    <prop type="string" name="serviceProviderNotes" arg="$parameters.properties.serviceProviderNotes"/>
                    <prop type="object" name="serviceProviderProperties">
                      <prop type="integer32" name="bandwidthInMbps" arg="$parameters.properties.serviceProviderProperties.bandwidthInMbps"/>
                      <prop type="string" name="peeringLocation" arg="$parameters.properties.serviceProviderProperties.peeringLocation"/>
                      <prop type="string" name="serviceProviderName" arg="$parameters.properties.serviceProviderProperties.serviceProviderName"/>
                    </prop>
                    <prop type="string" name="serviceProviderProvisioningState" arg="$parameters.properties.serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="family" arg="$parameters.sku.family">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.sku.name"/>
                    <prop type="string" name="tier" arg="$parameters.sku.tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowClassicOperations"/>
                    <prop type="string" name="authorizationKey"/>
                    <prop type="array<object>" name="authorizations">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey"/>
                          <prop type="string" name="authorizationUseStatus">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;InUse&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="float" name="bandwidthInGbps"/>
                    <prop type="string" name="circuitProvisioningState"/>
                    <prop type="@SubResource_read" name="expressRoutePort"/>
                    <prop type="string" name="gatewayManagerEtag"/>
                    <prop type="boolean" name="globalReachEnabled"/>
                    <prop type="array<object>" name="peerings">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN"/>
                          <prop type="array<object>" name="connections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authorizationKey"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                    <enum>
                                      <item value="&quot;Connected&quot;"/>
                                      <item value="&quot;Connecting&quot;"/>
                                      <item value="&quot;Disconnected&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="object" name="expressRouteConnection">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_read" name="routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="peeredConnections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authResourceGuid"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="connectionName"/>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routeFilter" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats">
                            <prop type="integer64" name="primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceKey"/>
                    <prop type="string" name="serviceProviderNotes"/>
                    <prop type="object" name="serviceProviderProperties">
                      <prop type="integer32" name="bandwidthInMbps"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop type="string" name="serviceProviderName"/>
                    </prop>
                    <prop type="string" name="serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="stag"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="family">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.allowClassicOperations" options="allow-classic-operations" group="">
          <help short="Allow classic operations."/>
        </arg>
        <arg nullable="True" type="float" var="$parameters.properties.bandwidthInGbps" options="bandwidth-in-gbps" group="">
          <help short="Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.expressRoutePort.id" options="express-route-port" group="">
          <help short="Name or ID of an ExpressRoute port."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.globalReachEnabled" options="allow-global-reach" group="">
          <help short="Enable global reach on the circuit."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceProviderProperties.peeringLocation" options="peering-location" group="">
          <help short="Name of the peering location."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceProviderProperties.serviceProviderName" options="provider" group="">
          <help short="Name of the ExpressRoute Service Provider."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.sku.family" options="sku-family" group="">
          <help short="Chosen SKU family of ExpressRoute circuit.  Allowed values: MeteredData, UnlimitedData."/>
          <enum>
            <item name="MeteredData" value="&quot;MeteredData&quot;"/>
            <item name="UnlimitedData" value="&quot;UnlimitedData&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.sku.name" options="sku-name" group="">
          <help short="The name of the SKU."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.sku.tier" options="sku-tier" group="">
          <help short="SKU Tier of ExpressRoute circuit.  Allowed values: Basic, Local, Premium, Standard."/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="Local" value="&quot;Local&quot;"/>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.authorizationKey" options="authorization-key" hide="True" group="Properties">
          <help short="The authorizationKey."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.authorizations" options="authorizations" hide="True" group="Properties">
          <help short="The list of authorizations."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$parameters.properties.authorizations[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.authorizations[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.authorizations[].properties.authorizationKey" options="authorization-key" group="Properties">
              <help short="The authorization key."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.authorizations[].properties.authorizationUseStatus" options="authorization-use-status" group="Properties">
              <help short="The authorization use status."/>
              <enum>
                <item name="Available" value="&quot;Available&quot;"/>
                <item name="InUse" value="&quot;InUse&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.circuitProvisioningState" options="circuit-provisioning-state" hide="True" group="Properties">
          <help short="The CircuitProvisioningState state of the resource."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.gatewayManagerEtag" options="gateway-manager-etag" hide="True" group="Properties">
          <help short="The GatewayManager Etag."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.peerings" options="peerings" hide="True" group="Properties">
          <help short="The list of peerings."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$parameters.properties.peerings[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.peerings[].properties.azureASN" options="azure-asn" group="Properties">
              <help short="The Azure ASN."/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.peerings[].properties.connections" options="connections" group="Properties">
              <help short="The list of circuit connections associated with Azure Private Peering for this circuit."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="ResourceId" var="$parameters.properties.peerings[].properties.connections[].id" options="id">
                  <help short="Resource ID."/>
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.connections[].name" options="name">
                  <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.connections[].properties.addressPrefix" options="address-prefix" group="Properties">
                  <help short="/29 IP address space to carve out Customer addresses for tunnels."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.connections[].properties.authorizationKey" options="authorization-key" group="Properties">
                  <help short="The authorization key."/>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="$parameters.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties">
                  <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
                </arg>
                <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig" options="ipv6-circuit-connection-config" group="Properties">
                  <help short="IPv6 Address PrefixProperties of the express route circuit connection."/>
                  <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix">
                    <help short="/125 IP address space to carve out customer addresses for global reach."/>
                  </arg>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="$parameters.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
                  <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.gatewayManagerEtag" options="gateway-manager-etag" group="Properties">
              <help short="The GatewayManager Etag."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties">
              <help short="The IPv6 peering configuration."/>
              <arg nullable="True" type="@ExpressRouteCircuitPeeringConfig_update" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig" options="microsoft-peering-config">
                <help short="The Microsoft peering configuration."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
                <help short="The primary address prefix."/>
              </arg>
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter" options="route-filter">
                <help short="The reference to the RouteFilter resource."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
                <help short="The secondary address prefix."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state" options="state">
                <help short="The state of peering."/>
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.microsoftPeeringConfig" options="microsoft-peering-config" group="Properties" cls="ExpressRouteCircuitPeeringConfig_update">
              <help short="The Microsoft peering configuration."/>
              <arg nullable="True" type="array<string>" var="@ExpressRouteCircuitPeeringConfig_update.advertisedCommunities" options="advertised-communities">
                <help short="The communities of bgp peering. Specified for microsoft peering."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="array<string>" var="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixes" options="advertised-public-prefixes">
                <help short="The reference to AdvertisedPublicPrefixes."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="integer32" var="@ExpressRouteCircuitPeeringConfig_update.customerASN" options="customer-asn">
                <help short="The CustomerASN of the peering."/>
              </arg>
              <arg nullable="True" type="integer32" var="@ExpressRouteCircuitPeeringConfig_update.legacyMode" options="legacy-mode">
                <help short="The legacy mode of the peering."/>
              </arg>
              <arg nullable="True" type="string" var="@ExpressRouteCircuitPeeringConfig_update.routingRegistryName" options="routing-registry-name">
                <help short="The RoutingRegistryName of the configuration."/>
              </arg>
            </arg>
            <arg nullable="True" type="integer64" var="$parameters.properties.peerings[].properties.peerASN" options="peer-asn" group="Properties">
              <help short="The peer ASN."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.peeringType" options="peering-type" group="Properties">
              <help short="The peering type."/>
              <enum>
                <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
                <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
                <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.primaryAzurePort" options="primary-azure-port" group="Properties">
              <help short="The primary port."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix" options="primary-peer-address-prefix" group="Properties">
              <help short="The primary address prefix."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.routeFilter" options="route-filter" group="Properties" cls="SubResource_update">
              <help short="The reference to the RouteFilter resource."/>
              <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.secondaryAzurePort" options="secondary-azure-port" group="Properties">
              <help short="The secondary port."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix" group="Properties">
              <help short="The secondary address prefix."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.sharedKey" options="shared-key" group="Properties">
              <help short="The shared key."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.peerings[].properties.state" options="state" group="Properties">
              <help short="The peering state."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.peerings[].properties.stats" options="stats" group="Properties">
              <help short="The peering stats of express route circuit."/>
              <arg nullable="True" type="integer64" var="$parameters.properties.peerings[].properties.stats.primarybytesIn" options="primarybytes-in">
                <help short="The Primary BytesIn of the peering."/>
              </arg>
              <arg nullable="True" type="integer64" var="$parameters.properties.peerings[].properties.stats.primarybytesOut" options="primarybytes-out">
                <help short="The primary BytesOut of the peering."/>
              </arg>
              <arg nullable="True" type="integer64" var="$parameters.properties.peerings[].properties.stats.secondarybytesIn" options="secondarybytes-in">
                <help short="The secondary BytesIn of the peering."/>
              </arg>
              <arg nullable="True" type="integer64" var="$parameters.properties.peerings[].properties.stats.secondarybytesOut" options="secondarybytes-out">
                <help short="The secondary BytesOut of the peering."/>
              </arg>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.peerings[].properties.vlanId" options="vlan-id" group="Properties">
              <help short="The VLAN ID."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceKey" options="service-key" hide="True" group="Properties">
          <help short="The ServiceKey."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceProviderNotes" options="service-provider-notes" hide="True" group="Properties">
          <help short="The ServiceProviderNotes."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceProviderProvisioningState" options="service-provider-provisioning-state" hide="True" group="Properties">
          <help short="The ServiceProviderProvisioningState state of the resource."/>
          <enum>
            <item name="Deprovisioning" value="&quot;Deprovisioning&quot;"/>
            <item name="NotProvisioned" value="&quot;NotProvisioned&quot;"/>
            <item name="Provisioned" value="&quot;Provisioned&quot;"/>
            <item name="Provisioning" value="&quot;Provisioning&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="ServiceProviderProperties">
        <arg nullable="True" type="integer32" var="$parameters.properties.serviceProviderProperties.bandwidthInMbps" options="bandwidth-in-mbps" group="ServiceProviderProperties">
          <help short="Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps. Values from: az network express-route list-service-providers."/>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCircuits_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}">
          <request method="get">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRouteCircuit_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowClassicOperations"/>
                    <prop type="string" name="authorizationKey"/>
                    <prop type="array<object>" name="authorizations">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey"/>
                          <prop type="string" name="authorizationUseStatus">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;InUse&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="float" name="bandwidthInGbps"/>
                    <prop type="string" name="circuitProvisioningState"/>
                    <prop type="@SubResource_read" name="expressRoutePort"/>
                    <prop type="string" name="gatewayManagerEtag"/>
                    <prop type="boolean" name="globalReachEnabled"/>
                    <prop type="array<object>" name="peerings">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN"/>
                          <prop type="array<object>" name="connections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authorizationKey"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                    <enum>
                                      <item value="&quot;Connected&quot;"/>
                                      <item value="&quot;Connecting&quot;"/>
                                      <item value="&quot;Disconnected&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="object" name="expressRouteConnection">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_read" name="routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="peeredConnections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authResourceGuid"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="connectionName"/>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routeFilter" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats">
                            <prop type="integer64" name="primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceKey"/>
                    <prop type="string" name="serviceProviderNotes"/>
                    <prop type="object" name="serviceProviderProperties">
                      <prop type="integer32" name="bandwidthInMbps"/>
                      <prop type="string" name="peeringLocation"/>
                      <prop type="string" name="serviceProviderName"/>
                    </prop>
                    <prop type="string" name="serviceProviderProvisioningState">
                      <enum>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;NotProvisioned&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="stag"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="family">
                      <enum>
                        <item value="&quot;MeteredData&quot;"/>
                        <item value="&quot;UnlimitedData&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Local&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="allowClassicOperations" arg="$parameters.properties.allowClassicOperations"/>
                <prop type="string" name="authorizationKey" arg="$parameters.properties.authorizationKey"/>
                <prop type="array<object>" name="authorizations" arg="$parameters.properties.authorizations">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$parameters.properties.authorizations[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/authorizations/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.authorizations[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="authorizationKey" arg="$parameters.properties.authorizations[].properties.authorizationKey"/>
                      <prop type="string" name="authorizationUseStatus" arg="$parameters.properties.authorizations[].properties.authorizationUseStatus">
                        <enum>
                          <item value="&quot;Available&quot;"/>
                          <item value="&quot;InUse&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="float" name="bandwidthInGbps" arg="$parameters.properties.bandwidthInGbps"/>
                <prop type="string" name="circuitProvisioningState" arg="$parameters.properties.circuitProvisioningState"/>
                <prop type="object" name="expressRoutePort">
                  <prop type="string" name="id" arg="$parameters.properties.expressRoutePort.id"/>
                </prop>
                <prop type="string" name="gatewayManagerEtag" arg="$parameters.properties.gatewayManagerEtag"/>
                <prop type="boolean" name="globalReachEnabled" arg="$parameters.properties.globalReachEnabled"/>
                <prop type="array<object>" name="peerings" arg="$parameters.properties.peerings">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$parameters.properties.peerings[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.peerings[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="integer32" name="azureASN" arg="$parameters.properties.peerings[].properties.azureASN"/>
                      <prop type="array<object>" name="connections" arg="$parameters.properties.peerings[].properties.connections">
                        <item type="object">
                          <prop type="ResourceId" name="id" arg="$parameters.properties.peerings[].properties.connections[].id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                          </prop>
                          <prop type="string" name="name" arg="$parameters.properties.peerings[].properties.connections[].name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="addressPrefix" arg="$parameters.properties.peerings[].properties.connections[].properties.addressPrefix"/>
                            <prop type="string" name="authorizationKey" arg="$parameters.properties.peerings[].properties.connections[].properties.authorizationKey"/>
                            <prop type="@SubResource_update" name="expressRouteCircuitPeering" arg="$parameters.properties.peerings[].properties.connections[].properties.expressRouteCircuitPeering"/>
                            <prop type="object" name="ipv6CircuitConnectionConfig" arg="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig">
                              <prop type="string" name="addressPrefix" arg="$parameters.properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix"/>
                            </prop>
                            <prop type="@SubResource_update" name="peerExpressRouteCircuitPeering" arg="$parameters.properties.peerings[].properties.connections[].properties.peerExpressRouteCircuitPeering"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="gatewayManagerEtag" arg="$parameters.properties.peerings[].properties.gatewayManagerEtag"/>
                      <prop type="object" name="ipv6PeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig">
                        <prop type="@ExpressRouteCircuitPeeringConfig_update" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig"/>
                        <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix"/>
                        <prop type="@SubResource_update" name="routeFilter" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.routeFilter"/>
                        <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix"/>
                        <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.ipv6PeeringConfig.state">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="microsoftPeeringConfig" arg="$parameters.properties.peerings[].properties.microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_update">
                        <prop type="array<string>" name="advertisedCommunities" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedCommunities">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="advertisedPublicPrefixes" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="integer32" name="customerASN" arg="@ExpressRouteCircuitPeeringConfig_update.customerASN"/>
                        <prop type="integer32" name="legacyMode" arg="@ExpressRouteCircuitPeeringConfig_update.legacyMode"/>
                        <prop type="string" name="routingRegistryName" arg="@ExpressRouteCircuitPeeringConfig_update.routingRegistryName"/>
                      </prop>
                      <prop type="integer64" name="peerASN" arg="$parameters.properties.peerings[].properties.peerASN">
                        <format maximum="4294967295" minimum="1"/>
                      </prop>
                      <prop type="string" name="peeringType" arg="$parameters.properties.peerings[].properties.peeringType">
                        <enum>
                          <item value="&quot;AzurePrivatePeering&quot;"/>
                          <item value="&quot;AzurePublicPeering&quot;"/>
                          <item value="&quot;MicrosoftPeering&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="primaryAzurePort" arg="$parameters.properties.peerings[].properties.primaryAzurePort"/>
                      <prop type="string" name="primaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.primaryPeerAddressPrefix"/>
                      <prop type="object" name="routeFilter" arg="$parameters.properties.peerings[].properties.routeFilter" cls="SubResource_update">
                        <prop type="string" name="id" arg="@SubResource_update.id"/>
                      </prop>
                      <prop type="string" name="secondaryAzurePort" arg="$parameters.properties.peerings[].properties.secondaryAzurePort"/>
                      <prop type="string" name="secondaryPeerAddressPrefix" arg="$parameters.properties.peerings[].properties.secondaryPeerAddressPrefix"/>
                      <prop type="string" name="sharedKey" arg="$parameters.properties.peerings[].properties.sharedKey"/>
                      <prop type="string" name="state" arg="$parameters.properties.peerings[].properties.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="stats" arg="$parameters.properties.peerings[].properties.stats">
                        <prop type="integer64" name="primarybytesIn" arg="$parameters.properties.peerings[].properties.stats.primarybytesIn"/>
                        <prop type="integer64" name="primarybytesOut" arg="$parameters.properties.peerings[].properties.stats.primarybytesOut"/>
                        <prop type="integer64" name="secondarybytesIn" arg="$parameters.properties.peerings[].properties.stats.secondarybytesIn"/>
                        <prop type="integer64" name="secondarybytesOut" arg="$parameters.properties.peerings[].properties.stats.secondarybytesOut"/>
                      </prop>
                      <prop type="integer32" name="vlanId" arg="$parameters.properties.peerings[].properties.vlanId"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="serviceKey" arg="$parameters.properties.serviceKey"/>
                <prop type="string" name="serviceProviderNotes" arg="$parameters.properties.serviceProviderNotes"/>
                <prop type="object" name="serviceProviderProperties">
                  <prop type="integer32" name="bandwidthInMbps" arg="$parameters.properties.serviceProviderProperties.bandwidthInMbps"/>
                  <prop type="string" name="peeringLocation" arg="$parameters.properties.serviceProviderProperties.peeringLocation"/>
                  <prop type="string" name="serviceProviderName" arg="$parameters.properties.serviceProviderProperties.serviceProviderName"/>
                </prop>
                <prop type="string" name="serviceProviderProvisioningState" arg="$parameters.properties.serviceProviderProvisioningState">
                  <enum>
                    <item value="&quot;Deprovisioning&quot;"/>
                    <item value="&quot;NotProvisioned&quot;"/>
                    <item value="&quot;Provisioned&quot;"/>
                    <item value="&quot;Provisioning&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="sku">
                <prop type="string" name="family" arg="$parameters.sku.family">
                  <enum>
                    <item value="&quot;MeteredData&quot;"/>
                    <item value="&quot;UnlimitedData&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="name" arg="$parameters.sku.name"/>
                <prop type="string" name="tier" arg="$parameters.sku.tier">
                  <enum>
                    <item value="&quot;Basic&quot;"/>
                    <item value="&quot;Local&quot;"/>
                    <item value="&quot;Premium&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRouteCircuits_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}">
          <request method="put">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRouteCircuit_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
