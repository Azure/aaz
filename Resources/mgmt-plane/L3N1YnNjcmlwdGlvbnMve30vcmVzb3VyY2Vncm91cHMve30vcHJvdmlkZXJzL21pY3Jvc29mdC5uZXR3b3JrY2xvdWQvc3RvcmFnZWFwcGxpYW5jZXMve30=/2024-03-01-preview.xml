<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/storageappliances/{}" version="2024-03-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3N0b3JhZ2VBcHBsaWFuY2VzL3tzdG9yYWdlQXBwbGlhbmNlTmFtZX0=/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
  <commandGroup name="networkcloud storageappliance">
    <command name="show" version="2024-03-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/storageappliances/{}" version="2024-03-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3N0b3JhZ2VBcHBsaWFuY2VzL3tzdG9yYWdlQXBwbGlhbmNlTmFtZX0=/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageApplianceName" options="storage-appliance-name name n" required="True" idPart="name">
          <help short="The name of the storage appliance."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="StorageAppliances_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageApplianceName" arg="$Path.storageApplianceName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/storageAppliances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorCredentials" required="True">
                      <prop type="string" name="password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer64" name="capacity"/>
                    <prop readOnly="True" type="integer64" name="capacityUsed"/>
                    <prop readOnly="True" type="ResourceId" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="string" name="managementIpv4Address"/>
                    <prop readOnly="True" type="string" name="manufacturer"/>
                    <prop readOnly="True" type="string" name="model"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="rackId" required="True"/>
                    <prop type="integer64" name="rackSlot" required="True">
                      <format maximum="256" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="remoteVendorManagementFeature">
                      <enum>
                        <item value="&quot;Supported&quot;"/>
                        <item value="&quot;Unsupported&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="remoteVendorManagementStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Unsupported&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="secretRotationStatus">
                      <item type="object">
                        <prop readOnly="True" type="integer64" name="expirePeriodDays"/>
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="integer64" name="rotationPeriodDays"/>
                        <prop type="object" name="secretArchiveReference">
                          <prop readOnly="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="secretName"/>
                          <prop readOnly="True" type="string" name="secretVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="secretType"/>
                      </item>
                    </prop>
                    <prop type="string" name="serialNumber" required="True"/>
                    <prop type="string" name="storageApplianceSkuId" required="True"/>
                    <prop readOnly="True" type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-03-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/storageappliances/{}" version="2024-03-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3N0b3JhZ2VBcHBsaWFuY2VzL3tzdG9yYWdlQXBwbGlhbmNlTmFtZX0=/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageApplianceName" options="storage-appliance-name name n" required="True" idPart="name">
          <help short="The name of the storage appliance."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="StorageAppliances_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageApplianceName" arg="$Path.storageApplianceName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop readOnly="True" type="string" name="resourceId"/>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2024-03-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/storageappliances/{}" version="2024-03-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3N0b3JhZ2VBcHBsaWFuY2VzL3tzdG9yYWdlQXBwbGlhbmNlTmFtZX0=/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageApplianceName" options="storage-appliance-name name n" required="True" idPart="name">
          <help short="The name of the storage appliance."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$storageApplianceParameters.properties.administratorCredentials" options="administrator-credentials" required="True" group="Properties">
          <help short="The credentials of the administrative interface on this storage appliance."/>
          <arg type="string" var="$storageApplianceParameters.properties.administratorCredentials.password" options="password" required="True">
            <help short="The password of the administrator of the device used during initialization."/>
            <format minLength="1"/>
          </arg>
          <arg type="string" var="$storageApplianceParameters.properties.administratorCredentials.username" options="username" required="True">
            <help short="The username of the administrator of the device used during initialization."/>
            <format minLength="1"/>
          </arg>
        </arg>
        <arg type="ResourceId" var="$storageApplianceParameters.properties.rackId" options="rack-id" required="True" group="Properties">
          <help short="The resource ID of the rack where this storage appliance resides."/>
        </arg>
        <arg type="integer64" var="$storageApplianceParameters.properties.rackSlot" options="rack-slot" required="True" group="Properties">
          <help short="The slot the storage appliance is in the rack based on the BOM configuration."/>
          <format maximum="256" minimum="1"/>
        </arg>
        <arg type="string" var="$storageApplianceParameters.properties.serialNumber" options="serial-number" required="True" group="Properties">
          <help short="The serial number for the storage appliance."/>
        </arg>
        <arg type="string" var="$storageApplianceParameters.properties.storageApplianceSkuId" options="storage-appliance-sku-id" required="True" group="Properties">
          <help short="The SKU for the storage appliance."/>
        </arg>
      </argGroup>
      <argGroup name="StorageApplianceParameters">
        <arg type="object" var="$storageApplianceParameters.extendedLocation" options="extended-location" required="True" group="StorageApplianceParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$storageApplianceParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$storageApplianceParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$storageApplianceParameters.location" options="location l" required="True" group="StorageApplianceParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$storageApplianceParameters.tags" options="tags" group="StorageApplianceParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="StorageAppliances_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageApplianceName" arg="$Path.storageApplianceName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="storageApplianceParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$storageApplianceParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$storageApplianceParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$storageApplianceParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$storageApplianceParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorCredentials" arg="$storageApplianceParameters.properties.administratorCredentials" required="True">
                      <prop type="string" name="password" arg="$storageApplianceParameters.properties.administratorCredentials.password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="username" arg="$storageApplianceParameters.properties.administratorCredentials.username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="rackId" arg="$storageApplianceParameters.properties.rackId" required="True"/>
                    <prop type="integer64" name="rackSlot" arg="$storageApplianceParameters.properties.rackSlot" required="True">
                      <format maximum="256" minimum="1"/>
                    </prop>
                    <prop type="string" name="serialNumber" arg="$storageApplianceParameters.properties.serialNumber" required="True"/>
                    <prop type="string" name="storageApplianceSkuId" arg="$storageApplianceParameters.properties.storageApplianceSkuId" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$storageApplianceParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/storageAppliances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorCredentials" required="True">
                      <prop type="string" name="password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer64" name="capacity"/>
                    <prop readOnly="True" type="integer64" name="capacityUsed"/>
                    <prop readOnly="True" type="ResourceId" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="string" name="managementIpv4Address"/>
                    <prop readOnly="True" type="string" name="manufacturer"/>
                    <prop readOnly="True" type="string" name="model"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="rackId" required="True"/>
                    <prop type="integer64" name="rackSlot" required="True">
                      <format maximum="256" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="remoteVendorManagementFeature">
                      <enum>
                        <item value="&quot;Supported&quot;"/>
                        <item value="&quot;Unsupported&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="remoteVendorManagementStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Unsupported&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="secretRotationStatus">
                      <item type="object">
                        <prop readOnly="True" type="integer64" name="expirePeriodDays"/>
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="integer64" name="rotationPeriodDays"/>
                        <prop type="object" name="secretArchiveReference">
                          <prop readOnly="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="secretName"/>
                          <prop readOnly="True" type="string" name="secretVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="secretType"/>
                      </item>
                    </prop>
                    <prop type="string" name="serialNumber" required="True"/>
                    <prop type="string" name="storageApplianceSkuId" required="True"/>
                    <prop readOnly="True" type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-03-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/storageappliances/{}" version="2024-03-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3N0b3JhZ2VBcHBsaWFuY2VzL3tzdG9yYWdlQXBwbGlhbmNlTmFtZX0=/V/MjAyNC0wMy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageApplianceName" options="storage-appliance-name name n" required="True" idPart="name">
          <help short="The name of the storage appliance."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$storageApplianceUpdateParameters.properties.serialNumber" options="serial-number" group="Properties">
          <help short="The serial number for the storage appliance."/>
        </arg>
      </argGroup>
      <argGroup name="StorageApplianceUpdateParameters">
        <arg type="object" var="$storageApplianceUpdateParameters.tags" options="tags" group="StorageApplianceUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="StorageAppliances_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}">
          <request method="patch">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageApplianceName" arg="$Path.storageApplianceName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="storageApplianceUpdateParameters" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="serialNumber" arg="$storageApplianceUpdateParameters.properties.serialNumber"/>
                  </prop>
                  <prop type="object" name="tags" arg="$storageApplianceUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="StorageAppliance_read">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/storageAppliances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorCredentials" required="True">
                      <prop type="string" name="password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer64" name="capacity"/>
                    <prop readOnly="True" type="integer64" name="capacityUsed"/>
                    <prop readOnly="True" type="ResourceId" name="clusterId"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="string" name="managementIpv4Address"/>
                    <prop readOnly="True" type="string" name="manufacturer"/>
                    <prop readOnly="True" type="string" name="model"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="rackId" required="True"/>
                    <prop type="integer64" name="rackSlot" required="True">
                      <format maximum="256" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="remoteVendorManagementFeature">
                      <enum>
                        <item value="&quot;Supported&quot;"/>
                        <item value="&quot;Unsupported&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="remoteVendorManagementStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Unsupported&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="secretRotationStatus">
                      <item type="object">
                        <prop readOnly="True" type="integer64" name="expirePeriodDays"/>
                        <prop readOnly="True" type="dateTime" name="lastRotationTime"/>
                        <prop readOnly="True" type="integer64" name="rotationPeriodDays"/>
                        <prop type="object" name="secretArchiveReference">
                          <prop readOnly="True" type="ResourceId" name="keyVaultId"/>
                          <prop readOnly="True" type="string" name="secretName"/>
                          <prop readOnly="True" type="string" name="secretVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="secretType"/>
                      </item>
                    </prop>
                    <prop type="string" name="serialNumber" required="True"/>
                    <prop type="string" name="storageApplianceSkuId" required="True"/>
                    <prop readOnly="True" type="string" name="version"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@StorageAppliance_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
