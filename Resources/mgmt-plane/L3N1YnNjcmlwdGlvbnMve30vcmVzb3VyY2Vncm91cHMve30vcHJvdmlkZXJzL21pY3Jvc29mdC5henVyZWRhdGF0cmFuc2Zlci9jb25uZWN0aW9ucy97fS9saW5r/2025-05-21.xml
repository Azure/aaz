<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/link" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9saW5r/V/MjAyNS0wNS0yMQ=="/>
  <commandGroup name="data-transfer connection">
    <command name="link" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/link" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9saW5r/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="connection-name name n" required="True" group="" idPart="name">
          <help short="Name of the connection for linking(Receive side)"/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Connection">
        <arg type="string" var="$connection.id" options="pending-connection-id id" required="True" group="Connection">
          <help short="ID of the Send side connection to link"/>
        </arg>
        <arg type="string" var="$connection.statusReason" options="status-reason" group="Connection">
          <help short="Reason for resource operation."/>
        </arg>
      </argGroup>
      <operation operationId="Connections_Link">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/link">
          <request method="post">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="connection" required="True" clientFlatten="True">
                  <prop type="string" name="id" arg="$connection.id" required="True"/>
                  <prop type="string" name="statusReason" arg="$connection.statusReason"/>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/connections/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="string" name="approver"/>
                    <prop readOnly="True" type="dateTime" name="dateSubmitted"/>
                    <prop type="string" name="direction">
                      <enum>
                        <item value="&quot;Receive&quot;"/>
                        <item value="&quot;Send&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="flowTypes">
                      <item type="string">
                        <enum>
                          <item value="&quot;API&quot;"/>
                          <item value="&quot;BasicFiles&quot;"/>
                          <item value="&quot;Complex&quot;"/>
                          <item value="&quot;Data&quot;"/>
                          <item value="&quot;DevSecOps&quot;"/>
                          <item value="&quot;DiskImages&quot;"/>
                          <item value="&quot;Messaging&quot;"/>
                          <item value="&quot;MicrosoftInternal&quot;"/>
                          <item value="&quot;Mission&quot;"/>
                          <item value="&quot;MissionOpaqueXML&quot;"/>
                          <item value="&quot;Opaque&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StreamingVideo&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="forceDisabledStatus">
                      <item type="string">
                        <enum>
                          <item value="&quot;ConnectionForceDisabled&quot;"/>
                          <item value="&quot;FlowTypeForceDisabled&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="justification"/>
                    <prop readOnly="True" type="string" name="linkStatus">
                      <enum>
                        <item value="&quot;Linked&quot;"/>
                        <item value="&quot;Unlinked&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="linkedConnectionId"/>
                    <prop type="string" name="pin"/>
                    <prop type="string" name="pipeline" required="True"/>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="primaryContact"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="remoteSubscriptionId"/>
                    <prop type="string" name="requirementId"/>
                    <prop type="array<string>" name="schemaUris">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="schemas">
                      <item type="object">
                        <prop type="string" name="connectionId"/>
                        <prop type="string" name="content"/>
                        <prop type="string" name="direction">
                          <enum>
                            <item value="&quot;Receive&quot;"/>
                            <item value="&quot;Send&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="id"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="schemaType">
                          <enum>
                            <item value="&quot;Xsd&quot;"/>
                            <item value="&quot;Zip&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="schemaUri"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Approved&quot;"/>
                            <item value="&quot;New&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="secondaryContacts">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Approved&quot;"/>
                        <item value="&quot;InReview&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusReason"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
