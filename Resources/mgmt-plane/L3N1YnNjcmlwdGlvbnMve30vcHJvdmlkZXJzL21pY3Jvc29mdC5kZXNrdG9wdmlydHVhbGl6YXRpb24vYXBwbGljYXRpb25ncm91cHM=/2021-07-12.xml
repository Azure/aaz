<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.desktopvirtualization/applicationgroups" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRlc2t0b3BWaXJ0dWFsaXphdGlvbi9hcHBsaWNhdGlvbkdyb3Vwcw==/V/MjAyMS0wNy0xMg=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBz/V/MjAyMS0wNy0xMg=="/>
  <commandGroup name="desktopvirtualization applicationgroup">
    <command name="list" version="2021-07-12" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.desktopvirtualization/applicationgroups" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRlc2t0b3BWaXJ0dWFsaXphdGlvbi9hcHBsaWNhdGlvbkdyb3Vwcw==/V/MjAyMS0wNy0xMg=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBz/V/MjAyMS0wNy0xMg=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="OData filter expression. Valid properties for filtering are applicationGroupType."/>
        </arg>
      </argGroup>
      <condition var="$Condition_ApplicationGroups_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_ApplicationGroups_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_ApplicationGroups_ListByResourceGroup" operationId="ApplicationGroups_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DesktopVirtualization/applicationGroups/{}"/>
                      </prop>
                      <prop type="object" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="kind">
                        <format pattern="^[-\w\._,\(\)]+$"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop type="string" name="managedBy"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="plan">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="product" required="True"/>
                        <prop type="string" name="promotionCode"/>
                        <prop type="string" name="publisher" required="True"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="string" name="applicationGroupType" required="True">
                          <enum>
                            <item value="&quot;Desktop&quot;"/>
                            <item value="&quot;RemoteApp&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="boolean" name="cloudPcResource"/>
                        <prop type="string" name="description"/>
                        <prop type="string" name="friendlyName"/>
                        <prop type="string" name="hostPoolArmPath" required="True"/>
                        <prop type="object" name="migrationRequest">
                          <prop type="string" name="migrationPath"/>
                          <prop type="string" name="operation">
                            <enum>
                              <item value="&quot;Complete&quot;"/>
                              <item value="&quot;Hide&quot;"/>
                              <item value="&quot;Revoke&quot;"/>
                              <item value="&quot;Start&quot;"/>
                              <item value="&quot;Unhide&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="objectId"/>
                        <prop readOnly="True" type="string" name="workspaceArmPath"/>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Premium&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_ApplicationGroups_ListBySubscription" operationId="ApplicationGroups_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DesktopVirtualization/applicationGroups/{}"/>
                      </prop>
                      <prop type="object" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="kind">
                        <format pattern="^[-\w\._,\(\)]+$"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop type="string" name="managedBy"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="plan">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="product" required="True"/>
                        <prop type="string" name="promotionCode"/>
                        <prop type="string" name="publisher" required="True"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="string" name="applicationGroupType" required="True">
                          <enum>
                            <item value="&quot;Desktop&quot;"/>
                            <item value="&quot;RemoteApp&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="boolean" name="cloudPcResource"/>
                        <prop type="string" name="description"/>
                        <prop type="string" name="friendlyName"/>
                        <prop type="string" name="hostPoolArmPath" required="True"/>
                        <prop type="object" name="migrationRequest">
                          <prop type="string" name="migrationPath"/>
                          <prop type="string" name="operation">
                            <enum>
                              <item value="&quot;Complete&quot;"/>
                              <item value="&quot;Hide&quot;"/>
                              <item value="&quot;Revoke&quot;"/>
                              <item value="&quot;Start&quot;"/>
                              <item value="&quot;Unhide&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="objectId"/>
                        <prop readOnly="True" type="string" name="workspaceArmPath"/>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Premium&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
