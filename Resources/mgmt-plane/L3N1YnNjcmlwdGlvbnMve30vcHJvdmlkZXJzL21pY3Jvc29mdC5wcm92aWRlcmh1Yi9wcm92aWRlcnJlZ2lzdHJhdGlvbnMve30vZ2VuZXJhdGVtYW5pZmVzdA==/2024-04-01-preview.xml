<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/generatemanifest" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2dlbmVyYXRlTWFuaWZlc3Q=/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
  <commandGroup name="providerhub manifest">
    <command name="generate" version="2024-04-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/generatemanifest" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2dlbmVyYXRlTWFuaWZlc3Q=/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GenerateManifest">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/generateManifest">
          <request method="post">
            <path>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="capabilities" identifiers="quotaId">
                    <item type="object">
                      <prop type="string" name="effect" required="True">
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Disallow&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="quotaId" required="True"/>
                      <prop type="array<string>" name="requiredFeatures">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="crossTenantTokenValidation">
                    <enum>
                      <item value="&quot;EnsureSecureValidation&quot;"/>
                      <item value="&quot;PassthroughInsecureToken&quot;"/>
                    </enum>
                  </prop>
                  <prop nullable="True" type="boolean" name="enableTenantLinkedNotification"/>
                  <prop type="object" name="featuresRule">
                    <prop type="string" name="requiredFeaturesPolicy" required="True">
                      <enum>
                        <item value="&quot;All&quot;"/>
                        <item value="&quot;Any&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="array<@ResourceProviderEndpoint_read>" name="globalNotificationEndpoints">
                    <item type="@ResourceProviderEndpoint_read"/>
                  </prop>
                  <prop type="array<object>" name="linkedNotificationRules">
                    <item type="object">
                      <prop type="array<string>" name="actions">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="dstsConfiguration">
                        <prop type="string" name="serviceDnsName"/>
                        <prop type="string" name="serviceName" required="True"/>
                      </prop>
                      <prop type="array<@ResourceProviderEndpoint_read>" name="endpoints">
                        <item type="@ResourceProviderEndpoint_read"/>
                      </prop>
                      <prop type="object" name="tokenAuthConfiguration">
                        <prop type="string" name="authenticationScheme">
                          <enum>
                            <item value="&quot;Bearer&quot;"/>
                            <item value="&quot;PoP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="disableCertificateAuthenticationFallback"/>
                        <prop type="string" name="signedRequestScope">
                          <enum>
                            <item value="&quot;Endpoint&quot;"/>
                            <item value="&quot;ResourceUri&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </item>
                  </prop>
                  <prop type="object" name="management">
                    <prop type="array<string>" name="authorizationOwners">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="canaryManifestOwners">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="errorResponseMessageOptions">
                      <prop type="string" name="serverFailureResponseMessageType">
                        <enum>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;OutageReporting&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="expeditedRolloutMetadata">
                      <prop type="boolean" name="enabled"/>
                      <prop type="string" name="expeditedRolloutIntent">
                        <enum>
                          <item value="&quot;Hotfix&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="expeditedRolloutSubmitters">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="incidentContactEmail"/>
                    <prop type="string" name="incidentRoutingService"/>
                    <prop type="string" name="incidentRoutingTeam"/>
                    <prop type="array<string>" name="manifestOwners">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="pcCode"/>
                    <prop type="string" name="profitCenterProgramId"/>
                    <prop type="string" name="resourceAccessPolicy">
                      <enum>
                        <item value="&quot;AcisActionAllowed&quot;"/>
                        <item value="&quot;AcisReadAllowed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="resourceAccessRoles">
                      <item type="object">
                        <prop type="array<string>" name="actions">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="allowedGroupClaims">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="schemaOwners">
                      <item type="string"/>
                    </prop>
                    <prop type="array<@ServiceTreeInfo_read>" name="serviceTreeInfos">
                      <item type="@ServiceTreeInfo_read"/>
                    </prop>
                  </prop>
                  <prop type="object" name="metadata">
                    <additionalProp anyType="True"/>
                  </prop>
                  <prop type="string" name="namespace"/>
                  <prop type="@Notifications_read" name="notifications"/>
                  <prop type="object" name="providerAuthentication">
                    <prop type="array<string>" name="allowedAudiences" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="array<object>" name="providerAuthorizations">
                    <item type="object">
                      <prop type="array<object>" name="allowedThirdPartyExtensions" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="string" name="applicationId"/>
                      <prop type="string" name="groupingTag"/>
                      <prop type="object" name="managedByAuthorization">
                        <prop type="array<object>" name="additionalAuthorizations" identifiers="roleDefinitionId applicationId">
                          <item type="object">
                            <prop type="string" name="applicationId"/>
                            <prop type="string" name="roleDefinitionId"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="allowManagedByInheritance"/>
                        <prop type="string" name="managedByResourceRoleDefinitionId"/>
                      </prop>
                      <prop type="string" name="managedByRoleDefinitionId"/>
                      <prop type="string" name="roleDefinitionId"/>
                    </item>
                  </prop>
                  <prop type="string" name="providerType">
                    <enum>
                      <item value="&quot;AuthorizationFree&quot;"/>
                      <item value="&quot;External&quot;"/>
                      <item value="&quot;Hidden&quot;"/>
                      <item value="&quot;Internal&quot;"/>
                      <item value="&quot;LegacyRegistrationRequired&quot;"/>
                      <item value="&quot;NotSpecified&quot;"/>
                      <item value="&quot;RegistrationFree&quot;"/>
                      <item value="&quot;TenantOnly&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="providerVersion"/>
                  <prop type="object" name="reRegisterSubscriptionMetadata">
                    <prop type="integer32" name="concurrencyLimit"/>
                    <prop type="boolean" name="enabled" required="True"/>
                  </prop>
                  <prop type="object" name="requestHeaderOptions">
                    <prop type="string" name="optInHeaders">
                      <enum>
                        <item value="&quot;ClientGroupMembership&quot;"/>
                        <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                        <item value="&quot;MSIResourceIdEncoded&quot;"/>
                        <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PrivateLinkId&quot;"/>
                        <item value="&quot;PrivateLinkResourceId&quot;"/>
                        <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                        <item value="&quot;ResourceGroupLocation&quot;"/>
                        <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                        <item value="&quot;SignedUserToken&quot;"/>
                        <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="optOutHeaders">
                      <enum>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="array<string>" name="requiredFeatures">
                    <item type="string"/>
                  </prop>
                  <prop type="@ResourceProviderAuthorizationRules_read" name="resourceProviderAuthorizationRules"/>
                  <prop type="array<object>" name="resourceTypes" identifiers="name">
                    <item type="object">
                      <prop type="string" name="additionalOptions">
                        <enum>
                          <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                          <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="allowedUnauthorizedActions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="authorizationActionMappings" identifiers="original">
                        <item type="object">
                          <prop type="string" name="desired"/>
                          <prop type="string" name="original"/>
                        </item>
                      </prop>
                      <prop type="string" name="crossTenantTokenValidation">
                        <enum>
                          <item value="&quot;EnsureSecureValidation&quot;"/>
                          <item value="&quot;PassthroughInsecureToken&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="defaultApiVersion"/>
                      <prop type="array<string>" name="disallowedActionVerbs">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="endpoints">
                        <item type="object" cls="ResourceProviderEndpoint_read">
                          <prop type="array<string>" name="apiVersions">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="endpointType">
                            <enum>
                              <item value="&quot;Canary&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Production&quot;"/>
                              <item value="&quot;TestInProduction&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="endpointUri"/>
                          <prop type="object" name="featuresRule">
                            <prop type="string" name="requiredFeaturesPolicy" required="True">
                              <enum>
                                <item value="&quot;All&quot;"/>
                                <item value="&quot;Any&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="array<string>" name="locations">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="requiredFeatures">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="skuLink"/>
                          <prop type="duration" name="timeout"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="extendedLocations">
                        <item type="object">
                          <prop type="string" name="supportedPolicy"/>
                          <prop type="string" name="type"/>
                        </item>
                      </prop>
                      <prop type="object" name="featuresRule">
                        <prop type="string" name="requiredFeaturesPolicy" required="True">
                          <enum>
                            <item value="&quot;All&quot;"/>
                            <item value="&quot;Any&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="identityManagement">
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;Actor&quot;"/>
                            <item value="&quot;DelegatedResourceIdentity&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="linkedAccessChecks">
                        <item type="object">
                          <prop type="string" name="actionName"/>
                          <prop type="string" name="linkedAction"/>
                          <prop type="string" name="linkedActionVerb"/>
                          <prop type="string" name="linkedProperty"/>
                          <prop type="string" name="linkedType"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="linkedNotificationRules">
                        <item type="object">
                          <prop type="array<string>" name="actions">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="actionsOnFailedOperation">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="fastPathActions">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="fastPathActionsOnFailedOperation">
                            <item type="string"/>
                          </prop>
                          <prop type="duration" name="linkedNotificationTimeout"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="linkedOperationRules">
                        <item type="object">
                          <prop type="array<string>" name="dependsOnTypes">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="linkedAction" required="True">
                            <enum>
                              <item value="&quot;Blocked&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Validate&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="linkedOperation" required="True">
                            <enum>
                              <item value="&quot;CrossResourceGroupResourceMove&quot;"/>
                              <item value="&quot;CrossSubscriptionResourceMove&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="loggingRules">
                        <item type="object">
                          <prop type="string" name="action" required="True"/>
                          <prop type="string" name="detailLevel" required="True">
                            <enum>
                              <item value="&quot;Body&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="direction" required="True">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;Request&quot;"/>
                              <item value="&quot;Response&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="hiddenPropertyPaths">
                            <prop type="array<string>" name="hiddenPathsOnRequest">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="hiddenPathsOnResponse">
                              <item type="string"/>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="marketplaceType">
                        <enum>
                          <item value="&quot;AddOn&quot;"/>
                          <item value="&quot;Bypass&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;Store&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="metadata">
                        <additionalProp anyType="True"/>
                      </prop>
                      <prop type="string" name="name"/>
                      <prop type="array<object>" name="notifications" cls="Notifications_read">
                        <item type="object">
                          <prop type="string" name="notificationType">
                            <enum>
                              <item value="&quot;SubscriptionNotification&quot;"/>
                              <item value="&quot;Unspecified&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="skipNotifications">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;Unspecified&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="quotaRule">
                        <prop type="array<object>" name="locationRules">
                          <item type="object">
                            <prop type="string" name="location"/>
                            <prop type="string" name="policy">
                              <enum>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;Restricted&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="quotaId"/>
                          </item>
                        </prop>
                        <prop type="string" name="quotaPolicy">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;Restricted&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="requestHeaderOptions">
                        <prop type="string" name="optInHeaders">
                          <enum>
                            <item value="&quot;ClientGroupMembership&quot;"/>
                            <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                            <item value="&quot;MSIResourceIdEncoded&quot;"/>
                            <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;PrivateLinkId&quot;"/>
                            <item value="&quot;PrivateLinkResourceId&quot;"/>
                            <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                            <item value="&quot;ResourceGroupLocation&quot;"/>
                            <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                            <item value="&quot;SignedUserToken&quot;"/>
                            <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="optOutHeaders">
                          <enum>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="requiredFeatures">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="resourceDeletionPolicy">
                        <enum>
                          <item value="&quot;Cascade&quot;"/>
                          <item value="&quot;Force&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="resourceProviderAuthorizationRules" cls="ResourceProviderAuthorizationRules_read">
                        <prop type="object" name="asyncOperationPollingRules">
                          <prop type="string" name="additionalOptions">
                            <enum>
                              <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                              <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="authorizationActions">
                            <item type="string"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="resourceValidation">
                        <enum>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;ProfaneWords&quot;"/>
                          <item value="&quot;ReservedWords&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="routingType">
                        <enum>
                          <item value="&quot;CascadeExtension&quot;"/>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Extension&quot;"/>
                          <item value="&quot;Failover&quot;"/>
                          <item value="&quot;Fanout&quot;"/>
                          <item value="&quot;HostBased&quot;"/>
                          <item value="&quot;LocationBased&quot;"/>
                          <item value="&quot;ProxyOnly&quot;"/>
                          <item value="&quot;Tenant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="serviceTreeInfos">
                        <item type="object" cls="ServiceTreeInfo_read">
                          <prop type="string" name="componentId"/>
                          <prop type="string" name="readiness">
                            <enum>
                              <item value="&quot;ClosingDown&quot;"/>
                              <item value="&quot;Deprecated&quot;"/>
                              <item value="&quot;GA&quot;"/>
                              <item value="&quot;InDevelopment&quot;"/>
                              <item value="&quot;InternalOnly&quot;"/>
                              <item value="&quot;PrivatePreview&quot;"/>
                              <item value="&quot;PublicPreview&quot;"/>
                              <item value="&quot;RemovedFromARM&quot;"/>
                              <item value="&quot;Retired&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="serviceId"/>
                        </item>
                      </prop>
                      <prop type="string" name="skuLink"/>
                      <prop type="array<object>" name="subscriptionStateRules">
                        <item type="object">
                          <prop type="array<string>" name="allowedActions">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;NotDefined&quot;"/>
                              <item value="&quot;PastDue&quot;"/>
                              <item value="&quot;Warned&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="templateDeploymentPolicy">
                        <prop type="string" name="capabilities" required="True">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;Preflight&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="preflightNotifications">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;UnregisteredSubscriptions&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="preflightOptions" required="True">
                          <enum>
                            <item value="&quot;DeploymentRequests&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;RegisteredOnly&quot;"/>
                            <item value="&quot;TestOnly&quot;"/>
                            <item value="&quot;ValidationRequests&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="throttlingRules">
                        <item type="object">
                          <prop type="string" name="action" required="True"/>
                          <prop type="array<string>" name="applicationId">
                            <item type="string"/>
                          </prop>
                          <prop type="array<object>" name="metrics" required="True">
                            <item type="object">
                              <prop type="duration" name="interval"/>
                              <prop type="integer64" name="limit" required="True"/>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;NotSpecified&quot;"/>
                                  <item value="&quot;NumberOfRequests&quot;"/>
                                  <item value="&quot;NumberOfResources&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<string>" name="requiredFeatures">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="serviceName"/>
                  <prop type="array<object>" name="services">
                    <item type="object">
                      <prop type="string" name="serviceName"/>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Inactive&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
