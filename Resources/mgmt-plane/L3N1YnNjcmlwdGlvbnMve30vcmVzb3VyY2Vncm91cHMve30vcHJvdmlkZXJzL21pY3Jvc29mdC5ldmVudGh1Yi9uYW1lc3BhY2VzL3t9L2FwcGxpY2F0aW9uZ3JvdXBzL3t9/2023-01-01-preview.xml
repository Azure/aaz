<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/applicationgroups/{}" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vYXBwbGljYXRpb25Hcm91cHMve2FwcGxpY2F0aW9uR3JvdXBOYW1lfQ==/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
  <commandGroup name="eventhubs namespace application-group">
    <command name="show" version="2023-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/applicationgroups/{}" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vYXBwbGljYXRpb25Hcm91cHMve2FwcGxpY2F0aW9uR3JvdXBOYW1lfQ==/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="application-group-name name n" required="True" idPart="child_name_1">
          <help short="The Application Group name "/>
          <format maxLength="256" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ApplicationGroup_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}">
          <request method="get">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="256" minLength="1"/>
              </param>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/applicationGroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="clientAppGroupIdentifier" required="True"/>
                    <prop type="boolean" name="isEnabled"/>
                    <prop type="array<object>" name="policies">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;ThrottlingPolicy&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ThrottlingPolicy">
                          <prop type="string" name="metricId" required="True">
                            <enum>
                              <item value="&quot;IncomingBytes&quot;"/>
                              <item value="&quot;IncomingMessages&quot;"/>
                              <item value="&quot;OutgoingBytes&quot;"/>
                              <item value="&quot;OutgoingMessages&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="rateLimitThreshold" required="True"/>
                        </discriminator>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-01-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/applicationgroups/{}" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vYXBwbGljYXRpb25Hcm91cHMve2FwcGxpY2F0aW9uR3JvdXBOYW1lfQ==/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="application-group-name name n" required="True" idPart="child_name_1">
          <help short="The Application Group name "/>
          <format maxLength="256" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ApplicationGroup_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}">
          <request method="delete">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="256" minLength="1"/>
              </param>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/applicationgroups/{}" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vYXBwbGljYXRpb25Hcm91cHMve2FwcGxpY2F0aW9uR3JvdXBOYW1lfQ==/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="application-group-name name n" required="True" idPart="child_name_1">
          <help short="The Application Group name "/>
          <format maxLength="256" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.clientAppGroupIdentifier" options="client-app-group-identifier client-app-group-id" group="Properties">
          <help short="The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"/>
        </arg>
        <arg type="boolean" var="$parameters.properties.isEnabled" options="is-enabled" group="Properties">
          <help short="Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.policies" options="policies" group="Properties">
          <help short="List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."/>
          <item type="object">
            <arg type="object" var="$parameters.properties.policies[].ThrottlingPolicy" options="throttling-policy">
              <arg type="string" var="$parameters.properties.policies[].ThrottlingPolicy.metricId" options="metric-id" required="True">
                <help short="Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal"/>
                <enum>
                  <item name="IncomingBytes" value="&quot;IncomingBytes&quot;"/>
                  <item name="IncomingMessages" value="&quot;IncomingMessages&quot;"/>
                  <item name="OutgoingBytes" value="&quot;OutgoingBytes&quot;"/>
                  <item name="OutgoingMessages" value="&quot;OutgoingMessages&quot;"/>
                </enum>
              </arg>
              <arg type="integer64" var="$parameters.properties.policies[].ThrottlingPolicy.rateLimitThreshold" options="rate-limit-threshold" required="True">
                <help short="The Threshold limit above which the application group will be throttled.Rate limit is always per second."/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.policies[].name" options="name" required="True">
              <help short="The Name of this policy"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ApplicationGroup_CreateOrUpdateApplicationGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}">
          <request method="put">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="256" minLength="1"/>
              </param>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="clientAppGroupIdentifier" arg="$parameters.properties.clientAppGroupIdentifier" required="True"/>
                    <prop type="boolean" name="isEnabled" arg="$parameters.properties.isEnabled"/>
                    <prop type="array<object>" name="policies" arg="$parameters.properties.policies">
                      <item type="object">
                        <prop type="string" name="name" arg="$parameters.properties.policies[].name" required="True"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item arg="$parameters.properties.policies[].ThrottlingPolicy" value="&quot;ThrottlingPolicy&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ThrottlingPolicy">
                          <prop type="string" name="metricId" arg="$parameters.properties.policies[].ThrottlingPolicy.metricId" required="True">
                            <enum>
                              <item value="&quot;IncomingBytes&quot;"/>
                              <item value="&quot;IncomingMessages&quot;"/>
                              <item value="&quot;OutgoingBytes&quot;"/>
                              <item value="&quot;OutgoingMessages&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="rateLimitThreshold" arg="$parameters.properties.policies[].ThrottlingPolicy.rateLimitThreshold" required="True"/>
                        </discriminator>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/applicationGroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="clientAppGroupIdentifier" required="True"/>
                    <prop type="boolean" name="isEnabled"/>
                    <prop type="array<object>" name="policies">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;ThrottlingPolicy&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ThrottlingPolicy">
                          <prop type="string" name="metricId" required="True">
                            <enum>
                              <item value="&quot;IncomingBytes&quot;"/>
                              <item value="&quot;IncomingMessages&quot;"/>
                              <item value="&quot;OutgoingBytes&quot;"/>
                              <item value="&quot;OutgoingMessages&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="rateLimitThreshold" required="True"/>
                        </discriminator>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/applicationgroups/{}" version="2023-01-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vYXBwbGljYXRpb25Hcm91cHMve2FwcGxpY2F0aW9uR3JvdXBOYW1lfQ==/V/MjAyMy0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="application-group-name name n" required="True" idPart="child_name_1">
          <help short="The Application Group name "/>
          <format maxLength="256" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.clientAppGroupIdentifier" options="client-app-group-identifier client-app-group-id" hide="True" group="Properties">
          <help short="The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.isEnabled" options="is-enabled" group="Properties">
          <help short="Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.policies" options="policies" group="Properties">
          <help short="List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."/>
          <item nullable="True" type="object">
            <arg type="object" var="$parameters.properties.policies[].ThrottlingPolicy" options="throttling-policy">
              <arg type="string" var="$parameters.properties.policies[].ThrottlingPolicy.metricId" options="metric-id">
                <help short="Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal"/>
                <enum>
                  <item name="IncomingBytes" value="&quot;IncomingBytes&quot;"/>
                  <item name="IncomingMessages" value="&quot;IncomingMessages&quot;"/>
                  <item name="OutgoingBytes" value="&quot;OutgoingBytes&quot;"/>
                  <item name="OutgoingMessages" value="&quot;OutgoingMessages&quot;"/>
                </enum>
              </arg>
              <arg type="integer64" var="$parameters.properties.policies[].ThrottlingPolicy.rateLimitThreshold" options="rate-limit-threshold">
                <help short="The Threshold limit above which the application group will be throttled.Rate limit is always per second."/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.policies[].name" options="name">
              <help short="The Name of this policy"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ApplicationGroup_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}">
          <request method="get">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="256" minLength="1"/>
              </param>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ApplicationGroup_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/applicationGroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="clientAppGroupIdentifier" required="True"/>
                    <prop type="boolean" name="isEnabled"/>
                    <prop type="array<object>" name="policies">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;ThrottlingPolicy&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ThrottlingPolicy">
                          <prop type="string" name="metricId" required="True">
                            <enum>
                              <item value="&quot;IncomingBytes&quot;"/>
                              <item value="&quot;IncomingMessages&quot;"/>
                              <item value="&quot;OutgoingBytes&quot;"/>
                              <item value="&quot;OutgoingMessages&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="rateLimitThreshold" required="True"/>
                        </discriminator>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="clientAppGroupIdentifier" arg="$parameters.properties.clientAppGroupIdentifier" required="True"/>
                <prop type="boolean" name="isEnabled" arg="$parameters.properties.isEnabled"/>
                <prop type="array<object>" name="policies" arg="$parameters.properties.policies">
                  <item type="object">
                    <prop type="string" name="name" arg="$parameters.properties.policies[].name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item arg="$parameters.properties.policies[].ThrottlingPolicy" value="&quot;ThrottlingPolicy&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="type" value="ThrottlingPolicy">
                      <prop type="string" name="metricId" arg="$parameters.properties.policies[].ThrottlingPolicy.metricId" required="True">
                        <enum>
                          <item value="&quot;IncomingBytes&quot;"/>
                          <item value="&quot;IncomingMessages&quot;"/>
                          <item value="&quot;OutgoingBytes&quot;"/>
                          <item value="&quot;OutgoingMessages&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer64" name="rateLimitThreshold" arg="$parameters.properties.policies[].ThrottlingPolicy.rateLimitThreshold" required="True"/>
                    </discriminator>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ApplicationGroup_CreateOrUpdateApplicationGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}">
          <request method="put">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="256" minLength="1"/>
              </param>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@ApplicationGroup_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
