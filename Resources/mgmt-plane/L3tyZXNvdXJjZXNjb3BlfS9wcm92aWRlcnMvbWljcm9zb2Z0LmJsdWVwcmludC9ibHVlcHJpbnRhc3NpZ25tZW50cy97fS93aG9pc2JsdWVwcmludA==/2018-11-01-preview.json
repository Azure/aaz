{"plane": "mgmt-plane", "resources": [{"id": "/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}/whoisblueprint", "version": "2018-11-01-preview", "swagger": "mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9L3dob0lzQmx1ZXByaW50/V/MjAxOC0xMS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "blueprint assignment", "commands": [{"name": "who", "version": "2018-11-01-preview", "resources": [{"id": "/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}/whoisblueprint", "version": "2018-11-01-preview", "swagger": "mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9L3dob0lzQmx1ZXByaW50/V/MjAxOC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.assignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "Name of the blueprint assignment."}}, {"type": "string", "var": "$Path.resourceScope", "options": ["resource-scope"], "required": true, "help": {"short": "The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."}}]}], "operations": [{"operationId": "Assignments_WhoIsBlueprint", "http": {"path": "/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}/whoIsBlueprint", "request": {"method": "post", "path": {"params": [{"type": "string", "name": "assignmentName", "arg": "$Path.assignmentName", "required": true}, {"type": "string", "name": "resourceScope", "arg": "$Path.resourceScope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-11-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "objectId"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}