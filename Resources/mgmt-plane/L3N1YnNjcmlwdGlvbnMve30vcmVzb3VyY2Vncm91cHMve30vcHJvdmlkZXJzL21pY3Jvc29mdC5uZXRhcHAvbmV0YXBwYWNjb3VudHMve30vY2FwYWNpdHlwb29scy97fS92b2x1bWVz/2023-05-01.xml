<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXM=/V/MjAyMy0wNS0wMQ=="/>
  <commandGroup name="netappfiles volume">
    <command name="list" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes" version="2023-05-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXM=/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
          <help short="The name of the capacity pool"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Volumes_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="poolName" arg="$Path.poolName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                        <prop type="string" name="avsDataStore">
                          <default value="&quot;Disabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="string" name="backupId"/>
                        <prop readOnly="True" type="string" name="baremetalTenantId"/>
                        <prop type="string" name="capacityPoolResourceId"/>
                        <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                        <prop type="boolean" name="coolAccess">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="coolAccessRetrievalPolicy">
                          <enum>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;Never&quot;"/>
                            <item value="&quot;OnRead&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="coolnessPeriod">
                          <format maximum="63" minimum="7"/>
                        </prop>
                        <prop type="string" name="creationToken" required="True">
                          <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                        </prop>
                        <prop type="object" name="dataProtection">
                          <prop type="object" name="replication">
                            <prop type="string" name="endpointType">
                              <enum>
                                <item value="&quot;dst&quot;"/>
                                <item value="&quot;src&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="remoteVolumeRegion"/>
                            <prop type="string" name="remoteVolumeResourceId" required="True"/>
                            <prop readOnly="True" type="string" name="replicationId"/>
                            <prop type="string" name="replicationSchedule">
                              <enum>
                                <item value="&quot;_10minutely&quot;"/>
                                <item value="&quot;daily&quot;"/>
                                <item value="&quot;hourly&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="snapshot">
                            <prop type="string" name="snapshotPolicyId"/>
                          </prop>
                          <prop type="object" name="volumeRelocation">
                            <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                            <prop type="boolean" name="relocationRequested"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                          <item type="string"/>
                        </prop>
                        <prop type="integer64" name="defaultGroupQuotaInKiBs">
                          <default value="0"/>
                        </prop>
                        <prop type="integer64" name="defaultUserQuotaInKiBs">
                          <default value="0"/>
                        </prop>
                        <prop type="boolean" name="deleteBaseSnapshot"/>
                        <prop type="string" name="enableSubvolumes">
                          <default value="&quot;Disabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="boolean" name="encrypted"/>
                        <prop type="string" name="encryptionKeySource">
                          <default value="&quot;Microsoft.NetApp&quot;"/>
                          <enum>
                            <item value="&quot;Microsoft.KeyVault&quot;"/>
                            <item value="&quot;Microsoft.NetApp&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="exportPolicy">
                          <prop type="array<object>" name="rules" identifiers="ruleIndex">
                            <item type="object">
                              <prop type="string" name="allowedClients"/>
                              <prop type="string" name="chownMode">
                                <default value="&quot;Restricted&quot;"/>
                                <enum>
                                  <item value="&quot;Restricted&quot;"/>
                                  <item value="&quot;Unrestricted&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="cifs"/>
                              <prop type="boolean" name="hasRootAccess">
                                <default value="true"/>
                              </prop>
                              <prop type="boolean" name="kerberos5ReadOnly">
                                <default value="false"/>
                              </prop>
                              <prop type="boolean" name="kerberos5ReadWrite">
                                <default value="false"/>
                              </prop>
                              <prop type="boolean" name="kerberos5iReadOnly">
                                <default value="false"/>
                              </prop>
                              <prop type="boolean" name="kerberos5iReadWrite">
                                <default value="false"/>
                              </prop>
                              <prop type="boolean" name="kerberos5pReadOnly">
                                <default value="false"/>
                              </prop>
                              <prop type="boolean" name="kerberos5pReadWrite">
                                <default value="false"/>
                              </prop>
                              <prop type="boolean" name="nfsv3"/>
                              <prop type="boolean" name="nfsv41"/>
                              <prop type="integer32" name="ruleIndex"/>
                              <prop type="boolean" name="unixReadOnly"/>
                              <prop type="boolean" name="unixReadWrite"/>
                            </item>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="fileAccessLogs">
                          <default value="&quot;Disabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="fileSystemId">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop type="boolean" name="isDefaultQuotaEnabled">
                          <default value="false"/>
                        </prop>
                        <prop type="boolean" name="isLargeVolume">
                          <default value="false"/>
                        </prop>
                        <prop type="boolean" name="isRestoring"/>
                        <prop type="boolean" name="kerberosEnabled">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                        <prop type="boolean" name="ldapEnabled">
                          <default value="false"/>
                        </prop>
                        <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                        <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                          <item type="object">
                            <prop type="string" name="fileSystemId" required="True">
                              <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                            </prop>
                            <prop readOnly="True" type="string" name="ipAddress"/>
                            <prop readOnly="True" type="string" name="mountTargetId">
                              <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                            </prop>
                            <prop type="string" name="smbServerFqdn"/>
                          </item>
                        </prop>
                        <prop type="string" name="networkFeatures">
                          <default value="&quot;Basic&quot;"/>
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Basic_Standard&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;Standard_Basic&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="networkSiblingSetId">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                        <prop type="array<object>" name="placementRules" identifiers="key">
                          <item type="object">
                            <prop type="string" name="key" required="True"/>
                            <prop type="string" name="value" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="protocolTypes">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="string" name="proximityPlacementGroup"/>
                        <prop type="string" name="securityStyle">
                          <default value="&quot;unix&quot;"/>
                          <enum>
                            <item value="&quot;ntfs&quot;"/>
                            <item value="&quot;unix&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="serviceLevel">
                          <default value="&quot;Premium&quot;"/>
                          <enum>
                            <item value="&quot;Premium&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                            <item value="&quot;StandardZRS&quot;"/>
                            <item value="&quot;Ultra&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="smbContinuouslyAvailable">
                          <default value="false"/>
                        </prop>
                        <prop type="boolean" name="smbEncryption">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="smbNonBrowsable">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="snapshotDirectoryVisible">
                          <default value="true"/>
                        </prop>
                        <prop nullable="True" type="string" name="snapshotId"/>
                        <prop readOnly="True" type="string" name="storageToNetworkProximity">
                          <enum>
                            <item value="&quot;AcrossT2&quot;"/>
                            <item value="&quot;Default&quot;"/>
                            <item value="&quot;T1&quot;"/>
                            <item value="&quot;T2&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subnetId" required="True"/>
                        <prop readOnly="True" type="string" name="t2Network"/>
                        <prop nullable="True" type="float" name="throughputMibps"/>
                        <prop nullable="True" type="string" name="unixPermissions">
                          <format maxLength="4" minLength="4"/>
                        </prop>
                        <prop type="integer64" name="usageThreshold" required="True">
                          <default value="107374182400"/>
                          <format maximum="2638827906662400" minimum="107374182400"/>
                        </prop>
                        <prop readOnly="True" type="string" name="volumeGroupName"/>
                        <prop type="string" name="volumeSpecName"/>
                        <prop type="string" name="volumeType"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                      <prop type="array<string>" name="zones">
                        <item type="string">
                          <format maxLength="255" minLength="1"/>
                        </item>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
