<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.insights/diagnosticsettings/{}" version="2017-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2RpYWdub3N0aWNTZXR0aW5ncy97bmFtZX0=/V/MjAxNy0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="monitor diagnostic-settings subscription">
    <command name="show" version="2017-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.insights/diagnosticsettings/{}" version="2017-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2RpYWdub3N0aWNTZXR0aW5ncy97bmFtZX0=/V/MjAxNy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the diagnostic setting."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SubscriptionDiagnosticSettings_Get">
        <http path="/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/microsoft.insights/diagnosticSettings/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName"/>
                    <prop type="array<object>" name="logs">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="boolean" name="enabled" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                    <prop type="string" name="workspaceId"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2017-05-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/providers/microsoft.insights/diagnosticsettings/{}" version="2017-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2RpYWdub3N0aWNTZXR0aW5ncy97bmFtZX0=/V/MjAxNy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the diagnostic setting."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SubscriptionDiagnosticSettings_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}">
          <request method="delete">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2017-05-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.insights/diagnosticsettings/{}" version="2017-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2RpYWdub3N0aWNTZXR0aW5ncy97bmFtZX0=/V/MjAxNy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the diagnostic setting."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location of the resource"/>
        </arg>
        <arg type="string" var="$parameters.properties.eventHubAuthorizationRuleId" options="event-hub-auth-rule" group="">
          <help short="The resource Id for the event hub authorization rule."/>
        </arg>
        <arg type="string" var="$parameters.properties.eventHubName" options="event-hub-name" group="">
          <help short="The name of the event hub. If none is specified, the default event hub will be selected."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.logs" options="logs" group="">
          <help short="JSON encoded list of logs settings. Use '@{file}' to load from a file."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.logs[].category" options="category">
              <help short="Name of a Subscription Diagnostic Log category for a resource type this setting is applied to."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.logs[].enabled" options="enabled" required="True">
              <help short="a value indicating whether this log is enabled."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.serviceBusRuleId" options="service-bus-rule" group="">
          <help short="The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format '{service bus resourceID}/authorizationrules/{key name}'."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageAccountId" options="storage-account" group="">
          <help short="The resource id of the storage account to which you would like to send the Activity Log."/>
        </arg>
        <arg type="string" var="$parameters.properties.workspaceId" options="workspace" group="">
          <help short="The resource id of the log analytics workspace."/>
        </arg>
      </argGroup>
      <operation operationId="SubscriptionDiagnosticSettings_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId" arg="$parameters.properties.eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName" arg="$parameters.properties.eventHubName"/>
                    <prop type="array<object>" name="logs" arg="$parameters.properties.logs">
                      <item type="object">
                        <prop type="string" name="category" arg="$parameters.properties.logs[].category"/>
                        <prop type="boolean" name="enabled" arg="$parameters.properties.logs[].enabled" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId" arg="$parameters.properties.serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId" arg="$parameters.properties.storageAccountId"/>
                    <prop type="string" name="workspaceId" arg="$parameters.properties.workspaceId"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/microsoft.insights/diagnosticSettings/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName"/>
                    <prop type="array<object>" name="logs">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="boolean" name="enabled" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                    <prop type="string" name="workspaceId"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2017-05-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.insights/diagnosticsettings/{}" version="2017-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvbWljcm9zb2Z0Lmluc2lnaHRzL2RpYWdub3N0aWNTZXR0aW5ncy97bmFtZX0=/V/MjAxNy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the diagnostic setting."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location of the resource"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.eventHubAuthorizationRuleId" options="event-hub-auth-rule" group="">
          <help short="The resource Id for the event hub authorization rule."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.eventHubName" options="event-hub-name" group="">
          <help short="The name of the event hub. If none is specified, the default event hub will be selected."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.logs" options="logs" group="">
          <help short="JSON encoded list of logs settings. Use '@{file}' to load from a file."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.logs[].category" options="category">
              <help short="Name of a Subscription Diagnostic Log category for a resource type this setting is applied to."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.logs[].enabled" options="enabled">
              <help short="a value indicating whether this log is enabled."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceBusRuleId" options="service-bus-rule" group="">
          <help short="The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format '{service bus resourceID}/authorizationrules/{key name}'."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.storageAccountId" options="storage-account" group="">
          <help short="The resource id of the storage account to which you would like to send the Activity Log."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.workspaceId" options="workspace" group="">
          <help short="The resource id of the log analytics workspace."/>
        </arg>
      </argGroup>
      <operation operationId="SubscriptionDiagnosticSettings_Get">
        <http path="/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SubscriptionDiagnosticSettingsResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/microsoft.insights/diagnosticSettings/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName"/>
                    <prop type="array<object>" name="logs">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="boolean" name="enabled" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                    <prop type="string" name="workspaceId"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="eventHubAuthorizationRuleId" arg="$parameters.properties.eventHubAuthorizationRuleId"/>
                <prop type="string" name="eventHubName" arg="$parameters.properties.eventHubName"/>
                <prop type="array<object>" name="logs" arg="$parameters.properties.logs">
                  <item type="object">
                    <prop type="string" name="category" arg="$parameters.properties.logs[].category"/>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.logs[].enabled" required="True"/>
                  </item>
                </prop>
                <prop type="string" name="serviceBusRuleId" arg="$parameters.properties.serviceBusRuleId"/>
                <prop type="string" name="storageAccountId" arg="$parameters.properties.storageAccountId"/>
                <prop type="string" name="workspaceId" arg="$parameters.properties.workspaceId"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="SubscriptionDiagnosticSettings_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@SubscriptionDiagnosticSettingsResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
