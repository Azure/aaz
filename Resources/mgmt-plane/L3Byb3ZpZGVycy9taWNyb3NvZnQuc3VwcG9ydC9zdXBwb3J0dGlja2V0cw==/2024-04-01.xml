<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/providers/microsoft.support/supporttickets" version="2024-04-01" swagger="mgmt-plane/support/ResourceProviders/Microsoft.Support/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3VwcG9ydC9zdXBwb3J0VGlja2V0cw==/V/MjAyNC0wNC0wMQ=="/>
  <commandGroup name="support no-subscription tickets">
    <command name="list" version="2024-04-01" confirmation="">
      <resource id="/providers/microsoft.support/supporttickets" version="2024-04-01" swagger="mgmt-plane/support/ResourceProviders/Microsoft.Support/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3VwcG9ydC9zdXBwb3J0VGlja2V0cw==/V/MjAyNC0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Query.filter" options="filter" group="">
          <help short="The filter to apply on the operation. We support 'OData v4.0' filter semantics. Status, ServiceId, and ProblemClassificationId filters can only be used with Equals ('eq') operator. For CreatedDate filter, the supported operators are Greater Than ('gt') and Greater Than or Equals ('ge'). When using both filters, combine them using the logical 'and'."/>
        </arg>
        <arg type="integer32" var="$Query.top" options="top" hide="True" group="">
          <help short="The number of values to return in the collection. Default is 10 and max is 10."/>
        </arg>
      </argGroup>
      <operation operationId="SupportTicketsNoSubscription_List">
        <http path="/providers/Microsoft.Support/supportTickets">
          <request method="get">
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="integer32" name="$top" arg="$Query.top"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="string" name="advancedDiagnosticConsent" required="True">
                          <enum>
                            <item value="&quot;No&quot;"/>
                            <item value="&quot;Yes&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="contactDetails" required="True">
                          <prop type="array<string>" name="additionalEmailAddresses">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="country" required="True"/>
                          <prop type="string" name="firstName" required="True"/>
                          <prop type="string" name="lastName" required="True"/>
                          <prop type="string" name="phoneNumber"/>
                          <prop type="string" name="preferredContactMethod" required="True">
                            <enum>
                              <item value="&quot;email&quot;"/>
                              <item value="&quot;phone&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="preferredSupportLanguage" required="True"/>
                          <prop type="string" name="preferredTimeZone" required="True"/>
                          <prop type="string" name="primaryEmailAddress" required="True"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="createdDate"/>
                        <prop type="string" name="description" required="True"/>
                        <prop type="string" name="enrollmentId"/>
                        <prop type="string" name="fileWorkspaceName"/>
                        <prop readOnly="True" type="string" name="isTemporaryTicket">
                          <enum>
                            <item value="&quot;No&quot;"/>
                            <item value="&quot;Yes&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="modifiedDate"/>
                        <prop readOnly="True" type="string" name="problemClassificationDisplayName"/>
                        <prop type="string" name="problemClassificationId" required="True"/>
                        <prop type="string" name="problemScopingQuestions"/>
                        <prop type="dateTime" name="problemStartTime"/>
                        <prop type="object" name="quotaTicketDetails">
                          <prop type="string" name="quotaChangeRequestSubType"/>
                          <prop type="string" name="quotaChangeRequestVersion"/>
                          <prop type="array<object>" name="quotaChangeRequests" identifiers="region">
                            <item type="object">
                              <prop type="string" name="payload"/>
                              <prop type="string" name="region"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="boolean" name="require24X7Response"/>
                        <prop type="array<object>" name="secondaryConsent">
                          <item type="object">
                            <prop type="string" name="type"/>
                            <prop type="string" name="userConsent">
                              <enum>
                                <item value="&quot;No&quot;"/>
                                <item value="&quot;Yes&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="serviceDisplayName"/>
                        <prop type="string" name="serviceId" required="True"/>
                        <prop type="object" name="serviceLevelAgreement">
                          <prop readOnly="True" type="dateTime" name="expirationTime"/>
                          <prop readOnly="True" type="integer32" name="slaMinutes"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                        </prop>
                        <prop type="string" name="severity" required="True">
                          <enum>
                            <item value="&quot;critical&quot;"/>
                            <item value="&quot;highestcriticalimpact&quot;"/>
                            <item value="&quot;minimal&quot;"/>
                            <item value="&quot;moderate&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="status"/>
                        <prop type="object" name="supportEngineer">
                          <prop readOnly="True" type="string" name="emailAddress"/>
                        </prop>
                        <prop readOnly="True" type="string" name="supportPlanDisplayName"/>
                        <prop type="string" name="supportPlanId"/>
                        <prop readOnly="True" type="string" name="supportPlanType"/>
                        <prop type="string" name="supportTicketId"/>
                        <prop type="object" name="technicalTicketDetails">
                          <prop type="string" name="resourceId"/>
                        </prop>
                        <prop type="string" name="title" required="True"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
