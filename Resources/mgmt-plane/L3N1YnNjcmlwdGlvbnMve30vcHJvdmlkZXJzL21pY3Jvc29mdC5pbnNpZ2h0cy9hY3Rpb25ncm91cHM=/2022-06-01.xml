<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.insights/actiongroups" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2FjdGlvbkdyb3Vwcw==/V/MjAyMi0wNi0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/actiongroups" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYWN0aW9uR3JvdXBz/V/MjAyMi0wNi0wMQ=="/>
  <commandGroup name="monitor action-group">
    <command name="list" version="2022-06-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.insights/actiongroups" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2FjdGlvbkdyb3Vwcw==/V/MjAyMi0wNi0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/actiongroups" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYWN0aW9uR3JvdXBz/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_ActionGroups_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_ActionGroups_ListBySubscriptionId">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_ActionGroups_ListByResourceGroup" operationId="ActionGroups_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/actionGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="armRoleReceivers">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="roleId" required="True"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="automationRunbookReceivers">
                          <item type="object">
                            <prop type="string" name="automationAccountId" required="True"/>
                            <prop type="boolean" name="isGlobalRunbook" required="True"/>
                            <prop type="string" name="name"/>
                            <prop type="string" name="runbookName" required="True"/>
                            <prop type="string" name="serviceUri"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                            <prop type="string" name="webhookResourceId" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="azureAppPushReceivers">
                          <item type="object">
                            <prop type="string" name="emailAddress" required="True"/>
                            <prop type="string" name="name" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="azureFunctionReceivers">
                          <item type="object">
                            <prop type="string" name="functionAppResourceId" required="True"/>
                            <prop type="string" name="functionName" required="True"/>
                            <prop type="string" name="httpTriggerUrl" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="emailReceivers">
                          <item type="object">
                            <prop type="string" name="emailAddress" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NotSpecified&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="enabled" required="True">
                          <default value="true"/>
                        </prop>
                        <prop type="array<object>" name="eventHubReceivers">
                          <item type="object">
                            <prop type="string" name="eventHubName" required="True"/>
                            <prop type="string" name="eventHubNameSpace" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="subscriptionId" required="True"/>
                            <prop type="string" name="tenantId"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="groupShortName" required="True">
                          <format maxLength="12"/>
                        </prop>
                        <prop type="array<object>" name="itsmReceivers">
                          <item type="object">
                            <prop type="string" name="connectionId" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="region" required="True"/>
                            <prop type="string" name="ticketConfiguration" required="True"/>
                            <prop type="string" name="workspaceId" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="logicAppReceivers">
                          <item type="object">
                            <prop type="string" name="callbackUrl" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="resourceId" required="True"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="smsReceivers">
                          <item type="object">
                            <prop type="string" name="countryCode" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="phoneNumber" required="True"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NotSpecified&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="voiceReceivers">
                          <item type="object">
                            <prop type="string" name="countryCode" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="phoneNumber" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="webhookReceivers">
                          <item type="object">
                            <prop type="string" name="identifierUri"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="objectId"/>
                            <prop type="string" name="serviceUri" required="True"/>
                            <prop type="string" name="tenantId"/>
                            <prop type="boolean" name="useAadAuth">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_ActionGroups_ListBySubscriptionId" operationId="ActionGroups_ListBySubscriptionId">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/actionGroups">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/actionGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="armRoleReceivers">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="roleId" required="True"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="automationRunbookReceivers">
                          <item type="object">
                            <prop type="string" name="automationAccountId" required="True"/>
                            <prop type="boolean" name="isGlobalRunbook" required="True"/>
                            <prop type="string" name="name"/>
                            <prop type="string" name="runbookName" required="True"/>
                            <prop type="string" name="serviceUri"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                            <prop type="string" name="webhookResourceId" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="azureAppPushReceivers">
                          <item type="object">
                            <prop type="string" name="emailAddress" required="True"/>
                            <prop type="string" name="name" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="azureFunctionReceivers">
                          <item type="object">
                            <prop type="string" name="functionAppResourceId" required="True"/>
                            <prop type="string" name="functionName" required="True"/>
                            <prop type="string" name="httpTriggerUrl" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="emailReceivers">
                          <item type="object">
                            <prop type="string" name="emailAddress" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NotSpecified&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="enabled" required="True">
                          <default value="true"/>
                        </prop>
                        <prop type="array<object>" name="eventHubReceivers">
                          <item type="object">
                            <prop type="string" name="eventHubName" required="True"/>
                            <prop type="string" name="eventHubNameSpace" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="subscriptionId" required="True"/>
                            <prop type="string" name="tenantId"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="groupShortName" required="True">
                          <format maxLength="12"/>
                        </prop>
                        <prop type="array<object>" name="itsmReceivers">
                          <item type="object">
                            <prop type="string" name="connectionId" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="region" required="True"/>
                            <prop type="string" name="ticketConfiguration" required="True"/>
                            <prop type="string" name="workspaceId" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="logicAppReceivers">
                          <item type="object">
                            <prop type="string" name="callbackUrl" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="resourceId" required="True"/>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="smsReceivers">
                          <item type="object">
                            <prop type="string" name="countryCode" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="phoneNumber" required="True"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NotSpecified&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="voiceReceivers">
                          <item type="object">
                            <prop type="string" name="countryCode" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="phoneNumber" required="True"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="webhookReceivers">
                          <item type="object">
                            <prop type="string" name="identifierUri"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="objectId"/>
                            <prop type="string" name="serviceUri" required="True"/>
                            <prop type="string" name="tenantId"/>
                            <prop type="boolean" name="useAadAuth">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="useCommonAlertSchema">
                              <default value="false"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
