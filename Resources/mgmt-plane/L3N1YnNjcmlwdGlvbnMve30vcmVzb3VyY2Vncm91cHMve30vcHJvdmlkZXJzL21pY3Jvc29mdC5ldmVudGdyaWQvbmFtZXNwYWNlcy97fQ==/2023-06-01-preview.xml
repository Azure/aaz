<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
  <commandGroup name="eventgrid namespace">
    <command name="show" version="2023-06-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" idPart="name">
          <help short="Name of the namespace."/>
          <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Namespaces_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="inboundIpRules">
                      <item type="object">
                        <prop type="string" name="action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask"/>
                      </item>
                    </prop>
                    <prop type="boolean" name="isZoneRedundant"/>
                    <prop type="string" name="minimumTlsVersionAllowed">
                      <enum>
                        <item value="&quot;1.0&quot;"/>
                        <item value="&quot;1.1&quot;"/>
                        <item value="&quot;1.2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/{}/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;CreateFailed&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;DeleteFailed&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;UpdatedFailed&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="topicSpacesConfiguration">
                      <prop type="object" name="clientAuthentication">
                        <prop type="array<string>" name="alternativeAuthenticationNameSources">
                          <item type="string">
                            <enum>
                              <item value="&quot;ClientCertificateDns&quot;"/>
                              <item value="&quot;ClientCertificateEmail&quot;"/>
                              <item value="&quot;ClientCertificateIp&quot;"/>
                              <item value="&quot;ClientCertificateSubject&quot;"/>
                              <item value="&quot;ClientCertificateUri&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="hostname"/>
                      <prop type="integer32" name="maximumClientSessionsPerAuthenticationName"/>
                      <prop type="integer32" name="maximumSessionExpiryInHours"/>
                      <prop type="string" name="routeTopicResourceId"/>
                      <prop type="object" name="routingEnrichments">
                        <prop type="array<object>" name="dynamic">
                          <item type="object">
                            <prop type="string" name="key"/>
                            <prop type="string" name="value"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="static">
                          <item type="object">
                            <prop type="string" name="key"/>
                            <prop type="string" name="valueType">
                              <enum>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="routingIdentityInfo">
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userAssignedIdentity"/>
                      </prop>
                      <prop type="string" name="state">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="topicsConfiguration">
                      <prop readOnly="True" type="string" name="hostname"/>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-06-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" idPart="name">
          <help short="Name of the namespace."/>
          <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Namespaces_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}">
          <request method="delete">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-06-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" idPart="name">
          <help short="Name of the namespace."/>
          <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="NamespaceInfo">
        <arg type="object" var="$namespaceInfo.identity" options="identity" group="NamespaceInfo">
          <help short="Identity information for the Namespace resource."/>
          <arg type="string" var="$namespaceInfo.identity.principalId" options="principal-id">
            <help short="The principal ID of resource identity."/>
          </arg>
          <arg type="string" var="$namespaceInfo.identity.tenantId" options="tenant-id">
            <help short="The tenant ID of resource."/>
          </arg>
          <arg type="string" var="$namespaceInfo.identity.type" options="type" group="">
            <help short="The type of managed identity used."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$namespaceInfo.identity.userAssignedIdentities" options="user-assigned-identities" group="">
            <help short="The list of user identities associated with the resource."/>
            <additionalProp>
              <item type="object">
                <arg type="string" var="$namespaceInfo.identity.userAssignedIdentities{}.clientId" options="client-id">
                  <help short="The client id of user assigned identity."/>
                </arg>
                <arg type="string" var="$namespaceInfo.identity.userAssignedIdentities{}.principalId" options="principal-id">
                  <help short="The principal id of user assigned identity."/>
                </arg>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$namespaceInfo.location" options="location l" required="True" group="NamespaceInfo">
          <help short="Location of the resource."/>
        </arg>
        <arg type="object" var="$namespaceInfo.sku" options="sku" group="NamespaceInfo">
          <help short="Represents available Sku pricing tiers."/>
          <arg type="integer32" var="$namespaceInfo.sku.capacity" options="capacity" group="">
            <help short="Specifies the number of Throughput Units that defines the capacity for the namespace."/>
          </arg>
          <arg type="string" var="$namespaceInfo.sku.name" options="name">
            <help short="The name of the SKU."/>
            <enum>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$namespaceInfo.tags" options="tags" group="NamespaceInfo">
          <help short="Tags of the resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$namespaceInfo.properties.inboundIpRules" options="inbound-ip-rules" group="Properties">
          <help short="This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."/>
          <item type="object">
            <arg type="string" var="$namespaceInfo.properties.inboundIpRules[].action" options="action">
              <help short="Action to perform based on the match or no match of the IpMask."/>
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$namespaceInfo.properties.inboundIpRules[].ipMask" options="ip-mask">
              <help short="IP Address in CIDR notation e.g., 10.0.0.0/8."/>
            </arg>
          </item>
        </arg>
        <arg type="boolean" var="$namespaceInfo.properties.isZoneRedundant" options="is-zone-redundant" group="Properties">
          <help short="Allows the user to specify if the service is zone-redundant."/>
        </arg>
        <arg type="string" var="$namespaceInfo.properties.minimumTlsVersionAllowed" options="minimum-tls-version-allowed" group="Properties">
          <help short="Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported."/>
          <enum>
            <item name="1.0" value="&quot;1.0&quot;"/>
            <item name="1.1" value="&quot;1.1&quot;"/>
            <item name="1.2" value="&quot;1.2&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$namespaceInfo.properties.privateEndpointConnections" options="private-endpoint-connections" group="Properties">
          <item type="object">
            <arg type="array<string>" var="$namespaceInfo.properties.privateEndpointConnections[].properties.groupIds" options="group-ids" group="Properties">
              <help short="GroupIds from the private link service resource."/>
              <item type="string"/>
            </arg>
            <arg type="object" var="$namespaceInfo.properties.privateEndpointConnections[].properties.privateEndpoint" options="private-endpoint" group="Properties">
              <help short="The Private Endpoint resource for this Connection."/>
              <arg type="string" var="$namespaceInfo.properties.privateEndpointConnections[].properties.privateEndpoint.id" options="id">
                <help short="The ARM identifier for Private Endpoint."/>
              </arg>
            </arg>
            <arg type="object" var="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState" options="private-link-service-connection-state" group="Properties">
              <help short="Details about the state of the connection."/>
              <arg type="string" var="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState.actionsRequired" options="actions-required">
                <help short="Actions required (if any)."/>
              </arg>
              <arg type="string" var="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState.description" options="description">
                <help short="Description of the connection state."/>
              </arg>
              <arg type="string" var="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState.status" options="status">
                <help short="Status of the connection."/>
                <enum>
                  <item name="Approved" value="&quot;Approved&quot;"/>
                  <item name="Disconnected" value="&quot;Disconnected&quot;"/>
                  <item name="Pending" value="&quot;Pending&quot;"/>
                  <item name="Rejected" value="&quot;Rejected&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="string" var="$namespaceInfo.properties.privateEndpointConnections[].properties.provisioningState" options="provisioning-state" group="Properties">
              <help short="Provisioning state of the Private Endpoint Connection."/>
              <enum>
                <item name="Canceled" value="&quot;Canceled&quot;"/>
                <item name="Creating" value="&quot;Creating&quot;"/>
                <item name="Deleting" value="&quot;Deleting&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="Succeeded" value="&quot;Succeeded&quot;"/>
                <item name="Updating" value="&quot;Updating&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$namespaceInfo.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="This determines if traffic is allowed over public network."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$namespaceInfo.properties.topicSpacesConfiguration" options="topic-spaces-configuration" group="Properties">
          <help short="Topic spaces configuration information for the namespace resource"/>
          <arg type="object" var="$namespaceInfo.properties.topicSpacesConfiguration.clientAuthentication" options="client-authentication">
            <help short="Client authentication settings for topic spaces configuration."/>
            <arg type="array<string>" var="$namespaceInfo.properties.topicSpacesConfiguration.clientAuthentication.alternativeAuthenticationNameSources" options="alternative-authentication-name-sources">
              <help short="Alternative authentication name sources related to client authentication settings for namespace resource."/>
              <item type="string">
                <enum>
                  <item name="ClientCertificateDns" value="&quot;ClientCertificateDns&quot;"/>
                  <item name="ClientCertificateEmail" value="&quot;ClientCertificateEmail&quot;"/>
                  <item name="ClientCertificateIp" value="&quot;ClientCertificateIp&quot;"/>
                  <item name="ClientCertificateSubject" value="&quot;ClientCertificateSubject&quot;"/>
                  <item name="ClientCertificateUri" value="&quot;ClientCertificateUri&quot;"/>
                </enum>
              </item>
            </arg>
          </arg>
          <arg type="integer32" var="$namespaceInfo.properties.topicSpacesConfiguration.maximumClientSessionsPerAuthenticationName" options="maximum-client-sessions-per-authentication-name" group="">
            <help short="The maximum number of sessions per authentication name."/>
          </arg>
          <arg type="integer32" var="$namespaceInfo.properties.topicSpacesConfiguration.maximumSessionExpiryInHours" options="maximum-session-expiry-in-hours" group="">
            <help short="The maximum session expiry in hours."/>
          </arg>
          <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routeTopicResourceId" options="route-topic-resource-id" group="">
            <help short="Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace."/>
          </arg>
          <arg type="object" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments" options="routing-enrichments">
            <help short="Routing enrichments for topic spaces configuration"/>
            <arg type="array<object>" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.dynamic" options="dynamic">
              <item type="object">
                <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].key" options="key">
                  <help short="Dynamic routing enrichment key."/>
                </arg>
                <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].value" options="value">
                  <help short="Dynamic routing enrichment value."/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.static" options="static">
              <item type="object">
                <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.static[].key" options="key">
                  <help short="Static routing enrichment key."/>
                </arg>
                <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.static[].valueType" options="value-type">
                  <help short="Static routing enrichment value type. For e.g. this property value can be 'String'."/>
                  <enum>
                    <item name="String" value="&quot;String&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$namespaceInfo.properties.topicSpacesConfiguration.routingIdentityInfo" options="routing-identity-info">
            <help short="Routing identity info for topic spaces configuration."/>
            <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routingIdentityInfo.type" options="type">
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
                <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.routingIdentityInfo.userAssignedIdentity" options="user-assigned-identity"/>
          </arg>
          <arg type="string" var="$namespaceInfo.properties.topicSpacesConfiguration.state" options="state">
            <help short="Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled."/>
            <default value="&quot;Disabled&quot;"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Namespaces_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="namespaceInfo" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$namespaceInfo.identity">
                    <prop type="string" name="principalId" arg="$namespaceInfo.identity.principalId"/>
                    <prop type="string" name="tenantId" arg="$namespaceInfo.identity.tenantId"/>
                    <prop type="string" name="type" arg="$namespaceInfo.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$namespaceInfo.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId" arg="$namespaceInfo.identity.userAssignedIdentities{}.clientId"/>
                          <prop type="string" name="principalId" arg="$namespaceInfo.identity.userAssignedIdentities{}.principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$namespaceInfo.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="inboundIpRules" arg="$namespaceInfo.properties.inboundIpRules">
                      <item type="object">
                        <prop type="string" name="action" arg="$namespaceInfo.properties.inboundIpRules[].action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask" arg="$namespaceInfo.properties.inboundIpRules[].ipMask"/>
                      </item>
                    </prop>
                    <prop type="boolean" name="isZoneRedundant" arg="$namespaceInfo.properties.isZoneRedundant"/>
                    <prop type="string" name="minimumTlsVersionAllowed" arg="$namespaceInfo.properties.minimumTlsVersionAllowed">
                      <enum>
                        <item value="&quot;1.0&quot;"/>
                        <item value="&quot;1.1&quot;"/>
                        <item value="&quot;1.2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="privateEndpointConnections" arg="$namespaceInfo.properties.privateEndpointConnections">
                      <item type="object">
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.privateEndpoint">
                            <prop type="string" name="id" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.privateEndpoint.id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState.actionsRequired"/>
                            <prop type="string" name="description" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState.description"/>
                            <prop type="string" name="status" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.privateLinkServiceConnectionState.status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState" arg="$namespaceInfo.properties.privateEndpointConnections[].properties.provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$namespaceInfo.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="topicSpacesConfiguration" arg="$namespaceInfo.properties.topicSpacesConfiguration">
                      <prop type="object" name="clientAuthentication" arg="$namespaceInfo.properties.topicSpacesConfiguration.clientAuthentication">
                        <prop type="array<string>" name="alternativeAuthenticationNameSources" arg="$namespaceInfo.properties.topicSpacesConfiguration.clientAuthentication.alternativeAuthenticationNameSources">
                          <item type="string">
                            <enum>
                              <item value="&quot;ClientCertificateDns&quot;"/>
                              <item value="&quot;ClientCertificateEmail&quot;"/>
                              <item value="&quot;ClientCertificateIp&quot;"/>
                              <item value="&quot;ClientCertificateSubject&quot;"/>
                              <item value="&quot;ClientCertificateUri&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </prop>
                      <prop type="integer32" name="maximumClientSessionsPerAuthenticationName" arg="$namespaceInfo.properties.topicSpacesConfiguration.maximumClientSessionsPerAuthenticationName"/>
                      <prop type="integer32" name="maximumSessionExpiryInHours" arg="$namespaceInfo.properties.topicSpacesConfiguration.maximumSessionExpiryInHours"/>
                      <prop type="string" name="routeTopicResourceId" arg="$namespaceInfo.properties.topicSpacesConfiguration.routeTopicResourceId"/>
                      <prop type="object" name="routingEnrichments" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments">
                        <prop type="array<object>" name="dynamic" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.dynamic">
                          <item type="object">
                            <prop type="string" name="key" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].key"/>
                            <prop type="string" name="value" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].value"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="static" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.static">
                          <item type="object">
                            <prop type="string" name="key" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.static[].key"/>
                            <prop type="string" name="valueType" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingEnrichments.static[].valueType">
                              <enum>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="routingIdentityInfo" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingIdentityInfo">
                        <prop type="string" name="type" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingIdentityInfo.type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userAssignedIdentity" arg="$namespaceInfo.properties.topicSpacesConfiguration.routingIdentityInfo.userAssignedIdentity"/>
                      </prop>
                      <prop type="string" name="state" arg="$namespaceInfo.properties.topicSpacesConfiguration.state">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$namespaceInfo.sku">
                    <prop type="integer32" name="capacity" arg="$namespaceInfo.sku.capacity"/>
                    <prop type="string" name="name" arg="$namespaceInfo.sku.name">
                      <enum>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$namespaceInfo.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="inboundIpRules">
                      <item type="object">
                        <prop type="string" name="action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask"/>
                      </item>
                    </prop>
                    <prop type="boolean" name="isZoneRedundant"/>
                    <prop type="string" name="minimumTlsVersionAllowed">
                      <enum>
                        <item value="&quot;1.0&quot;"/>
                        <item value="&quot;1.1&quot;"/>
                        <item value="&quot;1.2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/{}/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;CreateFailed&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;DeleteFailed&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;UpdatedFailed&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="topicSpacesConfiguration">
                      <prop type="object" name="clientAuthentication">
                        <prop type="array<string>" name="alternativeAuthenticationNameSources">
                          <item type="string">
                            <enum>
                              <item value="&quot;ClientCertificateDns&quot;"/>
                              <item value="&quot;ClientCertificateEmail&quot;"/>
                              <item value="&quot;ClientCertificateIp&quot;"/>
                              <item value="&quot;ClientCertificateSubject&quot;"/>
                              <item value="&quot;ClientCertificateUri&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="hostname"/>
                      <prop type="integer32" name="maximumClientSessionsPerAuthenticationName"/>
                      <prop type="integer32" name="maximumSessionExpiryInHours"/>
                      <prop type="string" name="routeTopicResourceId"/>
                      <prop type="object" name="routingEnrichments">
                        <prop type="array<object>" name="dynamic">
                          <item type="object">
                            <prop type="string" name="key"/>
                            <prop type="string" name="value"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="static">
                          <item type="object">
                            <prop type="string" name="key"/>
                            <prop type="string" name="valueType">
                              <enum>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="routingIdentityInfo">
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userAssignedIdentity"/>
                      </prop>
                      <prop type="string" name="state">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="topicsConfiguration">
                      <prop readOnly="True" type="string" name="hostname"/>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-06-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces/{}" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXMve25hbWVzcGFjZU5hbWV9/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name name n" required="True" idPart="name">
          <help short="Name of the namespace."/>
          <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="NamespaceUpdateParameters">
        <arg type="object" var="$namespaceUpdateParameters.identity" options="identity" group="NamespaceUpdateParameters">
          <help short="Namespace resource identity information."/>
          <arg type="string" var="$namespaceUpdateParameters.identity.principalId" options="principal-id">
            <help short="The principal ID of resource identity."/>
          </arg>
          <arg type="string" var="$namespaceUpdateParameters.identity.tenantId" options="tenant-id">
            <help short="The tenant ID of resource."/>
          </arg>
          <arg type="string" var="$namespaceUpdateParameters.identity.type" options="type" group="">
            <help short="The type of managed identity used."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$namespaceUpdateParameters.identity.userAssignedIdentities" options="user-assigned-identities" group="">
            <help short="The list of user identities associated with the resource."/>
            <additionalProp>
              <item type="object">
                <arg type="string" var="$namespaceUpdateParameters.identity.userAssignedIdentities{}.clientId" options="client-id">
                  <help short="The client id of user assigned identity."/>
                </arg>
                <arg type="string" var="$namespaceUpdateParameters.identity.userAssignedIdentities{}.principalId" options="principal-id">
                  <help short="The principal id of user assigned identity."/>
                </arg>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="object" var="$namespaceUpdateParameters.sku" options="sku" group="NamespaceUpdateParameters">
          <help short="Represents available Sku pricing tiers."/>
          <arg type="integer32" var="$namespaceUpdateParameters.sku.capacity" options="capacity" group="">
            <help short="Specifies the number of Throughput Units that defines the capacity for the namespace."/>
          </arg>
          <arg type="string" var="$namespaceUpdateParameters.sku.name" options="name">
            <help short="The name of the SKU."/>
            <enum>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$namespaceUpdateParameters.tags" options="tags" group="NamespaceUpdateParameters">
          <help short="Tags of the namespace resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$namespaceUpdateParameters.properties.inboundIpRules" options="inbound-ip-rules" group="Properties">
          <help short="This can be used to restrict traffic from specific IPs instead of all IPs."/>
          <item type="object">
            <arg type="string" var="$namespaceUpdateParameters.properties.inboundIpRules[].action" options="action">
              <help short="Action to perform based on the match or no match of the IpMask."/>
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$namespaceUpdateParameters.properties.inboundIpRules[].ipMask" options="ip-mask">
              <help short="IP Address in CIDR notation e.g., 10.0.0.0/8."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$namespaceUpdateParameters.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="This determines if traffic is allowed over public network."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration" options="topic-spaces-configuration" group="Properties">
          <help short="Topic spaces configuration properties that can be updated."/>
          <arg type="object" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.clientAuthentication" options="client-authentication">
            <help short="Client authentication settings for topic spaces configuration."/>
            <arg type="array<string>" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.clientAuthentication.alternativeAuthenticationNameSources" options="alternative-authentication-name-sources">
              <help short="Alternative authentication name sources related to client authentication settings for namespace resource."/>
              <item type="string">
                <enum>
                  <item name="ClientCertificateDns" value="&quot;ClientCertificateDns&quot;"/>
                  <item name="ClientCertificateEmail" value="&quot;ClientCertificateEmail&quot;"/>
                  <item name="ClientCertificateIp" value="&quot;ClientCertificateIp&quot;"/>
                  <item name="ClientCertificateSubject" value="&quot;ClientCertificateSubject&quot;"/>
                  <item name="ClientCertificateUri" value="&quot;ClientCertificateUri&quot;"/>
                </enum>
              </item>
            </arg>
          </arg>
          <arg type="integer32" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.maximumClientSessionsPerAuthenticationName" options="maximum-client-sessions-per-authentication-name" group="">
            <help short="The maximum number of sessions per authentication name."/>
          </arg>
          <arg type="integer32" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.maximumSessionExpiryInHours" options="maximum-session-expiry-in-hours" group="">
            <help short="The maximum session expiry in hours."/>
          </arg>
          <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routeTopicResourceId" options="route-topic-resource-id">
            <help short="This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace."/>
          </arg>
          <arg type="object" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments" options="routing-enrichments">
            <help short="Routing enrichments for topic spaces configuration."/>
            <arg type="array<object>" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.dynamic" options="dynamic">
              <item type="object">
                <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].key" options="key">
                  <help short="Dynamic routing enrichment key."/>
                </arg>
                <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].value" options="value">
                  <help short="Dynamic routing enrichment value."/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.static" options="static">
              <item type="object">
                <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.static[].key" options="key">
                  <help short="Static routing enrichment key."/>
                </arg>
                <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.static[].valueType" options="value-type">
                  <help short="Static routing enrichment value type. For e.g. this property value can be 'String'."/>
                  <enum>
                    <item name="String" value="&quot;String&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingIdentityInfo" options="routing-identity-info">
            <help short="Routing identity info for topic spaces configuration."/>
            <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingIdentityInfo.type" options="type">
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
                <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingIdentityInfo.userAssignedIdentity" options="user-assigned-identity"/>
          </arg>
          <arg type="string" var="$namespaceUpdateParameters.properties.topicSpacesConfiguration.state" options="state">
            <help short="Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Namespaces_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}">
          <request method="patch">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]*$" maxLength="50" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="namespaceUpdateParameters" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$namespaceUpdateParameters.identity">
                    <prop type="string" name="principalId" arg="$namespaceUpdateParameters.identity.principalId"/>
                    <prop type="string" name="tenantId" arg="$namespaceUpdateParameters.identity.tenantId"/>
                    <prop type="string" name="type" arg="$namespaceUpdateParameters.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$namespaceUpdateParameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId" arg="$namespaceUpdateParameters.identity.userAssignedIdentities{}.clientId"/>
                          <prop type="string" name="principalId" arg="$namespaceUpdateParameters.identity.userAssignedIdentities{}.principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="inboundIpRules" arg="$namespaceUpdateParameters.properties.inboundIpRules">
                      <item type="object">
                        <prop type="string" name="action" arg="$namespaceUpdateParameters.properties.inboundIpRules[].action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask" arg="$namespaceUpdateParameters.properties.inboundIpRules[].ipMask"/>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$namespaceUpdateParameters.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="topicSpacesConfiguration" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration">
                      <prop type="object" name="clientAuthentication" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.clientAuthentication">
                        <prop type="array<string>" name="alternativeAuthenticationNameSources" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.clientAuthentication.alternativeAuthenticationNameSources">
                          <item type="string">
                            <enum>
                              <item value="&quot;ClientCertificateDns&quot;"/>
                              <item value="&quot;ClientCertificateEmail&quot;"/>
                              <item value="&quot;ClientCertificateIp&quot;"/>
                              <item value="&quot;ClientCertificateSubject&quot;"/>
                              <item value="&quot;ClientCertificateUri&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </prop>
                      <prop type="integer32" name="maximumClientSessionsPerAuthenticationName" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.maximumClientSessionsPerAuthenticationName"/>
                      <prop type="integer32" name="maximumSessionExpiryInHours" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.maximumSessionExpiryInHours"/>
                      <prop type="string" name="routeTopicResourceId" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routeTopicResourceId"/>
                      <prop type="object" name="routingEnrichments" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments">
                        <prop type="array<object>" name="dynamic" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.dynamic">
                          <item type="object">
                            <prop type="string" name="key" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].key"/>
                            <prop type="string" name="value" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.dynamic[].value"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="static" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.static">
                          <item type="object">
                            <prop type="string" name="key" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.static[].key"/>
                            <prop type="string" name="valueType" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingEnrichments.static[].valueType">
                              <enum>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="routingIdentityInfo" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingIdentityInfo">
                        <prop type="string" name="type" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingIdentityInfo.type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userAssignedIdentity" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.routingIdentityInfo.userAssignedIdentity"/>
                      </prop>
                      <prop type="string" name="state" arg="$namespaceUpdateParameters.properties.topicSpacesConfiguration.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$namespaceUpdateParameters.sku">
                    <prop type="integer32" name="capacity" arg="$namespaceUpdateParameters.sku.capacity"/>
                    <prop type="string" name="name" arg="$namespaceUpdateParameters.sku.name">
                      <enum>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$namespaceUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Namespace_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="inboundIpRules">
                      <item type="object">
                        <prop type="string" name="action">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipMask"/>
                      </item>
                    </prop>
                    <prop type="boolean" name="isZoneRedundant"/>
                    <prop type="string" name="minimumTlsVersionAllowed">
                      <enum>
                        <item value="&quot;1.0&quot;"/>
                        <item value="&quot;1.1&quot;"/>
                        <item value="&quot;1.2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/{}/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;CreateFailed&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;DeleteFailed&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;UpdatedFailed&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="topicSpacesConfiguration">
                      <prop type="object" name="clientAuthentication">
                        <prop type="array<string>" name="alternativeAuthenticationNameSources">
                          <item type="string">
                            <enum>
                              <item value="&quot;ClientCertificateDns&quot;"/>
                              <item value="&quot;ClientCertificateEmail&quot;"/>
                              <item value="&quot;ClientCertificateIp&quot;"/>
                              <item value="&quot;ClientCertificateSubject&quot;"/>
                              <item value="&quot;ClientCertificateUri&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="hostname"/>
                      <prop type="integer32" name="maximumClientSessionsPerAuthenticationName"/>
                      <prop type="integer32" name="maximumSessionExpiryInHours"/>
                      <prop type="string" name="routeTopicResourceId"/>
                      <prop type="object" name="routingEnrichments">
                        <prop type="array<object>" name="dynamic">
                          <item type="object">
                            <prop type="string" name="key"/>
                            <prop type="string" name="value"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="static">
                          <item type="object">
                            <prop type="string" name="key"/>
                            <prop type="string" name="valueType">
                              <enum>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="routingIdentityInfo">
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userAssignedIdentity"/>
                      </prop>
                      <prop type="string" name="state">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="topicsConfiguration">
                      <prop readOnly="True" type="string" name="hostname"/>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Namespace_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
