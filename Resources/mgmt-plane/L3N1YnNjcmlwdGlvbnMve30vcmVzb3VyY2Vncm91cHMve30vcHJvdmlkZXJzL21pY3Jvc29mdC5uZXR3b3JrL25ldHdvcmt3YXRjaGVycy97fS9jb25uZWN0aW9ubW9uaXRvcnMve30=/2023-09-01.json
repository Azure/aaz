{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3JzL3tjb25uZWN0aW9uTW9uaXRvck5hbWV9/V/MjAyMy0wOS0wMQ=="}], "commandGroups": [{"name": "network network-watcher connection-monitor", "commands": [{"name": "show", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3JzL3tjb25uZWN0aW9uTW9uaXRvck5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectionMonitorName", "options": ["n", "name", "connection-monitor-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the connection monitor."}}, {"type": "string", "var": "$Path.networkWatcherName", "options": ["network-watcher-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Network Watcher resource."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "ConnectionMonitors_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "connectionMonitorName", "arg": "$Path.connectionMonitorName", "required": true}, {"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/connectionMonitors/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": true}, "type": "boolean", "name": "autoStart"}, {"readOnly": true, "type": "string", "name": "connectionMonitorType", "enum": {"items": [{"value": "MultiEndpoint"}, {"value": "SingleSourceDestination"}]}}, {"type": "object", "name": "destination", "props": [{"type": "string", "name": "address"}, {"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "name": "resourceId"}]}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "address"}, {"type": "string", "name": "coverageLevel", "enum": {"items": [{"value": "AboveAverage"}, {"value": "Average"}, {"value": "BelowAverage"}, {"value": "Default"}, {"value": "Full"}, {"value": "Low"}]}}, {"type": "object", "name": "filter", "props": [{"type": "array<object>", "name": "items", "item": {"type": "object", "props": [{"type": "string", "name": "address"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "AgentAddress"}]}}]}}, {"type": "string", "name": "type", "enum": {"items": [{"value": "Include"}]}}]}, {"type": "string", "name": "name", "required": true}, {"type": "string", "name": "resourceId"}, {"type": "object", "name": "scope", "props": [{"type": "array<@ConnectionMonitorEndpointScopeItem_read>", "name": "exclude", "item": {"type": "@ConnectionMonitorEndpointScopeItem_read"}}, {"type": "array<object>", "name": "include", "item": {"type": "object", "props": [{"type": "string", "name": "address"}], "cls": "ConnectionMonitorEndpointScopeItem_read"}}]}, {"type": "string", "name": "type", "enum": {"items": [{"value": "AzureArcVM"}, {"value": "AzureSubnet"}, {"value": "AzureVM"}, {"value": "AzureVMSS"}, {"value": "AzureVNet"}, {"value": "ExternalAddress"}, {"value": "MMAWorkspaceMachine"}, {"value": "MMAWorkspaceNetwork"}]}}]}}, {"default": {"value": 60}, "type": "integer32", "name": "monitoringIntervalInSeconds", "format": {"maximum": 1800, "minimum": 30}}, {"readOnly": true, "type": "string", "name": "monitoringStatus"}, {"type": "string", "name": "notes"}, {"type": "array<object>", "name": "outputs", "item": {"type": "object", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Workspace"}]}}, {"type": "object", "name": "workspaceSettings", "props": [{"type": "string", "name": "workspaceResourceId"}]}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "source", "props": [{"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "name": "resourceId", "required": true}]}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"type": "array<object>", "name": "testConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "httpConfiguration", "props": [{"type": "string", "name": "method", "enum": {"items": [{"value": "Get"}, {"value": "Post"}]}}, {"type": "string", "name": "path"}, {"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "boolean", "name": "preferHTTPS"}, {"type": "array<object>", "name": "requestHeaders", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "array<string>", "name": "validStatusCodeRanges", "item": {"type": "string"}}]}, {"type": "object", "name": "icmpConfiguration", "props": [{"type": "boolean", "name": "disableTraceRoute"}]}, {"type": "string", "name": "name", "required": true}, {"type": "string", "name": "preferredIPVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "protocol", "required": true, "enum": {"items": [{"value": "Http"}, {"value": "Icmp"}, {"value": "Tcp"}]}}, {"type": "object", "name": "successThreshold", "props": [{"type": "integer32", "name": "checksFailedPercent"}, {"type": "float", "name": "roundTripTimeMs"}]}, {"type": "object", "name": "tcpConfiguration", "props": [{"type": "string", "name": "destinationPortBehavior", "enum": {"items": [{"value": "ListenIfAvailable"}, {"value": "None"}]}}, {"type": "boolean", "name": "disableTraceRoute"}, {"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}]}, {"type": "integer32", "name": "testFrequencySec"}]}}, {"type": "array<object>", "name": "testGroups", "item": {"type": "object", "props": [{"type": "array<string>", "name": "destinations", "required": true, "item": {"type": "string"}}, {"type": "boolean", "name": "disable"}, {"type": "string", "name": "name", "required": true}, {"type": "array<string>", "name": "sources", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "testConfigurations", "required": true, "item": {"type": "string"}}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3JzL3tjb25uZWN0aW9uTW9uaXRvck5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectionMonitorName", "options": ["n", "name", "connection-monitor-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the connection monitor."}}, {"type": "string", "var": "$Path.networkWatcherName", "options": ["network-watcher-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Network Watcher resource."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "ConnectionMonitors_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "connectionMonitorName", "arg": "$Path.connectionMonitorName", "required": true}, {"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [202]}, {"statusCode": [204]}, {"statusCode": [200, 201]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3JzL3tjb25uZWN0aW9uTW9uaXRvck5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectionMonitorName", "options": ["n", "name", "connection-monitor-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the connection monitor."}}, {"type": "string", "var": "$Path.networkWatcherName", "options": ["network-watcher-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Network Watcher resource."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Query.migrate", "options": ["migrate"], "help": {"short": "Value indicating whether connection monitor V1 should be migrated to V2 format."}}]}, {"name": "Parameters", "args": [{"type": "string", "var": "$parameters.location", "options": ["location"], "group": "Parameters", "help": {"short": "Connection monitor location."}}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Connection monitor tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "boolean", "var": "$parameters.properties.autoStart", "options": ["auto-start"], "group": "Properties", "help": {"short": "Determines if the connection monitor will start automatically once created."}}, {"type": "object", "var": "$parameters.properties.destination", "options": ["destination"], "hide": true, "group": "Properties", "help": {"short": "Describes the destination of connection monitor."}, "args": [{"type": "string", "var": "$parameters.properties.destination.address", "options": ["address"], "help": {"short": "Address of the connection monitor destination (IP or domain name)."}}, {"type": "integer32", "var": "$parameters.properties.destination.port", "options": ["port"], "help": {"short": "The destination port used by connection monitor."}, "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "var": "$parameters.properties.destination.resourceId", "options": ["resource-id"], "help": {"short": "The ID of the resource used as the destination by connection monitor."}}]}, {"type": "array<object>", "var": "$parameters.properties.endpoints", "options": ["endpoints"], "group": "Properties", "help": {"short": "List of connection monitor endpoints."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.endpoints[].address", "options": ["address"], "help": {"short": "Address of the connection monitor endpoint (IP or domain name)."}}, {"type": "string", "var": "$parameters.properties.endpoints[].coverageLevel", "options": ["coverage-level"], "help": {"short": "Test coverage for the endpoint."}, "enum": {"items": [{"name": "AboveAverage", "value": "AboveAverage"}, {"name": "Average", "value": "Average"}, {"name": "BelowAverage", "value": "BelowAverage"}, {"name": "Default", "value": "Default"}, {"name": "Full", "value": "Full"}, {"name": "Low", "value": "Low"}]}}, {"type": "object", "var": "$parameters.properties.endpoints[].filter", "options": ["filter"], "help": {"short": "Filter for sub-items within the endpoint."}, "args": [{"type": "array<object>", "var": "$parameters.properties.endpoints[].filter.items", "options": ["items"], "help": {"short": "List of items in the filter."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.endpoints[].filter.items[].address", "options": ["address"], "help": {"short": "The address of the filter item."}}, {"type": "string", "var": "$parameters.properties.endpoints[].filter.items[].type", "options": ["type"], "help": {"short": "The type of item included in the filter. Currently only 'AgentAddress' is supported."}, "enum": {"items": [{"name": "AgentAddress", "value": "AgentAddress"}]}}]}}, {"type": "string", "var": "$parameters.properties.endpoints[].filter.type", "options": ["type"], "help": {"short": "The behavior of the endpoint filter. Currently only 'Include' is supported."}, "enum": {"items": [{"name": "Include", "value": "Include"}]}}]}, {"type": "string", "var": "$parameters.properties.endpoints[].name", "options": ["name"], "required": true, "help": {"short": "The name of the connection monitor endpoint."}}, {"type": "string", "var": "$parameters.properties.endpoints[].resourceId", "options": ["resource-id"], "help": {"short": "Resource ID of the connection monitor endpoint."}}, {"type": "object", "var": "$parameters.properties.endpoints[].scope", "options": ["scope"], "help": {"short": "Endpoint scope."}, "args": [{"type": "array<@ConnectionMonitorEndpointScopeItem_create>", "var": "$parameters.properties.endpoints[].scope.exclude", "options": ["exclude"], "help": {"short": "List of items which needs to be excluded from the endpoint scope."}, "item": {"type": "@ConnectionMonitorEndpointScopeItem_create"}}, {"type": "array<object>", "var": "$parameters.properties.endpoints[].scope.include", "options": ["include"], "help": {"short": "List of items which needs to be included to the endpoint scope."}, "item": {"type": "object", "args": [{"type": "string", "var": "@ConnectionMonitorEndpointScopeItem_create.address", "options": ["address"], "help": {"short": "The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address."}}], "cls": "ConnectionMonitorEndpointScopeItem_create"}}]}, {"type": "string", "var": "$parameters.properties.endpoints[].type", "options": ["type"], "help": {"short": "The endpoint type."}, "enum": {"items": [{"name": "AzureArcVM", "value": "AzureArcVM"}, {"name": "AzureSubnet", "value": "AzureSubnet"}, {"name": "AzureVM", "value": "AzureVM"}, {"name": "AzureVMSS", "value": "AzureVMSS"}, {"name": "AzureVNet", "value": "AzureVNet"}, {"name": "ExternalAddress", "value": "ExternalAddress"}, {"name": "MMAWorkspaceMachine", "value": "MMAWorkspaceMachine"}, {"name": "MMAWorkspaceNetwork", "value": "MMAWorkspaceNetwork"}]}}]}}, {"type": "integer32", "var": "$parameters.properties.monitoringIntervalInSeconds", "options": ["monitoring-interval-in-seconds"], "hide": true, "group": "Properties", "help": {"short": "Monitoring interval in seconds."}, "format": {"maximum": 1800, "minimum": 30}}, {"type": "string", "var": "$parameters.properties.notes", "options": ["notes"], "group": "Properties", "help": {"short": "Optional notes to be associated with the connection monitor."}}, {"type": "array<object>", "var": "$parameters.properties.outputs", "options": ["outputs"], "group": "Properties", "help": {"short": "List of connection monitor outputs."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.outputs[].type", "options": ["type"], "help": {"short": "Connection monitor output destination type. Currently, only \"Workspace\" is supported."}, "enum": {"items": [{"name": "Workspace", "value": "Workspace"}]}}, {"type": "object", "var": "$parameters.properties.outputs[].workspaceSettings", "options": ["workspace-settings"], "help": {"short": "Describes the settings for producing output into a log analytics workspace."}, "args": [{"type": "string", "var": "$parameters.properties.outputs[].workspaceSettings.workspaceResourceId", "options": ["workspace-resource-id"], "help": {"short": "Log analytics workspace resource ID."}}]}]}}, {"type": "object", "var": "$parameters.properties.source", "options": ["source"], "hide": true, "group": "Properties", "help": {"short": "Describes the source of connection monitor."}, "args": [{"type": "integer32", "var": "$parameters.properties.source.port", "options": ["port"], "help": {"short": "The source port used by connection monitor."}, "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "var": "$parameters.properties.source.resourceId", "options": ["resource-id"], "required": true, "help": {"short": "The ID of the resource used as the source by connection monitor."}}]}, {"type": "array<object>", "var": "$parameters.properties.testConfigurations", "options": ["test-configurations"], "group": "Properties", "help": {"short": "List of connection monitor test configurations."}, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.testConfigurations[].httpConfiguration", "options": ["http-configuration"], "help": {"short": "The parameters used to perform test evaluation over HTTP."}, "args": [{"type": "string", "var": "$parameters.properties.testConfigurations[].httpConfiguration.method", "options": ["method"], "help": {"short": "The HTTP method to use."}, "enum": {"items": [{"name": "Get", "value": "Get"}, {"name": "Post", "value": "Post"}]}}, {"type": "string", "var": "$parameters.properties.testConfigurations[].httpConfiguration.path", "options": ["path"], "help": {"short": "The path component of the URI. For instance, \"/dir1/dir2\"."}}, {"type": "integer32", "var": "$parameters.properties.testConfigurations[].httpConfiguration.port", "options": ["port"], "help": {"short": "The port to connect to."}, "format": {"maximum": 65535, "minimum": 0}}, {"type": "boolean", "var": "$parameters.properties.testConfigurations[].httpConfiguration.preferHTTPS", "options": ["prefer-https"], "help": {"short": "Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit."}}, {"type": "array<object>", "var": "$parameters.properties.testConfigurations[].httpConfiguration.requestHeaders", "options": ["request-headers"], "help": {"short": "The HTTP headers to transmit with the request."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.testConfigurations[].httpConfiguration.requestHeaders[].name", "options": ["name"], "help": {"short": "The name in HTTP header."}}, {"type": "string", "var": "$parameters.properties.testConfigurations[].httpConfiguration.requestHeaders[].value", "options": ["value"], "help": {"short": "The value in HTTP header."}}]}}, {"type": "array<string>", "var": "$parameters.properties.testConfigurations[].httpConfiguration.validStatusCodeRanges", "options": ["valid-status-code-ranges"], "help": {"short": "HTTP status codes to consider successful. For instance, \"2xx,301-304,418\"."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$parameters.properties.testConfigurations[].icmpConfiguration", "options": ["icmp-configuration"], "help": {"short": "The parameters used to perform test evaluation over ICMP."}, "args": [{"type": "boolean", "var": "$parameters.properties.testConfigurations[].icmpConfiguration.disableTraceRoute", "options": ["disable-trace-route"], "help": {"short": "Value indicating whether path evaluation with trace route should be disabled."}}]}, {"type": "string", "var": "$parameters.properties.testConfigurations[].name", "options": ["name"], "required": true, "help": {"short": "The name of the connection monitor test configuration."}}, {"type": "string", "var": "$parameters.properties.testConfigurations[].preferredIPVersion", "options": ["preferred-ip-version"], "help": {"short": "The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"type": "string", "var": "$parameters.properties.testConfigurations[].protocol", "options": ["protocol"], "required": true, "help": {"short": "The protocol to use in test evaluation."}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Icmp", "value": "Icmp"}, {"name": "Tcp", "value": "Tcp"}]}}, {"type": "object", "var": "$parameters.properties.testConfigurations[].successThreshold", "options": ["success-threshold"], "help": {"short": "The threshold for declaring a test successful."}, "args": [{"type": "integer32", "var": "$parameters.properties.testConfigurations[].successThreshold.checksFailedPercent", "options": ["checks-failed-percent"], "help": {"short": "The maximum percentage of failed checks permitted for a test to evaluate as successful."}}, {"type": "float", "var": "$parameters.properties.testConfigurations[].successThreshold.roundTripTimeMs", "options": ["round-trip-time-ms"], "help": {"short": "The maximum round-trip time in milliseconds permitted for a test to evaluate as successful."}}]}, {"type": "object", "var": "$parameters.properties.testConfigurations[].tcpConfiguration", "options": ["tcp-configuration"], "help": {"short": "The parameters used to perform test evaluation over TCP."}, "args": [{"type": "string", "var": "$parameters.properties.testConfigurations[].tcpConfiguration.destinationPortBehavior", "options": ["destination-port-behavior"], "help": {"short": "Destination port behavior."}, "enum": {"items": [{"name": "ListenIfAvailable", "value": "ListenIfAvailable"}, {"name": "None", "value": "None"}]}}, {"type": "boolean", "var": "$parameters.properties.testConfigurations[].tcpConfiguration.disableTraceRoute", "options": ["disable-trace-route"], "help": {"short": "Value indicating whether path evaluation with trace route should be disabled."}}, {"type": "integer32", "var": "$parameters.properties.testConfigurations[].tcpConfiguration.port", "options": ["port"], "help": {"short": "The port to connect to."}, "format": {"maximum": 65535, "minimum": 0}}]}, {"type": "integer32", "var": "$parameters.properties.testConfigurations[].testFrequencySec", "options": ["test-frequency-sec"], "help": {"short": "The frequency of test evaluation, in seconds."}}]}}, {"type": "array<object>", "var": "$parameters.properties.testGroups", "options": ["test-groups"], "group": "Properties", "help": {"short": "List of connection monitor test groups."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$parameters.properties.testGroups[].destinations", "options": ["destinations"], "required": true, "help": {"short": "List of destination endpoint names."}, "item": {"type": "string"}}, {"type": "boolean", "var": "$parameters.properties.testGroups[].disable", "options": ["disable"], "help": {"short": "Value indicating whether test group is disabled."}}, {"type": "string", "var": "$parameters.properties.testGroups[].name", "options": ["name"], "required": true, "help": {"short": "The name of the connection monitor test group."}}, {"type": "array<string>", "var": "$parameters.properties.testGroups[].sources", "options": ["sources"], "required": true, "help": {"short": "List of source endpoint names."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.properties.testGroups[].testConfigurations", "options": ["test-configurations"], "required": true, "help": {"short": "List of test configuration names."}, "item": {"type": "string"}}]}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "ConnectionMonitors_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "connectionMonitorName", "arg": "$Path.connectionMonitorName", "required": true}, {"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"params": [{"type": "string", "name": "migrate", "arg": "$Query.migrate"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": true}, "type": "boolean", "name": "autoStart", "arg": "$parameters.properties.autoStart"}, {"type": "object", "name": "destination", "arg": "$parameters.properties.destination", "props": [{"type": "string", "name": "address", "arg": "$parameters.properties.destination.address"}, {"type": "integer32", "name": "port", "arg": "$parameters.properties.destination.port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "name": "resourceId", "arg": "$parameters.properties.destination.resourceId"}]}, {"type": "array<object>", "name": "endpoints", "arg": "$parameters.properties.endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "address", "arg": "$parameters.properties.endpoints[].address"}, {"type": "string", "name": "coverageLevel", "arg": "$parameters.properties.endpoints[].coverageLevel", "enum": {"items": [{"value": "AboveAverage"}, {"value": "Average"}, {"value": "BelowAverage"}, {"value": "Default"}, {"value": "Full"}, {"value": "Low"}]}}, {"type": "object", "name": "filter", "arg": "$parameters.properties.endpoints[].filter", "props": [{"type": "array<object>", "name": "items", "arg": "$parameters.properties.endpoints[].filter.items", "item": {"type": "object", "props": [{"type": "string", "name": "address", "arg": "$parameters.properties.endpoints[].filter.items[].address"}, {"type": "string", "name": "type", "arg": "$parameters.properties.endpoints[].filter.items[].type", "enum": {"items": [{"value": "AgentAddress"}]}}]}}, {"type": "string", "name": "type", "arg": "$parameters.properties.endpoints[].filter.type", "enum": {"items": [{"value": "Include"}]}}]}, {"type": "string", "name": "name", "arg": "$parameters.properties.endpoints[].name", "required": true}, {"type": "string", "name": "resourceId", "arg": "$parameters.properties.endpoints[].resourceId"}, {"type": "object", "name": "scope", "arg": "$parameters.properties.endpoints[].scope", "props": [{"type": "array<@ConnectionMonitorEndpointScopeItem_create>", "name": "exclude", "arg": "$parameters.properties.endpoints[].scope.exclude", "item": {"type": "@ConnectionMonitorEndpointScopeItem_create"}}, {"type": "array<object>", "name": "include", "arg": "$parameters.properties.endpoints[].scope.include", "item": {"type": "object", "props": [{"type": "string", "name": "address", "arg": "@ConnectionMonitorEndpointScopeItem_create.address"}], "cls": "ConnectionMonitorEndpointScopeItem_create"}}]}, {"type": "string", "name": "type", "arg": "$parameters.properties.endpoints[].type", "enum": {"items": [{"value": "AzureArcVM"}, {"value": "AzureSubnet"}, {"value": "AzureVM"}, {"value": "AzureVMSS"}, {"value": "AzureVNet"}, {"value": "ExternalAddress"}, {"value": "MMAWorkspaceMachine"}, {"value": "MMAWorkspaceNetwork"}]}}]}}, {"default": {"value": 60}, "type": "integer32", "name": "monitoringIntervalInSeconds", "arg": "$parameters.properties.monitoringIntervalInSeconds", "format": {"maximum": 1800, "minimum": 30}}, {"type": "string", "name": "notes", "arg": "$parameters.properties.notes"}, {"type": "array<object>", "name": "outputs", "arg": "$parameters.properties.outputs", "item": {"type": "object", "props": [{"type": "string", "name": "type", "arg": "$parameters.properties.outputs[].type", "enum": {"items": [{"value": "Workspace"}]}}, {"type": "object", "name": "workspaceSettings", "arg": "$parameters.properties.outputs[].workspaceSettings", "props": [{"type": "string", "name": "workspaceResourceId", "arg": "$parameters.properties.outputs[].workspaceSettings.workspaceResourceId"}]}]}}, {"type": "object", "name": "source", "arg": "$parameters.properties.source", "props": [{"type": "integer32", "name": "port", "arg": "$parameters.properties.source.port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "name": "resourceId", "arg": "$parameters.properties.source.resourceId", "required": true}]}, {"type": "array<object>", "name": "testConfigurations", "arg": "$parameters.properties.testConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "httpConfiguration", "arg": "$parameters.properties.testConfigurations[].httpConfiguration", "props": [{"type": "string", "name": "method", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.method", "enum": {"items": [{"value": "Get"}, {"value": "Post"}]}}, {"type": "string", "name": "path", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.path"}, {"type": "integer32", "name": "port", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "boolean", "name": "preferHTTPS", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.preferHTTPS"}, {"type": "array<object>", "name": "requestHeaders", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.requestHeaders", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.requestHeaders[].name"}, {"type": "string", "name": "value", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.requestHeaders[].value"}]}}, {"type": "array<string>", "name": "validStatusCodeRanges", "arg": "$parameters.properties.testConfigurations[].httpConfiguration.validStatusCodeRanges", "item": {"type": "string"}}]}, {"type": "object", "name": "icmpConfiguration", "arg": "$parameters.properties.testConfigurations[].icmpConfiguration", "props": [{"type": "boolean", "name": "disableTraceRoute", "arg": "$parameters.properties.testConfigurations[].icmpConfiguration.disableTraceRoute"}]}, {"type": "string", "name": "name", "arg": "$parameters.properties.testConfigurations[].name", "required": true}, {"type": "string", "name": "preferredIPVersion", "arg": "$parameters.properties.testConfigurations[].preferredIPVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.testConfigurations[].protocol", "required": true, "enum": {"items": [{"value": "Http"}, {"value": "Icmp"}, {"value": "Tcp"}]}}, {"type": "object", "name": "successThreshold", "arg": "$parameters.properties.testConfigurations[].successThreshold", "props": [{"type": "integer32", "name": "checksFailedPercent", "arg": "$parameters.properties.testConfigurations[].successThreshold.checksFailedPercent"}, {"type": "float", "name": "roundTripTimeMs", "arg": "$parameters.properties.testConfigurations[].successThreshold.roundTripTimeMs"}]}, {"type": "object", "name": "tcpConfiguration", "arg": "$parameters.properties.testConfigurations[].tcpConfiguration", "props": [{"type": "string", "name": "destinationPortBehavior", "arg": "$parameters.properties.testConfigurations[].tcpConfiguration.destinationPortBehavior", "enum": {"items": [{"value": "ListenIfAvailable"}, {"value": "None"}]}}, {"type": "boolean", "name": "disableTraceRoute", "arg": "$parameters.properties.testConfigurations[].tcpConfiguration.disableTraceRoute"}, {"type": "integer32", "name": "port", "arg": "$parameters.properties.testConfigurations[].tcpConfiguration.port", "format": {"maximum": 65535, "minimum": 0}}]}, {"type": "integer32", "name": "testFrequencySec", "arg": "$parameters.properties.testConfigurations[].testFrequencySec"}]}}, {"type": "array<object>", "name": "testGroups", "arg": "$parameters.properties.testGroups", "item": {"type": "object", "props": [{"type": "array<string>", "name": "destinations", "arg": "$parameters.properties.testGroups[].destinations", "required": true, "item": {"type": "string"}}, {"type": "boolean", "name": "disable", "arg": "$parameters.properties.testGroups[].disable"}, {"type": "string", "name": "name", "arg": "$parameters.properties.testGroups[].name", "required": true}, {"type": "array<string>", "name": "sources", "arg": "$parameters.properties.testGroups[].sources", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "testConfigurations", "arg": "$parameters.properties.testGroups[].testConfigurations", "required": true, "item": {"type": "string"}}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/connectionMonitors/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": true}, "type": "boolean", "name": "autoStart"}, {"readOnly": true, "type": "string", "name": "connectionMonitorType", "enum": {"items": [{"value": "MultiEndpoint"}, {"value": "SingleSourceDestination"}]}}, {"type": "object", "name": "destination", "props": [{"type": "string", "name": "address"}, {"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "name": "resourceId"}]}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "address"}, {"type": "string", "name": "coverageLevel", "enum": {"items": [{"value": "AboveAverage"}, {"value": "Average"}, {"value": "BelowAverage"}, {"value": "Default"}, {"value": "Full"}, {"value": "Low"}]}}, {"type": "object", "name": "filter", "props": [{"type": "array<object>", "name": "items", "item": {"type": "object", "props": [{"type": "string", "name": "address"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "AgentAddress"}]}}]}}, {"type": "string", "name": "type", "enum": {"items": [{"value": "Include"}]}}]}, {"type": "string", "name": "name", "required": true}, {"type": "string", "name": "resourceId"}, {"type": "object", "name": "scope", "props": [{"type": "array<@ConnectionMonitorEndpointScopeItem_read>", "name": "exclude", "item": {"type": "@ConnectionMonitorEndpointScopeItem_read"}}, {"type": "array<object>", "name": "include", "item": {"type": "object", "props": [{"type": "string", "name": "address"}], "cls": "ConnectionMonitorEndpointScopeItem_read"}}]}, {"type": "string", "name": "type", "enum": {"items": [{"value": "AzureArcVM"}, {"value": "AzureSubnet"}, {"value": "AzureVM"}, {"value": "AzureVMSS"}, {"value": "AzureVNet"}, {"value": "ExternalAddress"}, {"value": "MMAWorkspaceMachine"}, {"value": "MMAWorkspaceNetwork"}]}}]}}, {"default": {"value": 60}, "type": "integer32", "name": "monitoringIntervalInSeconds", "format": {"maximum": 1800, "minimum": 30}}, {"readOnly": true, "type": "string", "name": "monitoringStatus"}, {"type": "string", "name": "notes"}, {"type": "array<object>", "name": "outputs", "item": {"type": "object", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Workspace"}]}}, {"type": "object", "name": "workspaceSettings", "props": [{"type": "string", "name": "workspaceResourceId"}]}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "source", "props": [{"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "string", "name": "resourceId", "required": true}]}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"type": "array<object>", "name": "testConfigurations", "item": {"type": "object", "props": [{"type": "object", "name": "httpConfiguration", "props": [{"type": "string", "name": "method", "enum": {"items": [{"value": "Get"}, {"value": "Post"}]}}, {"type": "string", "name": "path"}, {"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}, {"type": "boolean", "name": "preferHTTPS"}, {"type": "array<object>", "name": "requestHeaders", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "array<string>", "name": "validStatusCodeRanges", "item": {"type": "string"}}]}, {"type": "object", "name": "icmpConfiguration", "props": [{"type": "boolean", "name": "disableTraceRoute"}]}, {"type": "string", "name": "name", "required": true}, {"type": "string", "name": "preferredIPVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "protocol", "required": true, "enum": {"items": [{"value": "Http"}, {"value": "Icmp"}, {"value": "Tcp"}]}}, {"type": "object", "name": "successThreshold", "props": [{"type": "integer32", "name": "checksFailedPercent"}, {"type": "float", "name": "roundTripTimeMs"}]}, {"type": "object", "name": "tcpConfiguration", "props": [{"type": "string", "name": "destinationPortBehavior", "enum": {"items": [{"value": "ListenIfAvailable"}, {"value": "None"}]}}, {"type": "boolean", "name": "disableTraceRoute"}, {"type": "integer32", "name": "port", "format": {"maximum": 65535, "minimum": 0}}]}, {"type": "integer32", "name": "testFrequencySec"}]}}, {"type": "array<object>", "name": "testGroups", "item": {"type": "object", "props": [{"type": "array<string>", "name": "destinations", "required": true, "item": {"type": "string"}}, {"type": "boolean", "name": "disable"}, {"type": "string", "name": "name", "required": true}, {"type": "array<string>", "name": "sources", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "testConfigurations", "required": true, "item": {"type": "string"}}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}