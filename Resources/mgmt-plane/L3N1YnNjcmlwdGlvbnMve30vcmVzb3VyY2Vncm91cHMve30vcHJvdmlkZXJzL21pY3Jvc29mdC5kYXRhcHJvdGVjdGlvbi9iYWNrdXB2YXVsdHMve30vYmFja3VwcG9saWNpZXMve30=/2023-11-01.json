{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backuppolicies/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cFBvbGljaWVzL3tiYWNrdXBQb2xpY3lOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "commandGroups": [{"name": "dataprotection backup-policy", "commands": [{"name": "show", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backuppolicies/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cFBvbGljaWVzL3tiYWNrdXBQb2xpY3lOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupPolicyName", "options": ["n", "name", "backup-policy-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the policy"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}], "operations": [{"operationId": "BackupPolicies_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "backupPolicyName", "arg": "$Path.backupPolicyName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DataProtection/backupVaults/{}/backupPolicies/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "datasourceTypes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "BackupPolicy"}]}}], "discriminators": [{"property": "objectType", "value": "BackupPolicy", "props": [{"type": "array<object>", "name": "policyRules", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureBackupRule"}, {"value": "AzureRetentionRule"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupRule", "props": [{"type": "object", "name": "backupParameters", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureBackupParams"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupParams", "props": [{"type": "string", "name": "backupType", "required": true}]}]}, {"type": "object", "name": "dataStore", "required": true, "props": [{"type": "string", "name": "dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true}], "cls": "DataStoreInfoBase_read"}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AdhocBasedTriggerContext"}, {"value": "ScheduleBasedTriggerContext"}]}}], "discriminators": [{"property": "objectType", "value": "AdhocBasedTriggerContext", "props": [{"type": "object", "name": "taggingCriteria", "required": true, "props": [{"type": "object", "name": "tagInfo", "props": [{"readOnly": true, "type": "string", "name": "eTag"}, {"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "tagName", "required": true}], "cls": "RetentionTag_read"}]}]}, {"property": "objectType", "value": "ScheduleBasedTriggerContext", "props": [{"type": "object", "name": "schedule", "required": true, "props": [{"type": "array<string>", "name": "repeatingTimeIntervals", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "timeZone"}]}, {"type": "array<object>", "name": "taggingCriteria", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "criteria", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "ScheduleBasedBackupCriteria"}]}}], "discriminators": [{"property": "objectType", "value": "ScheduleBasedBackupCriteria", "props": [{"type": "array<string>", "name": "absoluteCriteria", "item": {"type": "string", "enum": {"items": [{"value": "AllBackup"}, {"value": "FirstOfDay"}, {"value": "FirstOfMonth"}, {"value": "FirstOfWeek"}, {"value": "FirstOfYear"}]}}}, {"type": "array<object>", "name": "daysOfMonth", "item": {"type": "object", "props": [{"type": "integer32", "name": "date"}, {"type": "boolean", "name": "isLast"}]}}, {"type": "array<string>", "name": "daysOfTheWeek", "item": {"type": "string", "enum": {"items": [{"value": "Friday"}, {"value": "Monday"}, {"value": "Saturday"}, {"value": "Sunday"}, {"value": "Thursday"}, {"value": "Tuesday"}, {"value": "Wednesday"}]}}}, {"type": "array<string>", "name": "monthsOfYear", "item": {"type": "string", "enum": {"items": [{"value": "April"}, {"value": "August"}, {"value": "December"}, {"value": "February"}, {"value": "January"}, {"value": "July"}, {"value": "June"}, {"value": "March"}, {"value": "May"}, {"value": "November"}, {"value": "October"}, {"value": "September"}]}}}, {"type": "array<dateTime>", "name": "scheduleTimes", "item": {"type": "dateTime"}}, {"type": "array<string>", "name": "weeksOfTheMonth", "item": {"type": "string", "enum": {"items": [{"value": "First"}, {"value": "Fourth"}, {"value": "Last"}, {"value": "Second"}, {"value": "Third"}]}}}]}]}}, {"type": "boolean", "name": "isDefault", "required": true}, {"type": "@RetentionTag_read", "name": "tagInfo", "required": true}, {"type": "integer64", "name": "taggingPriority", "required": true}]}}]}]}]}, {"property": "objectType", "value": "AzureRetentionRule", "props": [{"type": "boolean", "name": "isDefault"}, {"type": "array<object>", "name": "lifecycles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "deleteAfter", "required": true, "props": [{"type": "string", "name": "duration", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_read", "name": "sourceDataStore", "required": true}, {"type": "array<object>", "name": "targetDataStoreCopySettings", "item": {"type": "object", "props": [{"type": "object", "name": "copyAfter", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "CopyOnExpiryOption"}, {"value": "CustomCopyOption"}, {"value": "ImmediateCopyOption"}]}}], "discriminators": [{"property": "objectType", "value": "CustomCopyOption", "props": [{"type": "string", "name": "duration"}]}]}, {"type": "@DataStoreInfoBase_read", "name": "dataStore", "required": true}]}}]}}]}]}}]}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backuppolicies/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cFBvbGljaWVzL3tiYWNrdXBQb2xpY3lOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupPolicyName", "options": ["n", "name", "backup-policy-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the policy"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}], "operations": [{"operationId": "BackupPolicies_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "backupPolicyName", "arg": "$Path.backupPolicyName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backuppolicies/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cFBvbGljaWVzL3tiYWNrdXBQb2xpY3lOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupPolicyName", "options": ["n", "name", "backup-policy-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the policy"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}, {"type": "object", "var": "$parameters.properties.BackupPolicy", "options": ["policy"], "group": "", "help": {"short": "Request body for operation Expected value: json-string/@json-file."}, "args": [{"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules", "options": ["policy-rules"], "required": true, "group": "Policy", "help": {"short": "Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc"}, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule", "options": ["azure-backup-rule"], "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams", "options": ["azure-backup-params"], "group": "AzureBackupRule", "args": [{"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams.backupType", "options": ["backup-type"], "required": true, "help": {"short": "BackupType ; Full/Incremental etc"}}]}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.dataStore", "options": ["data-store"], "required": true, "group": "AzureBackupRule", "help": {"short": "DataStoreInfo base"}, "args": [{"type": "string", "var": "@DataStoreInfoBase_create.dataStoreType", "options": ["data-store-type"], "required": true, "help": {"short": "type of datastore; Operational/Vault/Archive"}, "enum": {"items": [{"name": "ArchiveStore", "value": "ArchiveStore"}, {"name": "OperationalStore", "value": "OperationalStore"}, {"name": "VaultStore", "value": "VaultStore"}]}}, {"type": "string", "var": "@DataStoreInfoBase_create.objectType", "options": ["object-type"], "required": true, "help": {"short": "Type of Datasource object, used to initialize the right inherited type"}}], "cls": "DataStoreInfoBase_create"}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext", "options": ["adhoc-based-trigger-context"], "group": "AzureBackupRule", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria", "options": ["tagging-criteria"], "required": true, "help": {"short": "Tagging Criteria containing retention tag for adhoc backup."}, "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria.tagInfo", "options": ["tag-info"], "help": {"short": "Retention tag information"}, "args": [{"type": "string", "var": "@RetentionTag_create.tagName", "options": ["tag-name"], "required": true, "help": {"short": "Retention Tag Name to relate it to retention rule."}}], "cls": "RetentionTag_create"}]}]}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext", "options": ["schedule-based-trigger-context"], "group": "AzureBackupRule", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule", "options": ["schedule"], "required": true, "help": {"short": "Schedule for this backup"}, "args": [{"type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.repeatingTimeIntervals", "options": ["repeating-time-intervals"], "required": true, "help": {"short": "ISO 8601 repeating time interval format"}, "item": {"type": "string"}}, {"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.timeZone", "options": ["time-zone"], "help": {"short": "Time zone for a schedule. Example: Pacific Standard Time"}}]}, {"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria", "options": ["tagging-criteria"], "required": true, "help": {"short": "List of tags that can be applicable for given schedule."}, "item": {"type": "object", "args": [{"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria", "options": ["criteria"], "help": {"short": "Criteria which decides whether the tag can be applied to a triggered backup."}, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria", "options": ["schedule-based-backup-criteria"], "args": [{"type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.absoluteCriteria", "options": ["absolute-criteria"], "group": "", "help": {"short": "it contains absolute values like \"AllBackup\" / \"FirstOfDay\" / \"FirstOfWeek\" / \"FirstOfMonth\" and should be a part of AbsoluteMarker enum"}, "item": {"type": "string", "enum": {"items": [{"name": "AllBackup", "value": "AllBackup"}, {"name": "FirstOfDay", "value": "FirstOfDay"}, {"name": "FirstOfMonth", "value": "FirstOfMonth"}, {"name": "FirstOfWeek", "value": "FirstOfWeek"}, {"name": "FirstOfYear", "value": "FirstOfYear"}]}}}, {"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth", "options": ["days-of-month"], "help": {"short": "This is day of the month from 1 to 28 other wise last of month"}, "item": {"type": "object", "args": [{"type": "integer32", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].date", "options": ["date"], "help": {"short": "Date of the month"}}, {"type": "boolean", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].isLast", "options": ["is-last"], "help": {"short": "Whether Date is last date of month"}}]}}, {"type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfTheWeek", "options": ["days-of-the-week"], "help": {"short": "It should be Sunday/Monday/T..../Saturday"}, "item": {"type": "string", "enum": {"items": [{"name": "Friday", "value": "Friday"}, {"name": "Monday", "value": "Monday"}, {"name": "Saturday", "value": "Saturday"}, {"name": "Sunday", "value": "Sunday"}, {"name": "Thursday", "value": "Thursday"}, {"name": "Tuesday", "value": "Tuesday"}, {"name": "Wednesday", "value": "Wednesday"}]}}}, {"type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.monthsOfYear", "options": ["months-of-year"], "help": {"short": "It should be January/February/....../December"}, "item": {"type": "string", "enum": {"items": [{"name": "April", "value": "April"}, {"name": "August", "value": "August"}, {"name": "December", "value": "December"}, {"name": "February", "value": "February"}, {"name": "January", "value": "January"}, {"name": "July", "value": "July"}, {"name": "June", "value": "June"}, {"name": "March", "value": "March"}, {"name": "May", "value": "May"}, {"name": "November", "value": "November"}, {"name": "October", "value": "October"}, {"name": "September", "value": "September"}]}}}, {"type": "array<dateTime>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.scheduleTimes", "options": ["schedule-times"], "help": {"short": "List of schedule times for backup"}, "item": {"type": "dateTime"}}, {"type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.weeksOfTheMonth", "options": ["weeks-of-the-month"], "help": {"short": "It should be First/Second/Third/Fourth/Last"}, "item": {"type": "string", "enum": {"items": [{"name": "First", "value": "First"}, {"name": "Fourth", "value": "Fourth"}, {"name": "Last", "value": "Last"}, {"name": "Second", "value": "Second"}, {"name": "Third", "value": "Third"}]}}}]}]}}, {"type": "boolean", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].isDefault", "options": ["is-default"], "required": true, "help": {"short": "Specifies if tag is default."}}, {"type": "@RetentionTag_create", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].tagInfo", "options": ["tag-info"], "required": true, "help": {"short": "Retention tag information"}}, {"type": "integer64", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].taggingPriority", "options": ["tagging-priority"], "required": true, "help": {"short": "Retention Tag priority."}}]}}]}]}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule", "options": ["azure-retention-rule"], "args": [{"type": "boolean", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.isDefault", "options": ["is-default"]}, {"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles", "options": ["lifecycles"], "required": true, "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter", "options": ["delete-after"], "required": true, "help": {"short": "Delete Option"}, "args": [{"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.duration", "options": ["duration"], "required": true, "help": {"short": "Duration of deletion after given timespan"}}, {"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.objectType", "options": ["object-type"], "required": true, "help": {"short": "Type of the specific object - used for deserializing"}, "enum": {"items": [{"name": "AbsoluteDeleteOption", "value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_create", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].sourceDataStore", "options": ["source-data-store"], "required": true}, {"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings", "options": ["target-data-store-copy-settings"], "item": {"type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter", "options": ["copy-after"], "required": true, "help": {"short": "It can be CustomCopyOption or ImmediateCopyOption."}, "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption", "options": ["custom-copy-option"], "args": [{"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption.duration", "options": ["duration"], "help": {"short": "Data copied after given timespan"}}]}]}, {"type": "@DataStoreInfoBase_create", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].dataStore", "options": ["data-store"], "required": true, "help": {"short": "Info of target datastore"}}]}}]}}]}, {"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].name", "options": ["name"], "required": true}]}}]}]}, {"name": "Properties", "args": [{"type": "array<string>", "var": "$parameters.properties.datasourceTypes", "options": ["datasource-types"], "hide": true, "group": "Properties", "help": {"short": "Type of datasource for the backup management"}, "item": {"type": "string"}}]}], "operations": [{"operationId": "BackupPolicies_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "backupPolicyName", "arg": "$Path.backupPolicyName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "datasourceTypes", "arg": "$parameters.properties.datasourceTypes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy", "value": "BackupPolicy"}]}}], "discriminators": [{"property": "objectType", "value": "BackupPolicy", "props": [{"type": "array<object>", "name": "policyRules", "arg": "$parameters.properties.BackupPolicy.policyRules", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.BackupPolicy.policyRules[].name", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule", "value": "AzureBackupRule"}, {"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule", "value": "AzureRetentionRule"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupRule", "props": [{"type": "object", "name": "backupParameters", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams", "value": "AzureBackupParams"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupParams", "props": [{"type": "string", "name": "backupType", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams.backupType", "required": true}]}]}, {"type": "object", "name": "dataStore", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.dataStore", "required": true, "props": [{"type": "string", "name": "dataStoreType", "arg": "@DataStoreInfoBase_create.dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "arg": "@DataStoreInfoBase_create.objectType", "required": true}], "cls": "DataStoreInfoBase_create"}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext", "value": "AdhocBasedTriggerContext"}, {"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext", "value": "ScheduleBasedTriggerContext"}]}}], "discriminators": [{"property": "objectType", "value": "AdhocBasedTriggerContext", "props": [{"type": "object", "name": "taggingCriteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria", "required": true, "props": [{"type": "object", "name": "tagInfo", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria.tagInfo", "props": [{"type": "string", "name": "tagName", "arg": "@RetentionTag_create.tagName", "required": true}], "cls": "RetentionTag_create"}]}]}, {"property": "objectType", "value": "ScheduleBasedTriggerContext", "props": [{"type": "object", "name": "schedule", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule", "required": true, "props": [{"type": "array<string>", "name": "repeatingTimeIntervals", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.repeatingTimeIntervals", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "timeZone", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.timeZone"}]}, {"type": "array<object>", "name": "taggingCriteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "criteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria", "value": "ScheduleBasedBackupCriteria"}]}}], "discriminators": [{"property": "objectType", "value": "ScheduleBasedBackupCriteria", "props": [{"type": "array<string>", "name": "absoluteCriteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.absoluteCriteria", "item": {"type": "string", "enum": {"items": [{"value": "AllBackup"}, {"value": "FirstOfDay"}, {"value": "FirstOfMonth"}, {"value": "FirstOfWeek"}, {"value": "FirstOfYear"}]}}}, {"type": "array<object>", "name": "daysOfMonth", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth", "item": {"type": "object", "props": [{"type": "integer32", "name": "date", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].date"}, {"type": "boolean", "name": "isLast", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].isLast"}]}}, {"type": "array<string>", "name": "daysOfTheWeek", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfTheWeek", "item": {"type": "string", "enum": {"items": [{"value": "Friday"}, {"value": "Monday"}, {"value": "Saturday"}, {"value": "Sunday"}, {"value": "Thursday"}, {"value": "Tuesday"}, {"value": "Wednesday"}]}}}, {"type": "array<string>", "name": "monthsOfYear", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.monthsOfYear", "item": {"type": "string", "enum": {"items": [{"value": "April"}, {"value": "August"}, {"value": "December"}, {"value": "February"}, {"value": "January"}, {"value": "July"}, {"value": "June"}, {"value": "March"}, {"value": "May"}, {"value": "November"}, {"value": "October"}, {"value": "September"}]}}}, {"type": "array<dateTime>", "name": "scheduleTimes", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.scheduleTimes", "item": {"type": "dateTime"}}, {"type": "array<string>", "name": "weeksOfTheMonth", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.weeksOfTheMonth", "item": {"type": "string", "enum": {"items": [{"value": "First"}, {"value": "Fourth"}, {"value": "Last"}, {"value": "Second"}, {"value": "Third"}]}}}]}]}}, {"type": "boolean", "name": "isDefault", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].isDefault", "required": true}, {"type": "@RetentionTag_create", "name": "tagInfo", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].tagInfo", "required": true}, {"type": "integer64", "name": "taggingPriority", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].taggingPriority", "required": true}]}}]}]}]}, {"property": "objectType", "value": "AzureRetentionRule", "props": [{"type": "boolean", "name": "isDefault", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.isDefault"}, {"type": "array<object>", "name": "lifecycles", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "deleteAfter", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter", "required": true, "props": [{"type": "string", "name": "duration", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.duration", "required": true}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.objectType", "required": true, "enum": {"items": [{"value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_create", "name": "sourceDataStore", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].sourceDataStore", "required": true}, {"type": "array<object>", "name": "targetDataStoreCopySettings", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings", "item": {"type": "object", "props": [{"type": "object", "name": "copyAfter", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "CopyOnExpiryOption"}, {"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption", "value": "CustomCopyOption"}, {"value": "ImmediateCopyOption"}]}}], "discriminators": [{"property": "objectType", "value": "CustomCopyOption", "props": [{"type": "string", "name": "duration", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption.duration"}]}]}, {"type": "@DataStoreInfoBase_create", "name": "dataStore", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].dataStore", "required": true}]}}]}}]}]}}]}]}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DataProtection/backupVaults/{}/backupPolicies/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "datasourceTypes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "BackupPolicy"}]}}], "discriminators": [{"property": "objectType", "value": "BackupPolicy", "props": [{"type": "array<object>", "name": "policyRules", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureBackupRule"}, {"value": "AzureRetentionRule"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupRule", "props": [{"type": "object", "name": "backupParameters", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureBackupParams"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupParams", "props": [{"type": "string", "name": "backupType", "required": true}]}]}, {"type": "object", "name": "dataStore", "required": true, "props": [{"type": "string", "name": "dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true}], "cls": "DataStoreInfoBase_read"}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AdhocBasedTriggerContext"}, {"value": "ScheduleBasedTriggerContext"}]}}], "discriminators": [{"property": "objectType", "value": "AdhocBasedTriggerContext", "props": [{"type": "object", "name": "taggingCriteria", "required": true, "props": [{"type": "object", "name": "tagInfo", "props": [{"readOnly": true, "type": "string", "name": "eTag"}, {"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "tagName", "required": true}], "cls": "RetentionTag_read"}]}]}, {"property": "objectType", "value": "ScheduleBasedTriggerContext", "props": [{"type": "object", "name": "schedule", "required": true, "props": [{"type": "array<string>", "name": "repeatingTimeIntervals", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "timeZone"}]}, {"type": "array<object>", "name": "taggingCriteria", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "criteria", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "ScheduleBasedBackupCriteria"}]}}], "discriminators": [{"property": "objectType", "value": "ScheduleBasedBackupCriteria", "props": [{"type": "array<string>", "name": "absoluteCriteria", "item": {"type": "string", "enum": {"items": [{"value": "AllBackup"}, {"value": "FirstOfDay"}, {"value": "FirstOfMonth"}, {"value": "FirstOfWeek"}, {"value": "FirstOfYear"}]}}}, {"type": "array<object>", "name": "daysOfMonth", "item": {"type": "object", "props": [{"type": "integer32", "name": "date"}, {"type": "boolean", "name": "isLast"}]}}, {"type": "array<string>", "name": "daysOfTheWeek", "item": {"type": "string", "enum": {"items": [{"value": "Friday"}, {"value": "Monday"}, {"value": "Saturday"}, {"value": "Sunday"}, {"value": "Thursday"}, {"value": "Tuesday"}, {"value": "Wednesday"}]}}}, {"type": "array<string>", "name": "monthsOfYear", "item": {"type": "string", "enum": {"items": [{"value": "April"}, {"value": "August"}, {"value": "December"}, {"value": "February"}, {"value": "January"}, {"value": "July"}, {"value": "June"}, {"value": "March"}, {"value": "May"}, {"value": "November"}, {"value": "October"}, {"value": "September"}]}}}, {"type": "array<dateTime>", "name": "scheduleTimes", "item": {"type": "dateTime"}}, {"type": "array<string>", "name": "weeksOfTheMonth", "item": {"type": "string", "enum": {"items": [{"value": "First"}, {"value": "Fourth"}, {"value": "Last"}, {"value": "Second"}, {"value": "Third"}]}}}]}]}}, {"type": "boolean", "name": "isDefault", "required": true}, {"type": "@RetentionTag_read", "name": "tagInfo", "required": true}, {"type": "integer64", "name": "taggingPriority", "required": true}]}}]}]}]}, {"property": "objectType", "value": "AzureRetentionRule", "props": [{"type": "boolean", "name": "isDefault"}, {"type": "array<object>", "name": "lifecycles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "deleteAfter", "required": true, "props": [{"type": "string", "name": "duration", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_read", "name": "sourceDataStore", "required": true}, {"type": "array<object>", "name": "targetDataStoreCopySettings", "item": {"type": "object", "props": [{"type": "object", "name": "copyAfter", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "CopyOnExpiryOption"}, {"value": "CustomCopyOption"}, {"value": "ImmediateCopyOption"}]}}], "discriminators": [{"property": "objectType", "value": "CustomCopyOption", "props": [{"type": "string", "name": "duration"}]}]}, {"type": "@DataStoreInfoBase_read", "name": "dataStore", "required": true}]}}]}}]}]}}]}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2023-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backuppolicies/{}", "version": "2023-11-01", "swagger": "mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cFBvbGljaWVzL3tiYWNrdXBQb2xpY3lOYW1lfQ==/V/MjAyMy0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.backupPolicyName", "options": ["n", "name", "backup-policy-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the policy"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vaultName", "options": ["v", "vault-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the backup vault."}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy", "options": ["policy"], "group": "Properties", "help": {"short": "Request body for operation Expected value: json-                                                 string/@json-file."}, "args": [{"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules", "options": ["policy-rules"], "help": {"short": "Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc"}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule", "options": ["azure-backup-rule"], "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters", "options": ["backup-parameters"], "help": {"short": "BackupParameters base"}, "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams", "options": ["azure-backup-params"], "args": [{"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams.backupType", "options": ["backup-type"], "help": {"short": "BackupType ; Full/Incremental etc"}}]}]}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.dataStore", "options": ["data-store"], "help": {"short": "DataStoreInfo base"}, "args": [{"type": "string", "var": "@DataStoreInfoBase_update.dataStoreType", "options": ["data-store-type"], "help": {"short": "type of datastore; Operational/Vault/Archive"}, "enum": {"items": [{"name": "ArchiveStore", "value": "ArchiveStore"}, {"name": "OperationalStore", "value": "OperationalStore"}, {"name": "VaultStore", "value": "VaultStore"}]}}, {"type": "string", "var": "@DataStoreInfoBase_update.objectType", "options": ["object-type"], "help": {"short": "Type of Datasource object, used to initialize the right inherited type"}}], "cls": "DataStoreInfoBase_update"}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger", "options": ["trigger"], "help": {"short": "Trigger context"}, "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext", "options": ["adhoc-based-trigger-context"], "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria", "options": ["tagging-criteria"], "help": {"short": "Tagging Criteria containing retention tag for adhoc backup."}, "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria.tagInfo", "options": ["tag-info"], "help": {"short": "Retention tag information"}, "args": [{"type": "string", "var": "@RetentionTag_update.tagName", "options": ["tag-name"], "help": {"short": "Retention Tag Name to relate it to retention rule."}}], "cls": "RetentionTag_update"}]}]}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext", "options": ["schedule-based-trigger-context"], "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule", "options": ["schedule"], "help": {"short": "Schedule for this backup"}, "args": [{"type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.repeatingTimeIntervals", "options": ["repeating-time-intervals"], "help": {"short": "ISO 8601 repeating time interval format"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.timeZone", "options": ["time-zone"], "help": {"short": "Time zone for a schedule. Example: Pacific Standard Time"}}]}, {"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria", "options": ["tagging-criteria"], "help": {"short": "List of tags that can be applicable for given schedule."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria", "options": ["criteria"], "help": {"short": "Criteria which decides whether the tag can be applied to a triggered backup."}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria", "options": ["schedule-based-backup-criteria"], "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.absoluteCriteria", "options": ["absolute-criteria"], "group": "", "help": {"short": "it contains absolute values like \"AllBackup\" / \"FirstOfDay\" / \"FirstOfWeek\" / \"FirstOfMonth\" and should be a part of AbsoluteMarker enum"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "AllBackup", "value": "AllBackup"}, {"name": "FirstOfDay", "value": "FirstOfDay"}, {"name": "FirstOfMonth", "value": "FirstOfMonth"}, {"name": "FirstOfWeek", "value": "FirstOfWeek"}, {"name": "FirstOfYear", "value": "FirstOfYear"}]}}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth", "options": ["days-of-month"], "help": {"short": "This is day of the month from 1 to 28 other wise last of month"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "integer32", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].date", "options": ["date"], "help": {"short": "Date of the month"}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].isLast", "options": ["is-last"], "help": {"short": "Whether Date is last date of month"}}]}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfTheWeek", "options": ["days-of-the-week"], "help": {"short": "It should be Sunday/Monday/T..../Saturday"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Friday", "value": "Friday"}, {"name": "Monday", "value": "Monday"}, {"name": "Saturday", "value": "Saturday"}, {"name": "Sunday", "value": "Sunday"}, {"name": "Thursday", "value": "Thursday"}, {"name": "Tuesday", "value": "Tuesday"}, {"name": "Wednesday", "value": "Wednesday"}]}}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.monthsOfYear", "options": ["months-of-year"], "help": {"short": "It should be January/February/....../December"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "April", "value": "April"}, {"name": "August", "value": "August"}, {"name": "December", "value": "December"}, {"name": "February", "value": "February"}, {"name": "January", "value": "January"}, {"name": "July", "value": "July"}, {"name": "June", "value": "June"}, {"name": "March", "value": "March"}, {"name": "May", "value": "May"}, {"name": "November", "value": "November"}, {"name": "October", "value": "October"}, {"name": "September", "value": "September"}]}}}, {"nullable": true, "type": "array<dateTime>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.scheduleTimes", "options": ["schedule-times"], "help": {"short": "List of schedule times for backup"}, "item": {"nullable": true, "type": "dateTime"}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.weeksOfTheMonth", "options": ["weeks-of-the-month"], "help": {"short": "It should be First/Second/Third/Fourth/Last"}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "First", "value": "First"}, {"name": "Fourth", "value": "Fourth"}, {"name": "Last", "value": "Last"}, {"name": "Second", "value": "Second"}, {"name": "Third", "value": "Third"}]}}}]}]}}, {"type": "boolean", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].isDefault", "options": ["is-default"], "help": {"short": "Specifies if tag is default."}}, {"type": "@RetentionTag_update", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].tagInfo", "options": ["tag-info"], "help": {"short": "Retention tag information"}}, {"type": "integer64", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].taggingPriority", "options": ["tagging-priority"], "help": {"short": "Retention Tag priority."}}]}}]}]}]}, {"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule", "options": ["azure-retention-rule"], "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.isDefault", "options": ["is-default"]}, {"type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles", "options": ["lifecycles"], "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter", "options": ["delete-after"], "help": {"short": "Delete Option"}, "args": [{"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.duration", "options": ["duration"], "help": {"short": "Duration of deletion after given timespan"}}, {"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.objectType", "options": ["object-type"], "help": {"short": "Type of the specific object - used for deserializing"}, "enum": {"items": [{"name": "AbsoluteDeleteOption", "value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_update", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].sourceDataStore", "options": ["source-data-store"]}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings", "options": ["target-data-store-copy-settings"], "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter", "options": ["copy-after"], "help": {"short": "It can be CustomCopyOption or ImmediateCopyOption."}, "args": [{"type": "object", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption", "options": ["custom-copy-option"], "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption.duration", "options": ["duration"], "help": {"short": "Data copied after given timespan"}}]}]}, {"type": "@DataStoreInfoBase_update", "var": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].dataStore", "options": ["data-store"], "help": {"short": "Info of target datastore"}}]}}]}}]}, {"type": "string", "var": "$parameters.properties.BackupPolicy.policyRules[].name", "options": ["name"]}]}}]}, {"type": "array<string>", "var": "$parameters.properties.datasourceTypes", "options": ["datasource-types"], "group": "Properties", "help": {"short": "Type of datasource for the backup management"}, "item": {"nullable": true, "type": "string"}}]}], "operations": [{"operationId": "BackupPolicies_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "backupPolicyName", "arg": "$Path.backupPolicyName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DataProtection/backupVaults/{}/backupPolicies/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "datasourceTypes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "BackupPolicy"}]}}], "discriminators": [{"property": "objectType", "value": "BackupPolicy", "props": [{"type": "array<object>", "name": "policyRules", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureBackupRule"}, {"value": "AzureRetentionRule"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupRule", "props": [{"type": "object", "name": "backupParameters", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AzureBackupParams"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupParams", "props": [{"type": "string", "name": "backupType", "required": true}]}]}, {"type": "object", "name": "dataStore", "required": true, "props": [{"type": "string", "name": "dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "required": true}], "cls": "DataStoreInfoBase_read"}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AdhocBasedTriggerContext"}, {"value": "ScheduleBasedTriggerContext"}]}}], "discriminators": [{"property": "objectType", "value": "AdhocBasedTriggerContext", "props": [{"type": "object", "name": "taggingCriteria", "required": true, "props": [{"type": "object", "name": "tagInfo", "props": [{"readOnly": true, "type": "string", "name": "eTag"}, {"readOnly": true, "type": "string", "name": "id"}, {"type": "string", "name": "tagName", "required": true}], "cls": "RetentionTag_read"}]}]}, {"property": "objectType", "value": "ScheduleBasedTriggerContext", "props": [{"type": "object", "name": "schedule", "required": true, "props": [{"type": "array<string>", "name": "repeatingTimeIntervals", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "timeZone"}]}, {"type": "array<object>", "name": "taggingCriteria", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "criteria", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "ScheduleBasedBackupCriteria"}]}}], "discriminators": [{"property": "objectType", "value": "ScheduleBasedBackupCriteria", "props": [{"type": "array<string>", "name": "absoluteCriteria", "item": {"type": "string", "enum": {"items": [{"value": "AllBackup"}, {"value": "FirstOfDay"}, {"value": "FirstOfMonth"}, {"value": "FirstOfWeek"}, {"value": "FirstOfYear"}]}}}, {"type": "array<object>", "name": "daysOfMonth", "item": {"type": "object", "props": [{"type": "integer32", "name": "date"}, {"type": "boolean", "name": "isLast"}]}}, {"type": "array<string>", "name": "daysOfTheWeek", "item": {"type": "string", "enum": {"items": [{"value": "Friday"}, {"value": "Monday"}, {"value": "Saturday"}, {"value": "Sunday"}, {"value": "Thursday"}, {"value": "Tuesday"}, {"value": "Wednesday"}]}}}, {"type": "array<string>", "name": "monthsOfYear", "item": {"type": "string", "enum": {"items": [{"value": "April"}, {"value": "August"}, {"value": "December"}, {"value": "February"}, {"value": "January"}, {"value": "July"}, {"value": "June"}, {"value": "March"}, {"value": "May"}, {"value": "November"}, {"value": "October"}, {"value": "September"}]}}}, {"type": "array<dateTime>", "name": "scheduleTimes", "item": {"type": "dateTime"}}, {"type": "array<string>", "name": "weeksOfTheMonth", "item": {"type": "string", "enum": {"items": [{"value": "First"}, {"value": "Fourth"}, {"value": "Last"}, {"value": "Second"}, {"value": "Third"}]}}}]}]}}, {"type": "boolean", "name": "isDefault", "required": true}, {"type": "@RetentionTag_read", "name": "tagInfo", "required": true}, {"type": "integer64", "name": "taggingPriority", "required": true}]}}]}]}]}, {"property": "objectType", "value": "AzureRetentionRule", "props": [{"type": "boolean", "name": "isDefault"}, {"type": "array<object>", "name": "lifecycles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "deleteAfter", "required": true, "props": [{"type": "string", "name": "duration", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_read", "name": "sourceDataStore", "required": true}, {"type": "array<object>", "name": "targetDataStoreCopySettings", "item": {"type": "object", "props": [{"type": "object", "name": "copyAfter", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "CopyOnExpiryOption"}, {"value": "CustomCopyOption"}, {"value": "ImmediateCopyOption"}]}}], "discriminators": [{"property": "objectType", "value": "CustomCopyOption", "props": [{"type": "string", "name": "duration"}]}]}, {"type": "@DataStoreInfoBase_read", "name": "dataStore", "required": true}]}}]}}]}]}}]}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "BaseBackupPolicyResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<string>", "name": "datasourceTypes", "arg": "$parameters.properties.datasourceTypes", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy", "value": "BackupPolicy"}]}}], "discriminators": [{"property": "objectType", "value": "BackupPolicy", "props": [{"type": "array<object>", "name": "policyRules", "arg": "$parameters.properties.BackupPolicy.policyRules", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.BackupPolicy.policyRules[].name", "required": true}, {"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule", "value": "AzureBackupRule"}, {"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule", "value": "AzureRetentionRule"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupRule", "props": [{"type": "object", "name": "backupParameters", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams", "value": "AzureBackupParams"}]}}], "discriminators": [{"property": "objectType", "value": "AzureBackupParams", "props": [{"type": "string", "name": "backupType", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.backupParameters.AzureBackupParams.backupType", "required": true}]}]}, {"type": "object", "name": "dataStore", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.dataStore", "required": true, "props": [{"type": "string", "name": "dataStoreType", "arg": "@DataStoreInfoBase_update.dataStoreType", "required": true, "enum": {"items": [{"value": "ArchiveStore"}, {"value": "OperationalStore"}, {"value": "VaultStore"}]}}, {"type": "string", "name": "objectType", "arg": "@DataStoreInfoBase_update.objectType", "required": true}], "cls": "DataStoreInfoBase_update"}, {"type": "object", "name": "trigger", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext", "value": "AdhocBasedTriggerContext"}, {"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext", "value": "ScheduleBasedTriggerContext"}]}}], "discriminators": [{"property": "objectType", "value": "AdhocBasedTriggerContext", "props": [{"type": "object", "name": "taggingCriteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria", "required": true, "props": [{"type": "object", "name": "tagInfo", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.AdhocBasedTriggerContext.taggingCriteria.tagInfo", "props": [{"type": "string", "name": "tagName", "arg": "@RetentionTag_update.tagName", "required": true}], "cls": "RetentionTag_update"}]}]}, {"property": "objectType", "value": "ScheduleBasedTriggerContext", "props": [{"type": "object", "name": "schedule", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule", "required": true, "props": [{"type": "array<string>", "name": "repeatingTimeIntervals", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.repeatingTimeIntervals", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "timeZone", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.schedule.timeZone"}]}, {"type": "array<object>", "name": "taggingCriteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria", "required": true, "item": {"type": "object", "props": [{"type": "array<object>", "name": "criteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria", "item": {"type": "object", "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria", "value": "ScheduleBasedBackupCriteria"}]}}], "discriminators": [{"property": "objectType", "value": "ScheduleBasedBackupCriteria", "props": [{"type": "array<string>", "name": "absoluteCriteria", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.absoluteCriteria", "item": {"type": "string", "enum": {"items": [{"value": "AllBackup"}, {"value": "FirstOfDay"}, {"value": "FirstOfMonth"}, {"value": "FirstOfWeek"}, {"value": "FirstOfYear"}]}}}, {"type": "array<object>", "name": "daysOfMonth", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth", "item": {"type": "object", "props": [{"type": "integer32", "name": "date", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].date"}, {"type": "boolean", "name": "isLast", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfMonth[].isLast"}]}}, {"type": "array<string>", "name": "daysOfTheWeek", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.daysOfTheWeek", "item": {"type": "string", "enum": {"items": [{"value": "Friday"}, {"value": "Monday"}, {"value": "Saturday"}, {"value": "Sunday"}, {"value": "Thursday"}, {"value": "Tuesday"}, {"value": "Wednesday"}]}}}, {"type": "array<string>", "name": "monthsOfYear", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.monthsOfYear", "item": {"type": "string", "enum": {"items": [{"value": "April"}, {"value": "August"}, {"value": "December"}, {"value": "February"}, {"value": "January"}, {"value": "July"}, {"value": "June"}, {"value": "March"}, {"value": "May"}, {"value": "November"}, {"value": "October"}, {"value": "September"}]}}}, {"type": "array<dateTime>", "name": "scheduleTimes", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.scheduleTimes", "item": {"type": "dateTime"}}, {"type": "array<string>", "name": "weeksOfTheMonth", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].criteria[].ScheduleBasedBackupCriteria.weeksOfTheMonth", "item": {"type": "string", "enum": {"items": [{"value": "First"}, {"value": "Fourth"}, {"value": "Last"}, {"value": "Second"}, {"value": "Third"}]}}}]}]}}, {"type": "boolean", "name": "isDefault", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].isDefault", "required": true}, {"type": "@RetentionTag_update", "name": "tagInfo", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].tagInfo", "required": true}, {"type": "integer64", "name": "taggingPriority", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureBackupRule.trigger.ScheduleBasedTriggerContext.taggingCriteria[].taggingPriority", "required": true}]}}]}]}]}, {"property": "objectType", "value": "AzureRetentionRule", "props": [{"type": "boolean", "name": "isDefault", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.isDefault"}, {"type": "array<object>", "name": "lifecycles", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "deleteAfter", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter", "required": true, "props": [{"type": "string", "name": "duration", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.duration", "required": true}, {"type": "string", "name": "objectType", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].deleteAfter.objectType", "required": true, "enum": {"items": [{"value": "AbsoluteDeleteOption"}]}}]}, {"type": "@DataStoreInfoBase_update", "name": "sourceDataStore", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].sourceDataStore", "required": true}, {"type": "array<object>", "name": "targetDataStoreCopySettings", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings", "item": {"type": "object", "props": [{"type": "object", "name": "copyAfter", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter", "required": true, "props": [{"type": "string", "name": "objectType", "required": true, "enum": {"items": [{"value": "CopyOnExpiryOption"}, {"arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption", "value": "CustomCopyOption"}, {"value": "ImmediateCopyOption"}]}}], "discriminators": [{"property": "objectType", "value": "CustomCopyOption", "props": [{"type": "string", "name": "duration", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].copyAfter.CustomCopyOption.duration"}]}]}, {"type": "@DataStoreInfoBase_update", "name": "dataStore", "arg": "$parameters.properties.BackupPolicy.policyRules[].AzureRetentionRule.lifecycles[].targetDataStoreCopySettings[].dataStore", "required": true}]}}]}}]}]}}]}]}], "clientFlatten": true}}}}, {"operationId": "BackupPolicies_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "backupPolicyName", "arg": "$Path.backupPolicyName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vaultName", "arg": "$Path.vaultName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-11-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "@BaseBackupPolicyResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}