<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/authorizedapplications/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2F1dGhvcml6ZWRBcHBsaWNhdGlvbnMve2FwcGxpY2F0aW9uSWR9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
  <commandGroup name="providerhub authorized-application">
    <command name="show" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/authorizedapplications/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2F1dGhvcml6ZWRBcHBsaWNhdGlvbnMve2FwcGxpY2F0aW9uSWR9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="uuid" var="$Path.applicationId" options="application-id name n" required="True" idPart="child_name_1">
          <help short="The application ID."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AuthorizedApplications_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}">
          <request method="get">
            <path>
              <param type="uuid" name="applicationId" arg="$Path.applicationId" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}/authorizedApplications/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="dataAuthorizations" identifiers="role">
                      <item type="object">
                        <prop type="array<string>" name="resourceTypes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="role" required="True">
                          <enum>
                            <item value="&quot;LimitedOwner&quot;"/>
                            <item value="&quot;ServiceOwner&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="providerAuthorization">
                      <prop type="string" name="managedByRoleDefinitionId"/>
                      <prop type="string" name="roleDefinitionId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-04-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/authorizedapplications/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2F1dGhvcml6ZWRBcHBsaWNhdGlvbnMve2FwcGxpY2F0aW9uSWR9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="uuid" var="$Path.applicationId" options="application-id name n" required="True" idPart="child_name_1">
          <help short="The application ID."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AuthorizedApplications_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}">
          <request method="delete">
            <path>
              <param type="uuid" name="applicationId" arg="$Path.applicationId" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/authorizedapplications/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2F1dGhvcml6ZWRBcHBsaWNhdGlvbnMve2FwcGxpY2F0aW9uSWR9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="uuid" var="$Path.applicationId" options="application-id name n" required="True" idPart="child_name_1">
          <help short="The application ID."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$properties.properties.dataAuthorizations" options="data-authorizations" group="Properties">
          <help short="The authorizations that determine the level of data access permissions on the specified resource types."/>
          <item type="object">
            <arg type="array<string>" var="$properties.properties.dataAuthorizations[].resourceTypes" options="resource-types">
              <help short="The resource types from the defined resource types in the provider namespace that the application can access. If no resource types are specified and the role is service owner, the default is * which is all resource types"/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$properties.properties.dataAuthorizations[].role" options="role" required="True">
              <help short="The ownership role the application has on the resource types. The service owner role gives the application owner permissions. The limited owner role gives elevated permissions but does not allow all the permissions of a service owner, such as read/write on internal metadata."/>
              <enum>
                <item name="LimitedOwner" value="&quot;LimitedOwner&quot;"/>
                <item name="ServiceOwner" value="&quot;ServiceOwner&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$properties.properties.providerAuthorization" options="provider-authorization" group="Properties">
          <help short="The resource provider authorization."/>
          <arg type="string" var="$properties.properties.providerAuthorization.managedByRoleDefinitionId" options="managed-by-role-definition-id">
            <help short="The managed by role definition ID for the application."/>
          </arg>
          <arg type="string" var="$properties.properties.providerAuthorization.roleDefinitionId" options="role-definition-id">
            <help short="The role definition ID for the application."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="AuthorizedApplications_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}">
          <request method="put">
            <path>
              <param type="uuid" name="applicationId" arg="$Path.applicationId" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="dataAuthorizations" arg="$properties.properties.dataAuthorizations" identifiers="role">
                      <item type="object">
                        <prop type="array<string>" name="resourceTypes" arg="$properties.properties.dataAuthorizations[].resourceTypes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="role" arg="$properties.properties.dataAuthorizations[].role" required="True">
                          <enum>
                            <item value="&quot;LimitedOwner&quot;"/>
                            <item value="&quot;ServiceOwner&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="providerAuthorization" arg="$properties.properties.providerAuthorization">
                      <prop type="string" name="managedByRoleDefinitionId" arg="$properties.properties.providerAuthorization.managedByRoleDefinitionId"/>
                      <prop type="string" name="roleDefinitionId" arg="$properties.properties.providerAuthorization.roleDefinitionId"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}/authorizedApplications/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="dataAuthorizations" identifiers="role">
                      <item type="object">
                        <prop type="array<string>" name="resourceTypes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="role" required="True">
                          <enum>
                            <item value="&quot;LimitedOwner&quot;"/>
                            <item value="&quot;ServiceOwner&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="providerAuthorization">
                      <prop type="string" name="managedByRoleDefinitionId"/>
                      <prop type="string" name="roleDefinitionId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/authorizedapplications/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L2F1dGhvcml6ZWRBcHBsaWNhdGlvbnMve2FwcGxpY2F0aW9uSWR9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="uuid" var="$Path.applicationId" options="application-id name n" required="True" idPart="child_name_1">
          <help short="The application ID."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$properties.properties.dataAuthorizations" options="data-authorizations" group="Properties">
          <help short="The authorizations that determine the level of data access permissions on the specified resource types."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$properties.properties.dataAuthorizations[].resourceTypes" options="resource-types">
              <help short="The resource types from the defined resource types in the provider namespace that the application can access. If no resource types are specified and the role is service owner, the default is * which is all resource types"/>
              <item nullable="True" type="string"/>
            </arg>
            <arg type="string" var="$properties.properties.dataAuthorizations[].role" options="role">
              <help short="The ownership role the application has on the resource types. The service owner role gives the application owner permissions. The limited owner role gives elevated permissions but does not allow all the permissions of a service owner, such as read/write on internal metadata."/>
              <enum>
                <item name="LimitedOwner" value="&quot;LimitedOwner&quot;"/>
                <item name="ServiceOwner" value="&quot;ServiceOwner&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.providerAuthorization" options="provider-authorization" group="Properties">
          <help short="The resource provider authorization."/>
          <arg nullable="True" type="string" var="$properties.properties.providerAuthorization.managedByRoleDefinitionId" options="managed-by-role-definition-id">
            <help short="The managed by role definition ID for the application."/>
          </arg>
          <arg nullable="True" type="string" var="$properties.properties.providerAuthorization.roleDefinitionId" options="role-definition-id">
            <help short="The role definition ID for the application."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="AuthorizedApplications_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}">
          <request method="get">
            <path>
              <param type="uuid" name="applicationId" arg="$Path.applicationId" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AuthorizedApplication_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}/authorizedApplications/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="dataAuthorizations" identifiers="role">
                      <item type="object">
                        <prop type="array<string>" name="resourceTypes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="role" required="True">
                          <enum>
                            <item value="&quot;LimitedOwner&quot;"/>
                            <item value="&quot;ServiceOwner&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="providerAuthorization">
                      <prop type="string" name="managedByRoleDefinitionId"/>
                      <prop type="string" name="roleDefinitionId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="properties" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="array<object>" name="dataAuthorizations" arg="$properties.properties.dataAuthorizations" identifiers="role">
                  <item type="object">
                    <prop type="array<string>" name="resourceTypes" arg="$properties.properties.dataAuthorizations[].resourceTypes">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="role" arg="$properties.properties.dataAuthorizations[].role" required="True">
                      <enum>
                        <item value="&quot;LimitedOwner&quot;"/>
                        <item value="&quot;ServiceOwner&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="providerAuthorization" arg="$properties.properties.providerAuthorization">
                  <prop type="string" name="managedByRoleDefinitionId" arg="$properties.properties.providerAuthorization.managedByRoleDefinitionId"/>
                  <prop type="string" name="roleDefinitionId" arg="$properties.properties.providerAuthorization.roleDefinitionId"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="AuthorizedApplications_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}">
          <request method="put">
            <path>
              <param type="uuid" name="applicationId" arg="$Path.applicationId" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@AuthorizedApplication_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
