<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/enterprisemcccustomers/{}/enterprisemcccachenodes/{}/getcachenodeinstalldetails" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvZW50ZXJwcmlzZU1jY0N1c3RvbWVycy97Y3VzdG9tZXJSZXNvdXJjZU5hbWV9L2VudGVycHJpc2VNY2NDYWNoZU5vZGVzL3tjYWNoZU5vZGVSZXNvdXJjZU5hbWV9L2dldENhY2hlTm9kZUluc3RhbGxEZXRhaWxz/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="mcc ent node">
    <command name="get-provisioning-details" version="2023-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/enterprisemcccustomers/{}/enterprisemcccachenodes/{}/getcachenodeinstalldetails" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvZW50ZXJwcmlzZU1jY0N1c3RvbWVycy97Y3VzdG9tZXJSZXNvdXJjZU5hbWV9L2VudGVycHJpc2VNY2NDYWNoZU5vZGVzL3tjYWNoZU5vZGVSZXNvdXJjZU5hbWV9L2dldENhY2hlTm9kZUluc3RhbGxEZXRhaWxz/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.cacheNodeResourceName" options="cache-node-name" required="True" group="" idPart="child_name_1">
          <help short="Name of Microsoft Connected Cache for Enterprise cache node."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="string" var="$Path.customerResourceName" options="mcc-resource-name" required="True" group="" idPart="name">
          <help short="Name of Microsoft Connected Cache for Enterprise resource."/>
          <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="EnterpriseMccCacheNodesOperations_GetCacheNodeInstallDetails">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}/getCacheNodeInstallDetails">
          <request method="post">
            <path>
              <param type="string" name="cacheNodeResourceName" arg="$Path.cacheNodeResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="customerResourceName" arg="$Path.customerResourceName" required="True">
                <format pattern="^[a-zA-Z0-9\_\-]*" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="cacheNodeId"/>
                    <prop type="string" name="customerId"/>
                    <prop readOnly="True" type="password" name="primaryAccountKey" secret="True"/>
                    <prop readOnly="True" type="password" name="registrationKey" secret="True"/>
                    <prop readOnly="True" type="password" name="secondaryAccountKey" secret="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
