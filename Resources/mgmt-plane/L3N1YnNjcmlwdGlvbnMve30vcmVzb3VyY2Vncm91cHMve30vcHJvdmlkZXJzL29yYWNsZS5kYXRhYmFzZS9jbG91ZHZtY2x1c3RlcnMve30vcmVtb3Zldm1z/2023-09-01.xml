<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}/removevms" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9L3JlbW92ZVZtcw==/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="oracle-database cloud-vm-cluster">
    <command name="remove-vm" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}/removevms" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9L3JlbW92ZVZtcw==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudvmclustername" options="cloudvmclustername" required="True" idPart="name">
          <help short="CloudVmCluster name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="array<string>" var="$body.dbServers" options="db-servers" required="True" group="Body">
          <help short="Db servers ocids"/>
          <item type="string">
            <format maxLength="255" minLength="1"/>
          </item>
        </arg>
      </argGroup>
      <operation operationId="CloudVmClusters_RemoveVms">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/removeVms">
          <request method="post">
            <path>
              <param type="string" name="cloudvmclustername" arg="$Path.cloudvmclustername" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="array<string>" name="dbServers" arg="$body.dbServers" required="True">
                    <item type="string">
                      <format maxLength="255" minLength="1"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudVmClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="backupSubnetCidr">
                      <format maxLength="32" minLength="1"/>
                    </prop>
                    <prop type="ResourceId" name="cloudExadataInfrastructureId" required="True"/>
                    <prop type="string" name="clusterName">
                      <format maxLength="11" minLength="1"/>
                    </prop>
                    <prop type="string" name="compartmentId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="integer32" name="cpuCoreCount" required="True"/>
                    <prop type="object" name="dataCollectionOptions">
                      <prop type="boolean" name="isDiagnosticsEventsEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isHealthMonitoringEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isIncidentLogsEnabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="dataStoragePercentage"/>
                    <prop type="float64" name="dataStorageSizeInTbs"/>
                    <prop type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop type="array<string>" name="dbServers">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                    <prop type="string" name="diskRedundancy">
                      <enum>
                        <item value="&quot;High&quot;"/>
                        <item value="&quot;Normal&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="domain"/>
                    <prop type="string" name="giVersion" required="True"/>
                    <prop type="string" name="hostname" required="True">
                      <format maxLength="23" minLength="1"/>
                    </prop>
                    <prop type="object" name="iormConfigCache">
                      <prop type="array<object>" name="dbPlans">
                        <item type="object">
                          <prop type="string" name="dbName"/>
                          <prop type="string" name="flashCacheLimit"/>
                          <prop type="integer32" name="share">
                            <format maximum="32" minimum="1"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="lifecycleDetails"/>
                      <prop type="string" name="lifecycleState">
                        <enum>
                          <item value="&quot;BootStrapping&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="objective">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Balanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighThroughput&quot;"/>
                          <item value="&quot;LowLatency&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="isLocalBackupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isSparseDiskgroupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="lastUpdateHistoryEntryId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="licenseModel">
                      <enum>
                        <item value="&quot;BringYourOwnLicense&quot;"/>
                        <item value="&quot;LicenseIncluded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer64" name="listenerPort"/>
                    <prop type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="nodeCount"/>
                    <prop type="array<object>" name="nsgCidrs">
                      <item type="object">
                        <prop type="object" name="destinationPortRange">
                          <prop type="integer32" name="max" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="integer32" name="min" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="source" required="True">
                          <format maxLength="128" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="nsgUrl"/>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="float32" name="ocpuCount"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="scanDnsName">
                      <format maxLength="72" minLength="1"/>
                    </prop>
                    <prop type="string" name="scanDnsRecordId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="scanIpIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="scanListenerPortTcp"/>
                    <prop type="integer32" name="scanListenerPortTcpSsl"/>
                    <prop readOnly="True" type="string" name="shape">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="array<string>" name="sshPublicKeys" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="storageSizeInGbs"/>
                    <prop type="ResourceId" name="subnetId" required="True"/>
                    <prop type="string" name="subnetOcid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="systemVersion">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="timeZone">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="vipIds">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="vnetId" required="True"/>
                    <prop type="string" name="zoneId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
