<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.avs/privateclouds" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkFWUy9wcml2YXRlQ2xvdWRz/V/MjAyMy0wMy0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHM=/V/MjAyMy0wMy0wMQ=="/>
  <commandGroup name="vmware private-cloud">
    <command name="list" version="2023-03-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.avs/privateclouds" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkFWUy9wcml2YXRlQ2xvdWRz/V/MjAyMy0wMy0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHM=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_PrivateClouds_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_PrivateClouds_ListInSubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_PrivateClouds_List" operationId="PrivateClouds_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}"/>
                      </prop>
                      <prop type="object" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="availability">
                          <prop type="integer32" name="secondaryZone"/>
                          <prop type="string" name="strategy">
                            <enum>
                              <item value="&quot;DualZone&quot;"/>
                              <item value="&quot;SingleZone&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="zone"/>
                        </prop>
                        <prop type="object" name="circuit" cls="Circuit_read">
                          <prop readOnly="True" type="string" name="expressRouteID"/>
                          <prop readOnly="True" type="string" name="expressRoutePrivatePeeringID"/>
                          <prop readOnly="True" type="string" name="primarySubnet"/>
                          <prop readOnly="True" type="string" name="secondarySubnet"/>
                        </prop>
                        <prop type="object" name="encryption">
                          <prop type="object" name="keyVaultProperties">
                            <prop readOnly="True" type="string" name="autoDetectedKeyVersion"/>
                            <prop type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="keyState">
                              <enum>
                                <item value="&quot;AccessDenied&quot;"/>
                                <item value="&quot;Connected&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="keyVaultUrl"/>
                            <prop type="string" name="keyVersion"/>
                            <prop readOnly="True" type="string" name="versionType">
                              <enum>
                                <item value="&quot;AutoDetected&quot;"/>
                                <item value="&quot;Fixed&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="endpoints">
                          <prop readOnly="True" type="string" name="hcxCloudManager"/>
                          <prop readOnly="True" type="string" name="nsxtManager"/>
                          <prop readOnly="True" type="string" name="vcsa"/>
                        </prop>
                        <prop type="array<string>" name="extendedNetworkBlocks">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="externalCloudLinks">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="identitySources" identifiers="name">
                          <item type="object">
                            <prop type="string" name="alias" required="True"/>
                            <prop type="string" name="baseGroupDN" required="True"/>
                            <prop type="string" name="baseUserDN" required="True"/>
                            <prop type="string" name="domain" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="password" required="True" secret="True"/>
                            <prop type="string" name="primaryServer" required="True"/>
                            <prop type="string" name="secondaryServer"/>
                            <prop type="string" name="ssl">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="username" required="True" secret="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="internet">
                          <default value="&quot;Disabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="managementCluster" required="True">
                          <prop readOnly="True" type="integer32" name="clusterId"/>
                          <prop type="integer32" name="clusterSize" required="True"/>
                          <prop type="array<string>" name="hosts">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Cancelled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="managementNetwork"/>
                        <prop type="string" name="networkBlock" required="True"/>
                        <prop readOnly="True" type="string" name="nsxPublicIpQuotaRaised">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="nsxtCertificateThumbprint"/>
                        <prop type="password" name="nsxtPassword" secret="True"/>
                        <prop readOnly="True" type="string" name="provisioningNetwork"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Building&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Cancelled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Pending&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@Circuit_read" name="secondaryCircuit"/>
                        <prop readOnly="True" type="string" name="vcenterCertificateThumbprint"/>
                        <prop type="password" name="vcenterPassword" secret="True"/>
                        <prop readOnly="True" type="string" name="vmotionNetwork"/>
                      </prop>
                      <prop type="object" name="sku" required="True">
                        <prop type="string" name="name" required="True"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PrivateClouds_ListInSubscription" operationId="PrivateClouds_ListInSubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}"/>
                      </prop>
                      <prop type="object" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="availability">
                          <prop type="integer32" name="secondaryZone"/>
                          <prop type="string" name="strategy">
                            <enum>
                              <item value="&quot;DualZone&quot;"/>
                              <item value="&quot;SingleZone&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="zone"/>
                        </prop>
                        <prop type="@Circuit_read" name="circuit"/>
                        <prop type="object" name="encryption">
                          <prop type="object" name="keyVaultProperties">
                            <prop readOnly="True" type="string" name="autoDetectedKeyVersion"/>
                            <prop type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="keyState">
                              <enum>
                                <item value="&quot;AccessDenied&quot;"/>
                                <item value="&quot;Connected&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="keyVaultUrl"/>
                            <prop type="string" name="keyVersion"/>
                            <prop readOnly="True" type="string" name="versionType">
                              <enum>
                                <item value="&quot;AutoDetected&quot;"/>
                                <item value="&quot;Fixed&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="endpoints">
                          <prop readOnly="True" type="string" name="hcxCloudManager"/>
                          <prop readOnly="True" type="string" name="nsxtManager"/>
                          <prop readOnly="True" type="string" name="vcsa"/>
                        </prop>
                        <prop type="array<string>" name="extendedNetworkBlocks">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="externalCloudLinks">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="identitySources" identifiers="name">
                          <item type="object">
                            <prop type="string" name="alias" required="True"/>
                            <prop type="string" name="baseGroupDN" required="True"/>
                            <prop type="string" name="baseUserDN" required="True"/>
                            <prop type="string" name="domain" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="password" required="True" secret="True"/>
                            <prop type="string" name="primaryServer" required="True"/>
                            <prop type="string" name="secondaryServer"/>
                            <prop type="string" name="ssl">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="username" required="True" secret="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="internet">
                          <default value="&quot;Disabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="managementCluster" required="True">
                          <prop readOnly="True" type="integer32" name="clusterId"/>
                          <prop type="integer32" name="clusterSize" required="True"/>
                          <prop type="array<string>" name="hosts">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Cancelled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="managementNetwork"/>
                        <prop type="string" name="networkBlock" required="True"/>
                        <prop readOnly="True" type="string" name="nsxPublicIpQuotaRaised">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="nsxtCertificateThumbprint"/>
                        <prop type="password" name="nsxtPassword" secret="True"/>
                        <prop readOnly="True" type="string" name="provisioningNetwork"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Building&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Cancelled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Pending&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@Circuit_read" name="secondaryCircuit"/>
                        <prop readOnly="True" type="string" name="vcenterCertificateThumbprint"/>
                        <prop type="password" name="vcenterPassword" secret="True"/>
                        <prop readOnly="True" type="string" name="vmotionNetwork"/>
                      </prop>
                      <prop type="object" name="sku" required="True">
                        <prop type="string" name="name" required="True"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
