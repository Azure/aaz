<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2023-07-20-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyMy0wNy0yMC1wcmV2aWV3"/>
  <commandGroup name="large-storage-instance">
    <command name="show" version="2023-07-20-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2023-07-20-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyMy0wNy0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.azureLargeStorageInstanceName" options="azure-large-storage-instance-name name n" required="True" idPart="name">
          <help short="Name of the AzureLargeStorageInstance."/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureLargeStorageInstance_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="get">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier"/>
                    <prop type="object" name="storageProperties">
                      <prop type="string" name="generation"/>
                      <prop type="string" name="hardwareType">
                        <enum>
                          <item value="&quot;Cisco_UCS&quot;"/>
                          <item value="&quot;HPE&quot;"/>
                          <item value="&quot;SDFLEX&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offeringType"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="storageBillingProperties">
                        <prop type="string" name="billingMode"/>
                        <prop type="string" name="sku"/>
                      </prop>
                      <prop type="string" name="storageType"/>
                      <prop type="string" name="workloadType"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-07-20-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2023-07-20-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyMy0wNy0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.azureLargeStorageInstanceName" options="azure-large-storage-instance-name name n" required="True" idPart="name">
          <help short="Name of the AzureLargeStorageInstance."/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="TagsParameter">
        <arg type="object" var="$tagsParameter.tags" options="tags" group="TagsParameter">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="AzureLargeStorageInstance_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="patch">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="tagsParameter" required="True" clientFlatten="True">
                  <prop type="object" name="tags" arg="$tagsParameter.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier"/>
                    <prop type="object" name="storageProperties">
                      <prop type="string" name="generation"/>
                      <prop type="string" name="hardwareType">
                        <enum>
                          <item value="&quot;Cisco_UCS&quot;"/>
                          <item value="&quot;HPE&quot;"/>
                          <item value="&quot;SDFLEX&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offeringType"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="storageBillingProperties">
                        <prop type="string" name="billingMode"/>
                        <prop type="string" name="sku"/>
                      </prop>
                      <prop type="string" name="storageType"/>
                      <prop type="string" name="workloadType"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
