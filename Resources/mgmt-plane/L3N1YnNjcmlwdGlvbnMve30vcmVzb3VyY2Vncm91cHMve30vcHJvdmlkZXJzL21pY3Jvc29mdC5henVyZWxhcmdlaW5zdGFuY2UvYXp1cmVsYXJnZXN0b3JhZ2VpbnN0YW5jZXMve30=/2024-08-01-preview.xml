<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2024-08-01-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOC0wMS1wcmV2aWV3"/>
  <commandGroup name="large-storage-instance">
    <command name="show" version="2024-08-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2024-08-01-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.azureLargeStorageInstanceName" options="instance-name name n" required="True" group="" idPart="name">
          <help short="Name of the AzureLargeStorageInstance."/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureLargeStorageInstance_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="get">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier"/>
                    <prop type="object" name="storageProperties">
                      <prop type="string" name="generation"/>
                      <prop type="string" name="hardwareType">
                        <enum>
                          <item value="&quot;Cisco_UCS&quot;"/>
                          <item value="&quot;HPE&quot;"/>
                          <item value="&quot;SDFLEX&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offeringType"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="storageBillingProperties">
                        <prop type="string" name="billingMode"/>
                        <prop type="string" name="sku"/>
                      </prop>
                      <prop type="string" name="storageType"/>
                      <prop type="string" name="workloadType"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-08-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2024-08-01-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.azureLargeStorageInstanceName" options="instance-name name n" required="True" group="" idPart="name">
          <help short="Name of the AzureLargeStorageInstance."/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureLargeStorageInstance_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="delete">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-08-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2024-08-01-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.azureLargeStorageInstanceName" options="instance-name name n" required="True" group="" idPart="name">
          <help short="Name of the AzureLargeStorageInstance."/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.azureLargeStorageInstanceUniqueIdentifier" options="instance-id alsi-id" group="Properties">
          <help short="Specifies the AzureLargeStorageInstance unique ID."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="StorageProperties">
        <arg type="string" var="$resource.properties.storageProperties.generation" options="generation" group="StorageProperties">
          <help short="the kind of storage instance"/>
        </arg>
        <arg type="string" var="$resource.properties.storageProperties.hardwareType" options="hardware-type" group="StorageProperties">
          <help short="the hardware type of the storage instance"/>
          <enum>
            <item name="Cisco_UCS" value="&quot;Cisco_UCS&quot;"/>
            <item name="HPE" value="&quot;HPE&quot;"/>
            <item name="SDFLEX" value="&quot;SDFLEX&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.storageProperties.offeringType" options="offering-type" group="StorageProperties">
          <help short="the offering type for which the resource is getting provisioned"/>
        </arg>
        <arg type="string" var="$resource.properties.storageProperties.storageBillingProperties.billingMode" options="billing-mode" group="StorageProperties">
          <help short="the billing mode for the storage instance"/>
        </arg>
        <arg type="string" var="$resource.properties.storageProperties.storageBillingProperties.sku" options="azure-large-storage-instance-size sku" group="StorageProperties">
          <help short="the SKU type that is provisioned"/>
        </arg>
        <arg type="string" var="$resource.properties.storageProperties.storageType" options="storage-type" group="StorageProperties">
          <help short="the storage protocol for which the resource is getting provisioned"/>
        </arg>
        <arg type="string" var="$resource.properties.storageProperties.workloadType" options="workload-type" group="StorageProperties">
          <help short="the workload for which the resource is getting provisioned"/>
        </arg>
      </argGroup>
      <operation operationId="AzureLargeStorageInstance_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="put">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier" arg="$resource.properties.azureLargeStorageInstanceUniqueIdentifier"/>
                    <prop type="object" name="storageProperties">
                      <prop type="string" name="generation" arg="$resource.properties.storageProperties.generation"/>
                      <prop type="string" name="hardwareType" arg="$resource.properties.storageProperties.hardwareType">
                        <enum>
                          <item value="&quot;Cisco_UCS&quot;"/>
                          <item value="&quot;HPE&quot;"/>
                          <item value="&quot;SDFLEX&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offeringType" arg="$resource.properties.storageProperties.offeringType"/>
                      <prop type="object" name="storageBillingProperties">
                        <prop type="string" name="billingMode" arg="$resource.properties.storageProperties.storageBillingProperties.billingMode"/>
                        <prop type="string" name="sku" arg="$resource.properties.storageProperties.storageBillingProperties.sku"/>
                      </prop>
                      <prop type="string" name="storageType" arg="$resource.properties.storageProperties.storageType"/>
                      <prop type="string" name="workloadType" arg="$resource.properties.storageProperties.workloadType"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier"/>
                    <prop type="object" name="storageProperties">
                      <prop type="string" name="generation"/>
                      <prop type="string" name="hardwareType">
                        <enum>
                          <item value="&quot;Cisco_UCS&quot;"/>
                          <item value="&quot;HPE&quot;"/>
                          <item value="&quot;SDFLEX&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offeringType"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="storageBillingProperties">
                        <prop type="string" name="billingMode"/>
                        <prop type="string" name="sku"/>
                      </prop>
                      <prop type="string" name="storageType"/>
                      <prop type="string" name="workloadType"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-08-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurelargeinstance/azurelargestorageinstances/{}" version="2024-08-01-preview" swagger="mgmt-plane/azurelargeinstance/ResourceProviders/Microsoft.AzureLargeInstance/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVMYXJnZUluc3RhbmNlL2F6dXJlTGFyZ2VTdG9yYWdlSW5zdGFuY2VzL3thenVyZUxhcmdlU3RvcmFnZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.azureLargeStorageInstanceName" options="instance-name name n" required="True" group="" idPart="name">
          <help short="Name of the AzureLargeStorageInstance."/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$resource.properties.azureLargeStorageInstanceUniqueIdentifier" options="instance-id alsi-id" hide="True" group="Properties">
          <help short="Specifies the AzureLargeStorageInstance unique ID."/>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.storageProperties" options="storage-properties" hide="True" group="Properties">
          <help short="Specifies the storage properties for the AzureLargeStorage instance."/>
          <arg nullable="True" type="string" var="$resource.properties.storageProperties.generation" options="generation">
            <help short="the kind of storage instance"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.storageProperties.hardwareType" options="hardware-type">
            <help short="the hardware type of the storage instance"/>
            <enum>
              <item name="Cisco_UCS" value="&quot;Cisco_UCS&quot;"/>
              <item name="HPE" value="&quot;HPE&quot;"/>
              <item name="SDFLEX" value="&quot;SDFLEX&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.storageProperties.offeringType" options="offering-type">
            <help short="the offering type for which the resource is getting provisioned"/>
          </arg>
          <arg nullable="True" type="object" var="$resource.properties.storageProperties.storageBillingProperties" options="storage-billing-properties">
            <help short="the billing related information for the resource"/>
            <arg nullable="True" type="string" var="$resource.properties.storageProperties.storageBillingProperties.billingMode" options="billing-mode">
              <help short="the billing mode for the storage instance"/>
            </arg>
            <arg nullable="True" type="string" var="$resource.properties.storageProperties.storageBillingProperties.sku" options="sku">
              <help short="the SKU type that is provisioned"/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.storageProperties.storageType" options="storage-type">
            <help short="the storage protocol for which the resource is getting provisioned"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.storageProperties.workloadType" options="workload-type">
            <help short="the workload for which the resource is getting provisioned"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="AzureLargeStorageInstance_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="get">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AzureLargeStorageInstance_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier"/>
                    <prop type="object" name="storageProperties">
                      <prop type="string" name="generation"/>
                      <prop type="string" name="hardwareType">
                        <enum>
                          <item value="&quot;Cisco_UCS&quot;"/>
                          <item value="&quot;HPE&quot;"/>
                          <item value="&quot;SDFLEX&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offeringType"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Migrating&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="storageBillingProperties">
                        <prop type="string" name="billingMode"/>
                        <prop type="string" name="sku"/>
                      </prop>
                      <prop type="string" name="storageType"/>
                      <prop type="string" name="workloadType"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$resource.identity">
                <prop type="string" name="type" arg="$resource.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                  <additionalProp>
                    <item nullable="True" type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="azureLargeStorageInstanceUniqueIdentifier" arg="$resource.properties.azureLargeStorageInstanceUniqueIdentifier"/>
                <prop type="object" name="storageProperties" arg="$resource.properties.storageProperties">
                  <prop type="string" name="generation" arg="$resource.properties.storageProperties.generation"/>
                  <prop type="string" name="hardwareType" arg="$resource.properties.storageProperties.hardwareType">
                    <enum>
                      <item value="&quot;Cisco_UCS&quot;"/>
                      <item value="&quot;HPE&quot;"/>
                      <item value="&quot;SDFLEX&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="offeringType" arg="$resource.properties.storageProperties.offeringType"/>
                  <prop type="object" name="storageBillingProperties" arg="$resource.properties.storageProperties.storageBillingProperties">
                    <prop type="string" name="billingMode" arg="$resource.properties.storageProperties.storageBillingProperties.billingMode"/>
                    <prop type="string" name="sku" arg="$resource.properties.storageProperties.storageBillingProperties.sku"/>
                  </prop>
                  <prop type="string" name="storageType" arg="$resource.properties.storageProperties.storageType"/>
                  <prop type="string" name="workloadType" arg="$resource.properties.storageProperties.workloadType"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="AzureLargeStorageInstance_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}">
          <request method="put">
            <path>
              <param type="string" name="azureLargeStorageInstanceName" arg="$Path.azureLargeStorageInstanceName" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@AzureLargeStorageInstance_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
