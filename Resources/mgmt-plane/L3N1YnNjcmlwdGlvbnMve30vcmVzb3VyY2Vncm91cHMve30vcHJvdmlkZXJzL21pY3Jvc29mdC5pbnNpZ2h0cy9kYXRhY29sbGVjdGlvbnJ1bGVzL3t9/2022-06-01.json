{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}", "version": "2022-06-01", "swagger": "mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMi0wNi0wMQ=="}], "commandGroups": [{"name": "monitor data-collection rule", "commands": [{"name": "show", "version": "2022-06-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}", "version": "2022-06-01", "swagger": "mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMi0wNi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.dataCollectionRuleName", "options": ["n", "name", "rule-name", "data-collection-rule-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the data collection rule. The name is case insensitive."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "DataCollectionRules_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "dataCollectionRuleName", "arg": "$Path.dataCollectionRuleName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-06-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionRules/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "dataCollectionEndpointId"}, {"type": "array<object>", "name": "dataFlows", "item": {"type": "object", "props": [{"type": "string", "name": "builtInTransform"}, {"type": "array<string>", "name": "destinations", "item": {"type": "string"}}, {"type": "string", "name": "outputStream"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "string", "name": "transformKql"}]}}, {"type": "object", "name": "dataSources", "props": [{"type": "object", "name": "dataImports", "props": [{"type": "object", "name": "eventHub", "props": [{"type": "string", "name": "consumerGroup"}, {"type": "string", "name": "name"}, {"type": "string", "name": "stream"}]}]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "extensionName", "required": true}, {"type": "object", "name": "extensionSettings"}, {"type": "array<string>", "name": "inputDataSources", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "iisLogs", "item": {"type": "object", "props": [{"type": "array<string>", "name": "logDirectories", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logFiles", "item": {"type": "object", "props": [{"type": "array<string>", "name": "filePatterns", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "format", "required": true, "enum": {"items": [{"value": "text"}]}}, {"type": "string", "name": "name"}, {"type": "object", "name": "settings", "props": [{"type": "object", "name": "text", "props": [{"type": "string", "name": "recordStartTimestampFormat", "required": true, "enum": {"items": [{"value": "ISO 8601"}, {"value": "M/D/YYYY HH:MM:SS AM/PM"}, {"value": "MMM d hh:mm:ss"}, {"value": "Mon DD, YYYY HH:MM:SS"}, {"value": "YYYY-MM-DD HH:MM:SS"}, {"value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"value": "ddMMyy HH:mm:ss"}, {"value": "yyMMdd HH:mm:ss"}, {"value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "performanceCounters", "item": {"type": "object", "props": [{"type": "array<string>", "name": "counterSpecifiers", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "integer32", "name": "samplingFrequencyInSeconds"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "platformTelemetry", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "prometheusForwarder", "item": {"type": "object", "props": [{"type": "object", "name": "labelIncludeFilter", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-PrometheusMetrics"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "syslog", "item": {"type": "object", "props": [{"type": "array<string>", "name": "facilityNames", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "auth"}, {"value": "authpriv"}, {"value": "cron"}, {"value": "daemon"}, {"value": "kern"}, {"value": "local0"}, {"value": "local1"}, {"value": "local2"}, {"value": "local3"}, {"value": "local4"}, {"value": "local5"}, {"value": "local6"}, {"value": "local7"}, {"value": "lpr"}, {"value": "mail"}, {"value": "mark"}, {"value": "news"}, {"value": "syslog"}, {"value": "user"}, {"value": "uucp"}]}}}, {"type": "array<string>", "name": "logLevels", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "Alert"}, {"value": "Critical"}, {"value": "Debug"}, {"value": "Emergency"}, {"value": "Error"}, {"value": "Info"}, {"value": "Notice"}, {"value": "Warning"}]}}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Syslog"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsEventLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "array<string>", "name": "xPathQueries", "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsFirewallLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}]}, {"type": "string", "name": "description"}, {"type": "object", "name": "destinations", "props": [{"type": "object", "name": "azureMonitorMetrics", "props": [{"type": "string", "name": "name"}]}, {"type": "array<object>", "name": "eventHubs", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "eventHubsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logAnalytics", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "workspaceId"}, {"type": "string", "name": "workspaceResourceId"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "monitoringAccounts", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "accountId"}, {"type": "string", "name": "accountResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<@StorageBlobDestination_read>", "name": "storageAccounts", "item": {"type": "@StorageBlobDestination_read"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageBlobsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "containerName"}, {"type": "string", "name": "name"}, {"type": "string", "name": "storageAccountResourceId"}], "cls": "StorageBlobDestination_read"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageTablesDirect", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "storageAccountResourceId"}, {"type": "string", "name": "tableName"}]}, "identifiers": ["name"]}]}, {"readOnly": true, "type": "string", "name": "immutableId"}, {"readOnly": true, "type": "object", "name": "metadata", "props": [{"readOnly": true, "type": "string", "name": "provisionedBy"}, {"readOnly": true, "type": "string", "name": "provisionedByResourceId"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "streamDeclarations", "additionalProps": {"item": {"type": "object", "props": [{"type": "array<object>", "name": "columns", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "boolean"}, {"value": "datetime"}, {"value": "dynamic"}, {"value": "int"}, {"value": "long"}, {"value": "real"}, {"value": "string"}]}}]}, "identifiers": ["name"]}]}}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2022-06-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}", "version": "2022-06-01", "swagger": "mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMi0wNi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.dataCollectionRuleName", "options": ["n", "name", "rule-name", "data-collection-rule-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the data collection rule. The name is case insensitive."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "DataCollectionRules_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "dataCollectionRuleName", "arg": "$Path.dataCollectionRuleName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-06-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2022-06-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}", "version": "2022-06-01", "swagger": "mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMi0wNi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.dataCollectionRuleName", "options": ["n", "name", "rule-name", "data-collection-rule-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the data collection rule. The name is case insensitive."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "object", "var": "$body.identity", "options": ["identity"], "group": "", "help": {"short": "Managed service identity of the resource."}, "args": [{"type": "string", "var": "$body.identity.type", "options": ["type"], "required": true, "help": {"short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned,UserAssigned", "value": "SystemAssigned,UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"type": "object", "var": "$body.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"type": "string", "var": "$body.kind", "options": ["kind"], "group": "", "help": {"short": "The kind of the resource."}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"type": "ResourceLocation", "var": "$body.location", "options": ["l", "location"], "group": "", "help": {"short": "The geo-location where the resource lives."}}, {"type": "string", "var": "$body.properties.dataCollectionEndpointId", "options": ["endpoint-id", "data-collection-endpoint-id"], "group": "", "help": {"short": "The resource ID of the data collection endpoint that is to be associated."}}, {"type": "string", "var": "$body.properties.description", "options": ["description"], "group": "", "help": {"short": "Description of the association."}}, {"type": "object", "var": "$body.tags", "options": ["tags"], "group": "", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$body.properties.dataFlows", "options": ["data-flows"], "group": "Properties", "help": {"short": "The specification of data flows."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.dataFlows[].builtInTransform", "options": ["built-in-transform"], "help": {"short": "The builtIn transform to transform stream data"}}, {"type": "array<string>", "var": "$body.properties.dataFlows[].destinations", "options": ["destinations"], "help": {"short": "List of destinations for this data flow."}, "item": {"type": "string"}}, {"type": "string", "var": "$body.properties.dataFlows[].outputStream", "options": ["output-stream"], "group": "", "help": {"short": "The output stream of the transform. Only required if the transform changes data to a different stream."}}, {"type": "array<string>", "var": "$body.properties.dataFlows[].streams", "options": ["streams"], "help": {"short": "List of streams for this data flow."}, "item": {"type": "string", "enum": {"items": [{"name": "Microsoft-Event", "value": "Microsoft-Event"}, {"name": "Microsoft-InsightsMetrics", "value": "Microsoft-InsightsMetrics"}, {"name": "Microsoft-Perf", "value": "Microsoft-Perf"}, {"name": "Microsoft-Syslog", "value": "Microsoft-Syslog"}, {"name": "Microsoft-WindowsEvent", "value": "Microsoft-WindowsEvent"}]}}}, {"type": "string", "var": "$body.properties.dataFlows[].transformKql", "options": ["transform-kql"], "help": {"short": "The KQL query to transform stream data."}}]}}, {"type": "object", "var": "$body.properties.dataSources", "options": ["data-sources"], "group": "Properties", "help": {"short": "The specification of data sources. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint."}, "args": [{"type": "object", "var": "$body.properties.dataSources.dataImports", "options": ["data-imports"], "help": {"short": "Specifications of pull based data sources"}, "args": [{"type": "object", "var": "$body.properties.dataSources.dataImports.eventHub", "options": ["event-hub"], "help": {"short": "Definition of Event Hub configuration."}, "args": [{"type": "string", "var": "$body.properties.dataSources.dataImports.eventHub.consumerGroup", "options": ["consumer-group"], "help": {"short": "Event Hub consumer group name"}}, {"type": "string", "var": "$body.properties.dataSources.dataImports.eventHub.name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "string", "var": "$body.properties.dataSources.dataImports.eventHub.stream", "options": ["stream"], "help": {"short": "The stream to collect from EventHub"}}]}]}, {"type": "array<object>", "var": "$body.properties.dataSources.extensions", "options": ["extensions"], "help": {"short": "The list of Azure VM extension data source configurations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.dataSources.extensions[].extensionName", "options": ["extension-name"], "required": true, "help": {"short": "The name of the VM extension."}}, {"blank": {"value": {}}, "type": "object", "var": "$body.properties.dataSources.extensions[].extensionSettings", "options": ["extension-settings"], "help": {"short": "The extension settings. The format is specific for particular extension."}}, {"type": "array<string>", "var": "$body.properties.dataSources.extensions[].inputDataSources", "options": ["input-data-sources"], "help": {"short": "The list of data sources this extension needs data from."}, "item": {"type": "string"}}, {"type": "string", "var": "$body.properties.dataSources.extensions[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.extensions[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"type": "string", "enum": {"items": [{"name": "Microsoft-Event", "value": "Microsoft-Event"}, {"name": "Microsoft-InsightsMetrics", "value": "Microsoft-InsightsMetrics"}, {"name": "Microsoft-Perf", "value": "Microsoft-Perf"}, {"name": "Microsoft-Syslog", "value": "Microsoft-Syslog"}, {"name": "Microsoft-WindowsEvent", "value": "Microsoft-WindowsEvent"}]}}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.iisLogs", "options": ["iis-logs"], "help": {"short": "The list of IIS logs source configurations."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$body.properties.dataSources.iisLogs[].logDirectories", "options": ["log-directories"], "help": {"short": "Absolute paths file location"}, "item": {"type": "string"}}, {"type": "string", "var": "$body.properties.dataSources.iisLogs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.iisLogs[].streams", "options": ["streams"], "required": true, "help": {"short": "IIS streams"}, "item": {"type": "string"}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.logFiles", "options": ["log-files"], "help": {"short": "The list of Log files source configurations."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$body.properties.dataSources.logFiles[].filePatterns", "options": ["file-patterns"], "required": true, "help": {"short": "File Patterns where the log files are located"}, "item": {"type": "string"}}, {"type": "string", "var": "$body.properties.dataSources.logFiles[].format", "options": ["format"], "required": true, "help": {"short": "The data format of the log files"}, "enum": {"items": [{"name": "text", "value": "text"}]}}, {"type": "string", "var": "$body.properties.dataSources.logFiles[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "object", "var": "$body.properties.dataSources.logFiles[].settings", "options": ["settings"], "help": {"short": "The log files specific settings."}, "args": [{"type": "object", "var": "$body.properties.dataSources.logFiles[].settings.text", "options": ["text"], "help": {"short": "Text settings"}, "args": [{"type": "string", "var": "$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat", "options": ["record-start-timestamp-format"], "required": true, "help": {"short": "One of the supported timestamp formats"}, "enum": {"items": [{"name": "ISO 8601", "value": "ISO 8601"}, {"name": "M/D/YYYY HH:MM:SS AM/PM", "value": "M/D/YYYY HH:MM:SS AM/PM"}, {"name": "MMM d hh:mm:ss", "value": "MMM d hh:mm:ss"}, {"name": "Mon DD, YYYY HH:MM:SS", "value": "Mon DD, YYYY HH:MM:SS"}, {"name": "YYYY-MM-DD HH:MM:SS", "value": "YYYY-MM-DD HH:MM:SS"}, {"name": "dd/MMM/yyyy:HH:mm:ss zzz", "value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"name": "ddMMyy HH:mm:ss", "value": "ddMMyy HH:mm:ss"}, {"name": "yyMMdd HH:mm:ss", "value": "yyMMdd HH:mm:ss"}, {"name": "yyyy-MM-ddTHH:mm:ssK", "value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "var": "$body.properties.dataSources.logFiles[].streams", "options": ["streams"], "required": true, "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data source"}, "item": {"type": "string"}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.performanceCounters", "options": ["performance-counters"], "help": {"short": "The list of performance counter data source configurations."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$body.properties.dataSources.performanceCounters[].counterSpecifiers", "options": ["counter-specifiers"], "group": "", "help": {"short": "A list of specifier names of the performance counters you want to collect. Use a wildcard (*) to collect a counter for all instances. To get a list of performance counters on Windows, run the command 'typeperf'."}, "item": {"type": "string"}}, {"type": "string", "var": "$body.properties.dataSources.performanceCounters[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "integer32", "var": "$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds", "options": ["sampling-frequency-in-seconds"], "help": {"short": "The number of seconds between consecutive counter measurements (samples)."}}, {"type": "array<string>", "var": "$body.properties.dataSources.performanceCounters[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"type": "string", "enum": {"items": [{"name": "Microsoft-InsightsMetrics", "value": "Microsoft-InsightsMetrics"}, {"name": "Microsoft-Perf", "value": "Microsoft-Perf"}]}}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.platformTelemetry", "options": ["platform-telemetry"], "help": {"short": "The list of platform telemetry configurations"}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.dataSources.platformTelemetry[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.platformTelemetry[].streams", "options": ["streams"], "required": true, "help": {"short": "List of platform telemetry streams to collect"}, "item": {"type": "string"}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.prometheusForwarder", "options": ["prometheus-forwarder"], "help": {"short": "The list of Prometheus forwarder data source configurations."}, "item": {"type": "object", "args": [{"type": "object", "var": "$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter", "options": ["label-include-filter"], "group": "", "help": {"short": "The list of label inclusion filters in the form of label \"name-value\" pairs. Currently only one label is supported: 'microsoft_metrics_include_label'. Label values are matched case-insensitively."}, "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "var": "$body.properties.dataSources.prometheusForwarder[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.prometheusForwarder[].streams", "options": ["streams"], "help": {"short": "List of streams that this data source will be sent to."}, "item": {"type": "string", "enum": {"items": [{"name": "Microsoft-PrometheusMetrics", "value": "Microsoft-PrometheusMetrics"}]}}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.syslog", "options": ["syslog"], "help": {"short": "The list of Syslog data source configurations."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$body.properties.dataSources.syslog[].facilityNames", "options": ["facility-names"], "help": {"short": "The list of facility names."}, "item": {"type": "string", "enum": {"items": [{"name": "*", "value": "*"}, {"name": "auth", "value": "auth"}, {"name": "authpriv", "value": "authpriv"}, {"name": "cron", "value": "cron"}, {"name": "daemon", "value": "daemon"}, {"name": "kern", "value": "kern"}, {"name": "local0", "value": "local0"}, {"name": "local1", "value": "local1"}, {"name": "local2", "value": "local2"}, {"name": "local3", "value": "local3"}, {"name": "local4", "value": "local4"}, {"name": "local5", "value": "local5"}, {"name": "local6", "value": "local6"}, {"name": "local7", "value": "local7"}, {"name": "lpr", "value": "lpr"}, {"name": "mail", "value": "mail"}, {"name": "mark", "value": "mark"}, {"name": "news", "value": "news"}, {"name": "syslog", "value": "syslog"}, {"name": "user", "value": "user"}, {"name": "uucp", "value": "uucp"}]}}}, {"type": "array<string>", "var": "$body.properties.dataSources.syslog[].logLevels", "options": ["log-levels"], "help": {"short": "The log levels to collect."}, "item": {"type": "string", "enum": {"items": [{"name": "*", "value": "*"}, {"name": "Alert", "value": "Alert"}, {"name": "Critical", "value": "Critical"}, {"name": "Debug", "value": "Debug"}, {"name": "Emergency", "value": "Emergency"}, {"name": "Error", "value": "Error"}, {"name": "Info", "value": "Info"}, {"name": "Notice", "value": "Notice"}, {"name": "Warning", "value": "Warning"}]}}}, {"type": "string", "var": "$body.properties.dataSources.syslog[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.syslog[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"type": "string", "enum": {"items": [{"name": "Microsoft-Syslog", "value": "Microsoft-Syslog"}]}}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.windowsEventLogs", "options": ["windows-event-logs"], "help": {"short": "The list of Windows Event Log data source configurations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.dataSources.windowsEventLogs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.windowsEventLogs[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"type": "string", "enum": {"items": [{"name": "Microsoft-Event", "value": "Microsoft-Event"}, {"name": "Microsoft-WindowsEvent", "value": "Microsoft-WindowsEvent"}]}}}, {"type": "array<string>", "var": "$body.properties.dataSources.windowsEventLogs[].xPathQueries", "options": ["x-path-queries"], "help": {"short": "A list of Windows Event Log queries in XPATH format."}, "item": {"type": "string"}}]}}, {"type": "array<object>", "var": "$body.properties.dataSources.windowsFirewallLogs", "options": ["windows-firewall-logs"], "help": {"short": "The list of Windows Firewall logs source configurations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.dataSources.windowsFirewallLogs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.windowsFirewallLogs[].streams", "options": ["streams"], "required": true, "help": {"short": "Firewall logs streams"}, "item": {"type": "string"}}]}}]}, {"type": "object", "var": "$body.properties.destinations", "options": ["destinations"], "group": "Properties", "help": {"short": "The specification of destinations."}, "args": [{"type": "object", "var": "$body.properties.destinations.azureMonitorMetrics", "options": ["azure-monitor-metrics"], "help": {"short": "Azure Monitor Metrics destination."}, "args": [{"type": "string", "var": "$body.properties.destinations.azureMonitorMetrics.name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}, {"type": "array<object>", "var": "$body.properties.destinations.eventHubs", "options": ["event-hubs"], "help": {"short": "List of Event Hubs destinations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.destinations.eventHubs[].eventHubResourceId", "options": ["event-hub-resource-id"], "help": {"short": "The resource ID of the event hub."}}, {"type": "string", "var": "$body.properties.destinations.eventHubs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}}, {"type": "array<object>", "var": "$body.properties.destinations.eventHubsDirect", "options": ["event-hubs-direct"], "help": {"short": "List of Event Hubs Direct destinations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.destinations.eventHubsDirect[].eventHubResourceId", "options": ["event-hub-resource-id"], "help": {"short": "The resource ID of the event hub."}}, {"type": "string", "var": "$body.properties.destinations.eventHubsDirect[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}}, {"type": "array<object>", "var": "$body.properties.destinations.logAnalytics", "options": ["log-analytics"], "help": {"short": "List of Log Analytics destinations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.destinations.logAnalytics[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}, {"type": "string", "var": "$body.properties.destinations.logAnalytics[].workspaceResourceId", "options": ["workspace-resource-id"], "help": {"short": "The resource ID of the Log Analytics workspace."}}]}}, {"type": "array<object>", "var": "$body.properties.destinations.monitoringAccounts", "options": ["monitoring-accounts"], "help": {"short": "List of monitoring account destinations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.destinations.monitoringAccounts[].accountResourceId", "options": ["account-resource-id"], "help": {"short": "The resource ID of the monitoring account."}}, {"type": "string", "var": "$body.properties.destinations.monitoringAccounts[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}}, {"type": "array<@StorageBlobDestination_create>", "var": "$body.properties.destinations.storageAccounts", "options": ["storage-accounts"], "help": {"short": "List of storage accounts destinations."}, "item": {"type": "@StorageBlobDestination_create"}}, {"type": "array<object>", "var": "$body.properties.destinations.storageBlobsDirect", "options": ["storage-blobs-direct"], "help": {"short": "List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent."}, "item": {"type": "object", "args": [{"type": "string", "var": "@StorageBlobDestination_create.containerName", "options": ["container-name"], "help": {"short": "The container name of the Storage Blob."}}, {"type": "string", "var": "@StorageBlobDestination_create.name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}, {"type": "string", "var": "@StorageBlobDestination_create.storageAccountResourceId", "options": ["storage-account-resource-id"], "help": {"short": "The resource ID of the storage account."}}], "cls": "StorageBlobDestination_create"}}, {"type": "array<object>", "var": "$body.properties.destinations.storageTablesDirect", "options": ["storage-tables-direct"], "help": {"short": "List of Storage Table Direct destinations."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.destinations.storageTablesDirect[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}, {"type": "string", "var": "$body.properties.destinations.storageTablesDirect[].storageAccountResourceId", "options": ["storage-account-resource-id"], "help": {"short": "The resource ID of the storage account."}}, {"type": "string", "var": "$body.properties.destinations.storageTablesDirect[].tableName", "options": ["table-name"], "help": {"short": "The name of the Storage Table."}}]}}]}, {"type": "object", "var": "$body.properties.streamDeclarations", "options": ["stream-declarations"], "group": "Properties", "help": {"short": "Declaration of custom streams used in this rule."}, "additionalProps": {"item": {"type": "object", "args": [{"type": "array<object>", "var": "$body.properties.streamDeclarations{}.columns", "options": ["columns"], "help": {"short": "List of columns used by data in this stream."}, "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.streamDeclarations{}.columns[].name", "options": ["name"], "help": {"short": "The name of the column."}}, {"type": "string", "var": "$body.properties.streamDeclarations{}.columns[].type", "options": ["type"], "help": {"short": "The type of the column data."}, "enum": {"items": [{"name": "boolean", "value": "boolean"}, {"name": "datetime", "value": "datetime"}, {"name": "dynamic", "value": "dynamic"}, {"name": "int", "value": "int"}, {"name": "long", "value": "long"}, {"name": "real", "value": "real"}, {"name": "string", "value": "string"}]}}]}}]}}}]}], "operations": [{"operationId": "DataCollectionRules_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "dataCollectionRuleName", "arg": "$Path.dataCollectionRuleName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-06-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "props": [{"type": "IdentityObject", "name": "identity", "arg": "$body.identity", "props": [{"type": "string", "name": "type", "arg": "$body.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$body.identity.userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object"}}}]}, {"type": "string", "name": "kind", "arg": "$body.kind", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "ResourceLocation", "name": "location", "arg": "$body.location", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "dataCollectionEndpointId", "arg": "$body.properties.dataCollectionEndpointId"}, {"type": "array<object>", "name": "dataFlows", "arg": "$body.properties.dataFlows", "item": {"type": "object", "props": [{"type": "string", "name": "builtInTransform", "arg": "$body.properties.dataFlows[].builtInTransform"}, {"type": "array<string>", "name": "destinations", "arg": "$body.properties.dataFlows[].destinations", "item": {"type": "string"}}, {"type": "string", "name": "outputStream", "arg": "$body.properties.dataFlows[].outputStream"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataFlows[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "string", "name": "transformKql", "arg": "$body.properties.dataFlows[].transformKql"}]}}, {"type": "object", "name": "dataSources", "arg": "$body.properties.dataSources", "props": [{"type": "object", "name": "dataImports", "arg": "$body.properties.dataSources.dataImports", "props": [{"type": "object", "name": "eventHub", "arg": "$body.properties.dataSources.dataImports.eventHub", "props": [{"type": "string", "name": "consumerGroup", "arg": "$body.properties.dataSources.dataImports.eventHub.consumerGroup"}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.dataImports.eventHub.name"}, {"type": "string", "name": "stream", "arg": "$body.properties.dataSources.dataImports.eventHub.stream"}]}]}, {"type": "array<object>", "name": "extensions", "arg": "$body.properties.dataSources.extensions", "item": {"type": "object", "props": [{"type": "string", "name": "extensionName", "arg": "$body.properties.dataSources.extensions[].extensionName", "required": true}, {"type": "object", "name": "extensionSettings", "arg": "$body.properties.dataSources.extensions[].extensionSettings"}, {"type": "array<string>", "name": "inputDataSources", "arg": "$body.properties.dataSources.extensions[].inputDataSources", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.extensions[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.extensions[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "iisLogs", "arg": "$body.properties.dataSources.iisLogs", "item": {"type": "object", "props": [{"type": "array<string>", "name": "logDirectories", "arg": "$body.properties.dataSources.iisLogs[].logDirectories", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.iisLogs[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.iisLogs[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logFiles", "arg": "$body.properties.dataSources.logFiles", "item": {"type": "object", "props": [{"type": "array<string>", "name": "filePatterns", "arg": "$body.properties.dataSources.logFiles[].filePatterns", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "format", "arg": "$body.properties.dataSources.logFiles[].format", "required": true, "enum": {"items": [{"value": "text"}]}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.logFiles[].name"}, {"type": "object", "name": "settings", "arg": "$body.properties.dataSources.logFiles[].settings", "props": [{"type": "object", "name": "text", "arg": "$body.properties.dataSources.logFiles[].settings.text", "props": [{"type": "string", "name": "recordStartTimestampFormat", "arg": "$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat", "required": true, "enum": {"items": [{"value": "ISO 8601"}, {"value": "M/D/YYYY HH:MM:SS AM/PM"}, {"value": "MMM d hh:mm:ss"}, {"value": "Mon DD, YYYY HH:MM:SS"}, {"value": "YYYY-MM-DD HH:MM:SS"}, {"value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"value": "ddMMyy HH:mm:ss"}, {"value": "yyMMdd HH:mm:ss"}, {"value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.logFiles[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "performanceCounters", "arg": "$body.properties.dataSources.performanceCounters", "item": {"type": "object", "props": [{"type": "array<string>", "name": "counterSpecifiers", "arg": "$body.properties.dataSources.performanceCounters[].counterSpecifiers", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.performanceCounters[].name"}, {"type": "integer32", "name": "samplingFrequencyInSeconds", "arg": "$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.performanceCounters[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "platformTelemetry", "arg": "$body.properties.dataSources.platformTelemetry", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.dataSources.platformTelemetry[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.platformTelemetry[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "prometheusForwarder", "arg": "$body.properties.dataSources.prometheusForwarder", "item": {"type": "object", "props": [{"type": "object", "name": "labelIncludeFilter", "arg": "$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.prometheusForwarder[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.prometheusForwarder[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-PrometheusMetrics"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "syslog", "arg": "$body.properties.dataSources.syslog", "item": {"type": "object", "props": [{"type": "array<string>", "name": "facilityNames", "arg": "$body.properties.dataSources.syslog[].facilityNames", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "auth"}, {"value": "authpriv"}, {"value": "cron"}, {"value": "daemon"}, {"value": "kern"}, {"value": "local0"}, {"value": "local1"}, {"value": "local2"}, {"value": "local3"}, {"value": "local4"}, {"value": "local5"}, {"value": "local6"}, {"value": "local7"}, {"value": "lpr"}, {"value": "mail"}, {"value": "mark"}, {"value": "news"}, {"value": "syslog"}, {"value": "user"}, {"value": "uucp"}]}}}, {"type": "array<string>", "name": "logLevels", "arg": "$body.properties.dataSources.syslog[].logLevels", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "Alert"}, {"value": "Critical"}, {"value": "Debug"}, {"value": "Emergency"}, {"value": "Error"}, {"value": "Info"}, {"value": "Notice"}, {"value": "Warning"}]}}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.syslog[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.syslog[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Syslog"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsEventLogs", "arg": "$body.properties.dataSources.windowsEventLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.dataSources.windowsEventLogs[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.windowsEventLogs[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "array<string>", "name": "xPathQueries", "arg": "$body.properties.dataSources.windowsEventLogs[].xPathQueries", "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsFirewallLogs", "arg": "$body.properties.dataSources.windowsFirewallLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.dataSources.windowsFirewallLogs[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.windowsFirewallLogs[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}]}, {"type": "string", "name": "description", "arg": "$body.properties.description"}, {"type": "object", "name": "destinations", "arg": "$body.properties.destinations", "props": [{"type": "object", "name": "azureMonitorMetrics", "arg": "$body.properties.destinations.azureMonitorMetrics", "props": [{"type": "string", "name": "name", "arg": "$body.properties.destinations.azureMonitorMetrics.name"}]}, {"type": "array<object>", "name": "eventHubs", "arg": "$body.properties.destinations.eventHubs", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId", "arg": "$body.properties.destinations.eventHubs[].eventHubResourceId"}, {"type": "string", "name": "name", "arg": "$body.properties.destinations.eventHubs[].name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "eventHubsDirect", "arg": "$body.properties.destinations.eventHubsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId", "arg": "$body.properties.destinations.eventHubsDirect[].eventHubResourceId"}, {"type": "string", "name": "name", "arg": "$body.properties.destinations.eventHubsDirect[].name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logAnalytics", "arg": "$body.properties.destinations.logAnalytics", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.destinations.logAnalytics[].name"}, {"type": "string", "name": "workspaceResourceId", "arg": "$body.properties.destinations.logAnalytics[].workspaceResourceId"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "monitoringAccounts", "arg": "$body.properties.destinations.monitoringAccounts", "item": {"type": "object", "props": [{"type": "string", "name": "accountResourceId", "arg": "$body.properties.destinations.monitoringAccounts[].accountResourceId"}, {"type": "string", "name": "name", "arg": "$body.properties.destinations.monitoringAccounts[].name"}]}, "identifiers": ["name"]}, {"type": "array<@StorageBlobDestination_create>", "name": "storageAccounts", "arg": "$body.properties.destinations.storageAccounts", "item": {"type": "@StorageBlobDestination_create"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageBlobsDirect", "arg": "$body.properties.destinations.storageBlobsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "containerName", "arg": "@StorageBlobDestination_create.containerName"}, {"type": "string", "name": "name", "arg": "@StorageBlobDestination_create.name"}, {"type": "string", "name": "storageAccountResourceId", "arg": "@StorageBlobDestination_create.storageAccountResourceId"}], "cls": "StorageBlobDestination_create"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageTablesDirect", "arg": "$body.properties.destinations.storageTablesDirect", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.destinations.storageTablesDirect[].name"}, {"type": "string", "name": "storageAccountResourceId", "arg": "$body.properties.destinations.storageTablesDirect[].storageAccountResourceId"}, {"type": "string", "name": "tableName", "arg": "$body.properties.destinations.storageTablesDirect[].tableName"}]}, "identifiers": ["name"]}]}, {"type": "object", "name": "streamDeclarations", "arg": "$body.properties.streamDeclarations", "additionalProps": {"item": {"type": "object", "props": [{"type": "array<object>", "name": "columns", "arg": "$body.properties.streamDeclarations{}.columns", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.streamDeclarations{}.columns[].name"}, {"type": "string", "name": "type", "arg": "$body.properties.streamDeclarations{}.columns[].type", "enum": {"items": [{"value": "boolean"}, {"value": "datetime"}, {"value": "dynamic"}, {"value": "int"}, {"value": "long"}, {"value": "real"}, {"value": "string"}]}}]}, "identifiers": ["name"]}]}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$body.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionRules/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "dataCollectionEndpointId"}, {"type": "array<object>", "name": "dataFlows", "item": {"type": "object", "props": [{"type": "string", "name": "builtInTransform"}, {"type": "array<string>", "name": "destinations", "item": {"type": "string"}}, {"type": "string", "name": "outputStream"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "string", "name": "transformKql"}]}}, {"type": "object", "name": "dataSources", "props": [{"type": "object", "name": "dataImports", "props": [{"type": "object", "name": "eventHub", "props": [{"type": "string", "name": "consumerGroup"}, {"type": "string", "name": "name"}, {"type": "string", "name": "stream"}]}]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "extensionName", "required": true}, {"type": "object", "name": "extensionSettings"}, {"type": "array<string>", "name": "inputDataSources", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "iisLogs", "item": {"type": "object", "props": [{"type": "array<string>", "name": "logDirectories", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logFiles", "item": {"type": "object", "props": [{"type": "array<string>", "name": "filePatterns", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "format", "required": true, "enum": {"items": [{"value": "text"}]}}, {"type": "string", "name": "name"}, {"type": "object", "name": "settings", "props": [{"type": "object", "name": "text", "props": [{"type": "string", "name": "recordStartTimestampFormat", "required": true, "enum": {"items": [{"value": "ISO 8601"}, {"value": "M/D/YYYY HH:MM:SS AM/PM"}, {"value": "MMM d hh:mm:ss"}, {"value": "Mon DD, YYYY HH:MM:SS"}, {"value": "YYYY-MM-DD HH:MM:SS"}, {"value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"value": "ddMMyy HH:mm:ss"}, {"value": "yyMMdd HH:mm:ss"}, {"value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "performanceCounters", "item": {"type": "object", "props": [{"type": "array<string>", "name": "counterSpecifiers", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "integer32", "name": "samplingFrequencyInSeconds"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "platformTelemetry", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "prometheusForwarder", "item": {"type": "object", "props": [{"type": "object", "name": "labelIncludeFilter", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-PrometheusMetrics"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "syslog", "item": {"type": "object", "props": [{"type": "array<string>", "name": "facilityNames", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "auth"}, {"value": "authpriv"}, {"value": "cron"}, {"value": "daemon"}, {"value": "kern"}, {"value": "local0"}, {"value": "local1"}, {"value": "local2"}, {"value": "local3"}, {"value": "local4"}, {"value": "local5"}, {"value": "local6"}, {"value": "local7"}, {"value": "lpr"}, {"value": "mail"}, {"value": "mark"}, {"value": "news"}, {"value": "syslog"}, {"value": "user"}, {"value": "uucp"}]}}}, {"type": "array<string>", "name": "logLevels", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "Alert"}, {"value": "Critical"}, {"value": "Debug"}, {"value": "Emergency"}, {"value": "Error"}, {"value": "Info"}, {"value": "Notice"}, {"value": "Warning"}]}}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Syslog"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsEventLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "array<string>", "name": "xPathQueries", "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsFirewallLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}]}, {"type": "string", "name": "description"}, {"type": "object", "name": "destinations", "props": [{"type": "object", "name": "azureMonitorMetrics", "props": [{"type": "string", "name": "name"}]}, {"type": "array<object>", "name": "eventHubs", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "eventHubsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logAnalytics", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "workspaceId"}, {"type": "string", "name": "workspaceResourceId"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "monitoringAccounts", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "accountId"}, {"type": "string", "name": "accountResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<@StorageBlobDestination_read>", "name": "storageAccounts", "item": {"type": "@StorageBlobDestination_read"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageBlobsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "containerName"}, {"type": "string", "name": "name"}, {"type": "string", "name": "storageAccountResourceId"}], "cls": "StorageBlobDestination_read"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageTablesDirect", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "storageAccountResourceId"}, {"type": "string", "name": "tableName"}]}, "identifiers": ["name"]}]}, {"readOnly": true, "type": "string", "name": "immutableId"}, {"readOnly": true, "type": "object", "name": "metadata", "props": [{"readOnly": true, "type": "string", "name": "provisionedBy"}, {"readOnly": true, "type": "string", "name": "provisionedByResourceId"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "streamDeclarations", "additionalProps": {"item": {"type": "object", "props": [{"type": "array<object>", "name": "columns", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "boolean"}, {"value": "datetime"}, {"value": "dynamic"}, {"value": "int"}, {"value": "long"}, {"value": "real"}, {"value": "string"}]}}]}, "identifiers": ["name"]}]}}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2022-06-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}", "version": "2022-06-01", "swagger": "mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMi0wNi0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.dataCollectionRuleName", "options": ["n", "name", "rule-name", "data-collection-rule-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the data collection rule. The name is case insensitive."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"nullable": true, "type": "object", "var": "$body.identity", "options": ["identity"], "group": "", "help": {"short": "Managed service identity of the resource."}, "args": [{"type": "string", "var": "$body.identity.type", "options": ["type"], "help": {"short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned,UserAssigned", "value": "SystemAssigned,UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$body.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"nullable": true, "type": "string", "var": "$body.kind", "options": ["kind"], "group": "", "help": {"short": "The kind of the resource."}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.dataCollectionEndpointId", "options": ["endpoint-id", "data-collection-endpoint-id"], "group": "", "help": {"short": "The resource ID of the data collection endpoint that is to be associated."}}, {"nullable": true, "type": "string", "var": "$body.properties.description", "options": ["description"], "group": "", "help": {"short": "Description of the association."}}, {"nullable": true, "type": "object", "var": "$body.tags", "options": ["tags"], "group": "", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$body.properties.dataFlows", "options": ["data-flows-raw"], "group": "Properties", "help": {"short": "The specification of data flows."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.dataFlows[].builtInTransform", "options": ["built-in-transform"], "help": {"short": "The builtIn transform to transform stream data"}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataFlows[].destinations", "options": ["destinations"], "help": {"short": "List of destinations for this data flow."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$body.properties.dataFlows[].outputStream", "options": ["output-stream"], "group": "", "help": {"short": "The output stream of the transform. Only required if the transform changes data to a different stream."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataFlows[].streams", "options": ["streams"], "help": {"short": "List of streams for this data flow."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Microsoft-Event", "value": "Microsoft-Event"}, {"name": "Microsoft-InsightsMetrics", "value": "Microsoft-InsightsMetrics"}, {"name": "Microsoft-Perf", "value": "Microsoft-Perf"}, {"name": "Microsoft-Syslog", "value": "Microsoft-Syslog"}, {"name": "Microsoft-WindowsEvent", "value": "Microsoft-WindowsEvent"}]}}}, {"nullable": true, "type": "string", "var": "$body.properties.dataFlows[].transformKql", "options": ["transform-kql"], "help": {"short": "The KQL query to transform stream data."}}]}}, {"nullable": true, "type": "object", "var": "$body.properties.dataSources", "options": ["data-sources"], "group": "Properties", "help": {"short": "The specification of data sources. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint."}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.dataSources.dataImports", "options": ["data-imports"], "help": {"short": "Specifications of pull based data sources"}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.dataSources.dataImports.eventHub", "options": ["event-hub"], "help": {"short": "Definition of Event Hub configuration."}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.dataSources.dataImports.eventHub.consumerGroup", "options": ["consumer-group"], "help": {"short": "Event Hub consumer group name"}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.dataImports.eventHub.name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.dataImports.eventHub.stream", "options": ["stream"], "help": {"short": "The stream to collect from EventHub"}}]}]}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.extensions", "options": ["extensions"], "help": {"short": "The list of Azure VM extension data source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$body.properties.dataSources.extensions[].extensionName", "options": ["extension-name"], "help": {"short": "The name of the VM extension."}}, {"nullable": true, "blank": {"value": {}}, "type": "object", "var": "$body.properties.dataSources.extensions[].extensionSettings", "options": ["extension-settings"], "help": {"short": "The extension settings. The format is specific for particular extension."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.extensions[].inputDataSources", "options": ["input-data-sources"], "help": {"short": "The list of data sources this extension needs data from."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.extensions[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.extensions[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Microsoft-Event", "value": "Microsoft-Event"}, {"name": "Microsoft-InsightsMetrics", "value": "Microsoft-InsightsMetrics"}, {"name": "Microsoft-Perf", "value": "Microsoft-Perf"}, {"name": "Microsoft-Syslog", "value": "Microsoft-Syslog"}, {"name": "Microsoft-WindowsEvent", "value": "Microsoft-WindowsEvent"}]}}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.iisLogs", "options": ["iis-logs"], "help": {"short": "The list of IIS logs source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.iisLogs[].logDirectories", "options": ["log-directories"], "help": {"short": "Absolute paths file location"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.iisLogs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.iisLogs[].streams", "options": ["streams"], "help": {"short": "IIS streams"}, "item": {"nullable": true, "type": "string"}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.logFiles", "options": ["log-files"], "help": {"short": "The list of Log files source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"type": "array<string>", "var": "$body.properties.dataSources.logFiles[].filePatterns", "options": ["file-patterns"], "help": {"short": "File Patterns where the log files are located"}, "item": {"nullable": true, "type": "string"}}, {"type": "string", "var": "$body.properties.dataSources.logFiles[].format", "options": ["format"], "help": {"short": "The data format of the log files"}, "enum": {"items": [{"name": "text", "value": "text"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.logFiles[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "object", "var": "$body.properties.dataSources.logFiles[].settings", "options": ["settings"], "help": {"short": "The log files specific settings."}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.dataSources.logFiles[].settings.text", "options": ["text"], "help": {"short": "Text settings"}, "args": [{"type": "string", "var": "$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat", "options": ["record-start-timestamp-format"], "help": {"short": "One of the supported timestamp formats"}, "enum": {"items": [{"name": "ISO 8601", "value": "ISO 8601"}, {"name": "M/D/YYYY HH:MM:SS AM/PM", "value": "M/D/YYYY HH:MM:SS AM/PM"}, {"name": "MMM d hh:mm:ss", "value": "MMM d hh:mm:ss"}, {"name": "Mon DD, YYYY HH:MM:SS", "value": "Mon DD, YYYY HH:MM:SS"}, {"name": "YYYY-MM-DD HH:MM:SS", "value": "YYYY-MM-DD HH:MM:SS"}, {"name": "dd/MMM/yyyy:HH:mm:ss zzz", "value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"name": "ddMMyy HH:mm:ss", "value": "ddMMyy HH:mm:ss"}, {"name": "yyMMdd HH:mm:ss", "value": "yyMMdd HH:mm:ss"}, {"name": "yyyy-MM-ddTHH:mm:ssK", "value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "var": "$body.properties.dataSources.logFiles[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data source"}, "item": {"nullable": true, "type": "string"}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.performanceCounters", "options": ["performance-counters"], "help": {"short": "The list of performance counter data source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.performanceCounters[].counterSpecifiers", "options": ["counter-specifiers"], "group": "", "help": {"short": "A list of specifier names of the performance counters you want to collect. Use a wildcard (*) to collect a counter for all instances. To get a list of performance counters on Windows, run the command 'typeperf'."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.performanceCounters[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "integer32", "var": "$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds", "options": ["sampling-frequency-in-seconds"], "help": {"short": "The number of seconds between consecutive counter measurements (samples)."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.performanceCounters[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Microsoft-InsightsMetrics", "value": "Microsoft-InsightsMetrics"}, {"name": "Microsoft-Perf", "value": "Microsoft-Perf"}]}}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.platformTelemetry", "options": ["platform-telemetry"], "help": {"short": "The list of platform telemetry configurations"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.dataSources.platformTelemetry[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.platformTelemetry[].streams", "options": ["streams"], "help": {"short": "List of platform telemetry streams to collect"}, "item": {"nullable": true, "type": "string"}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.prometheusForwarder", "options": ["prometheus-forwarder"], "help": {"short": "The list of Prometheus forwarder data source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "object", "var": "$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter", "options": ["label-include-filter"], "group": "", "help": {"short": "The list of label inclusion filters in the form of label \"name-value\" pairs. Currently only one label is supported: 'microsoft_metrics_include_label'. Label values are matched case-insensitively."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.prometheusForwarder[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.prometheusForwarder[].streams", "options": ["streams"], "help": {"short": "List of streams that this data source will be sent to."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Microsoft-PrometheusMetrics", "value": "Microsoft-PrometheusMetrics"}]}}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.syslog", "options": ["syslog"], "help": {"short": "The list of Syslog data source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.syslog[].facilityNames", "options": ["facility-names"], "help": {"short": "The list of facility names."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "*", "value": "*"}, {"name": "auth", "value": "auth"}, {"name": "authpriv", "value": "authpriv"}, {"name": "cron", "value": "cron"}, {"name": "daemon", "value": "daemon"}, {"name": "kern", "value": "kern"}, {"name": "local0", "value": "local0"}, {"name": "local1", "value": "local1"}, {"name": "local2", "value": "local2"}, {"name": "local3", "value": "local3"}, {"name": "local4", "value": "local4"}, {"name": "local5", "value": "local5"}, {"name": "local6", "value": "local6"}, {"name": "local7", "value": "local7"}, {"name": "lpr", "value": "lpr"}, {"name": "mail", "value": "mail"}, {"name": "mark", "value": "mark"}, {"name": "news", "value": "news"}, {"name": "syslog", "value": "syslog"}, {"name": "user", "value": "user"}, {"name": "uucp", "value": "uucp"}]}}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.syslog[].logLevels", "options": ["log-levels"], "help": {"short": "The log levels to collect."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "*", "value": "*"}, {"name": "Alert", "value": "Alert"}, {"name": "Critical", "value": "Critical"}, {"name": "Debug", "value": "Debug"}, {"name": "Emergency", "value": "Emergency"}, {"name": "Error", "value": "Error"}, {"name": "Info", "value": "Info"}, {"name": "Notice", "value": "Notice"}, {"name": "Warning", "value": "Warning"}]}}}, {"nullable": true, "type": "string", "var": "$body.properties.dataSources.syslog[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.syslog[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Microsoft-Syslog", "value": "Microsoft-Syslog"}]}}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.windowsEventLogs", "options": ["windows-event-logs"], "help": {"short": "The list of Windows Event Log data source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.dataSources.windowsEventLogs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.windowsEventLogs[].streams", "options": ["streams"], "group": "", "help": {"short": "List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."}, "item": {"nullable": true, "type": "string", "enum": {"items": [{"name": "Microsoft-Event", "value": "Microsoft-Event"}, {"name": "Microsoft-WindowsEvent", "value": "Microsoft-WindowsEvent"}]}}}, {"nullable": true, "type": "array<string>", "var": "$body.properties.dataSources.windowsEventLogs[].xPathQueries", "options": ["x-path-queries"], "help": {"short": "A list of Windows Event Log queries in XPATH format."}, "item": {"nullable": true, "type": "string"}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.dataSources.windowsFirewallLogs", "options": ["windows-firewall-logs"], "help": {"short": "The list of Windows Firewall logs source configurations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.dataSources.windowsFirewallLogs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."}}, {"type": "array<string>", "var": "$body.properties.dataSources.windowsFirewallLogs[].streams", "options": ["streams"], "help": {"short": "Firewall logs streams"}, "item": {"nullable": true, "type": "string"}}]}}]}, {"nullable": true, "type": "object", "var": "$body.properties.destinations", "options": ["destinations"], "group": "Properties", "help": {"short": "The specification of destinations."}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.destinations.azureMonitorMetrics", "options": ["azure-monitor-metrics"], "help": {"short": "Azure Monitor Metrics destination."}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.destinations.azureMonitorMetrics.name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}, {"nullable": true, "type": "array<object>", "var": "$body.properties.destinations.eventHubs", "options": ["event-hubs"], "help": {"short": "List of Event Hubs destinations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.destinations.eventHubs[].eventHubResourceId", "options": ["event-hub-resource-id"], "help": {"short": "The resource ID of the event hub."}}, {"nullable": true, "type": "string", "var": "$body.properties.destinations.eventHubs[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.destinations.eventHubsDirect", "options": ["event-hubs-direct"], "help": {"short": "List of Event Hubs Direct destinations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.destinations.eventHubsDirect[].eventHubResourceId", "options": ["event-hub-resource-id"], "help": {"short": "The resource ID of the event hub."}}, {"nullable": true, "type": "string", "var": "$body.properties.destinations.eventHubsDirect[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.destinations.logAnalytics", "options": ["log-analytics"], "help": {"short": "List of Log Analytics destinations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.destinations.logAnalytics[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "string", "var": "$body.properties.destinations.logAnalytics[].workspaceResourceId", "options": ["workspace-resource-id"], "help": {"short": "The resource ID of the Log Analytics workspace."}}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.destinations.monitoringAccounts", "options": ["monitoring-accounts"], "help": {"short": "List of monitoring account destinations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.destinations.monitoringAccounts[].accountResourceId", "options": ["account-resource-id"], "help": {"short": "The resource ID of the monitoring account."}}, {"nullable": true, "type": "string", "var": "$body.properties.destinations.monitoringAccounts[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}]}}, {"nullable": true, "type": "array<@StorageBlobDestination_update>", "var": "$body.properties.destinations.storageAccounts", "options": ["storage-accounts"], "help": {"short": "List of storage accounts destinations."}, "item": {"nullable": true, "type": "@StorageBlobDestination_update"}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.destinations.storageBlobsDirect", "options": ["storage-blobs-direct"], "help": {"short": "List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "@StorageBlobDestination_update.containerName", "options": ["container-name"], "help": {"short": "The container name of the Storage Blob."}}, {"nullable": true, "type": "string", "var": "@StorageBlobDestination_update.name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "string", "var": "@StorageBlobDestination_update.storageAccountResourceId", "options": ["storage-account-resource-id"], "help": {"short": "The resource ID of the storage account."}}], "cls": "StorageBlobDestination_update"}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.destinations.storageTablesDirect", "options": ["storage-tables-direct"], "help": {"short": "List of Storage Table Direct destinations."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.destinations.storageTablesDirect[].name", "options": ["name"], "group": "", "help": {"short": "A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."}}, {"nullable": true, "type": "string", "var": "$body.properties.destinations.storageTablesDirect[].storageAccountResourceId", "options": ["storage-account-resource-id"], "help": {"short": "The resource ID of the storage account."}}, {"nullable": true, "type": "string", "var": "$body.properties.destinations.storageTablesDirect[].tableName", "options": ["table-name"], "help": {"short": "The name of the Storage Table."}}]}}]}, {"nullable": true, "type": "object", "var": "$body.properties.streamDeclarations", "options": ["stream-declarations"], "group": "Properties", "help": {"short": "Declaration of custom streams used in this rule."}, "additionalProps": {"item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<object>", "var": "$body.properties.streamDeclarations{}.columns", "options": ["columns"], "help": {"short": "List of columns used by data in this stream."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.streamDeclarations{}.columns[].name", "options": ["name"], "help": {"short": "The name of the column."}}, {"nullable": true, "type": "string", "var": "$body.properties.streamDeclarations{}.columns[].type", "options": ["type"], "help": {"short": "The type of the column data."}, "enum": {"items": [{"name": "boolean", "value": "boolean"}, {"name": "datetime", "value": "datetime"}, {"name": "dynamic", "value": "dynamic"}, {"name": "int", "value": "int"}, {"name": "long", "value": "long"}, {"name": "real", "value": "real"}, {"name": "string", "value": "string"}]}}]}}]}}}]}], "operations": [{"operationId": "DataCollectionRules_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "dataCollectionRuleName", "arg": "$Path.dataCollectionRuleName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-06-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionRules/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "dataCollectionEndpointId"}, {"type": "array<object>", "name": "dataFlows", "item": {"type": "object", "props": [{"type": "string", "name": "builtInTransform"}, {"type": "array<string>", "name": "destinations", "item": {"type": "string"}}, {"type": "string", "name": "outputStream"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "string", "name": "transformKql"}]}}, {"type": "object", "name": "dataSources", "props": [{"type": "object", "name": "dataImports", "props": [{"type": "object", "name": "eventHub", "props": [{"type": "string", "name": "consumerGroup"}, {"type": "string", "name": "name"}, {"type": "string", "name": "stream"}]}]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "extensionName", "required": true}, {"type": "object", "name": "extensionSettings"}, {"type": "array<string>", "name": "inputDataSources", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "iisLogs", "item": {"type": "object", "props": [{"type": "array<string>", "name": "logDirectories", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logFiles", "item": {"type": "object", "props": [{"type": "array<string>", "name": "filePatterns", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "format", "required": true, "enum": {"items": [{"value": "text"}]}}, {"type": "string", "name": "name"}, {"type": "object", "name": "settings", "props": [{"type": "object", "name": "text", "props": [{"type": "string", "name": "recordStartTimestampFormat", "required": true, "enum": {"items": [{"value": "ISO 8601"}, {"value": "M/D/YYYY HH:MM:SS AM/PM"}, {"value": "MMM d hh:mm:ss"}, {"value": "Mon DD, YYYY HH:MM:SS"}, {"value": "YYYY-MM-DD HH:MM:SS"}, {"value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"value": "ddMMyy HH:mm:ss"}, {"value": "yyMMdd HH:mm:ss"}, {"value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "performanceCounters", "item": {"type": "object", "props": [{"type": "array<string>", "name": "counterSpecifiers", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "integer32", "name": "samplingFrequencyInSeconds"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "platformTelemetry", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "prometheusForwarder", "item": {"type": "object", "props": [{"type": "object", "name": "labelIncludeFilter", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-PrometheusMetrics"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "syslog", "item": {"type": "object", "props": [{"type": "array<string>", "name": "facilityNames", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "auth"}, {"value": "authpriv"}, {"value": "cron"}, {"value": "daemon"}, {"value": "kern"}, {"value": "local0"}, {"value": "local1"}, {"value": "local2"}, {"value": "local3"}, {"value": "local4"}, {"value": "local5"}, {"value": "local6"}, {"value": "local7"}, {"value": "lpr"}, {"value": "mail"}, {"value": "mark"}, {"value": "news"}, {"value": "syslog"}, {"value": "user"}, {"value": "uucp"}]}}}, {"type": "array<string>", "name": "logLevels", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "Alert"}, {"value": "Critical"}, {"value": "Debug"}, {"value": "Emergency"}, {"value": "Error"}, {"value": "Info"}, {"value": "Notice"}, {"value": "Warning"}]}}}, {"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Syslog"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsEventLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "array<string>", "name": "xPathQueries", "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsFirewallLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<string>", "name": "streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}]}, {"type": "string", "name": "description"}, {"type": "object", "name": "destinations", "props": [{"type": "object", "name": "azureMonitorMetrics", "props": [{"type": "string", "name": "name"}]}, {"type": "array<object>", "name": "eventHubs", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "eventHubsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logAnalytics", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "workspaceId"}, {"type": "string", "name": "workspaceResourceId"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "monitoringAccounts", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "accountId"}, {"type": "string", "name": "accountResourceId"}, {"type": "string", "name": "name"}]}, "identifiers": ["name"]}, {"type": "array<@StorageBlobDestination_read>", "name": "storageAccounts", "item": {"type": "@StorageBlobDestination_read"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageBlobsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "containerName"}, {"type": "string", "name": "name"}, {"type": "string", "name": "storageAccountResourceId"}], "cls": "StorageBlobDestination_read"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageTablesDirect", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "storageAccountResourceId"}, {"type": "string", "name": "tableName"}]}, "identifiers": ["name"]}]}, {"readOnly": true, "type": "string", "name": "immutableId"}, {"readOnly": true, "type": "object", "name": "metadata", "props": [{"readOnly": true, "type": "string", "name": "provisionedBy"}, {"readOnly": true, "type": "string", "name": "provisionedByResourceId"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "streamDeclarations", "additionalProps": {"item": {"type": "object", "props": [{"type": "array<object>", "name": "columns", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "boolean"}, {"value": "datetime"}, {"value": "dynamic"}, {"value": "int"}, {"value": "long"}, {"value": "real"}, {"value": "string"}]}}]}, "identifiers": ["name"]}]}}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "DataCollectionRuleResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "body", "props": [{"type": "IdentityObject", "name": "identity", "arg": "$body.identity", "props": [{"type": "string", "name": "type", "arg": "$body.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$body.identity.userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object"}}}]}, {"type": "string", "name": "kind", "arg": "$body.kind", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "dataCollectionEndpointId", "arg": "$body.properties.dataCollectionEndpointId"}, {"type": "array<object>", "name": "dataFlows", "arg": "$body.properties.dataFlows", "item": {"type": "object", "props": [{"type": "string", "name": "builtInTransform", "arg": "$body.properties.dataFlows[].builtInTransform"}, {"type": "array<string>", "name": "destinations", "arg": "$body.properties.dataFlows[].destinations", "item": {"type": "string"}}, {"type": "string", "name": "outputStream", "arg": "$body.properties.dataFlows[].outputStream"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataFlows[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "string", "name": "transformKql", "arg": "$body.properties.dataFlows[].transformKql"}]}}, {"type": "object", "name": "dataSources", "arg": "$body.properties.dataSources", "props": [{"type": "object", "name": "dataImports", "arg": "$body.properties.dataSources.dataImports", "props": [{"type": "object", "name": "eventHub", "arg": "$body.properties.dataSources.dataImports.eventHub", "props": [{"type": "string", "name": "consumerGroup", "arg": "$body.properties.dataSources.dataImports.eventHub.consumerGroup"}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.dataImports.eventHub.name"}, {"type": "string", "name": "stream", "arg": "$body.properties.dataSources.dataImports.eventHub.stream"}]}]}, {"type": "array<object>", "name": "extensions", "arg": "$body.properties.dataSources.extensions", "item": {"type": "object", "props": [{"type": "string", "name": "extensionName", "arg": "$body.properties.dataSources.extensions[].extensionName", "required": true}, {"type": "object", "name": "extensionSettings", "arg": "$body.properties.dataSources.extensions[].extensionSettings"}, {"type": "array<string>", "name": "inputDataSources", "arg": "$body.properties.dataSources.extensions[].inputDataSources", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.extensions[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.extensions[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}, {"value": "Microsoft-Syslog"}, {"value": "Microsoft-WindowsEvent"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "iisLogs", "arg": "$body.properties.dataSources.iisLogs", "item": {"type": "object", "props": [{"type": "array<string>", "name": "logDirectories", "arg": "$body.properties.dataSources.iisLogs[].logDirectories", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.iisLogs[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.iisLogs[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logFiles", "arg": "$body.properties.dataSources.logFiles", "item": {"type": "object", "props": [{"type": "array<string>", "name": "filePatterns", "arg": "$body.properties.dataSources.logFiles[].filePatterns", "required": true, "item": {"type": "string"}}, {"type": "string", "name": "format", "arg": "$body.properties.dataSources.logFiles[].format", "required": true, "enum": {"items": [{"value": "text"}]}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.logFiles[].name"}, {"type": "object", "name": "settings", "arg": "$body.properties.dataSources.logFiles[].settings", "props": [{"type": "object", "name": "text", "arg": "$body.properties.dataSources.logFiles[].settings.text", "props": [{"type": "string", "name": "recordStartTimestampFormat", "arg": "$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat", "required": true, "enum": {"items": [{"value": "ISO 8601"}, {"value": "M/D/YYYY HH:MM:SS AM/PM"}, {"value": "MMM d hh:mm:ss"}, {"value": "Mon DD, YYYY HH:MM:SS"}, {"value": "YYYY-MM-DD HH:MM:SS"}, {"value": "dd/MMM/yyyy:HH:mm:ss zzz"}, {"value": "ddMMyy HH:mm:ss"}, {"value": "yyMMdd HH:mm:ss"}, {"value": "yyyy-MM-ddTHH:mm:ssK"}]}}]}]}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.logFiles[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "performanceCounters", "arg": "$body.properties.dataSources.performanceCounters", "item": {"type": "object", "props": [{"type": "array<string>", "name": "counterSpecifiers", "arg": "$body.properties.dataSources.performanceCounters[].counterSpecifiers", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.performanceCounters[].name"}, {"type": "integer32", "name": "samplingFrequencyInSeconds", "arg": "$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.performanceCounters[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-InsightsMetrics"}, {"value": "Microsoft-Perf"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "platformTelemetry", "arg": "$body.properties.dataSources.platformTelemetry", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.dataSources.platformTelemetry[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.platformTelemetry[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "prometheusForwarder", "arg": "$body.properties.dataSources.prometheusForwarder", "item": {"type": "object", "props": [{"type": "object", "name": "labelIncludeFilter", "arg": "$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.prometheusForwarder[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.prometheusForwarder[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-PrometheusMetrics"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "syslog", "arg": "$body.properties.dataSources.syslog", "item": {"type": "object", "props": [{"type": "array<string>", "name": "facilityNames", "arg": "$body.properties.dataSources.syslog[].facilityNames", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "auth"}, {"value": "authpriv"}, {"value": "cron"}, {"value": "daemon"}, {"value": "kern"}, {"value": "local0"}, {"value": "local1"}, {"value": "local2"}, {"value": "local3"}, {"value": "local4"}, {"value": "local5"}, {"value": "local6"}, {"value": "local7"}, {"value": "lpr"}, {"value": "mail"}, {"value": "mark"}, {"value": "news"}, {"value": "syslog"}, {"value": "user"}, {"value": "uucp"}]}}}, {"type": "array<string>", "name": "logLevels", "arg": "$body.properties.dataSources.syslog[].logLevels", "item": {"type": "string", "enum": {"items": [{"value": "*"}, {"value": "Alert"}, {"value": "Critical"}, {"value": "Debug"}, {"value": "Emergency"}, {"value": "Error"}, {"value": "Info"}, {"value": "Notice"}, {"value": "Warning"}]}}}, {"type": "string", "name": "name", "arg": "$body.properties.dataSources.syslog[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.syslog[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Syslog"}]}}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsEventLogs", "arg": "$body.properties.dataSources.windowsEventLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.dataSources.windowsEventLogs[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.windowsEventLogs[].streams", "item": {"type": "string", "enum": {"items": [{"value": "Microsoft-Event"}, {"value": "Microsoft-WindowsEvent"}]}}}, {"type": "array<string>", "name": "xPathQueries", "arg": "$body.properties.dataSources.windowsEventLogs[].xPathQueries", "item": {"type": "string"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "windowsFirewallLogs", "arg": "$body.properties.dataSources.windowsFirewallLogs", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.dataSources.windowsFirewallLogs[].name"}, {"type": "array<string>", "name": "streams", "arg": "$body.properties.dataSources.windowsFirewallLogs[].streams", "required": true, "item": {"type": "string"}}]}, "identifiers": ["name"]}]}, {"type": "string", "name": "description", "arg": "$body.properties.description"}, {"type": "object", "name": "destinations", "arg": "$body.properties.destinations", "props": [{"type": "object", "name": "azureMonitorMetrics", "arg": "$body.properties.destinations.azureMonitorMetrics", "props": [{"type": "string", "name": "name", "arg": "$body.properties.destinations.azureMonitorMetrics.name"}]}, {"type": "array<object>", "name": "eventHubs", "arg": "$body.properties.destinations.eventHubs", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId", "arg": "$body.properties.destinations.eventHubs[].eventHubResourceId"}, {"type": "string", "name": "name", "arg": "$body.properties.destinations.eventHubs[].name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "eventHubsDirect", "arg": "$body.properties.destinations.eventHubsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "eventHubResourceId", "arg": "$body.properties.destinations.eventHubsDirect[].eventHubResourceId"}, {"type": "string", "name": "name", "arg": "$body.properties.destinations.eventHubsDirect[].name"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "logAnalytics", "arg": "$body.properties.destinations.logAnalytics", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.destinations.logAnalytics[].name"}, {"type": "string", "name": "workspaceResourceId", "arg": "$body.properties.destinations.logAnalytics[].workspaceResourceId"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "monitoringAccounts", "arg": "$body.properties.destinations.monitoringAccounts", "item": {"type": "object", "props": [{"type": "string", "name": "accountResourceId", "arg": "$body.properties.destinations.monitoringAccounts[].accountResourceId"}, {"type": "string", "name": "name", "arg": "$body.properties.destinations.monitoringAccounts[].name"}]}, "identifiers": ["name"]}, {"type": "array<@StorageBlobDestination_update>", "name": "storageAccounts", "arg": "$body.properties.destinations.storageAccounts", "item": {"type": "@StorageBlobDestination_update"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageBlobsDirect", "arg": "$body.properties.destinations.storageBlobsDirect", "item": {"type": "object", "props": [{"type": "string", "name": "containerName", "arg": "@StorageBlobDestination_update.containerName"}, {"type": "string", "name": "name", "arg": "@StorageBlobDestination_update.name"}, {"type": "string", "name": "storageAccountResourceId", "arg": "@StorageBlobDestination_update.storageAccountResourceId"}], "cls": "StorageBlobDestination_update"}, "identifiers": ["name"]}, {"type": "array<object>", "name": "storageTablesDirect", "arg": "$body.properties.destinations.storageTablesDirect", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.destinations.storageTablesDirect[].name"}, {"type": "string", "name": "storageAccountResourceId", "arg": "$body.properties.destinations.storageTablesDirect[].storageAccountResourceId"}, {"type": "string", "name": "tableName", "arg": "$body.properties.destinations.storageTablesDirect[].tableName"}]}, "identifiers": ["name"]}]}, {"type": "object", "name": "streamDeclarations", "arg": "$body.properties.streamDeclarations", "additionalProps": {"item": {"type": "object", "props": [{"type": "array<object>", "name": "columns", "arg": "$body.properties.streamDeclarations{}.columns", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$body.properties.streamDeclarations{}.columns[].name"}, {"type": "string", "name": "type", "arg": "$body.properties.streamDeclarations{}.columns[].type", "enum": {"items": [{"value": "boolean"}, {"value": "datetime"}, {"value": "dynamic"}, {"value": "int"}, {"value": "long"}, {"value": "real"}, {"value": "string"}]}}]}, "identifiers": ["name"]}]}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$body.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"operationId": "DataCollectionRules_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "dataCollectionRuleName", "arg": "$Path.dataCollectionRuleName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-06-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@DataCollectionRuleResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}