<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}" version="2023-03-11" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMy0wMy0xMQ=="/>
  <commandGroup name="monitor data-collection rule">
    <command name="show" version="2023-03-11" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}" version="2023-03-11" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMy0wMy0xMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionRuleName" options="data-collection-rule-name rule-name name n" required="True" group="" idPart="name">
          <help short="The name of the data collection rule. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DataCollectionRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}">
          <request method="get">
            <path>
              <param type="string" name="dataCollectionRuleName" arg="$Path.dataCollectionRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-11&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionRules/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="agentSettings">
                      <prop type="array<object>" name="logs">
                        <item type="object">
                          <prop type="string" name="name">
                            <enum>
                              <item value="&quot;MaxDiskQuotaInMB&quot;"/>
                              <item value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="dataCollectionEndpointId"/>
                    <prop type="array<object>" name="dataFlows">
                      <item type="object">
                        <prop type="string" name="builtInTransform"/>
                        <prop type="boolean" name="captureOverflow"/>
                        <prop type="array<string>" name="destinations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="outputStream"/>
                        <prop type="array<string>" name="streams">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft-Event&quot;"/>
                              <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                              <item value="&quot;Microsoft-Perf&quot;"/>
                              <item value="&quot;Microsoft-Syslog&quot;"/>
                              <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="string" name="transformKql"/>
                      </item>
                    </prop>
                    <prop type="object" name="dataSources">
                      <prop type="object" name="dataImports">
                        <prop type="object" name="eventHub">
                          <prop type="string" name="consumerGroup"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="stream"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="extensions" identifiers="name">
                        <item type="object">
                          <prop type="string" name="extensionName" required="True"/>
                          <prop type="object" name="extensionSettings">
                            <additionalProp anyType="True"/>
                          </prop>
                          <prop type="array<string>" name="inputDataSources">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="iisLogs" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="logDirectories">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logFiles" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="filePatterns" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="format" required="True">
                            <enum>
                              <item value="&quot;json&quot;"/>
                              <item value="&quot;text&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="settings">
                            <prop type="object" name="text">
                              <prop type="string" name="recordStartTimestampFormat" required="True">
                                <enum>
                                  <item value="&quot;ISO 8601&quot;"/>
                                  <item value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                                  <item value="&quot;MMM d hh:mm:ss&quot;"/>
                                  <item value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                                  <item value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                                  <item value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                                  <item value="&quot;ddMMyy HH:mm:ss&quot;"/>
                                  <item value="&quot;yyMMdd HH:mm:ss&quot;"/>
                                  <item value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="performanceCounters" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="counterSpecifiers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="integer32" name="samplingFrequencyInSeconds"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="platformTelemetry" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="prometheusForwarder" identifiers="name">
                        <item type="object">
                          <prop type="object" name="labelIncludeFilter">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="syslog" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="facilityNames">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;alert&quot;"/>
                                <item value="&quot;audit&quot;"/>
                                <item value="&quot;auth&quot;"/>
                                <item value="&quot;authpriv&quot;"/>
                                <item value="&quot;clock&quot;"/>
                                <item value="&quot;cron&quot;"/>
                                <item value="&quot;daemon&quot;"/>
                                <item value="&quot;ftp&quot;"/>
                                <item value="&quot;kern&quot;"/>
                                <item value="&quot;local0&quot;"/>
                                <item value="&quot;local1&quot;"/>
                                <item value="&quot;local2&quot;"/>
                                <item value="&quot;local3&quot;"/>
                                <item value="&quot;local4&quot;"/>
                                <item value="&quot;local5&quot;"/>
                                <item value="&quot;local6&quot;"/>
                                <item value="&quot;local7&quot;"/>
                                <item value="&quot;lpr&quot;"/>
                                <item value="&quot;mail&quot;"/>
                                <item value="&quot;mark&quot;"/>
                                <item value="&quot;news&quot;"/>
                                <item value="&quot;nopri&quot;"/>
                                <item value="&quot;ntp&quot;"/>
                                <item value="&quot;syslog&quot;"/>
                                <item value="&quot;user&quot;"/>
                                <item value="&quot;uucp&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="logLevels">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Debug&quot;"/>
                                <item value="&quot;Emergency&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Notice&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsEventLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                          <prop type="array<string>" name="xPathQueries">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsFirewallLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="profileFilter">
                            <item type="string">
                              <enum>
                                <item value="&quot;Domain&quot;"/>
                                <item value="&quot;Private&quot;"/>
                                <item value="&quot;Public&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="destinations">
                      <prop type="array<object>" name="azureDataExplorer" identifiers="name">
                        <item type="object">
                          <prop type="string" name="databaseName"/>
                          <prop readOnly="True" type="string" name="ingestionUri"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="resourceId"/>
                        </item>
                      </prop>
                      <prop type="object" name="azureMonitorMetrics">
                        <prop type="string" name="name"/>
                      </prop>
                      <prop type="array<object>" name="eventHubs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="eventHubsDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logAnalytics" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop readOnly="True" type="string" name="workspaceId"/>
                          <prop type="string" name="workspaceResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="microsoftFabric" identifiers="name">
                        <item type="object">
                          <prop type="string" name="artifactId"/>
                          <prop type="string" name="databaseName"/>
                          <prop type="string" name="ingestionUri"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="monitoringAccounts" identifiers="name">
                        <item type="object">
                          <prop readOnly="True" type="string" name="accountId"/>
                          <prop type="string" name="accountResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<@StorageBlobDestination_read>" name="storageAccounts" identifiers="name">
                        <item type="@StorageBlobDestination_read"/>
                      </prop>
                      <prop type="array<object>" name="storageBlobsDirect" identifiers="name">
                        <item type="object" cls="StorageBlobDestination_read">
                          <prop type="string" name="containerName"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="storageTablesDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountResourceId"/>
                          <prop type="string" name="tableName"/>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="endpoints">
                      <prop readOnly="True" type="string" name="logsIngestion"/>
                      <prop readOnly="True" type="string" name="metricsIngestion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="immutableId"/>
                    <prop readOnly="True" type="object" name="metadata">
                      <prop readOnly="True" type="string" name="provisionedBy"/>
                      <prop readOnly="True" type="string" name="provisionedByImmutableId"/>
                      <prop readOnly="True" type="string" name="provisionedByResourceId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="references">
                      <prop type="object" name="enrichmentData">
                        <prop type="array<object>" name="storageBlobs">
                          <item type="object">
                            <prop type="string" name="blobUrl"/>
                            <prop type="string" name="lookupType">
                              <enum>
                                <item value="&quot;Cidr&quot;"/>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="resourceId"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="streamDeclarations">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<object>" name="columns">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;boolean&quot;"/>
                                  <item value="&quot;datetime&quot;"/>
                                  <item value="&quot;dynamic&quot;"/>
                                  <item value="&quot;int&quot;"/>
                                  <item value="&quot;long&quot;"/>
                                  <item value="&quot;real&quot;"/>
                                  <item value="&quot;string&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-03-11" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}" version="2023-03-11" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMy0wMy0xMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionRuleName" options="data-collection-rule-name rule-name name n" required="True" group="" idPart="name">
          <help short="The name of the data collection rule. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="boolean" var="$Query.deleteAssociations" options="delete-associations">
          <help short="If set to 'true' then all associations of this data collection rule will also be deleted"/>
          <default value="false"/>
        </arg>
      </argGroup>
      <operation operationId="DataCollectionRules_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}">
          <request method="delete">
            <path>
              <param type="string" name="dataCollectionRuleName" arg="$Path.dataCollectionRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="boolean" name="deleteAssociations" arg="$Query.deleteAssociations">
                <default value="false"/>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-11&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-03-11">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}" version="2023-03-11" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMy0wMy0xMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionRuleName" options="data-collection-rule-name rule-name name n" required="True" group="" idPart="name">
          <help short="The name of the data collection rule. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="object" var="$body.identity" options="identity" group="">
          <help short="Managed service identity of the resource."/>
          <arg type="string" var="$body.identity.type" options="type" required="True" group="">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum supportExtension="True">
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="string" var="$body.kind" options="kind" group="">
          <help short="The kind of the resource."/>
          <enum supportExtension="True">
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg type="ResourceLocation" var="$body.location" options="location l" group="">
          <help short="The geo-location where the resource lives."/>
        </arg>
        <arg type="string" var="$body.properties.dataCollectionEndpointId" options="data-collection-endpoint-id endpoint-id" group="">
          <help short="The resource ID of the data collection endpoint that is to be associated."/>
        </arg>
        <arg type="string" var="$body.properties.description" options="description" group="">
          <help short="Description of the association."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$body.properties.agentSettings" options="agent-settings" group="Properties">
          <help short="Agent settings used to modify agent behavior on a given host"/>
          <arg type="array<object>" var="$body.properties.agentSettings.logs" options="logs">
            <help short="All the settings that are applicable to the logs agent (AMA)"/>
            <item type="object">
              <arg type="string" var="$body.properties.agentSettings.logs[].name" options="name" group="">
                <help short="The name of the setting. &#13; Must be part of the list of supported settings"/>
                <enum supportExtension="True">
                  <item name="MaxDiskQuotaInMB" value="&quot;MaxDiskQuotaInMB&quot;"/>
                  <item name="UseTimeReceivedForForwardedEvents" value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$body.properties.agentSettings.logs[].value" options="value">
                <help short="The value of the setting"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="array<object>" var="$body.properties.dataFlows" options="data-flows" group="Properties">
          <help short="The specification of data flows."/>
          <item type="object">
            <arg type="string" var="$body.properties.dataFlows[].builtInTransform" options="built-in-transform">
              <help short="The builtIn transform to transform stream data"/>
            </arg>
            <arg type="boolean" var="$body.properties.dataFlows[].captureOverflow" options="capture-overflow">
              <help short="Flag to enable overflow column in LA destinations"/>
            </arg>
            <arg type="array<string>" var="$body.properties.dataFlows[].destinations" options="destinations">
              <help short="List of destinations for this data flow."/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$body.properties.dataFlows[].outputStream" options="output-stream" group="">
              <help short="The output stream of the transform. Only required if the transform changes data to a different stream."/>
            </arg>
            <arg type="array<string>" var="$body.properties.dataFlows[].streams" options="streams" group="">
              <help short="List of streams for this data flow."/>
              <item type="string">
                <enum supportExtension="True">
                  <item name="Microsoft-Event" value="&quot;Microsoft-Event&quot;"/>
                  <item name="Microsoft-InsightsMetrics" value="&quot;Microsoft-InsightsMetrics&quot;"/>
                  <item name="Microsoft-Perf" value="&quot;Microsoft-Perf&quot;"/>
                  <item name="Microsoft-Syslog" value="&quot;Microsoft-Syslog&quot;"/>
                  <item name="Microsoft-WindowsEvent" value="&quot;Microsoft-WindowsEvent&quot;"/>
                </enum>
              </item>
            </arg>
            <arg type="string" var="$body.properties.dataFlows[].transformKql" options="transform-kql">
              <help short="The KQL query to transform stream data."/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$body.properties.dataSources" options="data-sources" group="Properties">
          <help short="The specification of data sources. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint."/>
          <arg type="object" var="$body.properties.dataSources.dataImports" options="data-imports">
            <help short="Specifications of pull based data sources"/>
            <arg type="object" var="$body.properties.dataSources.dataImports.eventHub" options="event-hub">
              <help short="Definition of Event Hub configuration."/>
              <arg type="string" var="$body.properties.dataSources.dataImports.eventHub.consumerGroup" options="consumer-group">
                <help short="Event Hub consumer group name"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.dataImports.eventHub.name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.dataImports.eventHub.stream" options="stream">
                <help short="The stream to collect from EventHub"/>
              </arg>
            </arg>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.extensions" options="extensions">
            <help short="The list of Azure VM extension data source configurations."/>
            <item type="object">
              <arg type="string" var="$body.properties.dataSources.extensions[].extensionName" options="extension-name" required="True">
                <help short="The name of the VM extension."/>
              </arg>
              <arg type="object" var="$body.properties.dataSources.extensions[].extensionSettings" options="extension-settings">
                <blank value="{}"/>
                <help short="The extension settings. The format is specific for particular extension."/>
                <additionalProp anyType="True"/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.extensions[].inputDataSources" options="input-data-sources">
                <help short="The list of data sources this extension needs data from."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.extensions[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.extensions[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-Event" value="&quot;Microsoft-Event&quot;"/>
                    <item name="Microsoft-InsightsMetrics" value="&quot;Microsoft-InsightsMetrics&quot;"/>
                    <item name="Microsoft-Perf" value="&quot;Microsoft-Perf&quot;"/>
                    <item name="Microsoft-Syslog" value="&quot;Microsoft-Syslog&quot;"/>
                    <item name="Microsoft-WindowsEvent" value="&quot;Microsoft-WindowsEvent&quot;"/>
                  </enum>
                </item>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.iisLogs" options="iis-logs">
            <help short="The list of IIS logs source configurations."/>
            <item type="object">
              <arg type="array<string>" var="$body.properties.dataSources.iisLogs[].logDirectories" options="log-directories">
                <help short="Absolute paths file location"/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.iisLogs[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.iisLogs[].streams" options="streams" required="True">
                <help short="IIS streams"/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.iisLogs[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.logFiles" options="log-files">
            <help short="The list of Log files source configurations."/>
            <item type="object">
              <arg type="array<string>" var="$body.properties.dataSources.logFiles[].filePatterns" options="file-patterns" required="True">
                <help short="File Patterns where the log files are located"/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.logFiles[].format" options="format" required="True" group="">
                <help short="The data format of the log files"/>
                <enum supportExtension="True">
                  <item name="json" value="&quot;json&quot;"/>
                  <item name="text" value="&quot;text&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$body.properties.dataSources.logFiles[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="object" var="$body.properties.dataSources.logFiles[].settings" options="settings">
                <help short="The log files specific settings."/>
                <arg type="object" var="$body.properties.dataSources.logFiles[].settings.text" options="text">
                  <help short="Text settings"/>
                  <arg type="string" var="$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat" options="record-start-timestamp-format" required="True" group="">
                    <help short="One of the supported timestamp formats"/>
                    <enum supportExtension="True">
                      <item name="ISO 8601" value="&quot;ISO 8601&quot;"/>
                      <item name="M/D/YYYY HH:MM:SS AM/PM" value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                      <item name="MMM d hh:mm:ss" value="&quot;MMM d hh:mm:ss&quot;"/>
                      <item name="Mon DD, YYYY HH:MM:SS" value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                      <item name="YYYY-MM-DD HH:MM:SS" value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                      <item name="dd/MMM/yyyy:HH:mm:ss zzz" value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                      <item name="ddMMyy HH:mm:ss" value="&quot;ddMMyy HH:mm:ss&quot;"/>
                      <item name="yyMMdd HH:mm:ss" value="&quot;yyMMdd HH:mm:ss&quot;"/>
                      <item name="yyyy-MM-ddTHH:mm:ssK" value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                    </enum>
                  </arg>
                </arg>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.logFiles[].streams" options="streams" required="True" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data source"/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.logFiles[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.performanceCounters" options="performance-counters">
            <help short="The list of performance counter data source configurations."/>
            <item type="object">
              <arg type="array<string>" var="$body.properties.dataSources.performanceCounters[].counterSpecifiers" options="counter-specifiers" group="">
                <help short="A list of specifier names of the performance counters you want to collect. Use a wildcard (*) to collect a counter for all instances. To get a list of performance counters on Windows, run the command 'typeperf'."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.performanceCounters[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="integer32" var="$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds" options="sampling-frequency-in-seconds">
                <help short="The number of seconds between consecutive counter measurements (samples)."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.performanceCounters[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-InsightsMetrics" value="&quot;Microsoft-InsightsMetrics&quot;"/>
                    <item name="Microsoft-Perf" value="&quot;Microsoft-Perf&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="string" var="$body.properties.dataSources.performanceCounters[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.platformTelemetry" options="platform-telemetry">
            <help short="The list of platform telemetry configurations"/>
            <item type="object">
              <arg type="string" var="$body.properties.dataSources.platformTelemetry[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.platformTelemetry[].streams" options="streams" required="True">
                <help short="List of platform telemetry streams to collect"/>
                <item type="string"/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.prometheusForwarder" options="prometheus-forwarder">
            <help short="The list of Prometheus forwarder data source configurations."/>
            <item type="object">
              <arg type="object" var="$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter" options="label-include-filter" group="">
                <help short="The list of label inclusion filters in the form of label &quot;name-value&quot; pairs. Currently only one label is supported: 'microsoft_metrics_include_label'. Label values are matched case-insensitively."/>
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </arg>
              <arg type="string" var="$body.properties.dataSources.prometheusForwarder[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.prometheusForwarder[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-PrometheusMetrics" value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                  </enum>
                </item>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.syslog" options="syslog">
            <help short="The list of Syslog data source configurations."/>
            <item type="object">
              <arg type="array<string>" var="$body.properties.dataSources.syslog[].facilityNames" options="facility-names" group="">
                <help short="The list of facility names."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="alert" value="&quot;alert&quot;"/>
                    <item name="audit" value="&quot;audit&quot;"/>
                    <item name="auth" value="&quot;auth&quot;"/>
                    <item name="authpriv" value="&quot;authpriv&quot;"/>
                    <item name="clock" value="&quot;clock&quot;"/>
                    <item name="cron" value="&quot;cron&quot;"/>
                    <item name="daemon" value="&quot;daemon&quot;"/>
                    <item name="ftp" value="&quot;ftp&quot;"/>
                    <item name="kern" value="&quot;kern&quot;"/>
                    <item name="local0" value="&quot;local0&quot;"/>
                    <item name="local1" value="&quot;local1&quot;"/>
                    <item name="local2" value="&quot;local2&quot;"/>
                    <item name="local3" value="&quot;local3&quot;"/>
                    <item name="local4" value="&quot;local4&quot;"/>
                    <item name="local5" value="&quot;local5&quot;"/>
                    <item name="local6" value="&quot;local6&quot;"/>
                    <item name="local7" value="&quot;local7&quot;"/>
                    <item name="lpr" value="&quot;lpr&quot;"/>
                    <item name="mail" value="&quot;mail&quot;"/>
                    <item name="mark" value="&quot;mark&quot;"/>
                    <item name="news" value="&quot;news&quot;"/>
                    <item name="nopri" value="&quot;nopri&quot;"/>
                    <item name="ntp" value="&quot;ntp&quot;"/>
                    <item name="syslog" value="&quot;syslog&quot;"/>
                    <item name="user" value="&quot;user&quot;"/>
                    <item name="uucp" value="&quot;uucp&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.syslog[].logLevels" options="log-levels" group="">
                <help short="The log levels to collect."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Alert" value="&quot;Alert&quot;"/>
                    <item name="Critical" value="&quot;Critical&quot;"/>
                    <item name="Debug" value="&quot;Debug&quot;"/>
                    <item name="Emergency" value="&quot;Emergency&quot;"/>
                    <item name="Error" value="&quot;Error&quot;"/>
                    <item name="Info" value="&quot;Info&quot;"/>
                    <item name="Notice" value="&quot;Notice&quot;"/>
                    <item name="Warning" value="&quot;Warning&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="string" var="$body.properties.dataSources.syslog[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.syslog[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-Syslog" value="&quot;Microsoft-Syslog&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="string" var="$body.properties.dataSources.syslog[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.windowsEventLogs" options="windows-event-logs">
            <help short="The list of Windows Event Log data source configurations."/>
            <item type="object">
              <arg type="string" var="$body.properties.dataSources.windowsEventLogs[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.windowsEventLogs[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-Event" value="&quot;Microsoft-Event&quot;"/>
                    <item name="Microsoft-WindowsEvent" value="&quot;Microsoft-WindowsEvent&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="string" var="$body.properties.dataSources.windowsEventLogs[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.windowsEventLogs[].xPathQueries" options="x-path-queries">
                <help short="A list of Windows Event Log queries in XPATH format."/>
                <item type="string"/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.dataSources.windowsFirewallLogs" options="windows-firewall-logs">
            <help short="The list of Windows Firewall logs source configurations."/>
            <item type="object">
              <arg type="string" var="$body.properties.dataSources.windowsFirewallLogs[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.windowsFirewallLogs[].profileFilter" options="profile-filter" group="">
                <help short="Firewall logs profile filter"/>
                <item type="string">
                  <enum supportExtension="True">
                    <item name="Domain" value="&quot;Domain&quot;"/>
                    <item name="Private" value="&quot;Private&quot;"/>
                    <item name="Public" value="&quot;Public&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.windowsFirewallLogs[].streams" options="streams" required="True">
                <help short="Firewall logs streams"/>
                <item type="string"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.destinations" options="destinations" group="Properties">
          <help short="The specification of destinations."/>
          <arg type="array<object>" var="$body.properties.destinations.azureDataExplorer" options="azure-data-explorer">
            <help short="List of Azure Data Explorer destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.azureDataExplorer[].databaseName" options="database-name">
                <help short="The name of the database to which data will be ingested."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.azureDataExplorer[].name" options="name">
                <help short="A friendly name for the destination. &#13; This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.azureDataExplorer[].resourceId" options="resource-id">
                <help short="The ARM resource id of the Adx resource."/>
              </arg>
            </item>
          </arg>
          <arg type="object" var="$body.properties.destinations.azureMonitorMetrics" options="azure-monitor-metrics">
            <help short="Azure Monitor Metrics destination."/>
            <arg type="string" var="$body.properties.destinations.azureMonitorMetrics.name" options="name" group="">
              <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
            </arg>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.eventHubs" options="event-hubs">
            <help short="List of Event Hubs destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.eventHubs[].eventHubResourceId" options="event-hub-resource-id">
                <help short="The resource ID of the event hub."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.eventHubs[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.eventHubsDirect" options="event-hubs-direct">
            <help short="List of Event Hubs Direct destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.eventHubsDirect[].eventHubResourceId" options="event-hub-resource-id">
                <help short="The resource ID of the event hub."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.eventHubsDirect[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.logAnalytics" options="log-analytics">
            <help short="List of Log Analytics destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.logAnalytics[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.logAnalytics[].workspaceResourceId" options="workspace-resource-id">
                <help short="The resource ID of the Log Analytics workspace."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.microsoftFabric" options="microsoft-fabric">
            <help short="List of Microsoft Fabric destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.microsoftFabric[].artifactId" options="artifact-id">
                <help short="The artifact id of the Microsoft Fabric resource."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.microsoftFabric[].databaseName" options="database-name">
                <help short="The name of the database to which data will be ingested."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.microsoftFabric[].ingestionUri" options="ingestion-uri">
                <help short="The ingestion uri of the Microsoft Fabric resource."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.microsoftFabric[].name" options="name">
                <help short="A friendly name for the destination. &#13; This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.microsoftFabric[].tenantId" options="tenant-id">
                <help short="The tenant id of the Microsoft Fabric resource."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.monitoringAccounts" options="monitoring-accounts">
            <help short="List of monitoring account destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.monitoringAccounts[].accountResourceId" options="account-resource-id">
                <help short="The resource ID of the monitoring account."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.monitoringAccounts[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
            </item>
          </arg>
          <arg type="array<@StorageBlobDestination_create>" var="$body.properties.destinations.storageAccounts" options="storage-accounts">
            <help short="List of storage accounts destinations."/>
            <item type="@StorageBlobDestination_create"/>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.storageBlobsDirect" options="storage-blobs-direct">
            <help short="List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent."/>
            <item type="object" cls="StorageBlobDestination_create">
              <arg type="string" var="@StorageBlobDestination_create.containerName" options="container-name">
                <help short="The container name of the Storage Blob."/>
              </arg>
              <arg type="string" var="@StorageBlobDestination_create.name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="string" var="@StorageBlobDestination_create.storageAccountResourceId" options="storage-account-resource-id">
                <help short="The resource ID of the storage account."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$body.properties.destinations.storageTablesDirect" options="storage-tables-direct">
            <help short="List of Storage Table Direct destinations."/>
            <item type="object">
              <arg type="string" var="$body.properties.destinations.storageTablesDirect[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.storageTablesDirect[].storageAccountResourceId" options="storage-account-resource-id">
                <help short="The resource ID of the storage account."/>
              </arg>
              <arg type="string" var="$body.properties.destinations.storageTablesDirect[].tableName" options="table-name">
                <help short="The name of the Storage Table."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.references" options="references" group="Properties">
          <help short="Defines all the references that may be used in other sections of the DCR"/>
          <arg type="object" var="$body.properties.references.enrichmentData" options="enrichment-data">
            <help short="All the enrichment data sources referenced in data flows"/>
            <arg type="array<object>" var="$body.properties.references.enrichmentData.storageBlobs" options="storage-blobs">
              <help short="All the storage blobs used as enrichment data sources"/>
              <item type="object">
                <arg type="string" var="$body.properties.references.enrichmentData.storageBlobs[].blobUrl" options="blob-url">
                  <help short="Url of the storage blob"/>
                </arg>
                <arg type="string" var="$body.properties.references.enrichmentData.storageBlobs[].lookupType" options="lookup-type" group="">
                  <help short="The type of lookup to perform on the blob"/>
                  <enum supportExtension="True">
                    <item name="Cidr" value="&quot;Cidr&quot;"/>
                    <item name="String" value="&quot;String&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.references.enrichmentData.storageBlobs[].name" options="name">
                  <help short="The name of the enrichment data source used as an alias when referencing this data source in data flows"/>
                </arg>
                <arg type="string" var="$body.properties.references.enrichmentData.storageBlobs[].resourceId" options="resource-id">
                  <help short="Resource Id of the storage account that hosts the blob"/>
                </arg>
              </item>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.streamDeclarations" options="stream-declarations" group="Properties">
          <help short="Declaration of custom streams used in this rule."/>
          <additionalProp>
            <item type="object">
              <arg type="array<object>" var="$body.properties.streamDeclarations{}.columns" options="columns">
                <help short="List of columns used by data in this stream."/>
                <item type="object">
                  <arg type="string" var="$body.properties.streamDeclarations{}.columns[].name" options="name">
                    <help short="The name of the column."/>
                  </arg>
                  <arg type="string" var="$body.properties.streamDeclarations{}.columns[].type" options="type" group="">
                    <help short="The type of the column data."/>
                    <enum supportExtension="True">
                      <item name="boolean" value="&quot;boolean&quot;"/>
                      <item name="datetime" value="&quot;datetime&quot;"/>
                      <item name="dynamic" value="&quot;dynamic&quot;"/>
                      <item name="int" value="&quot;int&quot;"/>
                      <item name="long" value="&quot;long&quot;"/>
                      <item name="real" value="&quot;real&quot;"/>
                      <item name="string" value="&quot;string&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="DataCollectionRules_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}">
          <request method="put">
            <path>
              <param type="string" name="dataCollectionRuleName" arg="$Path.dataCollectionRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-11&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$body.identity">
                    <prop type="string" name="type" arg="$body.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind" arg="$body.kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="agentSettings" arg="$body.properties.agentSettings">
                      <prop type="array<object>" name="logs" arg="$body.properties.agentSettings.logs">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.agentSettings.logs[].name">
                            <enum>
                              <item value="&quot;MaxDiskQuotaInMB&quot;"/>
                              <item value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value" arg="$body.properties.agentSettings.logs[].value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="dataCollectionEndpointId" arg="$body.properties.dataCollectionEndpointId"/>
                    <prop type="array<object>" name="dataFlows" arg="$body.properties.dataFlows">
                      <item type="object">
                        <prop type="string" name="builtInTransform" arg="$body.properties.dataFlows[].builtInTransform"/>
                        <prop type="boolean" name="captureOverflow" arg="$body.properties.dataFlows[].captureOverflow"/>
                        <prop type="array<string>" name="destinations" arg="$body.properties.dataFlows[].destinations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="outputStream" arg="$body.properties.dataFlows[].outputStream"/>
                        <prop type="array<string>" name="streams" arg="$body.properties.dataFlows[].streams">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft-Event&quot;"/>
                              <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                              <item value="&quot;Microsoft-Perf&quot;"/>
                              <item value="&quot;Microsoft-Syslog&quot;"/>
                              <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="string" name="transformKql" arg="$body.properties.dataFlows[].transformKql"/>
                      </item>
                    </prop>
                    <prop type="object" name="dataSources" arg="$body.properties.dataSources">
                      <prop type="object" name="dataImports" arg="$body.properties.dataSources.dataImports">
                        <prop type="object" name="eventHub" arg="$body.properties.dataSources.dataImports.eventHub">
                          <prop type="string" name="consumerGroup" arg="$body.properties.dataSources.dataImports.eventHub.consumerGroup"/>
                          <prop type="string" name="name" arg="$body.properties.dataSources.dataImports.eventHub.name"/>
                          <prop type="string" name="stream" arg="$body.properties.dataSources.dataImports.eventHub.stream"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="extensions" arg="$body.properties.dataSources.extensions" identifiers="name">
                        <item type="object">
                          <prop type="string" name="extensionName" arg="$body.properties.dataSources.extensions[].extensionName" required="True"/>
                          <prop type="object" name="extensionSettings" arg="$body.properties.dataSources.extensions[].extensionSettings">
                            <additionalProp anyType="True"/>
                          </prop>
                          <prop type="array<string>" name="inputDataSources" arg="$body.properties.dataSources.extensions[].inputDataSources">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.dataSources.extensions[].name"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.extensions[].streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="iisLogs" arg="$body.properties.dataSources.iisLogs" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="logDirectories" arg="$body.properties.dataSources.iisLogs[].logDirectories">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.dataSources.iisLogs[].name"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.iisLogs[].streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql" arg="$body.properties.dataSources.iisLogs[].transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logFiles" arg="$body.properties.dataSources.logFiles" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="filePatterns" arg="$body.properties.dataSources.logFiles[].filePatterns" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="format" arg="$body.properties.dataSources.logFiles[].format" required="True">
                            <enum>
                              <item value="&quot;json&quot;"/>
                              <item value="&quot;text&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.dataSources.logFiles[].name"/>
                          <prop type="object" name="settings" arg="$body.properties.dataSources.logFiles[].settings">
                            <prop type="object" name="text" arg="$body.properties.dataSources.logFiles[].settings.text">
                              <prop type="string" name="recordStartTimestampFormat" arg="$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat" required="True">
                                <enum>
                                  <item value="&quot;ISO 8601&quot;"/>
                                  <item value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                                  <item value="&quot;MMM d hh:mm:ss&quot;"/>
                                  <item value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                                  <item value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                                  <item value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                                  <item value="&quot;ddMMyy HH:mm:ss&quot;"/>
                                  <item value="&quot;yyMMdd HH:mm:ss&quot;"/>
                                  <item value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.logFiles[].streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql" arg="$body.properties.dataSources.logFiles[].transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="performanceCounters" arg="$body.properties.dataSources.performanceCounters" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="counterSpecifiers" arg="$body.properties.dataSources.performanceCounters[].counterSpecifiers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.dataSources.performanceCounters[].name"/>
                          <prop type="integer32" name="samplingFrequencyInSeconds" arg="$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.performanceCounters[].streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql" arg="$body.properties.dataSources.performanceCounters[].transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="platformTelemetry" arg="$body.properties.dataSources.platformTelemetry" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.dataSources.platformTelemetry[].name"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.platformTelemetry[].streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="prometheusForwarder" arg="$body.properties.dataSources.prometheusForwarder" identifiers="name">
                        <item type="object">
                          <prop type="object" name="labelIncludeFilter" arg="$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.dataSources.prometheusForwarder[].name"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.prometheusForwarder[].streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="syslog" arg="$body.properties.dataSources.syslog" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="facilityNames" arg="$body.properties.dataSources.syslog[].facilityNames">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;alert&quot;"/>
                                <item value="&quot;audit&quot;"/>
                                <item value="&quot;auth&quot;"/>
                                <item value="&quot;authpriv&quot;"/>
                                <item value="&quot;clock&quot;"/>
                                <item value="&quot;cron&quot;"/>
                                <item value="&quot;daemon&quot;"/>
                                <item value="&quot;ftp&quot;"/>
                                <item value="&quot;kern&quot;"/>
                                <item value="&quot;local0&quot;"/>
                                <item value="&quot;local1&quot;"/>
                                <item value="&quot;local2&quot;"/>
                                <item value="&quot;local3&quot;"/>
                                <item value="&quot;local4&quot;"/>
                                <item value="&quot;local5&quot;"/>
                                <item value="&quot;local6&quot;"/>
                                <item value="&quot;local7&quot;"/>
                                <item value="&quot;lpr&quot;"/>
                                <item value="&quot;mail&quot;"/>
                                <item value="&quot;mark&quot;"/>
                                <item value="&quot;news&quot;"/>
                                <item value="&quot;nopri&quot;"/>
                                <item value="&quot;ntp&quot;"/>
                                <item value="&quot;syslog&quot;"/>
                                <item value="&quot;user&quot;"/>
                                <item value="&quot;uucp&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="logLevels" arg="$body.properties.dataSources.syslog[].logLevels">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Debug&quot;"/>
                                <item value="&quot;Emergency&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Notice&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.dataSources.syslog[].name"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.syslog[].streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql" arg="$body.properties.dataSources.syslog[].transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsEventLogs" arg="$body.properties.dataSources.windowsEventLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.dataSources.windowsEventLogs[].name"/>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.windowsEventLogs[].streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql" arg="$body.properties.dataSources.windowsEventLogs[].transformKql"/>
                          <prop type="array<string>" name="xPathQueries" arg="$body.properties.dataSources.windowsEventLogs[].xPathQueries">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsFirewallLogs" arg="$body.properties.dataSources.windowsFirewallLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.dataSources.windowsFirewallLogs[].name"/>
                          <prop type="array<string>" name="profileFilter" arg="$body.properties.dataSources.windowsFirewallLogs[].profileFilter">
                            <item type="string">
                              <enum>
                                <item value="&quot;Domain&quot;"/>
                                <item value="&quot;Private&quot;"/>
                                <item value="&quot;Public&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="streams" arg="$body.properties.dataSources.windowsFirewallLogs[].streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description" arg="$body.properties.description"/>
                    <prop type="object" name="destinations" arg="$body.properties.destinations">
                      <prop type="array<object>" name="azureDataExplorer" arg="$body.properties.destinations.azureDataExplorer" identifiers="name">
                        <item type="object">
                          <prop type="string" name="databaseName" arg="$body.properties.destinations.azureDataExplorer[].databaseName"/>
                          <prop type="string" name="name" arg="$body.properties.destinations.azureDataExplorer[].name"/>
                          <prop type="string" name="resourceId" arg="$body.properties.destinations.azureDataExplorer[].resourceId"/>
                        </item>
                      </prop>
                      <prop type="object" name="azureMonitorMetrics" arg="$body.properties.destinations.azureMonitorMetrics">
                        <prop type="string" name="name" arg="$body.properties.destinations.azureMonitorMetrics.name"/>
                      </prop>
                      <prop type="array<object>" name="eventHubs" arg="$body.properties.destinations.eventHubs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId" arg="$body.properties.destinations.eventHubs[].eventHubResourceId"/>
                          <prop type="string" name="name" arg="$body.properties.destinations.eventHubs[].name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="eventHubsDirect" arg="$body.properties.destinations.eventHubsDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId" arg="$body.properties.destinations.eventHubsDirect[].eventHubResourceId"/>
                          <prop type="string" name="name" arg="$body.properties.destinations.eventHubsDirect[].name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logAnalytics" arg="$body.properties.destinations.logAnalytics" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.destinations.logAnalytics[].name"/>
                          <prop type="string" name="workspaceResourceId" arg="$body.properties.destinations.logAnalytics[].workspaceResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="microsoftFabric" arg="$body.properties.destinations.microsoftFabric" identifiers="name">
                        <item type="object">
                          <prop type="string" name="artifactId" arg="$body.properties.destinations.microsoftFabric[].artifactId"/>
                          <prop type="string" name="databaseName" arg="$body.properties.destinations.microsoftFabric[].databaseName"/>
                          <prop type="string" name="ingestionUri" arg="$body.properties.destinations.microsoftFabric[].ingestionUri"/>
                          <prop type="string" name="name" arg="$body.properties.destinations.microsoftFabric[].name"/>
                          <prop type="string" name="tenantId" arg="$body.properties.destinations.microsoftFabric[].tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="monitoringAccounts" arg="$body.properties.destinations.monitoringAccounts" identifiers="name">
                        <item type="object">
                          <prop type="string" name="accountResourceId" arg="$body.properties.destinations.monitoringAccounts[].accountResourceId"/>
                          <prop type="string" name="name" arg="$body.properties.destinations.monitoringAccounts[].name"/>
                        </item>
                      </prop>
                      <prop type="array<@StorageBlobDestination_create>" name="storageAccounts" arg="$body.properties.destinations.storageAccounts" identifiers="name">
                        <item type="@StorageBlobDestination_create"/>
                      </prop>
                      <prop type="array<object>" name="storageBlobsDirect" arg="$body.properties.destinations.storageBlobsDirect" identifiers="name">
                        <item type="object" cls="StorageBlobDestination_create">
                          <prop type="string" name="containerName" arg="@StorageBlobDestination_create.containerName"/>
                          <prop type="string" name="name" arg="@StorageBlobDestination_create.name"/>
                          <prop type="string" name="storageAccountResourceId" arg="@StorageBlobDestination_create.storageAccountResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="storageTablesDirect" arg="$body.properties.destinations.storageTablesDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.destinations.storageTablesDirect[].name"/>
                          <prop type="string" name="storageAccountResourceId" arg="$body.properties.destinations.storageTablesDirect[].storageAccountResourceId"/>
                          <prop type="string" name="tableName" arg="$body.properties.destinations.storageTablesDirect[].tableName"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="references" arg="$body.properties.references">
                      <prop type="object" name="enrichmentData" arg="$body.properties.references.enrichmentData">
                        <prop type="array<object>" name="storageBlobs" arg="$body.properties.references.enrichmentData.storageBlobs">
                          <item type="object">
                            <prop type="string" name="blobUrl" arg="$body.properties.references.enrichmentData.storageBlobs[].blobUrl"/>
                            <prop type="string" name="lookupType" arg="$body.properties.references.enrichmentData.storageBlobs[].lookupType">
                              <enum>
                                <item value="&quot;Cidr&quot;"/>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name" arg="$body.properties.references.enrichmentData.storageBlobs[].name"/>
                            <prop type="string" name="resourceId" arg="$body.properties.references.enrichmentData.storageBlobs[].resourceId"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="streamDeclarations" arg="$body.properties.streamDeclarations">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<object>" name="columns" arg="$body.properties.streamDeclarations{}.columns">
                            <item type="object">
                              <prop type="string" name="name" arg="$body.properties.streamDeclarations{}.columns[].name"/>
                              <prop type="string" name="type" arg="$body.properties.streamDeclarations{}.columns[].type">
                                <enum>
                                  <item value="&quot;boolean&quot;"/>
                                  <item value="&quot;datetime&quot;"/>
                                  <item value="&quot;dynamic&quot;"/>
                                  <item value="&quot;int&quot;"/>
                                  <item value="&quot;long&quot;"/>
                                  <item value="&quot;real&quot;"/>
                                  <item value="&quot;string&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionRules/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="agentSettings">
                      <prop type="array<object>" name="logs">
                        <item type="object">
                          <prop type="string" name="name">
                            <enum>
                              <item value="&quot;MaxDiskQuotaInMB&quot;"/>
                              <item value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="dataCollectionEndpointId"/>
                    <prop type="array<object>" name="dataFlows">
                      <item type="object">
                        <prop type="string" name="builtInTransform"/>
                        <prop type="boolean" name="captureOverflow"/>
                        <prop type="array<string>" name="destinations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="outputStream"/>
                        <prop type="array<string>" name="streams">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft-Event&quot;"/>
                              <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                              <item value="&quot;Microsoft-Perf&quot;"/>
                              <item value="&quot;Microsoft-Syslog&quot;"/>
                              <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="string" name="transformKql"/>
                      </item>
                    </prop>
                    <prop type="object" name="dataSources">
                      <prop type="object" name="dataImports">
                        <prop type="object" name="eventHub">
                          <prop type="string" name="consumerGroup"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="stream"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="extensions" identifiers="name">
                        <item type="object">
                          <prop type="string" name="extensionName" required="True"/>
                          <prop type="object" name="extensionSettings">
                            <additionalProp anyType="True"/>
                          </prop>
                          <prop type="array<string>" name="inputDataSources">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="iisLogs" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="logDirectories">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logFiles" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="filePatterns" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="format" required="True">
                            <enum>
                              <item value="&quot;json&quot;"/>
                              <item value="&quot;text&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="settings">
                            <prop type="object" name="text">
                              <prop type="string" name="recordStartTimestampFormat" required="True">
                                <enum>
                                  <item value="&quot;ISO 8601&quot;"/>
                                  <item value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                                  <item value="&quot;MMM d hh:mm:ss&quot;"/>
                                  <item value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                                  <item value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                                  <item value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                                  <item value="&quot;ddMMyy HH:mm:ss&quot;"/>
                                  <item value="&quot;yyMMdd HH:mm:ss&quot;"/>
                                  <item value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="performanceCounters" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="counterSpecifiers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="integer32" name="samplingFrequencyInSeconds"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="platformTelemetry" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="prometheusForwarder" identifiers="name">
                        <item type="object">
                          <prop type="object" name="labelIncludeFilter">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="syslog" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="facilityNames">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;alert&quot;"/>
                                <item value="&quot;audit&quot;"/>
                                <item value="&quot;auth&quot;"/>
                                <item value="&quot;authpriv&quot;"/>
                                <item value="&quot;clock&quot;"/>
                                <item value="&quot;cron&quot;"/>
                                <item value="&quot;daemon&quot;"/>
                                <item value="&quot;ftp&quot;"/>
                                <item value="&quot;kern&quot;"/>
                                <item value="&quot;local0&quot;"/>
                                <item value="&quot;local1&quot;"/>
                                <item value="&quot;local2&quot;"/>
                                <item value="&quot;local3&quot;"/>
                                <item value="&quot;local4&quot;"/>
                                <item value="&quot;local5&quot;"/>
                                <item value="&quot;local6&quot;"/>
                                <item value="&quot;local7&quot;"/>
                                <item value="&quot;lpr&quot;"/>
                                <item value="&quot;mail&quot;"/>
                                <item value="&quot;mark&quot;"/>
                                <item value="&quot;news&quot;"/>
                                <item value="&quot;nopri&quot;"/>
                                <item value="&quot;ntp&quot;"/>
                                <item value="&quot;syslog&quot;"/>
                                <item value="&quot;user&quot;"/>
                                <item value="&quot;uucp&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="logLevels">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Debug&quot;"/>
                                <item value="&quot;Emergency&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Notice&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsEventLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                          <prop type="array<string>" name="xPathQueries">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsFirewallLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="profileFilter">
                            <item type="string">
                              <enum>
                                <item value="&quot;Domain&quot;"/>
                                <item value="&quot;Private&quot;"/>
                                <item value="&quot;Public&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="destinations">
                      <prop type="array<object>" name="azureDataExplorer" identifiers="name">
                        <item type="object">
                          <prop type="string" name="databaseName"/>
                          <prop readOnly="True" type="string" name="ingestionUri"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="resourceId"/>
                        </item>
                      </prop>
                      <prop type="object" name="azureMonitorMetrics">
                        <prop type="string" name="name"/>
                      </prop>
                      <prop type="array<object>" name="eventHubs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="eventHubsDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logAnalytics" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop readOnly="True" type="string" name="workspaceId"/>
                          <prop type="string" name="workspaceResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="microsoftFabric" identifiers="name">
                        <item type="object">
                          <prop type="string" name="artifactId"/>
                          <prop type="string" name="databaseName"/>
                          <prop type="string" name="ingestionUri"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="monitoringAccounts" identifiers="name">
                        <item type="object">
                          <prop readOnly="True" type="string" name="accountId"/>
                          <prop type="string" name="accountResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<@StorageBlobDestination_read>" name="storageAccounts" identifiers="name">
                        <item type="@StorageBlobDestination_read"/>
                      </prop>
                      <prop type="array<object>" name="storageBlobsDirect" identifiers="name">
                        <item type="object" cls="StorageBlobDestination_read">
                          <prop type="string" name="containerName"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="storageTablesDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountResourceId"/>
                          <prop type="string" name="tableName"/>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="endpoints">
                      <prop readOnly="True" type="string" name="logsIngestion"/>
                      <prop readOnly="True" type="string" name="metricsIngestion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="immutableId"/>
                    <prop readOnly="True" type="object" name="metadata">
                      <prop readOnly="True" type="string" name="provisionedBy"/>
                      <prop readOnly="True" type="string" name="provisionedByImmutableId"/>
                      <prop readOnly="True" type="string" name="provisionedByResourceId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="references">
                      <prop type="object" name="enrichmentData">
                        <prop type="array<object>" name="storageBlobs">
                          <item type="object">
                            <prop type="string" name="blobUrl"/>
                            <prop type="string" name="lookupType">
                              <enum>
                                <item value="&quot;Cidr&quot;"/>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="resourceId"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="streamDeclarations">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<object>" name="columns">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;boolean&quot;"/>
                                  <item value="&quot;datetime&quot;"/>
                                  <item value="&quot;dynamic&quot;"/>
                                  <item value="&quot;int&quot;"/>
                                  <item value="&quot;long&quot;"/>
                                  <item value="&quot;real&quot;"/>
                                  <item value="&quot;string&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-03-11">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionrules/{}" version="2023-03-11" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25SdWxlcy97ZGF0YUNvbGxlY3Rpb25SdWxlTmFtZX0=/V/MjAyMy0wMy0xMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionRuleName" options="data-collection-rule-name rule-name name n" required="True" group="" idPart="name">
          <help short="The name of the data collection rule. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="object" var="$body.identity" options="identity" group="">
          <help short="Managed service identity of the resource."/>
          <arg type="string" var="$body.identity.type" options="type" group="">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum supportExtension="True">
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.kind" options="kind" group="">
          <help short="The kind of the resource."/>
          <enum supportExtension="True">
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.dataCollectionEndpointId" options="data-collection-endpoint-id endpoint-id" group="">
          <help short="The resource ID of the data collection endpoint that is to be associated."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.description" options="description" group="">
          <help short="Description of the association."/>
        </arg>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$body.properties.agentSettings" options="agent-settings" group="Properties">
          <help short="Agent settings used to modify agent behavior on a given host"/>
          <arg nullable="True" type="array<object>" var="$body.properties.agentSettings.logs" options="logs">
            <help short="All the settings that are applicable to the logs agent (AMA)"/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.agentSettings.logs[].name" options="name" group="">
                <help short="The name of the setting. &#13; Must be part of the list of supported settings"/>
                <enum supportExtension="True">
                  <item name="MaxDiskQuotaInMB" value="&quot;MaxDiskQuotaInMB&quot;"/>
                  <item name="UseTimeReceivedForForwardedEvents" value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.agentSettings.logs[].value" options="value">
                <help short="The value of the setting"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$body.properties.dataFlows" options="data-flows-raw" group="Properties">
          <help short="The specification of data flows."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$body.properties.dataFlows[].builtInTransform" options="built-in-transform">
              <help short="The builtIn transform to transform stream data"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.dataFlows[].captureOverflow" options="capture-overflow">
              <help short="Flag to enable overflow column in LA destinations"/>
            </arg>
            <arg nullable="True" type="array<string>" var="$body.properties.dataFlows[].destinations" options="destinations">
              <help short="List of destinations for this data flow."/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.dataFlows[].outputStream" options="output-stream" group="">
              <help short="The output stream of the transform. Only required if the transform changes data to a different stream."/>
            </arg>
            <arg nullable="True" type="array<string>" var="$body.properties.dataFlows[].streams" options="streams" group="">
              <help short="List of streams for this data flow."/>
              <item nullable="True" type="string">
                <enum supportExtension="True">
                  <item name="Microsoft-Event" value="&quot;Microsoft-Event&quot;"/>
                  <item name="Microsoft-InsightsMetrics" value="&quot;Microsoft-InsightsMetrics&quot;"/>
                  <item name="Microsoft-Perf" value="&quot;Microsoft-Perf&quot;"/>
                  <item name="Microsoft-Syslog" value="&quot;Microsoft-Syslog&quot;"/>
                  <item name="Microsoft-WindowsEvent" value="&quot;Microsoft-WindowsEvent&quot;"/>
                </enum>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.dataFlows[].transformKql" options="transform-kql">
              <help short="The KQL query to transform stream data."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.dataSources" options="data-sources" group="Properties">
          <help short="The specification of data sources. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint."/>
          <arg nullable="True" type="object" var="$body.properties.dataSources.dataImports" options="data-imports">
            <help short="Specifications of pull based data sources"/>
            <arg nullable="True" type="object" var="$body.properties.dataSources.dataImports.eventHub" options="event-hub">
              <help short="Definition of Event Hub configuration."/>
              <arg nullable="True" type="string" var="$body.properties.dataSources.dataImports.eventHub.consumerGroup" options="consumer-group">
                <help short="Event Hub consumer group name"/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.dataImports.eventHub.name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.dataImports.eventHub.stream" options="stream">
                <help short="The stream to collect from EventHub"/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.extensions" options="extensions">
            <help short="The list of Azure VM extension data source configurations."/>
            <item nullable="True" type="object">
              <arg type="string" var="$body.properties.dataSources.extensions[].extensionName" options="extension-name">
                <help short="The name of the VM extension."/>
              </arg>
              <arg nullable="True" type="object" var="$body.properties.dataSources.extensions[].extensionSettings" options="extension-settings">
                <blank value="{}"/>
                <help short="The extension settings. The format is specific for particular extension."/>
                <additionalProp anyType="True"/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.extensions[].inputDataSources" options="input-data-sources">
                <help short="The list of data sources this extension needs data from."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.extensions[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.extensions[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-Event" value="&quot;Microsoft-Event&quot;"/>
                    <item name="Microsoft-InsightsMetrics" value="&quot;Microsoft-InsightsMetrics&quot;"/>
                    <item name="Microsoft-Perf" value="&quot;Microsoft-Perf&quot;"/>
                    <item name="Microsoft-Syslog" value="&quot;Microsoft-Syslog&quot;"/>
                    <item name="Microsoft-WindowsEvent" value="&quot;Microsoft-WindowsEvent&quot;"/>
                  </enum>
                </item>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.iisLogs" options="iis-logs">
            <help short="The list of IIS logs source configurations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.iisLogs[].logDirectories" options="log-directories">
                <help short="Absolute paths file location"/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.iisLogs[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.iisLogs[].streams" options="streams">
                <help short="IIS streams"/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.iisLogs[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.logFiles" options="log-files">
            <help short="The list of Log files source configurations."/>
            <item nullable="True" type="object">
              <arg type="array<string>" var="$body.properties.dataSources.logFiles[].filePatterns" options="file-patterns">
                <help short="File Patterns where the log files are located"/>
                <item nullable="True" type="string"/>
              </arg>
              <arg type="string" var="$body.properties.dataSources.logFiles[].format" options="format" group="">
                <help short="The data format of the log files"/>
                <enum supportExtension="True">
                  <item name="json" value="&quot;json&quot;"/>
                  <item name="text" value="&quot;text&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.logFiles[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="object" var="$body.properties.dataSources.logFiles[].settings" options="settings">
                <help short="The log files specific settings."/>
                <arg nullable="True" type="object" var="$body.properties.dataSources.logFiles[].settings.text" options="text">
                  <help short="Text settings"/>
                  <arg type="string" var="$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat" options="record-start-timestamp-format" group="">
                    <help short="One of the supported timestamp formats"/>
                    <enum supportExtension="True">
                      <item name="ISO 8601" value="&quot;ISO 8601&quot;"/>
                      <item name="M/D/YYYY HH:MM:SS AM/PM" value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                      <item name="MMM d hh:mm:ss" value="&quot;MMM d hh:mm:ss&quot;"/>
                      <item name="Mon DD, YYYY HH:MM:SS" value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                      <item name="YYYY-MM-DD HH:MM:SS" value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                      <item name="dd/MMM/yyyy:HH:mm:ss zzz" value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                      <item name="ddMMyy HH:mm:ss" value="&quot;ddMMyy HH:mm:ss&quot;"/>
                      <item name="yyMMdd HH:mm:ss" value="&quot;yyMMdd HH:mm:ss&quot;"/>
                      <item name="yyyy-MM-ddTHH:mm:ssK" value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                    </enum>
                  </arg>
                </arg>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.logFiles[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data source"/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.logFiles[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.performanceCounters" options="performance-counters">
            <help short="The list of performance counter data source configurations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.performanceCounters[].counterSpecifiers" options="counter-specifiers" group="">
                <help short="A list of specifier names of the performance counters you want to collect. Use a wildcard (*) to collect a counter for all instances. To get a list of performance counters on Windows, run the command 'typeperf'."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.performanceCounters[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="integer32" var="$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds" options="sampling-frequency-in-seconds">
                <help short="The number of seconds between consecutive counter measurements (samples)."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.performanceCounters[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-InsightsMetrics" value="&quot;Microsoft-InsightsMetrics&quot;"/>
                    <item name="Microsoft-Perf" value="&quot;Microsoft-Perf&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.performanceCounters[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.platformTelemetry" options="platform-telemetry">
            <help short="The list of platform telemetry configurations"/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.dataSources.platformTelemetry[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.platformTelemetry[].streams" options="streams">
                <help short="List of platform telemetry streams to collect"/>
                <item nullable="True" type="string"/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.prometheusForwarder" options="prometheus-forwarder">
            <help short="The list of Prometheus forwarder data source configurations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="object" var="$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter" options="label-include-filter" group="">
                <help short="The list of label inclusion filters in the form of label &quot;name-value&quot; pairs. Currently only one label is supported: 'microsoft_metrics_include_label'. Label values are matched case-insensitively."/>
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.prometheusForwarder[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.prometheusForwarder[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-PrometheusMetrics" value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                  </enum>
                </item>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.syslog" options="syslog">
            <help short="The list of Syslog data source configurations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.syslog[].facilityNames" options="facility-names" group="">
                <help short="The list of facility names."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="alert" value="&quot;alert&quot;"/>
                    <item name="audit" value="&quot;audit&quot;"/>
                    <item name="auth" value="&quot;auth&quot;"/>
                    <item name="authpriv" value="&quot;authpriv&quot;"/>
                    <item name="clock" value="&quot;clock&quot;"/>
                    <item name="cron" value="&quot;cron&quot;"/>
                    <item name="daemon" value="&quot;daemon&quot;"/>
                    <item name="ftp" value="&quot;ftp&quot;"/>
                    <item name="kern" value="&quot;kern&quot;"/>
                    <item name="local0" value="&quot;local0&quot;"/>
                    <item name="local1" value="&quot;local1&quot;"/>
                    <item name="local2" value="&quot;local2&quot;"/>
                    <item name="local3" value="&quot;local3&quot;"/>
                    <item name="local4" value="&quot;local4&quot;"/>
                    <item name="local5" value="&quot;local5&quot;"/>
                    <item name="local6" value="&quot;local6&quot;"/>
                    <item name="local7" value="&quot;local7&quot;"/>
                    <item name="lpr" value="&quot;lpr&quot;"/>
                    <item name="mail" value="&quot;mail&quot;"/>
                    <item name="mark" value="&quot;mark&quot;"/>
                    <item name="news" value="&quot;news&quot;"/>
                    <item name="nopri" value="&quot;nopri&quot;"/>
                    <item name="ntp" value="&quot;ntp&quot;"/>
                    <item name="syslog" value="&quot;syslog&quot;"/>
                    <item name="user" value="&quot;user&quot;"/>
                    <item name="uucp" value="&quot;uucp&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.syslog[].logLevels" options="log-levels" group="">
                <help short="The log levels to collect."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Alert" value="&quot;Alert&quot;"/>
                    <item name="Critical" value="&quot;Critical&quot;"/>
                    <item name="Debug" value="&quot;Debug&quot;"/>
                    <item name="Emergency" value="&quot;Emergency&quot;"/>
                    <item name="Error" value="&quot;Error&quot;"/>
                    <item name="Info" value="&quot;Info&quot;"/>
                    <item name="Notice" value="&quot;Notice&quot;"/>
                    <item name="Warning" value="&quot;Warning&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.syslog[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.syslog[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-Syslog" value="&quot;Microsoft-Syslog&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.syslog[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.windowsEventLogs" options="windows-event-logs">
            <help short="The list of Windows Event Log data source configurations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.dataSources.windowsEventLogs[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.windowsEventLogs[].streams" options="streams" group="">
                <help short="List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="Microsoft-Event" value="&quot;Microsoft-Event&quot;"/>
                    <item name="Microsoft-WindowsEvent" value="&quot;Microsoft-WindowsEvent&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.dataSources.windowsEventLogs[].transformKql" options="transform-kql">
                <help short="The KQL query to transform the data source."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.windowsEventLogs[].xPathQueries" options="x-path-queries">
                <help short="A list of Windows Event Log queries in XPATH format."/>
                <item nullable="True" type="string"/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.dataSources.windowsFirewallLogs" options="windows-firewall-logs">
            <help short="The list of Windows Firewall logs source configurations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.dataSources.windowsFirewallLogs[].name" options="name" group="">
                <help short="A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="array<string>" var="$body.properties.dataSources.windowsFirewallLogs[].profileFilter" options="profile-filter" group="">
                <help short="Firewall logs profile filter"/>
                <item nullable="True" type="string">
                  <enum supportExtension="True">
                    <item name="Domain" value="&quot;Domain&quot;"/>
                    <item name="Private" value="&quot;Private&quot;"/>
                    <item name="Public" value="&quot;Public&quot;"/>
                  </enum>
                </item>
              </arg>
              <arg type="array<string>" var="$body.properties.dataSources.windowsFirewallLogs[].streams" options="streams">
                <help short="Firewall logs streams"/>
                <item nullable="True" type="string"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.destinations" options="destinations" group="Properties">
          <help short="The specification of destinations."/>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.azureDataExplorer" options="azure-data-explorer">
            <help short="List of Azure Data Explorer destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.azureDataExplorer[].databaseName" options="database-name">
                <help short="The name of the database to which data will be ingested."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.azureDataExplorer[].name" options="name">
                <help short="A friendly name for the destination. &#13; This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.azureDataExplorer[].resourceId" options="resource-id">
                <help short="The ARM resource id of the Adx resource."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$body.properties.destinations.azureMonitorMetrics" options="azure-monitor-metrics">
            <help short="Azure Monitor Metrics destination."/>
            <arg nullable="True" type="string" var="$body.properties.destinations.azureMonitorMetrics.name" options="name" group="">
              <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
            </arg>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.eventHubs" options="event-hubs">
            <help short="List of Event Hubs destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.eventHubs[].eventHubResourceId" options="event-hub-resource-id">
                <help short="The resource ID of the event hub."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.eventHubs[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.eventHubsDirect" options="event-hubs-direct">
            <help short="List of Event Hubs Direct destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.eventHubsDirect[].eventHubResourceId" options="event-hub-resource-id">
                <help short="The resource ID of the event hub."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.eventHubsDirect[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.logAnalytics" options="log-analytics">
            <help short="List of Log Analytics destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.logAnalytics[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.logAnalytics[].workspaceResourceId" options="workspace-resource-id">
                <help short="The resource ID of the Log Analytics workspace."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.microsoftFabric" options="microsoft-fabric">
            <help short="List of Microsoft Fabric destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.microsoftFabric[].artifactId" options="artifact-id">
                <help short="The artifact id of the Microsoft Fabric resource."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.microsoftFabric[].databaseName" options="database-name">
                <help short="The name of the database to which data will be ingested."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.microsoftFabric[].ingestionUri" options="ingestion-uri">
                <help short="The ingestion uri of the Microsoft Fabric resource."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.microsoftFabric[].name" options="name">
                <help short="A friendly name for the destination. &#13; This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.microsoftFabric[].tenantId" options="tenant-id">
                <help short="The tenant id of the Microsoft Fabric resource."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.monitoringAccounts" options="monitoring-accounts">
            <help short="List of monitoring account destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.monitoringAccounts[].accountResourceId" options="account-resource-id">
                <help short="The resource ID of the monitoring account."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.monitoringAccounts[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<@StorageBlobDestination_update>" var="$body.properties.destinations.storageAccounts" options="storage-accounts">
            <help short="List of storage accounts destinations."/>
            <item nullable="True" type="@StorageBlobDestination_update"/>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.storageBlobsDirect" options="storage-blobs-direct">
            <help short="List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent."/>
            <item nullable="True" type="object" cls="StorageBlobDestination_update">
              <arg nullable="True" type="string" var="@StorageBlobDestination_update.containerName" options="container-name">
                <help short="The container name of the Storage Blob."/>
              </arg>
              <arg nullable="True" type="string" var="@StorageBlobDestination_update.name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="string" var="@StorageBlobDestination_update.storageAccountResourceId" options="storage-account-resource-id">
                <help short="The resource ID of the storage account."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$body.properties.destinations.storageTablesDirect" options="storage-tables-direct">
            <help short="List of Storage Table Direct destinations."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.destinations.storageTablesDirect[].name" options="name" group="">
                <help short="A friendly name for the destination. This name should be unique across all destinations (regardless of type) within the data collection rule."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.storageTablesDirect[].storageAccountResourceId" options="storage-account-resource-id">
                <help short="The resource ID of the storage account."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.destinations.storageTablesDirect[].tableName" options="table-name">
                <help short="The name of the Storage Table."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.references" options="references" group="Properties">
          <help short="Defines all the references that may be used in other sections of the DCR"/>
          <arg nullable="True" type="object" var="$body.properties.references.enrichmentData" options="enrichment-data">
            <help short="All the enrichment data sources referenced in data flows"/>
            <arg nullable="True" type="array<object>" var="$body.properties.references.enrichmentData.storageBlobs" options="storage-blobs">
              <help short="All the storage blobs used as enrichment data sources"/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$body.properties.references.enrichmentData.storageBlobs[].blobUrl" options="blob-url">
                  <help short="Url of the storage blob"/>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.references.enrichmentData.storageBlobs[].lookupType" options="lookup-type" group="">
                  <help short="The type of lookup to perform on the blob"/>
                  <enum supportExtension="True">
                    <item name="Cidr" value="&quot;Cidr&quot;"/>
                    <item name="String" value="&quot;String&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.references.enrichmentData.storageBlobs[].name" options="name">
                  <help short="The name of the enrichment data source used as an alias when referencing this data source in data flows"/>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.references.enrichmentData.storageBlobs[].resourceId" options="resource-id">
                  <help short="Resource Id of the storage account that hosts the blob"/>
                </arg>
              </item>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.streamDeclarations" options="stream-declarations" group="Properties">
          <help short="Declaration of custom streams used in this rule."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<object>" var="$body.properties.streamDeclarations{}.columns" options="columns">
                <help short="List of columns used by data in this stream."/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$body.properties.streamDeclarations{}.columns[].name" options="name">
                    <help short="The name of the column."/>
                  </arg>
                  <arg nullable="True" type="string" var="$body.properties.streamDeclarations{}.columns[].type" options="type" group="">
                    <help short="The type of the column data."/>
                    <enum supportExtension="True">
                      <item name="boolean" value="&quot;boolean&quot;"/>
                      <item name="datetime" value="&quot;datetime&quot;"/>
                      <item name="dynamic" value="&quot;dynamic&quot;"/>
                      <item name="int" value="&quot;int&quot;"/>
                      <item name="long" value="&quot;long&quot;"/>
                      <item name="real" value="&quot;real&quot;"/>
                      <item name="string" value="&quot;string&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="DataCollectionRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}">
          <request method="get">
            <path>
              <param type="string" name="dataCollectionRuleName" arg="$Path.dataCollectionRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-11&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DataCollectionRuleResource_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionRules/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="agentSettings">
                      <prop type="array<object>" name="logs">
                        <item type="object">
                          <prop type="string" name="name">
                            <enum>
                              <item value="&quot;MaxDiskQuotaInMB&quot;"/>
                              <item value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="dataCollectionEndpointId"/>
                    <prop type="array<object>" name="dataFlows">
                      <item type="object">
                        <prop type="string" name="builtInTransform"/>
                        <prop type="boolean" name="captureOverflow"/>
                        <prop type="array<string>" name="destinations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="outputStream"/>
                        <prop type="array<string>" name="streams">
                          <item type="string">
                            <enum>
                              <item value="&quot;Microsoft-Event&quot;"/>
                              <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                              <item value="&quot;Microsoft-Perf&quot;"/>
                              <item value="&quot;Microsoft-Syslog&quot;"/>
                              <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="string" name="transformKql"/>
                      </item>
                    </prop>
                    <prop type="object" name="dataSources">
                      <prop type="object" name="dataImports">
                        <prop type="object" name="eventHub">
                          <prop type="string" name="consumerGroup"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="stream"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="extensions" identifiers="name">
                        <item type="object">
                          <prop type="string" name="extensionName" required="True"/>
                          <prop type="object" name="extensionSettings">
                            <additionalProp anyType="True"/>
                          </prop>
                          <prop type="array<string>" name="inputDataSources">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="iisLogs" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="logDirectories">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logFiles" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="filePatterns" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="format" required="True">
                            <enum>
                              <item value="&quot;json&quot;"/>
                              <item value="&quot;text&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="settings">
                            <prop type="object" name="text">
                              <prop type="string" name="recordStartTimestampFormat" required="True">
                                <enum>
                                  <item value="&quot;ISO 8601&quot;"/>
                                  <item value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                                  <item value="&quot;MMM d hh:mm:ss&quot;"/>
                                  <item value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                                  <item value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                                  <item value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                                  <item value="&quot;ddMMyy HH:mm:ss&quot;"/>
                                  <item value="&quot;yyMMdd HH:mm:ss&quot;"/>
                                  <item value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="performanceCounters" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="counterSpecifiers">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="integer32" name="samplingFrequencyInSeconds"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                                <item value="&quot;Microsoft-Perf&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="platformTelemetry" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="prometheusForwarder" identifiers="name">
                        <item type="object">
                          <prop type="object" name="labelIncludeFilter">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                              </enum>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="syslog" identifiers="name">
                        <item type="object">
                          <prop type="array<string>" name="facilityNames">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;alert&quot;"/>
                                <item value="&quot;audit&quot;"/>
                                <item value="&quot;auth&quot;"/>
                                <item value="&quot;authpriv&quot;"/>
                                <item value="&quot;clock&quot;"/>
                                <item value="&quot;cron&quot;"/>
                                <item value="&quot;daemon&quot;"/>
                                <item value="&quot;ftp&quot;"/>
                                <item value="&quot;kern&quot;"/>
                                <item value="&quot;local0&quot;"/>
                                <item value="&quot;local1&quot;"/>
                                <item value="&quot;local2&quot;"/>
                                <item value="&quot;local3&quot;"/>
                                <item value="&quot;local4&quot;"/>
                                <item value="&quot;local5&quot;"/>
                                <item value="&quot;local6&quot;"/>
                                <item value="&quot;local7&quot;"/>
                                <item value="&quot;lpr&quot;"/>
                                <item value="&quot;mail&quot;"/>
                                <item value="&quot;mark&quot;"/>
                                <item value="&quot;news&quot;"/>
                                <item value="&quot;nopri&quot;"/>
                                <item value="&quot;ntp&quot;"/>
                                <item value="&quot;syslog&quot;"/>
                                <item value="&quot;user&quot;"/>
                                <item value="&quot;uucp&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="logLevels">
                            <item type="string">
                              <enum>
                                <item value="&quot;*&quot;"/>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Critical&quot;"/>
                                <item value="&quot;Debug&quot;"/>
                                <item value="&quot;Emergency&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Notice&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Syslog&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsEventLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="streams">
                            <item type="string">
                              <enum>
                                <item value="&quot;Microsoft-Event&quot;"/>
                                <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="string" name="transformKql"/>
                          <prop type="array<string>" name="xPathQueries">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="windowsFirewallLogs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="array<string>" name="profileFilter">
                            <item type="string">
                              <enum>
                                <item value="&quot;Domain&quot;"/>
                                <item value="&quot;Private&quot;"/>
                                <item value="&quot;Public&quot;"/>
                              </enum>
                            </item>
                          </prop>
                          <prop type="array<string>" name="streams" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="destinations">
                      <prop type="array<object>" name="azureDataExplorer" identifiers="name">
                        <item type="object">
                          <prop type="string" name="databaseName"/>
                          <prop readOnly="True" type="string" name="ingestionUri"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="resourceId"/>
                        </item>
                      </prop>
                      <prop type="object" name="azureMonitorMetrics">
                        <prop type="string" name="name"/>
                      </prop>
                      <prop type="array<object>" name="eventHubs" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="eventHubsDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="eventHubResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="logAnalytics" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop readOnly="True" type="string" name="workspaceId"/>
                          <prop type="string" name="workspaceResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="microsoftFabric" identifiers="name">
                        <item type="object">
                          <prop type="string" name="artifactId"/>
                          <prop type="string" name="databaseName"/>
                          <prop type="string" name="ingestionUri"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="monitoringAccounts" identifiers="name">
                        <item type="object">
                          <prop readOnly="True" type="string" name="accountId"/>
                          <prop type="string" name="accountResourceId"/>
                          <prop type="string" name="name"/>
                        </item>
                      </prop>
                      <prop type="array<@StorageBlobDestination_read>" name="storageAccounts" identifiers="name">
                        <item type="@StorageBlobDestination_read"/>
                      </prop>
                      <prop type="array<object>" name="storageBlobsDirect" identifiers="name">
                        <item type="object" cls="StorageBlobDestination_read">
                          <prop type="string" name="containerName"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountResourceId"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="storageTablesDirect" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountResourceId"/>
                          <prop type="string" name="tableName"/>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="endpoints">
                      <prop readOnly="True" type="string" name="logsIngestion"/>
                      <prop readOnly="True" type="string" name="metricsIngestion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="immutableId"/>
                    <prop readOnly="True" type="object" name="metadata">
                      <prop readOnly="True" type="string" name="provisionedBy"/>
                      <prop readOnly="True" type="string" name="provisionedByImmutableId"/>
                      <prop readOnly="True" type="string" name="provisionedByResourceId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="references">
                      <prop type="object" name="enrichmentData">
                        <prop type="array<object>" name="storageBlobs">
                          <item type="object">
                            <prop type="string" name="blobUrl"/>
                            <prop type="string" name="lookupType">
                              <enum>
                                <item value="&quot;Cidr&quot;"/>
                                <item value="&quot;String&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="resourceId"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="streamDeclarations">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<object>" name="columns">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;boolean&quot;"/>
                                  <item value="&quot;datetime&quot;"/>
                                  <item value="&quot;dynamic&quot;"/>
                                  <item value="&quot;int&quot;"/>
                                  <item value="&quot;long&quot;"/>
                                  <item value="&quot;real&quot;"/>
                                  <item value="&quot;string&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$body.identity">
                <prop type="string" name="type" arg="$body.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                  <additionalProp>
                    <item nullable="True" type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="string" name="kind" arg="$body.kind">
                <enum>
                  <item value="&quot;Linux&quot;"/>
                  <item value="&quot;Windows&quot;"/>
                </enum>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="agentSettings" arg="$body.properties.agentSettings">
                  <prop type="array<object>" name="logs" arg="$body.properties.agentSettings.logs">
                    <item type="object">
                      <prop type="string" name="name" arg="$body.properties.agentSettings.logs[].name">
                        <enum>
                          <item value="&quot;MaxDiskQuotaInMB&quot;"/>
                          <item value="&quot;UseTimeReceivedForForwardedEvents&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="value" arg="$body.properties.agentSettings.logs[].value"/>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="dataCollectionEndpointId" arg="$body.properties.dataCollectionEndpointId"/>
                <prop type="array<object>" name="dataFlows" arg="$body.properties.dataFlows">
                  <item type="object">
                    <prop type="string" name="builtInTransform" arg="$body.properties.dataFlows[].builtInTransform"/>
                    <prop type="boolean" name="captureOverflow" arg="$body.properties.dataFlows[].captureOverflow"/>
                    <prop type="array<string>" name="destinations" arg="$body.properties.dataFlows[].destinations">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="outputStream" arg="$body.properties.dataFlows[].outputStream"/>
                    <prop type="array<string>" name="streams" arg="$body.properties.dataFlows[].streams">
                      <item type="string">
                        <enum>
                          <item value="&quot;Microsoft-Event&quot;"/>
                          <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                          <item value="&quot;Microsoft-Perf&quot;"/>
                          <item value="&quot;Microsoft-Syslog&quot;"/>
                          <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="transformKql" arg="$body.properties.dataFlows[].transformKql"/>
                  </item>
                </prop>
                <prop type="object" name="dataSources" arg="$body.properties.dataSources">
                  <prop type="object" name="dataImports" arg="$body.properties.dataSources.dataImports">
                    <prop type="object" name="eventHub" arg="$body.properties.dataSources.dataImports.eventHub">
                      <prop type="string" name="consumerGroup" arg="$body.properties.dataSources.dataImports.eventHub.consumerGroup"/>
                      <prop type="string" name="name" arg="$body.properties.dataSources.dataImports.eventHub.name"/>
                      <prop type="string" name="stream" arg="$body.properties.dataSources.dataImports.eventHub.stream"/>
                    </prop>
                  </prop>
                  <prop type="array<object>" name="extensions" arg="$body.properties.dataSources.extensions" identifiers="name">
                    <item type="object">
                      <prop type="string" name="extensionName" arg="$body.properties.dataSources.extensions[].extensionName" required="True"/>
                      <prop type="object" name="extensionSettings" arg="$body.properties.dataSources.extensions[].extensionSettings">
                        <additionalProp anyType="True"/>
                      </prop>
                      <prop type="array<string>" name="inputDataSources" arg="$body.properties.dataSources.extensions[].inputDataSources">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.dataSources.extensions[].name"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.extensions[].streams">
                        <item type="string">
                          <enum>
                            <item value="&quot;Microsoft-Event&quot;"/>
                            <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                            <item value="&quot;Microsoft-Perf&quot;"/>
                            <item value="&quot;Microsoft-Syslog&quot;"/>
                            <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="iisLogs" arg="$body.properties.dataSources.iisLogs" identifiers="name">
                    <item type="object">
                      <prop type="array<string>" name="logDirectories" arg="$body.properties.dataSources.iisLogs[].logDirectories">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.dataSources.iisLogs[].name"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.iisLogs[].streams" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="transformKql" arg="$body.properties.dataSources.iisLogs[].transformKql"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="logFiles" arg="$body.properties.dataSources.logFiles" identifiers="name">
                    <item type="object">
                      <prop type="array<string>" name="filePatterns" arg="$body.properties.dataSources.logFiles[].filePatterns" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="format" arg="$body.properties.dataSources.logFiles[].format" required="True">
                        <enum>
                          <item value="&quot;json&quot;"/>
                          <item value="&quot;text&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.dataSources.logFiles[].name"/>
                      <prop type="object" name="settings" arg="$body.properties.dataSources.logFiles[].settings">
                        <prop type="object" name="text" arg="$body.properties.dataSources.logFiles[].settings.text">
                          <prop type="string" name="recordStartTimestampFormat" arg="$body.properties.dataSources.logFiles[].settings.text.recordStartTimestampFormat" required="True">
                            <enum>
                              <item value="&quot;ISO 8601&quot;"/>
                              <item value="&quot;M/D/YYYY HH:MM:SS AM/PM&quot;"/>
                              <item value="&quot;MMM d hh:mm:ss&quot;"/>
                              <item value="&quot;Mon DD, YYYY HH:MM:SS&quot;"/>
                              <item value="&quot;YYYY-MM-DD HH:MM:SS&quot;"/>
                              <item value="&quot;dd/MMM/yyyy:HH:mm:ss zzz&quot;"/>
                              <item value="&quot;ddMMyy HH:mm:ss&quot;"/>
                              <item value="&quot;yyMMdd HH:mm:ss&quot;"/>
                              <item value="&quot;yyyy-MM-ddTHH:mm:ssK&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.logFiles[].streams" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="transformKql" arg="$body.properties.dataSources.logFiles[].transformKql"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="performanceCounters" arg="$body.properties.dataSources.performanceCounters" identifiers="name">
                    <item type="object">
                      <prop type="array<string>" name="counterSpecifiers" arg="$body.properties.dataSources.performanceCounters[].counterSpecifiers">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.dataSources.performanceCounters[].name"/>
                      <prop type="integer32" name="samplingFrequencyInSeconds" arg="$body.properties.dataSources.performanceCounters[].samplingFrequencyInSeconds"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.performanceCounters[].streams">
                        <item type="string">
                          <enum>
                            <item value="&quot;Microsoft-InsightsMetrics&quot;"/>
                            <item value="&quot;Microsoft-Perf&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="transformKql" arg="$body.properties.dataSources.performanceCounters[].transformKql"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="platformTelemetry" arg="$body.properties.dataSources.platformTelemetry" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$body.properties.dataSources.platformTelemetry[].name"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.platformTelemetry[].streams" required="True">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="prometheusForwarder" arg="$body.properties.dataSources.prometheusForwarder" identifiers="name">
                    <item type="object">
                      <prop type="object" name="labelIncludeFilter" arg="$body.properties.dataSources.prometheusForwarder[].labelIncludeFilter">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.dataSources.prometheusForwarder[].name"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.prometheusForwarder[].streams">
                        <item type="string">
                          <enum>
                            <item value="&quot;Microsoft-PrometheusMetrics&quot;"/>
                          </enum>
                        </item>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="syslog" arg="$body.properties.dataSources.syslog" identifiers="name">
                    <item type="object">
                      <prop type="array<string>" name="facilityNames" arg="$body.properties.dataSources.syslog[].facilityNames">
                        <item type="string">
                          <enum>
                            <item value="&quot;*&quot;"/>
                            <item value="&quot;alert&quot;"/>
                            <item value="&quot;audit&quot;"/>
                            <item value="&quot;auth&quot;"/>
                            <item value="&quot;authpriv&quot;"/>
                            <item value="&quot;clock&quot;"/>
                            <item value="&quot;cron&quot;"/>
                            <item value="&quot;daemon&quot;"/>
                            <item value="&quot;ftp&quot;"/>
                            <item value="&quot;kern&quot;"/>
                            <item value="&quot;local0&quot;"/>
                            <item value="&quot;local1&quot;"/>
                            <item value="&quot;local2&quot;"/>
                            <item value="&quot;local3&quot;"/>
                            <item value="&quot;local4&quot;"/>
                            <item value="&quot;local5&quot;"/>
                            <item value="&quot;local6&quot;"/>
                            <item value="&quot;local7&quot;"/>
                            <item value="&quot;lpr&quot;"/>
                            <item value="&quot;mail&quot;"/>
                            <item value="&quot;mark&quot;"/>
                            <item value="&quot;news&quot;"/>
                            <item value="&quot;nopri&quot;"/>
                            <item value="&quot;ntp&quot;"/>
                            <item value="&quot;syslog&quot;"/>
                            <item value="&quot;user&quot;"/>
                            <item value="&quot;uucp&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<string>" name="logLevels" arg="$body.properties.dataSources.syslog[].logLevels">
                        <item type="string">
                          <enum>
                            <item value="&quot;*&quot;"/>
                            <item value="&quot;Alert&quot;"/>
                            <item value="&quot;Critical&quot;"/>
                            <item value="&quot;Debug&quot;"/>
                            <item value="&quot;Emergency&quot;"/>
                            <item value="&quot;Error&quot;"/>
                            <item value="&quot;Info&quot;"/>
                            <item value="&quot;Notice&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.dataSources.syslog[].name"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.syslog[].streams">
                        <item type="string">
                          <enum>
                            <item value="&quot;Microsoft-Syslog&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="transformKql" arg="$body.properties.dataSources.syslog[].transformKql"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="windowsEventLogs" arg="$body.properties.dataSources.windowsEventLogs" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$body.properties.dataSources.windowsEventLogs[].name"/>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.windowsEventLogs[].streams">
                        <item type="string">
                          <enum>
                            <item value="&quot;Microsoft-Event&quot;"/>
                            <item value="&quot;Microsoft-WindowsEvent&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="string" name="transformKql" arg="$body.properties.dataSources.windowsEventLogs[].transformKql"/>
                      <prop type="array<string>" name="xPathQueries" arg="$body.properties.dataSources.windowsEventLogs[].xPathQueries">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="windowsFirewallLogs" arg="$body.properties.dataSources.windowsFirewallLogs" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$body.properties.dataSources.windowsFirewallLogs[].name"/>
                      <prop type="array<string>" name="profileFilter" arg="$body.properties.dataSources.windowsFirewallLogs[].profileFilter">
                        <item type="string">
                          <enum>
                            <item value="&quot;Domain&quot;"/>
                            <item value="&quot;Private&quot;"/>
                            <item value="&quot;Public&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="array<string>" name="streams" arg="$body.properties.dataSources.windowsFirewallLogs[].streams" required="True">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="description" arg="$body.properties.description"/>
                <prop type="object" name="destinations" arg="$body.properties.destinations">
                  <prop type="array<object>" name="azureDataExplorer" arg="$body.properties.destinations.azureDataExplorer" identifiers="name">
                    <item type="object">
                      <prop type="string" name="databaseName" arg="$body.properties.destinations.azureDataExplorer[].databaseName"/>
                      <prop type="string" name="name" arg="$body.properties.destinations.azureDataExplorer[].name"/>
                      <prop type="string" name="resourceId" arg="$body.properties.destinations.azureDataExplorer[].resourceId"/>
                    </item>
                  </prop>
                  <prop type="object" name="azureMonitorMetrics" arg="$body.properties.destinations.azureMonitorMetrics">
                    <prop type="string" name="name" arg="$body.properties.destinations.azureMonitorMetrics.name"/>
                  </prop>
                  <prop type="array<object>" name="eventHubs" arg="$body.properties.destinations.eventHubs" identifiers="name">
                    <item type="object">
                      <prop type="string" name="eventHubResourceId" arg="$body.properties.destinations.eventHubs[].eventHubResourceId"/>
                      <prop type="string" name="name" arg="$body.properties.destinations.eventHubs[].name"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="eventHubsDirect" arg="$body.properties.destinations.eventHubsDirect" identifiers="name">
                    <item type="object">
                      <prop type="string" name="eventHubResourceId" arg="$body.properties.destinations.eventHubsDirect[].eventHubResourceId"/>
                      <prop type="string" name="name" arg="$body.properties.destinations.eventHubsDirect[].name"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="logAnalytics" arg="$body.properties.destinations.logAnalytics" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$body.properties.destinations.logAnalytics[].name"/>
                      <prop type="string" name="workspaceResourceId" arg="$body.properties.destinations.logAnalytics[].workspaceResourceId"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="microsoftFabric" arg="$body.properties.destinations.microsoftFabric" identifiers="name">
                    <item type="object">
                      <prop type="string" name="artifactId" arg="$body.properties.destinations.microsoftFabric[].artifactId"/>
                      <prop type="string" name="databaseName" arg="$body.properties.destinations.microsoftFabric[].databaseName"/>
                      <prop type="string" name="ingestionUri" arg="$body.properties.destinations.microsoftFabric[].ingestionUri"/>
                      <prop type="string" name="name" arg="$body.properties.destinations.microsoftFabric[].name"/>
                      <prop type="string" name="tenantId" arg="$body.properties.destinations.microsoftFabric[].tenantId"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="monitoringAccounts" arg="$body.properties.destinations.monitoringAccounts" identifiers="name">
                    <item type="object">
                      <prop type="string" name="accountResourceId" arg="$body.properties.destinations.monitoringAccounts[].accountResourceId"/>
                      <prop type="string" name="name" arg="$body.properties.destinations.monitoringAccounts[].name"/>
                    </item>
                  </prop>
                  <prop type="array<@StorageBlobDestination_update>" name="storageAccounts" arg="$body.properties.destinations.storageAccounts" identifiers="name">
                    <item type="@StorageBlobDestination_update"/>
                  </prop>
                  <prop type="array<object>" name="storageBlobsDirect" arg="$body.properties.destinations.storageBlobsDirect" identifiers="name">
                    <item type="object" cls="StorageBlobDestination_update">
                      <prop type="string" name="containerName" arg="@StorageBlobDestination_update.containerName"/>
                      <prop type="string" name="name" arg="@StorageBlobDestination_update.name"/>
                      <prop type="string" name="storageAccountResourceId" arg="@StorageBlobDestination_update.storageAccountResourceId"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="storageTablesDirect" arg="$body.properties.destinations.storageTablesDirect" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$body.properties.destinations.storageTablesDirect[].name"/>
                      <prop type="string" name="storageAccountResourceId" arg="$body.properties.destinations.storageTablesDirect[].storageAccountResourceId"/>
                      <prop type="string" name="tableName" arg="$body.properties.destinations.storageTablesDirect[].tableName"/>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="references" arg="$body.properties.references">
                  <prop type="object" name="enrichmentData" arg="$body.properties.references.enrichmentData">
                    <prop type="array<object>" name="storageBlobs" arg="$body.properties.references.enrichmentData.storageBlobs">
                      <item type="object">
                        <prop type="string" name="blobUrl" arg="$body.properties.references.enrichmentData.storageBlobs[].blobUrl"/>
                        <prop type="string" name="lookupType" arg="$body.properties.references.enrichmentData.storageBlobs[].lookupType">
                          <enum>
                            <item value="&quot;Cidr&quot;"/>
                            <item value="&quot;String&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="name" arg="$body.properties.references.enrichmentData.storageBlobs[].name"/>
                        <prop type="string" name="resourceId" arg="$body.properties.references.enrichmentData.storageBlobs[].resourceId"/>
                      </item>
                    </prop>
                  </prop>
                </prop>
                <prop type="object" name="streamDeclarations" arg="$body.properties.streamDeclarations">
                  <additionalProp>
                    <item type="object">
                      <prop type="array<object>" name="columns" arg="$body.properties.streamDeclarations{}.columns">
                        <item type="object">
                          <prop type="string" name="name" arg="$body.properties.streamDeclarations{}.columns[].name"/>
                          <prop type="string" name="type" arg="$body.properties.streamDeclarations{}.columns[].type">
                            <enum>
                              <item value="&quot;boolean&quot;"/>
                              <item value="&quot;datetime&quot;"/>
                              <item value="&quot;dynamic&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;long&quot;"/>
                              <item value="&quot;real&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DataCollectionRules_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}">
          <request method="put">
            <path>
              <param type="string" name="dataCollectionRuleName" arg="$Path.dataCollectionRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-11&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@DataCollectionRuleResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
