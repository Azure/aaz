<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/analyzerconfigs/{}" version="2024-12-15-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vYW5hbHl6ZXJDb25maWdzL3thbmFseXplckNvbmZpZ05hbWV9/V/MjAyNC0xMi0xNS1wcmV2aWV3"/>
  <commandGroup name="apic api-analysis">
    <command name="show" version="2024-12-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/analyzerconfigs/{}" version="2024-12-15-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vYW5hbHl6ZXJDb25maWdzL3thbmFseXplckNvbmZpZ05hbWV9/V/MjAyNC0xMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.analyzerConfigName" options="analyzer-config-name config-name c" required="True" group="" idPart="child_name_2">
          <help short="The name of the configuration."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceName" options="service-name n" required="True" group="" idPart="name">
          <help short="The name of Azure API Center service."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="child_name_1">
          <help short="The name of the workspace."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="AnalyzerConfigs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/analyzerConfigs/{analyzerConfigName}">
          <request method="get">
            <path>
              <param type="string" name="analyzerConfigName" arg="$Path.analyzerConfigName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <header>
              <item name="ETag"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ApiCenter/services/{}/workspaces/{}/analyzerConfigs/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="analyzerType" required="True">
                      <enum>
                        <item value="&quot;spectral&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="filter">
                      <prop type="array<@AnalyzerFilterCondition_read>" name="apiDefinitions" required="True">
                        <item type="@AnalyzerFilterCondition_read"/>
                      </prop>
                      <prop type="array<@AnalyzerFilterCondition_read>" name="apiVersions" required="True">
                        <item type="@AnalyzerFilterCondition_read"/>
                      </prop>
                      <prop type="array<object>" name="apis" required="True">
                        <item type="object" cls="AnalyzerFilterCondition_read">
                          <prop type="string" name="operator" required="True">
                            <enum>
                              <item value="&quot;contains&quot;"/>
                              <item value="&quot;equals&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="property" required="True"/>
                          <prop type="object" name="value" required="True">
                            <additionalProp anyType="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="state">
                      <enum>
                        <item value="&quot;active&quot;"/>
                        <item value="&quot;inactive&quot;"/>
                        <item value="&quot;suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="title" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-12-15-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/analyzerconfigs/{}" version="2024-12-15-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vYW5hbHl6ZXJDb25maWdzL3thbmFseXplckNvbmZpZ05hbWV9/V/MjAyNC0xMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.analyzerConfigName" options="analyzer-config-name config-name c" required="True" group="" idPart="child_name_2">
          <help short="The name of the configuration."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceName" options="service-name n" required="True" group="" idPart="name">
          <help short="The name of Azure API Center service."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="child_name_1">
          <help short="The name of the workspace."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="AnalyzerConfigs_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/analyzerConfigs/{analyzerConfigName}">
          <request method="delete">
            <path>
              <param type="string" name="analyzerConfigName" arg="$Path.analyzerConfigName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-12-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/analyzerconfigs/{}" version="2024-12-15-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vYW5hbHl6ZXJDb25maWdzL3thbmFseXplckNvbmZpZ05hbWV9/V/MjAyNC0xMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.analyzerConfigName" options="analyzer-config-name config-name c" required="True" group="" idPart="child_name_2">
          <help short="The name of the configuration."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceName" options="service-name n" required="True" group="" idPart="name">
          <help short="The name of Azure API Center service."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="child_name_1">
          <help short="The name of the workspace."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.analyzerType" options="analyzer-type" group="Properties">
          <help short="The type of API analyzer."/>
          <default value="&quot;spectral&quot;"/>
          <enum>
            <item name="spectral" value="&quot;spectral&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.description" options="description" group="Properties">
          <help short="The description of the analyzer configuration."/>
        </arg>
        <arg type="object" var="$resource.properties.filter" options="filter" group="Properties">
          <help short="The API analyzer filter."/>
          <arg type="array<@AnalyzerFilterCondition_create>" var="$resource.properties.filter.apiDefinitions" options="api-definitions" required="True">
            <help short="Api definition filter conditions."/>
            <item type="@AnalyzerFilterCondition_create"/>
          </arg>
          <arg type="array<@AnalyzerFilterCondition_create>" var="$resource.properties.filter.apiVersions" options="api-versions" required="True">
            <help short="APi version filter conditions."/>
            <item type="@AnalyzerFilterCondition_create"/>
          </arg>
          <arg type="array<object>" var="$resource.properties.filter.apis" options="apis" required="True">
            <help short="API filter conditions."/>
            <item type="object" cls="AnalyzerFilterCondition_create">
              <arg type="string" var="@AnalyzerFilterCondition_create.operator" options="operator" required="True">
                <help short="The operator to use for the filter, e.g. &quot;equals&quot;."/>
                <enum>
                  <item name="contains" value="&quot;contains&quot;"/>
                  <item name="equals" value="&quot;equals&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="@AnalyzerFilterCondition_create.property" options="property" required="True">
                <help short="The property to filter on, e.g. &quot;lifecycleStage&quot;."/>
              </arg>
              <arg type="object" var="@AnalyzerFilterCondition_create.value" options="value" required="True">
                <help short="The value to filter on, e.g. &quot;production&quot;."/>
                <additionalProp anyType="True"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.title" options="title" group="Properties">
          <help short="The title of the analyzer configuration, e.g. &quot;Spectral (OpenAPI)&quot;."/>
        </arg>
      </argGroup>
      <operation operationId="AnalyzerConfigs_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/analyzerConfigs/{analyzerConfigName}">
          <request method="put">
            <path>
              <param type="string" name="analyzerConfigName" arg="$Path.analyzerConfigName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="analyzerType" arg="$resource.properties.analyzerType" required="True">
                      <enum>
                        <item value="&quot;spectral&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$resource.properties.description"/>
                    <prop type="object" name="filter" arg="$resource.properties.filter">
                      <prop type="array<@AnalyzerFilterCondition_create>" name="apiDefinitions" arg="$resource.properties.filter.apiDefinitions" required="True">
                        <item type="@AnalyzerFilterCondition_create"/>
                      </prop>
                      <prop type="array<@AnalyzerFilterCondition_create>" name="apiVersions" arg="$resource.properties.filter.apiVersions" required="True">
                        <item type="@AnalyzerFilterCondition_create"/>
                      </prop>
                      <prop type="array<object>" name="apis" arg="$resource.properties.filter.apis" required="True">
                        <item type="object" cls="AnalyzerFilterCondition_create">
                          <prop type="string" name="operator" arg="@AnalyzerFilterCondition_create.operator" required="True">
                            <enum>
                              <item value="&quot;contains&quot;"/>
                              <item value="&quot;equals&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="property" arg="@AnalyzerFilterCondition_create.property" required="True"/>
                          <prop type="object" name="value" arg="@AnalyzerFilterCondition_create.value" required="True">
                            <additionalProp anyType="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="title" arg="$resource.properties.title" required="True"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <header>
              <item name="ETag"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ApiCenter/services/{}/workspaces/{}/analyzerConfigs/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="analyzerType" required="True">
                      <enum>
                        <item value="&quot;spectral&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="filter">
                      <prop type="array<@AnalyzerFilterCondition_read>" name="apiDefinitions" required="True">
                        <item type="@AnalyzerFilterCondition_read"/>
                      </prop>
                      <prop type="array<@AnalyzerFilterCondition_read>" name="apiVersions" required="True">
                        <item type="@AnalyzerFilterCondition_read"/>
                      </prop>
                      <prop type="array<object>" name="apis" required="True">
                        <item type="object" cls="AnalyzerFilterCondition_read">
                          <prop type="string" name="operator" required="True">
                            <enum>
                              <item value="&quot;contains&quot;"/>
                              <item value="&quot;equals&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="property" required="True"/>
                          <prop type="object" name="value" required="True">
                            <additionalProp anyType="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="state">
                      <enum>
                        <item value="&quot;active&quot;"/>
                        <item value="&quot;inactive&quot;"/>
                        <item value="&quot;suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="title" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-12-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/analyzerconfigs/{}" version="2024-12-15-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vYW5hbHl6ZXJDb25maWdzL3thbmFseXplckNvbmZpZ05hbWV9/V/MjAyNC0xMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.analyzerConfigName" options="analyzer-config-name config-name c" required="True" group="" idPart="child_name_2">
          <help short="The name of the configuration."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceName" options="service-name n" required="True" group="" idPart="name">
          <help short="The name of Azure API Center service."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="child_name_1">
          <help short="The name of the workspace."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.analyzerType" options="analyzer-type" group="Properties">
          <help short="The type of API analyzer."/>
          <default value="&quot;spectral&quot;"/>
          <enum>
            <item name="spectral" value="&quot;spectral&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.description" options="description" group="Properties">
          <help short="The description of the analyzer configuration."/>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.filter" options="filter" group="Properties">
          <help short="The API analyzer filter."/>
          <arg type="array<@AnalyzerFilterCondition_update>" var="$resource.properties.filter.apiDefinitions" options="api-definitions">
            <help short="Api definition filter conditions."/>
            <item nullable="True" type="@AnalyzerFilterCondition_update"/>
          </arg>
          <arg type="array<@AnalyzerFilterCondition_update>" var="$resource.properties.filter.apiVersions" options="api-versions">
            <help short="APi version filter conditions."/>
            <item nullable="True" type="@AnalyzerFilterCondition_update"/>
          </arg>
          <arg type="array<object>" var="$resource.properties.filter.apis" options="apis">
            <help short="API filter conditions."/>
            <item nullable="True" type="object" cls="AnalyzerFilterCondition_update">
              <arg type="string" var="@AnalyzerFilterCondition_update.operator" options="operator">
                <help short="The operator to use for the filter, e.g. &quot;equals&quot;."/>
                <enum>
                  <item name="contains" value="&quot;contains&quot;"/>
                  <item name="equals" value="&quot;equals&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="@AnalyzerFilterCondition_update.property" options="property">
                <help short="The property to filter on, e.g. &quot;lifecycleStage&quot;."/>
              </arg>
              <arg type="object" var="@AnalyzerFilterCondition_update.value" options="value">
                <help short="The value to filter on, e.g. &quot;production&quot;."/>
                <additionalProp anyType="True"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.title" options="title" group="Properties">
          <help short="The title of the analyzer configuration, e.g. &quot;Spectral (OpenAPI)&quot;."/>
        </arg>
      </argGroup>
      <operation operationId="AnalyzerConfigs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/analyzerConfigs/{analyzerConfigName}">
          <request method="get">
            <path>
              <param type="string" name="analyzerConfigName" arg="$Path.analyzerConfigName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <header>
              <item name="ETag"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="object" cls="AnalyzerConfig_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ApiCenter/services/{}/workspaces/{}/analyzerConfigs/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="analyzerType" required="True">
                      <enum>
                        <item value="&quot;spectral&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="filter">
                      <prop type="array<@AnalyzerFilterCondition_read>" name="apiDefinitions" required="True">
                        <item type="@AnalyzerFilterCondition_read"/>
                      </prop>
                      <prop type="array<@AnalyzerFilterCondition_read>" name="apiVersions" required="True">
                        <item type="@AnalyzerFilterCondition_read"/>
                      </prop>
                      <prop type="array<object>" name="apis" required="True">
                        <item type="object" cls="AnalyzerFilterCondition_read">
                          <prop type="string" name="operator" required="True">
                            <enum>
                              <item value="&quot;contains&quot;"/>
                              <item value="&quot;equals&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="property" required="True"/>
                          <prop type="object" name="value" required="True">
                            <additionalProp anyType="True"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="state">
                      <enum>
                        <item value="&quot;active&quot;"/>
                        <item value="&quot;inactive&quot;"/>
                        <item value="&quot;suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="title" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="analyzerType" arg="$resource.properties.analyzerType" required="True">
                  <enum>
                    <item value="&quot;spectral&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$resource.properties.description"/>
                <prop type="object" name="filter" arg="$resource.properties.filter">
                  <prop type="array<@AnalyzerFilterCondition_update>" name="apiDefinitions" arg="$resource.properties.filter.apiDefinitions" required="True">
                    <item type="@AnalyzerFilterCondition_update"/>
                  </prop>
                  <prop type="array<@AnalyzerFilterCondition_update>" name="apiVersions" arg="$resource.properties.filter.apiVersions" required="True">
                    <item type="@AnalyzerFilterCondition_update"/>
                  </prop>
                  <prop type="array<object>" name="apis" arg="$resource.properties.filter.apis" required="True">
                    <item type="object" cls="AnalyzerFilterCondition_update">
                      <prop type="string" name="operator" arg="@AnalyzerFilterCondition_update.operator" required="True">
                        <enum>
                          <item value="&quot;contains&quot;"/>
                          <item value="&quot;equals&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="property" arg="@AnalyzerFilterCondition_update.property" required="True"/>
                      <prop type="object" name="value" arg="@AnalyzerFilterCondition_update.value" required="True">
                        <additionalProp anyType="True"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="title" arg="$resource.properties.title" required="True"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="AnalyzerConfigs_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/analyzerConfigs/{analyzerConfigName}">
          <request method="put">
            <path>
              <param type="string" name="analyzerConfigName" arg="$Path.analyzerConfigName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <header>
              <item name="ETag"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@AnalyzerConfig_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
