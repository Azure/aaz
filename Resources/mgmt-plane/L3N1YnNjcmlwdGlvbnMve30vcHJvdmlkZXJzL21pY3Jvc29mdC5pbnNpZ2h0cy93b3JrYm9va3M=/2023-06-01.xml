<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.insights/workbooks" version="2023-06-01" swagger="mgmt-plane/applicationinsights/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL3dvcmtib29rcw==/V/MjAyMy0wNi0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/workbooks" version="2023-06-01" swagger="mgmt-plane/applicationinsights/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvd29ya2Jvb2tz/V/MjAyMy0wNi0wMQ=="/>
  <commandGroup name="monitor app-insights workbook">
    <command name="list" version="2023-06-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.insights/workbooks" version="2023-06-01" swagger="mgmt-plane/applicationinsights/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL3dvcmtib29rcw==/V/MjAyMy0wNi0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/workbooks" version="2023-06-01" swagger="mgmt-plane/applicationinsights/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvd29ya2Jvb2tz/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="boolean" var="$Query.canFetchContent" options="can-fetch-content">
          <help short="Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks."/>
        </arg>
        <arg type="string" var="$Query.category" options="category" required="True">
          <help short="Category of workbook to return."/>
          <enum>
            <item name="TSG" value="&quot;TSG&quot;"/>
            <item name="performance" value="&quot;performance&quot;"/>
            <item name="retention" value="&quot;retention&quot;"/>
            <item name="workbook" value="&quot;workbook&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Query.sourceId" options="source-id">
          <help short="Azure Resource Id that will fetch all linked workbooks."/>
        </arg>
        <arg type="array<string>" var="$Query.tags" options="tags">
          <help short="Tags presents on each workbook returned."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <condition var="$Condition_Workbooks_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="hasValue" arg="$Query.category"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_Workbooks_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="hasValue" arg="$Query.category"/>
        </operator>
      </condition>
      <operation when="$Condition_Workbooks_ListBySubscription" operationId="Workbooks_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/workbooks">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="boolean" name="canFetchContent" arg="$Query.canFetchContent"/>
              <param type="string" name="category" arg="$Query.category" required="True">
                <enum>
                  <item value="&quot;TSG&quot;"/>
                  <item value="&quot;performance&quot;"/>
                  <item value="&quot;retention&quot;"/>
                  <item value="&quot;workbook&quot;"/>
                </enum>
              </param>
              <param type="array<string>" name="tags" arg="$Query.tags">
                <item type="string"/>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="string" name="kind">
                        <enum>
                          <item value="&quot;shared&quot;"/>
                        </enum>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="category" required="True"/>
                        <prop nullable="True" type="string" name="description"/>
                        <prop type="string" name="displayName" required="True"/>
                        <prop readOnly="True" nullable="True" type="string" name="revision"/>
                        <prop nullable="True" type="string" name="serializedData" required="True"/>
                        <prop nullable="True" type="string" name="storageUri"/>
                        <prop readOnly="True" type="dateTime" name="timeModified"/>
                        <prop readOnly="True" type="string" name="userId"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Workbooks_ListByResourceGroup" operationId="Workbooks_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="boolean" name="canFetchContent" arg="$Query.canFetchContent"/>
              <param type="string" name="category" arg="$Query.category" required="True">
                <enum>
                  <item value="&quot;TSG&quot;"/>
                  <item value="&quot;performance&quot;"/>
                  <item value="&quot;retention&quot;"/>
                  <item value="&quot;workbook&quot;"/>
                </enum>
              </param>
              <param type="string" name="sourceId" arg="$Query.sourceId"/>
              <param type="array<string>" name="tags" arg="$Query.tags">
                <item type="string"/>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id"/>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="string" name="kind">
                        <enum>
                          <item value="&quot;shared&quot;"/>
                        </enum>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="category" required="True"/>
                        <prop nullable="True" type="string" name="description"/>
                        <prop type="string" name="displayName" required="True"/>
                        <prop readOnly="True" nullable="True" type="string" name="revision"/>
                        <prop nullable="True" type="string" name="serializedData" required="True"/>
                        <prop nullable="True" type="string" name="storageUri"/>
                        <prop readOnly="True" type="dateTime" name="timeModified"/>
                        <prop readOnly="True" type="string" name="userId"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
