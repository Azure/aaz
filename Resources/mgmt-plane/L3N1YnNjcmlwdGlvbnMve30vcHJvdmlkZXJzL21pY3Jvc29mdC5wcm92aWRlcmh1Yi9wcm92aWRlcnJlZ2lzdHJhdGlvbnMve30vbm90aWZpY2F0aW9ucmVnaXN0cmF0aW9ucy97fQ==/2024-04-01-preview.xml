<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/notificationregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbnMve25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbk5hbWV9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
  <commandGroup name="providerhub notification-registration">
    <command name="show" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/notificationregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbnMve25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbk5hbWV9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.notificationRegistrationName" options="notification-registration-name name n" required="True" idPart="child_name_1">
          <help short="The notification registration."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NotificationRegistrations_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}">
          <request method="get">
            <path>
              <param type="string" name="notificationRegistrationName" arg="$Path.notificationRegistrationName" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}/notificationRegistrations/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="includedEvents">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="messageScope">
                      <enum>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegisteredSubscriptions&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="notificationEndpoints" identifiers="notificationDestination">
                      <item type="object">
                        <prop type="array<string>" name="locations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="notificationDestination"/>
                      </item>
                    </prop>
                    <prop type="string" name="notificationMode">
                      <enum>
                        <item value="&quot;EventHub&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;WebHook&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-04-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/notificationregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbnMve25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbk5hbWV9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.notificationRegistrationName" options="notification-registration-name name n" required="True" idPart="child_name_1">
          <help short="The notification registration."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NotificationRegistrations_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}">
          <request method="delete">
            <path>
              <param type="string" name="notificationRegistrationName" arg="$Path.notificationRegistrationName" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/notificationregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbnMve25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbk5hbWV9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.notificationRegistrationName" options="notification-registration-name name n" required="True" idPart="child_name_1">
          <help short="The notification registration."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$properties.properties.includedEvents" options="included-events" group="Properties">
          <help short="These are the events that the RP should be messaged on. The message format is in the form {RP Namespace}/{ResourceType}/{action}. The available actions are: write, delete and move/action."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$properties.properties.messageScope" options="message-scope" group="Properties">
          <help short="Limits the messages that are sent to the RP. The default value is RegisteredSubscriptions. The available values are Global (all messages in Azure) and RegisteredSubscriptions (only messages in subscriptions registered by RP)."/>
          <enum>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="RegisteredSubscriptions" value="&quot;RegisteredSubscriptions&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$properties.properties.notificationEndpoints" options="notification-endpoints" group="Properties">
          <help short="These are the locations for the notification messages. Notifications will be sent to the region of the event resource's location (e.g. VM in East Us will send message to the specified endpoint in East US)."/>
          <item type="object">
            <arg type="array<string>" var="$properties.properties.notificationEndpoints[].locations" options="locations">
              <item type="string"/>
            </arg>
            <arg type="string" var="$properties.properties.notificationEndpoints[].notificationDestination" options="notification-destination"/>
          </item>
        </arg>
        <arg type="string" var="$properties.properties.notificationMode" options="notification-mode" group="Properties">
          <help short="Determines how the notifications are sent to the RP. The two available modes are EventHub and Webhook."/>
          <enum>
            <item name="EventHub" value="&quot;EventHub&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="WebHook" value="&quot;WebHook&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="NotificationRegistrations_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}">
          <request method="put">
            <path>
              <param type="string" name="notificationRegistrationName" arg="$Path.notificationRegistrationName" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="includedEvents" arg="$properties.properties.includedEvents">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="messageScope" arg="$properties.properties.messageScope">
                      <enum>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegisteredSubscriptions&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="notificationEndpoints" arg="$properties.properties.notificationEndpoints" identifiers="notificationDestination">
                      <item type="object">
                        <prop type="array<string>" name="locations" arg="$properties.properties.notificationEndpoints[].locations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="notificationDestination" arg="$properties.properties.notificationEndpoints[].notificationDestination"/>
                      </item>
                    </prop>
                    <prop type="string" name="notificationMode" arg="$properties.properties.notificationMode">
                      <enum>
                        <item value="&quot;EventHub&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;WebHook&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}/notificationRegistrations/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="includedEvents">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="messageScope">
                      <enum>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegisteredSubscriptions&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="notificationEndpoints" identifiers="notificationDestination">
                      <item type="object">
                        <prop type="array<string>" name="locations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="notificationDestination"/>
                      </item>
                    </prop>
                    <prop type="string" name="notificationMode">
                      <enum>
                        <item value="&quot;EventHub&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;WebHook&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}/notificationregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9L25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbnMve25vdGlmaWNhdGlvblJlZ2lzdHJhdGlvbk5hbWV9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.notificationRegistrationName" options="notification-registration-name name n" required="True" idPart="child_name_1">
          <help short="The notification registration."/>
        </arg>
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$properties.properties.includedEvents" options="included-events" group="Properties">
          <help short="These are the events that the RP should be messaged on. The message format is in the form {RP Namespace}/{ResourceType}/{action}. The available actions are: write, delete and move/action."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.messageScope" options="message-scope" group="Properties">
          <help short="Limits the messages that are sent to the RP. The default value is RegisteredSubscriptions. The available values are Global (all messages in Azure) and RegisteredSubscriptions (only messages in subscriptions registered by RP)."/>
          <enum>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="RegisteredSubscriptions" value="&quot;RegisteredSubscriptions&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.notificationEndpoints" options="notification-endpoints" group="Properties">
          <help short="These are the locations for the notification messages. Notifications will be sent to the region of the event resource's location (e.g. VM in East Us will send message to the specified endpoint in East US)."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$properties.properties.notificationEndpoints[].locations" options="locations">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="string" var="$properties.properties.notificationEndpoints[].notificationDestination" options="notification-destination"/>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.notificationMode" options="notification-mode" group="Properties">
          <help short="Determines how the notifications are sent to the RP. The two available modes are EventHub and Webhook."/>
          <enum>
            <item name="EventHub" value="&quot;EventHub&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="WebHook" value="&quot;WebHook&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="NotificationRegistrations_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}">
          <request method="get">
            <path>
              <param type="string" name="notificationRegistrationName" arg="$Path.notificationRegistrationName" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NotificationRegistration_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}/notificationRegistrations/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="includedEvents">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="messageScope">
                      <enum>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegisteredSubscriptions&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="notificationEndpoints" identifiers="notificationDestination">
                      <item type="object">
                        <prop type="array<string>" name="locations">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="notificationDestination"/>
                      </item>
                    </prop>
                    <prop type="string" name="notificationMode">
                      <enum>
                        <item value="&quot;EventHub&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;WebHook&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="properties" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="array<string>" name="includedEvents" arg="$properties.properties.includedEvents">
                  <item type="string"/>
                </prop>
                <prop type="string" name="messageScope" arg="$properties.properties.messageScope">
                  <enum>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;RegisteredSubscriptions&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="notificationEndpoints" arg="$properties.properties.notificationEndpoints" identifiers="notificationDestination">
                  <item type="object">
                    <prop type="array<string>" name="locations" arg="$properties.properties.notificationEndpoints[].locations">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="notificationDestination" arg="$properties.properties.notificationEndpoints[].notificationDestination"/>
                  </item>
                </prop>
                <prop type="string" name="notificationMode" arg="$properties.properties.notificationMode">
                  <enum>
                    <item value="&quot;EventHub&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;WebHook&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NotificationRegistrations_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}">
          <request method="put">
            <path>
              <param type="string" name="notificationRegistrationName" arg="$Path.notificationRegistrationName" required="True"/>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@NotificationRegistration_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
