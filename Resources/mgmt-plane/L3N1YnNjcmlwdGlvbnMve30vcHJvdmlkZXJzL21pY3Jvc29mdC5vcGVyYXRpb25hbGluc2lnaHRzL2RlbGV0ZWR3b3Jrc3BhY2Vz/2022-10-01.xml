<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.operationalinsights/deletedworkspaces" version="2022-10-01" swagger="mgmt-plane/operationalinsights/ResourceProviders/Microsoft.OperationalInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk9wZXJhdGlvbmFsSW5zaWdodHMvZGVsZXRlZFdvcmtzcGFjZXM=/V/MjAyMi0xMC0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.operationalinsights/deletedworkspaces" version="2022-10-01" swagger="mgmt-plane/operationalinsights/ResourceProviders/Microsoft.OperationalInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3BlcmF0aW9uYWxJbnNpZ2h0cy9kZWxldGVkV29ya3NwYWNlcw==/V/MjAyMi0xMC0wMQ=="/>
  <commandGroup name="monitor log-analytics workspace">
    <command name="list-deleted-workspaces" version="2022-10-01">
      <resource id="/subscriptions/{}/providers/microsoft.operationalinsights/deletedworkspaces" version="2022-10-01" swagger="mgmt-plane/operationalinsights/ResourceProviders/Microsoft.OperationalInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk9wZXJhdGlvbmFsSW5zaWdodHMvZGVsZXRlZFdvcmtzcGFjZXM=/V/MjAyMi0xMC0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.operationalinsights/deletedworkspaces" version="2022-10-01" swagger="mgmt-plane/operationalinsights/ResourceProviders/Microsoft.OperationalInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3BlcmF0aW9uYWxJbnNpZ2h0cy9kZWxldGVkV29ya3NwYWNlcw==/V/MjAyMi0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True"/>
      </argGroup>
      <condition var="$Condition_DeletedWorkspaces_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_DeletedWorkspaces_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_DeletedWorkspaces_ListByResourceGroup" operationId="DeletedWorkspaces_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/deletedWorkspaces">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourcegroups/{}/providers/Microsoft.OperationalInsights/workspaces/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="createdDate"/>
                        <prop readOnly="True" type="string" name="customerId"/>
                        <prop type="string" name="defaultDataCollectionRuleResourceId"/>
                        <prop type="object" name="features">
                          <prop nullable="True" type="string" name="clusterResourceId"/>
                          <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                          <prop nullable="True" type="boolean" name="enableDataExport"/>
                          <prop nullable="True" type="boolean" name="enableLogAccessUsingOnlyResourcePermissions"/>
                          <prop nullable="True" type="boolean" name="immediatePurgeDataOn30Days"/>
                        </prop>
                        <prop type="boolean" name="forceCmkForQuery"/>
                        <prop readOnly="True" type="string" name="modifiedDate"/>
                        <prop readOnly="True" type="array<object>" name="privateLinkScopedResources">
                          <item readOnly="True" type="object">
                            <prop readOnly="True" type="string" name="resourceId"/>
                            <prop readOnly="True" type="string" name="scopeId"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;ProvisioningAccount&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicNetworkAccessForIngestion">
                          <default value="&quot;Enabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicNetworkAccessForQuery">
                          <default value="&quot;Enabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="integer32" name="retentionInDays"/>
                        <prop type="object" name="sku">
                          <prop type="integer32" name="capacityReservationLevel">
                            <enum>
                              <item value="100"/>
                              <item value="200"/>
                              <item value="300"/>
                              <item value="400"/>
                              <item value="500"/>
                              <item value="1000"/>
                              <item value="2000"/>
                              <item value="5000"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="lastSkuUpdate"/>
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;CapacityReservation&quot;"/>
                              <item value="&quot;Free&quot;"/>
                              <item value="&quot;LACluster&quot;"/>
                              <item value="&quot;PerGB2018&quot;"/>
                              <item value="&quot;PerNode&quot;"/>
                              <item value="&quot;Premium&quot;"/>
                              <item value="&quot;Standalone&quot;"/>
                              <item value="&quot;Standard&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="workspaceCapping">
                          <prop type="float64" name="dailyQuotaGb"/>
                          <prop readOnly="True" type="string" name="dataIngestionStatus">
                            <enum>
                              <item value="&quot;ApproachingQuota&quot;"/>
                              <item value="&quot;ForceOff&quot;"/>
                              <item value="&quot;ForceOn&quot;"/>
                              <item value="&quot;OverQuota&quot;"/>
                              <item value="&quot;RespectQuota&quot;"/>
                              <item value="&quot;SubscriptionSuspended&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="quotaNextResetTime"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_DeletedWorkspaces_List" operationId="DeletedWorkspaces_List">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/deletedWorkspaces">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourcegroups/{}/providers/Microsoft.OperationalInsights/workspaces/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop readOnly="True" type="string" name="clientId"/>
                              <prop readOnly="True" type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="createdDate"/>
                        <prop readOnly="True" type="string" name="customerId"/>
                        <prop type="string" name="defaultDataCollectionRuleResourceId"/>
                        <prop type="object" name="features">
                          <prop nullable="True" type="string" name="clusterResourceId"/>
                          <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                          <prop nullable="True" type="boolean" name="enableDataExport"/>
                          <prop nullable="True" type="boolean" name="enableLogAccessUsingOnlyResourcePermissions"/>
                          <prop nullable="True" type="boolean" name="immediatePurgeDataOn30Days"/>
                        </prop>
                        <prop type="boolean" name="forceCmkForQuery"/>
                        <prop readOnly="True" type="string" name="modifiedDate"/>
                        <prop readOnly="True" type="array<object>" name="privateLinkScopedResources">
                          <item readOnly="True" type="object">
                            <prop readOnly="True" type="string" name="resourceId"/>
                            <prop readOnly="True" type="string" name="scopeId"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;ProvisioningAccount&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicNetworkAccessForIngestion">
                          <default value="&quot;Enabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicNetworkAccessForQuery">
                          <default value="&quot;Enabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop nullable="True" type="integer32" name="retentionInDays"/>
                        <prop type="object" name="sku">
                          <prop type="integer32" name="capacityReservationLevel">
                            <enum>
                              <item value="100"/>
                              <item value="200"/>
                              <item value="300"/>
                              <item value="400"/>
                              <item value="500"/>
                              <item value="1000"/>
                              <item value="2000"/>
                              <item value="5000"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="lastSkuUpdate"/>
                          <prop type="string" name="name" required="True">
                            <enum>
                              <item value="&quot;CapacityReservation&quot;"/>
                              <item value="&quot;Free&quot;"/>
                              <item value="&quot;LACluster&quot;"/>
                              <item value="&quot;PerGB2018&quot;"/>
                              <item value="&quot;PerNode&quot;"/>
                              <item value="&quot;Premium&quot;"/>
                              <item value="&quot;Standalone&quot;"/>
                              <item value="&quot;Standard&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="workspaceCapping">
                          <prop type="float64" name="dailyQuotaGb"/>
                          <prop readOnly="True" type="string" name="dataIngestionStatus">
                            <enum>
                              <item value="&quot;ApproachingQuota&quot;"/>
                              <item value="&quot;ForceOff&quot;"/>
                              <item value="&quot;ForceOn&quot;"/>
                              <item value="&quot;OverQuota&quot;"/>
                              <item value="&quot;RespectQuota&quot;"/>
                              <item value="&quot;SubscriptionSuspended&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="quotaNextResetTime"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
