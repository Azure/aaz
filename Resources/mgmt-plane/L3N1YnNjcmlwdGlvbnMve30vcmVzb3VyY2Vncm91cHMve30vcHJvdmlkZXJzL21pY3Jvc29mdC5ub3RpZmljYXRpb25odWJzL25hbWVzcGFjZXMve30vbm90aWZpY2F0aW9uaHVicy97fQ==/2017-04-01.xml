<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
  <commandGroup name="notification-hub">
    <command name="show" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name."/>
        </arg>
        <arg type="string" var="$Path.notificationHubName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The notification hub name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NotificationHubs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
              <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="admCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="authTokenUrl"/>
                        <prop type="string" name="clientId"/>
                        <prop type="string" name="clientSecret"/>
                      </prop>
                    </prop>
                    <prop type="object" name="apnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="apnsCertificate"/>
                        <prop type="string" name="appId"/>
                        <prop type="string" name="appName"/>
                        <prop type="string" name="certificateKey"/>
                        <prop type="string" name="endpoint"/>
                        <prop type="string" name="keyId"/>
                        <prop type="string" name="thumbprint"/>
                        <prop type="string" name="token"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="authorizationRules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="claimType"/>
                        <prop readOnly="True" type="string" name="claimValue"/>
                        <prop readOnly="True" type="string" name="createdTime"/>
                        <prop readOnly="True" type="string" name="keyName"/>
                        <prop readOnly="True" type="string" name="modifiedTime"/>
                        <prop readOnly="True" type="string" name="primaryKey"/>
                        <prop readOnly="True" type="integer" name="revision"/>
                        <prop type="array<string>" name="rights">
                          <item type="string">
                            <enum>
                              <item value="&quot;Listen&quot;"/>
                              <item value="&quot;Manage&quot;"/>
                              <item value="&quot;Send&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="secondaryKey"/>
                      </item>
                    </prop>
                    <prop type="object" name="baiduCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="baiduApiKey"/>
                        <prop type="string" name="baiduEndPoint"/>
                        <prop type="string" name="baiduSecretKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="gcmCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="gcmEndpoint"/>
                        <prop type="string" name="googleApiKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="mpnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="certificateKey"/>
                        <prop type="string" name="mpnsCertificate"/>
                        <prop type="string" name="thumbprint"/>
                      </prop>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="registrationTtl"/>
                    <prop type="object" name="wnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="packageSid"/>
                        <prop type="string" name="secretKey"/>
                        <prop type="string" name="windowsLiveEndpoint"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name."/>
        </arg>
        <arg type="string" var="$Path.notificationHubName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The notification hub name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NotificationHubs_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
          <request method="delete">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
              <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name."/>
        </arg>
        <arg type="string" var="$Path.notificationHubName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The notification hub name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" hide="True" group="Parameters">
          <help short="The sku of the created namespace"/>
          <arg type="integer" var="$parameters.sku.capacity" options="capacity" hide="True" group="Sku">
            <help short="The capacity of the resource"/>
          </arg>
          <arg type="string" var="$parameters.sku.family" options="family" hide="True" group="Sku">
            <help short="The Sku Family"/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name" required="True">
            <help short="Name of the notification hub sku"/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.sku.size" options="size" hide="True" group="Sku">
            <help short="The Sku size"/>
          </arg>
          <arg type="string" var="$parameters.sku.tier" options="tier" hide="True" group="Sku">
            <help short="The tier of particular sku"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.admCredential" options="adm-credential" hide="True" group="Properties">
          <help short="The AdmCredential of the created NotificationHub"/>
          <arg type="string" var="$parameters.properties.admCredential.properties.authTokenUrl" options="auth-token-url" group="Properties">
            <help short="The URL of the authorization token."/>
          </arg>
          <arg type="string" var="$parameters.properties.admCredential.properties.clientId" options="client-id" group="Properties">
            <help short="The client identifier."/>
          </arg>
          <arg type="string" var="$parameters.properties.admCredential.properties.clientSecret" options="client-secret" group="Properties">
            <help short="The credential secret access key."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.apnsCredential" options="apns-credential" hide="True" group="Properties">
          <help short="The ApnsCredential of the created NotificationHub"/>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.apnsCertificate" options="apns-certificate" group="Properties">
            <help short="The APNS certificate. Specify if using Certificate Authentication Mode."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.appId" options="app-id" group="Properties">
            <help short="The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.appName" options="app-name" group="Properties">
            <help short="The name of the application or BundleId. Specify if using Token Authentication Mode."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
            <help short="The APNS certificate password if it exists."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.endpoint" options="endpoint" group="Properties">
            <help short="The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.keyId" options="key-id" group="Properties">
            <help short="A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.thumbprint" options="thumbprint" group="Properties">
            <help short="The APNS certificate thumbprint. Specify if using Certificate Authentication Mode."/>
          </arg>
          <arg type="string" var="$parameters.properties.apnsCredential.properties.token" options="token" group="Properties">
            <help short="Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode."/>
          </arg>
        </arg>
        <arg type="array<object>" var="$parameters.properties.authorizationRules" options="authorization-rules" hide="True" group="Properties">
          <help short="The AuthorizationRules of the created NotificationHub"/>
          <item type="object">
            <arg type="array<string>" var="$parameters.properties.authorizationRules[].rights" options="rights">
              <help short="The rights associated with the rule."/>
              <item type="string">
                <enum>
                  <item name="Listen" value="&quot;Listen&quot;"/>
                  <item name="Manage" value="&quot;Manage&quot;"/>
                  <item name="Send" value="&quot;Send&quot;"/>
                </enum>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.baiduCredential" options="baidu-credential" hide="True" group="Properties">
          <help short="The BaiduCredential of the created NotificationHub"/>
          <arg type="string" var="$parameters.properties.baiduCredential.properties.baiduApiKey" options="baidu-api-key" group="Properties">
            <help short="Baidu Api Key."/>
          </arg>
          <arg type="string" var="$parameters.properties.baiduCredential.properties.baiduEndPoint" options="baidu-end-point" group="Properties">
            <help short="Baidu Endpoint."/>
          </arg>
          <arg type="string" var="$parameters.properties.baiduCredential.properties.baiduSecretKey" options="baidu-secret-key" group="Properties">
            <help short="Baidu Secret Key"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.gcmCredential" options="gcm-credential" hide="True" group="Properties">
          <help short="The GcmCredential of the created NotificationHub"/>
          <arg type="string" var="$parameters.properties.gcmCredential.properties.gcmEndpoint" options="gcm-endpoint" group="Properties">
            <help short="The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'"/>
          </arg>
          <arg type="string" var="$parameters.properties.gcmCredential.properties.googleApiKey" options="google-api-key" group="Properties">
            <help short="The Google API key."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.mpnsCredential" options="mpns-credential" hide="True" group="Properties">
          <help short="The MpnsCredential of the created NotificationHub"/>
          <arg type="string" var="$parameters.properties.mpnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
            <help short="The certificate key for this credential."/>
          </arg>
          <arg type="string" var="$parameters.properties.mpnsCredential.properties.mpnsCertificate" options="mpns-certificate" group="Properties">
            <help short="The MPNS certificate."/>
          </arg>
          <arg type="string" var="$parameters.properties.mpnsCredential.properties.thumbprint" options="thumbprint" group="Properties">
            <help short="The MPNS certificate Thumbprint"/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.registrationTtl" options="registration-ttl" group="Properties">
          <help short="The RegistrationTtl of the created NotificationHub"/>
        </arg>
        <arg type="object" var="$parameters.properties.wnsCredential" options="wns-credential" hide="True" group="Properties">
          <help short="The WnsCredential of the created NotificationHub"/>
          <arg type="string" var="$parameters.properties.wnsCredential.properties.packageSid" options="package-sid" group="Properties">
            <help short="The package ID for this credential."/>
          </arg>
          <arg type="string" var="$parameters.properties.wnsCredential.properties.secretKey" options="secret-key" group="Properties">
            <help short="The secret key."/>
          </arg>
          <arg type="string" var="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint" options="windows-live-endpoint" group="Properties">
            <help short="The Windows Live endpoint."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NotificationHubs_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
              <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="admCredential" arg="$parameters.properties.admCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="authTokenUrl" arg="$parameters.properties.admCredential.properties.authTokenUrl"/>
                        <prop type="string" name="clientId" arg="$parameters.properties.admCredential.properties.clientId"/>
                        <prop type="string" name="clientSecret" arg="$parameters.properties.admCredential.properties.clientSecret"/>
                      </prop>
                    </prop>
                    <prop type="object" name="apnsCredential" arg="$parameters.properties.apnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="apnsCertificate" arg="$parameters.properties.apnsCredential.properties.apnsCertificate"/>
                        <prop type="string" name="appId" arg="$parameters.properties.apnsCredential.properties.appId"/>
                        <prop type="string" name="appName" arg="$parameters.properties.apnsCredential.properties.appName"/>
                        <prop type="string" name="certificateKey" arg="$parameters.properties.apnsCredential.properties.certificateKey"/>
                        <prop type="string" name="endpoint" arg="$parameters.properties.apnsCredential.properties.endpoint"/>
                        <prop type="string" name="keyId" arg="$parameters.properties.apnsCredential.properties.keyId"/>
                        <prop type="string" name="thumbprint" arg="$parameters.properties.apnsCredential.properties.thumbprint"/>
                        <prop type="string" name="token" arg="$parameters.properties.apnsCredential.properties.token"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="authorizationRules" arg="$parameters.properties.authorizationRules">
                      <item type="object">
                        <prop type="array<string>" name="rights" arg="$parameters.properties.authorizationRules[].rights">
                          <item type="string">
                            <enum>
                              <item value="&quot;Listen&quot;"/>
                              <item value="&quot;Manage&quot;"/>
                              <item value="&quot;Send&quot;"/>
                            </enum>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="baiduCredential" arg="$parameters.properties.baiduCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="baiduApiKey" arg="$parameters.properties.baiduCredential.properties.baiduApiKey"/>
                        <prop type="string" name="baiduEndPoint" arg="$parameters.properties.baiduCredential.properties.baiduEndPoint"/>
                        <prop type="string" name="baiduSecretKey" arg="$parameters.properties.baiduCredential.properties.baiduSecretKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="gcmCredential" arg="$parameters.properties.gcmCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="gcmEndpoint" arg="$parameters.properties.gcmCredential.properties.gcmEndpoint"/>
                        <prop type="string" name="googleApiKey" arg="$parameters.properties.gcmCredential.properties.googleApiKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="mpnsCredential" arg="$parameters.properties.mpnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="certificateKey" arg="$parameters.properties.mpnsCredential.properties.certificateKey"/>
                        <prop type="string" name="mpnsCertificate" arg="$parameters.properties.mpnsCredential.properties.mpnsCertificate"/>
                        <prop type="string" name="thumbprint" arg="$parameters.properties.mpnsCredential.properties.thumbprint"/>
                      </prop>
                    </prop>
                    <prop type="string" name="name" arg="$Path.notificationHubName"/>
                    <prop type="string" name="registrationTtl" arg="$parameters.properties.registrationTtl"/>
                    <prop type="object" name="wnsCredential" arg="$parameters.properties.wnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="packageSid" arg="$parameters.properties.wnsCredential.properties.packageSid"/>
                        <prop type="string" name="secretKey" arg="$parameters.properties.wnsCredential.properties.secretKey"/>
                        <prop type="string" name="windowsLiveEndpoint" arg="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$parameters.sku">
                    <prop type="integer" name="capacity" arg="$parameters.sku.capacity"/>
                    <prop type="string" name="family" arg="$parameters.sku.family"/>
                    <prop type="string" name="name" arg="$parameters.sku.name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="size" arg="$parameters.sku.size"/>
                    <prop type="string" name="tier" arg="$parameters.sku.tier"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="admCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="authTokenUrl"/>
                        <prop type="string" name="clientId"/>
                        <prop type="string" name="clientSecret"/>
                      </prop>
                    </prop>
                    <prop type="object" name="apnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="apnsCertificate"/>
                        <prop type="string" name="appId"/>
                        <prop type="string" name="appName"/>
                        <prop type="string" name="certificateKey"/>
                        <prop type="string" name="endpoint"/>
                        <prop type="string" name="keyId"/>
                        <prop type="string" name="thumbprint"/>
                        <prop type="string" name="token"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="authorizationRules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="claimType"/>
                        <prop readOnly="True" type="string" name="claimValue"/>
                        <prop readOnly="True" type="string" name="createdTime"/>
                        <prop readOnly="True" type="string" name="keyName"/>
                        <prop readOnly="True" type="string" name="modifiedTime"/>
                        <prop readOnly="True" type="string" name="primaryKey"/>
                        <prop readOnly="True" type="integer" name="revision"/>
                        <prop type="array<string>" name="rights">
                          <item type="string">
                            <enum>
                              <item value="&quot;Listen&quot;"/>
                              <item value="&quot;Manage&quot;"/>
                              <item value="&quot;Send&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="secondaryKey"/>
                      </item>
                    </prop>
                    <prop type="object" name="baiduCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="baiduApiKey"/>
                        <prop type="string" name="baiduEndPoint"/>
                        <prop type="string" name="baiduSecretKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="gcmCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="gcmEndpoint"/>
                        <prop type="string" name="googleApiKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="mpnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="certificateKey"/>
                        <prop type="string" name="mpnsCertificate"/>
                        <prop type="string" name="thumbprint"/>
                      </prop>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="registrationTtl"/>
                    <prop type="object" name="wnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="packageSid"/>
                        <prop type="string" name="secretKey"/>
                        <prop type="string" name="windowsLiveEndpoint"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name."/>
        </arg>
        <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" idPart="child_name_1">
          <help short="The notification hub name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.sku" options="sku" hide="True" group="Parameters">
          <help short="The sku of the created namespace"/>
          <arg nullable="True" type="integer" var="$parameters.sku.capacity" options="capacity">
            <help short="The capacity of the resource"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.family" options="family">
            <help short="The Sku Family"/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name">
            <help short="Name of the notification hub sku"/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.size" options="size">
            <help short="The Sku size"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.sku.tier" options="tier">
            <help short="The tier of particular sku"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$parameters.properties.admCredential" options="adm-credential" group="Properties">
          <help short="The AdmCredential of the created NotificationHub"/>
          <arg nullable="True" type="string" var="$parameters.properties.admCredential.properties.authTokenUrl" options="auth-token-url" group="Properties">
            <help short="The URL of the authorization token."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.admCredential.properties.clientId" options="client-id" group="Properties">
            <help short="The client identifier."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.admCredential.properties.clientSecret" options="client-secret" group="Properties">
            <help short="The credential secret access key."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.apnsCredential" options="apns-credential" group="Properties">
          <help short="The ApnsCredential of the created NotificationHub"/>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.apnsCertificate" options="apns-certificate" group="Properties">
            <help short="The APNS certificate. Specify if using Certificate Authentication Mode."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.appId" options="app-id" group="Properties">
            <help short="The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.appName" options="app-name" group="Properties">
            <help short="The name of the application or BundleId. Specify if using Token Authentication Mode."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
            <help short="The APNS certificate password if it exists."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.endpoint" options="endpoint" group="Properties">
            <help short="The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.keyId" options="key-id" group="Properties">
            <help short="A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.thumbprint" options="thumbprint" group="Properties">
            <help short="The APNS certificate thumbprint. Specify if using Certificate Authentication Mode."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.token" options="token" group="Properties">
            <help short="Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode."/>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.authorizationRules" options="authorization-rules" hide="True" group="Properties">
          <help short="The AuthorizationRules of the created NotificationHub"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$parameters.properties.authorizationRules[].rights" options="rights">
              <help short="The rights associated with the rule."/>
              <item nullable="True" type="string">
                <enum>
                  <item name="Listen" value="&quot;Listen&quot;"/>
                  <item name="Manage" value="&quot;Manage&quot;"/>
                  <item name="Send" value="&quot;Send&quot;"/>
                </enum>
              </item>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.baiduCredential" options="baidu-credential" group="Properties">
          <help short="The BaiduCredential of the created NotificationHub"/>
          <arg nullable="True" type="string" var="$parameters.properties.baiduCredential.properties.baiduApiKey" options="baidu-api-key" group="Properties">
            <help short="Baidu Api Key."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.baiduCredential.properties.baiduEndPoint" options="baidu-end-point" group="Properties">
            <help short="Baidu Endpoint."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.baiduCredential.properties.baiduSecretKey" options="baidu-secret-key" group="Properties">
            <help short="Baidu Secret Key"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.gcmCredential" options="gcm-credential" group="Properties">
          <help short="The GcmCredential of the created NotificationHub"/>
          <arg nullable="True" type="string" var="$parameters.properties.gcmCredential.properties.gcmEndpoint" options="gcm-endpoint" group="Properties">
            <help short="The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.gcmCredential.properties.googleApiKey" options="google-api-key" group="Properties">
            <help short="The Google API key."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.mpnsCredential" options="mpns-credential" group="Properties">
          <help short="The MpnsCredential of the created NotificationHub"/>
          <arg nullable="True" type="string" var="$parameters.properties.mpnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
            <help short="The certificate key for this credential."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.mpnsCredential.properties.mpnsCertificate" options="mpns-certificate" group="Properties">
            <help short="The MPNS certificate."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.mpnsCredential.properties.thumbprint" options="thumbprint" group="Properties">
            <help short="The MPNS certificate Thumbprint"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.registrationTtl" options="registration-ttl" hide="True" group="Properties">
          <help short="The RegistrationTtl of the created NotificationHub"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.wnsCredential" options="wns-credential" group="Properties">
          <help short="The WnsCredential of the created NotificationHub"/>
          <arg nullable="True" type="string" var="$parameters.properties.wnsCredential.properties.packageSid" options="package-sid" group="Properties">
            <help short="The package ID for this credential."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.wnsCredential.properties.secretKey" options="secret-key" group="Properties">
            <help short="The secret key."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint" options="windows-live-endpoint" group="Properties">
            <help short="The Windows Live endpoint."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NotificationHubs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
              <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NotificationHubResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="admCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="authTokenUrl"/>
                        <prop type="string" name="clientId"/>
                        <prop type="string" name="clientSecret"/>
                      </prop>
                    </prop>
                    <prop type="object" name="apnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="apnsCertificate"/>
                        <prop type="string" name="appId"/>
                        <prop type="string" name="appName"/>
                        <prop type="string" name="certificateKey"/>
                        <prop type="string" name="endpoint"/>
                        <prop type="string" name="keyId"/>
                        <prop type="string" name="thumbprint"/>
                        <prop type="string" name="token"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="authorizationRules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="claimType"/>
                        <prop readOnly="True" type="string" name="claimValue"/>
                        <prop readOnly="True" type="string" name="createdTime"/>
                        <prop readOnly="True" type="string" name="keyName"/>
                        <prop readOnly="True" type="string" name="modifiedTime"/>
                        <prop readOnly="True" type="string" name="primaryKey"/>
                        <prop readOnly="True" type="integer" name="revision"/>
                        <prop type="array<string>" name="rights">
                          <item type="string">
                            <enum>
                              <item value="&quot;Listen&quot;"/>
                              <item value="&quot;Manage&quot;"/>
                              <item value="&quot;Send&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="secondaryKey"/>
                      </item>
                    </prop>
                    <prop type="object" name="baiduCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="baiduApiKey"/>
                        <prop type="string" name="baiduEndPoint"/>
                        <prop type="string" name="baiduSecretKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="gcmCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="gcmEndpoint"/>
                        <prop type="string" name="googleApiKey"/>
                      </prop>
                    </prop>
                    <prop type="object" name="mpnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="certificateKey"/>
                        <prop type="string" name="mpnsCertificate"/>
                        <prop type="string" name="thumbprint"/>
                      </prop>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="registrationTtl"/>
                    <prop type="object" name="wnsCredential">
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="packageSid"/>
                        <prop type="string" name="secretKey"/>
                        <prop type="string" name="windowsLiveEndpoint"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="object" name="admCredential" arg="$parameters.properties.admCredential">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authTokenUrl" arg="$parameters.properties.admCredential.properties.authTokenUrl"/>
                    <prop type="string" name="clientId" arg="$parameters.properties.admCredential.properties.clientId"/>
                    <prop type="string" name="clientSecret" arg="$parameters.properties.admCredential.properties.clientSecret"/>
                  </prop>
                </prop>
                <prop type="object" name="apnsCredential" arg="$parameters.properties.apnsCredential">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="apnsCertificate" arg="$parameters.properties.apnsCredential.properties.apnsCertificate"/>
                    <prop type="string" name="appId" arg="$parameters.properties.apnsCredential.properties.appId"/>
                    <prop type="string" name="appName" arg="$parameters.properties.apnsCredential.properties.appName"/>
                    <prop type="string" name="certificateKey" arg="$parameters.properties.apnsCredential.properties.certificateKey"/>
                    <prop type="string" name="endpoint" arg="$parameters.properties.apnsCredential.properties.endpoint"/>
                    <prop type="string" name="keyId" arg="$parameters.properties.apnsCredential.properties.keyId"/>
                    <prop type="string" name="thumbprint" arg="$parameters.properties.apnsCredential.properties.thumbprint"/>
                    <prop type="string" name="token" arg="$parameters.properties.apnsCredential.properties.token"/>
                  </prop>
                </prop>
                <prop type="array<object>" name="authorizationRules" arg="$parameters.properties.authorizationRules">
                  <item type="object">
                    <prop type="array<string>" name="rights" arg="$parameters.properties.authorizationRules[].rights">
                      <item type="string">
                        <enum>
                          <item value="&quot;Listen&quot;"/>
                          <item value="&quot;Manage&quot;"/>
                          <item value="&quot;Send&quot;"/>
                        </enum>
                      </item>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="baiduCredential" arg="$parameters.properties.baiduCredential">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="baiduApiKey" arg="$parameters.properties.baiduCredential.properties.baiduApiKey"/>
                    <prop type="string" name="baiduEndPoint" arg="$parameters.properties.baiduCredential.properties.baiduEndPoint"/>
                    <prop type="string" name="baiduSecretKey" arg="$parameters.properties.baiduCredential.properties.baiduSecretKey"/>
                  </prop>
                </prop>
                <prop type="object" name="gcmCredential" arg="$parameters.properties.gcmCredential">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="gcmEndpoint" arg="$parameters.properties.gcmCredential.properties.gcmEndpoint"/>
                    <prop type="string" name="googleApiKey" arg="$parameters.properties.gcmCredential.properties.googleApiKey"/>
                  </prop>
                </prop>
                <prop type="object" name="mpnsCredential" arg="$parameters.properties.mpnsCredential">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="certificateKey" arg="$parameters.properties.mpnsCredential.properties.certificateKey"/>
                    <prop type="string" name="mpnsCertificate" arg="$parameters.properties.mpnsCredential.properties.mpnsCertificate"/>
                    <prop type="string" name="thumbprint" arg="$parameters.properties.mpnsCredential.properties.thumbprint"/>
                  </prop>
                </prop>
                <prop type="string" name="name" arg="$Path.notificationHubName"/>
                <prop type="string" name="registrationTtl" arg="$parameters.properties.registrationTtl"/>
                <prop type="object" name="wnsCredential" arg="$parameters.properties.wnsCredential">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="packageSid" arg="$parameters.properties.wnsCredential.properties.packageSid"/>
                    <prop type="string" name="secretKey" arg="$parameters.properties.wnsCredential.properties.secretKey"/>
                    <prop type="string" name="windowsLiveEndpoint" arg="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="sku" arg="$parameters.sku">
                <prop type="integer" name="capacity" arg="$parameters.sku.capacity"/>
                <prop type="string" name="family" arg="$parameters.sku.family"/>
                <prop type="string" name="name" arg="$parameters.sku.name" required="True">
                  <enum>
                    <item value="&quot;Basic&quot;"/>
                    <item value="&quot;Free&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="size" arg="$parameters.sku.size"/>
                <prop type="string" name="tier" arg="$parameters.sku.tier"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NotificationHubs_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
              <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NotificationHubResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="credential">
      <commandGroup name="adm">
        <command name="create" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.admCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.admCredential.properties.authTokenUrl" options="auth-token-url" hide="True" group="Properties">
              <help short="The URL of the authorization token."/>
            </arg>
            <arg type="string" var="$parameters.properties.admCredential.properties.clientId" options="client-id" group="Properties">
              <help short="The client identifier."/>
            </arg>
            <arg type="string" var="$parameters.properties.admCredential.properties.clientSecret" options="client-secret" group="Properties">
              <help short="The credential secret access key."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.admCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.admCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authTokenUrl" arg="$parameters.properties.admCredential.properties.authTokenUrl"/>
                    <prop type="string" name="clientId" arg="$parameters.properties.admCredential.properties.clientId"/>
                    <prop type="string" name="clientSecret" arg="$parameters.properties.admCredential.properties.clientSecret"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.admCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.admCredential.properties.authTokenUrl" options="auth-token-url" group="Properties">
              <help short="The URL of the authorization token."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.admCredential.properties.clientId" options="client-id" group="Properties">
              <help short="The client identifier."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.admCredential.properties.clientSecret" options="client-secret" group="Properties">
              <help short="The credential secret access key."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.admCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.admCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authTokenUrl" arg="$parameters.properties.admCredential.properties.authTokenUrl"/>
                    <prop type="string" name="clientId" arg="$parameters.properties.admCredential.properties.clientId"/>
                    <prop type="string" name="clientSecret" arg="$parameters.properties.admCredential.properties.clientSecret"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.admCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.admCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.admCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.admCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
      <commandGroup name="apns">
        <command name="create" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.apnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.apnsCredential.properties.apnsCertificate" options="apns-certificate-org" group="Properties">
              <help short="The APNS certificate. Specify if using Certificate Authentication Mode."/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.appId" options="app-id" group="Properties">
              <help short="The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode."/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.appName" options="app-name" group="Properties">
              <help short="The name of the application or BundleId. Specify if using Token Authentication Mode."/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
              <help short="The APNS certificate password if it exists."/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.endpoint" options="endpoint" group="Properties">
              <help short="The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'."/>
              <default value="&quot;gateway.push.apple.com&quot;"/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.keyId" options="key-id" group="Properties">
              <help short="A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode."/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.thumbprint" options="thumbprint" hide="True" group="Properties">
              <help short="The APNS certificate thumbprint. Specify if using Certificate Authentication Mode."/>
            </arg>
            <arg type="string" var="$parameters.properties.apnsCredential.properties.token" options="token" group="Properties">
              <help short="Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.apnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.apnsCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="apnsCertificate" arg="$parameters.properties.apnsCredential.properties.apnsCertificate"/>
                    <prop type="string" name="appId" arg="$parameters.properties.apnsCredential.properties.appId"/>
                    <prop type="string" name="appName" arg="$parameters.properties.apnsCredential.properties.appName"/>
                    <prop type="string" name="certificateKey" arg="$parameters.properties.apnsCredential.properties.certificateKey"/>
                    <prop type="string" name="endpoint" arg="$parameters.properties.apnsCredential.properties.endpoint"/>
                    <prop type="string" name="keyId" arg="$parameters.properties.apnsCredential.properties.keyId"/>
                    <prop type="string" name="thumbprint" arg="$parameters.properties.apnsCredential.properties.thumbprint"/>
                    <prop type="string" name="token" arg="$parameters.properties.apnsCredential.properties.token"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.apnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.apnsCertificate" options="apns-certificate" group="Properties">
              <help short="The APNS certificate. Specify if using Certificate Authentication Mode."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.appId" options="app-id" group="Properties">
              <help short="The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.appName" options="app-name" group="Properties">
              <help short="The name of the application or BundleId. Specify if using Token Authentication Mode."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
              <help short="The APNS certificate password if it exists."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.endpoint" options="endpoint" group="Properties">
              <help short="The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.keyId" options="key-id" group="Properties">
              <help short="A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.thumbprint" options="thumbprint" group="Properties">
              <help short="The APNS certificate thumbprint. Specify if using Certificate Authentication Mode."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.apnsCredential.properties.token" options="token" group="Properties">
              <help short="Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.apnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.apnsCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="apnsCertificate" arg="$parameters.properties.apnsCredential.properties.apnsCertificate"/>
                    <prop type="string" name="appId" arg="$parameters.properties.apnsCredential.properties.appId"/>
                    <prop type="string" name="appName" arg="$parameters.properties.apnsCredential.properties.appName"/>
                    <prop type="string" name="certificateKey" arg="$parameters.properties.apnsCredential.properties.certificateKey"/>
                    <prop type="string" name="endpoint" arg="$parameters.properties.apnsCredential.properties.endpoint"/>
                    <prop type="string" name="keyId" arg="$parameters.properties.apnsCredential.properties.keyId"/>
                    <prop type="string" name="thumbprint" arg="$parameters.properties.apnsCredential.properties.thumbprint"/>
                    <prop type="string" name="token" arg="$parameters.properties.apnsCredential.properties.token"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.apnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.apnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.apnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.apnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
      <commandGroup name="baidu">
        <command name="create" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.baiduCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.baiduCredential.properties.baiduApiKey" options="baidu-api-key" group="Properties">
              <help short="Baidu Api Key."/>
            </arg>
            <arg type="string" var="$parameters.properties.baiduCredential.properties.baiduEndPoint" options="baidu-end-point" hide="True" group="Properties">
              <help short="Baidu Endpoint."/>
            </arg>
            <arg type="string" var="$parameters.properties.baiduCredential.properties.baiduSecretKey" options="baidu-secret-key" group="Properties">
              <help short="Baidu Secret Key"/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.baiduCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.baiduCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="baiduApiKey" arg="$parameters.properties.baiduCredential.properties.baiduApiKey"/>
                    <prop type="string" name="baiduEndPoint" arg="$parameters.properties.baiduCredential.properties.baiduEndPoint"/>
                    <prop type="string" name="baiduSecretKey" arg="$parameters.properties.baiduCredential.properties.baiduSecretKey"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.baiduCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.baiduCredential.properties.baiduApiKey" options="baidu-api-key" group="Properties">
              <help short="Baidu Api Key."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.baiduCredential.properties.baiduEndPoint" options="baidu-end-point" group="Properties">
              <help short="Baidu Endpoint."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.baiduCredential.properties.baiduSecretKey" options="baidu-secret-key" group="Properties">
              <help short="Baidu Secret Key"/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.baiduCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.baiduCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="baiduApiKey" arg="$parameters.properties.baiduCredential.properties.baiduApiKey"/>
                    <prop type="string" name="baiduEndPoint" arg="$parameters.properties.baiduCredential.properties.baiduEndPoint"/>
                    <prop type="string" name="baiduSecretKey" arg="$parameters.properties.baiduCredential.properties.baiduSecretKey"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.baiduCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.baiduCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.baiduCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.baiduCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
      <commandGroup name="gcm">
        <command name="create" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.gcmCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.gcmCredential.properties.gcmEndpoint" options="gcm-endpoint" hide="True" group="Properties">
              <help short="The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'"/>
            </arg>
            <arg type="string" var="$parameters.properties.gcmCredential.properties.googleApiKey" options="google-api-key" group="Properties">
              <help short="The Google API key."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.gcmCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.gcmCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="gcmEndpoint" arg="$parameters.properties.gcmCredential.properties.gcmEndpoint"/>
                    <prop type="string" name="googleApiKey" arg="$parameters.properties.gcmCredential.properties.googleApiKey"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.gcmCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.gcmCredential.properties.gcmEndpoint" options="gcm-endpoint" group="Properties">
              <help short="The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.gcmCredential.properties.googleApiKey" options="google-api-key" group="Properties">
              <help short="The Google API key."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.gcmCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.gcmCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="gcmEndpoint" arg="$parameters.properties.gcmCredential.properties.gcmEndpoint"/>
                    <prop type="string" name="googleApiKey" arg="$parameters.properties.gcmCredential.properties.googleApiKey"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.gcmCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.gcmCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.gcmCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.gcmCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
      <commandGroup name="mpns">
        <command name="create" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.mpnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.mpnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
              <help short="The certificate key for this credential."/>
            </arg>
            <arg type="string" var="$parameters.properties.mpnsCredential.properties.mpnsCertificate" options="mpns-certificate-org" group="Properties">
              <help short="The MPNS certificate."/>
            </arg>
            <arg type="string" var="$parameters.properties.mpnsCredential.properties.thumbprint" options="thumbprint" hide="True" group="Properties">
              <help short="The MPNS certificate Thumbprint"/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.mpnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.mpnsCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="certificateKey" arg="$parameters.properties.mpnsCredential.properties.certificateKey"/>
                    <prop type="string" name="mpnsCertificate" arg="$parameters.properties.mpnsCredential.properties.mpnsCertificate"/>
                    <prop type="string" name="thumbprint" arg="$parameters.properties.mpnsCredential.properties.thumbprint"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.mpnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.mpnsCredential.properties.certificateKey" options="certificate-key" group="Properties">
              <help short="The certificate key for this credential."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.mpnsCredential.properties.mpnsCertificate" options="mpns-certificate" group="Properties">
              <help short="The MPNS certificate."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.mpnsCredential.properties.thumbprint" options="thumbprint" group="Properties">
              <help short="The MPNS certificate Thumbprint"/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.mpnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.mpnsCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="certificateKey" arg="$parameters.properties.mpnsCredential.properties.certificateKey"/>
                    <prop type="string" name="mpnsCertificate" arg="$parameters.properties.mpnsCredential.properties.mpnsCertificate"/>
                    <prop type="string" name="thumbprint" arg="$parameters.properties.mpnsCredential.properties.thumbprint"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.mpnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.mpnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.mpnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.mpnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
      <commandGroup name="wns">
        <command name="create" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.wnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name name n" required="True" group="" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg type="string" var="$parameters.properties.wnsCredential.properties.packageSid" options="package-sid" group="Properties">
              <help short="The package ID for this credential."/>
            </arg>
            <arg type="string" var="$parameters.properties.wnsCredential.properties.secretKey" options="secret-key" group="Properties">
              <help short="The secret key."/>
            </arg>
            <arg type="string" var="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint" options="windows-live-endpoint" hide="True" group="Properties">
              <help short="The Windows Live endpoint."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.wnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceCreate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.wnsCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="packageSid" arg="$parameters.properties.wnsCredential.properties.packageSid"/>
                    <prop type="string" name="secretKey" arg="$parameters.properties.wnsCredential.properties.secretKey"/>
                    <prop type="string" name="windowsLiveEndpoint" arg="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint"/>
                  </prop>
                </schema>
              </json>
            </instanceCreate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="update" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.wnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <argGroup name="Properties">
            <arg nullable="True" type="string" var="$parameters.properties.wnsCredential.properties.packageSid" options="package-sid" group="Properties">
              <help short="The package ID for this credential."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.wnsCredential.properties.secretKey" options="secret-key" group="Properties">
              <help short="The secret key."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint" options="windows-live-endpoint" group="Properties">
              <help short="The Windows Live endpoint."/>
            </arg>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.wnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceUpdate ref="$Subresource">
              <json>
                <schema type="object" name="parameters.properties.wnsCredential" required="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="packageSid" arg="$parameters.properties.wnsCredential.properties.packageSid"/>
                    <prop type="string" name="secretKey" arg="$parameters.properties.wnsCredential.properties.secretKey"/>
                    <prop type="string" name="windowsLiveEndpoint" arg="$parameters.properties.wnsCredential.properties.windowsLiveEndpoint"/>
                  </prop>
                </schema>
              </json>
            </instanceUpdate>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
        <command name="delete" version="2017-04-01" confirmation="Are you sure you want to perform this operation?">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.wnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.wnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <operation>
            <instanceDelete ref="$Subresource">
              <json/>
            </instanceDelete>
          </operation>
          <operation operationId="NotificationHubs_CreateOrUpdate">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="put">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
                <body>
                  <json ref="$Instance"/>
                </body>
              </request>
              <response statusCode="200 201">
                <body>
                  <json var="$Instance">
                    <schema type="@NotificationHubResource_read"/>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
        </command>
        <command name="show" version="2017-04-01" confirmation="">
          <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.notificationhubs/namespaces/{}/notificationhubs/{}" version="2017-04-01" subresource="properties.wnsCredential" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTm90aWZpY2F0aW9uSHVicy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS9ub3RpZmljYXRpb25IdWJzL3tub3RpZmljYXRpb25IdWJOYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
          <argGroup name="">
            <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
              <help short="The namespace name."/>
            </arg>
            <arg type="string" var="$Path.notificationHubName" options="notification-hub-name" required="True" idPart="child_name_1">
              <help short="The notification hub name."/>
            </arg>
            <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
            <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          </argGroup>
          <subresourceSelector var="$Subresource" ref="$Instance">
            <json type="object" name="parameters">
              <prop type="object" name="properties.wnsCredential"/>
            </json>
          </subresourceSelector>
          <operation operationId="NotificationHubs_Get">
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}">
              <request method="get">
                <path>
                  <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True"/>
                  <param type="string" name="notificationHubName" arg="$Path.notificationHubName" required="True"/>
                  <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                  <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                </path>
                <query>
                  <const readOnly="True" const="True" type="string" name="api-version" required="True">
                    <default value="&quot;2017-04-01&quot;"/>
                  </const>
                </query>
              </request>
              <response statusCode="200">
                <body>
                  <json var="$Instance">
                    <schema type="object" cls="NotificationHubResource_read">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NotificationHubs/namespaces/{}/notificationHubs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="admCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="authTokenUrl"/>
                            <prop type="string" name="clientId"/>
                            <prop type="string" name="clientSecret"/>
                          </prop>
                        </prop>
                        <prop type="object" name="apnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="apnsCertificate"/>
                            <prop type="string" name="appId"/>
                            <prop type="string" name="appName"/>
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="endpoint"/>
                            <prop type="string" name="keyId"/>
                            <prop type="string" name="thumbprint"/>
                            <prop type="string" name="token"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="authorizationRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="claimType"/>
                            <prop readOnly="True" type="string" name="claimValue"/>
                            <prop readOnly="True" type="string" name="createdTime"/>
                            <prop readOnly="True" type="string" name="keyName"/>
                            <prop readOnly="True" type="string" name="modifiedTime"/>
                            <prop readOnly="True" type="string" name="primaryKey"/>
                            <prop readOnly="True" type="integer" name="revision"/>
                            <prop type="array<string>" name="rights">
                              <item type="string">
                                <enum>
                                  <item value="&quot;Listen&quot;"/>
                                  <item value="&quot;Manage&quot;"/>
                                  <item value="&quot;Send&quot;"/>
                                </enum>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="secondaryKey"/>
                          </item>
                        </prop>
                        <prop type="object" name="baiduCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="baiduApiKey"/>
                            <prop type="string" name="baiduEndPoint"/>
                            <prop type="string" name="baiduSecretKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="gcmCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="gcmEndpoint"/>
                            <prop type="string" name="googleApiKey"/>
                          </prop>
                        </prop>
                        <prop type="object" name="mpnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="certificateKey"/>
                            <prop type="string" name="mpnsCertificate"/>
                            <prop type="string" name="thumbprint"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="registrationTtl"/>
                        <prop type="object" name="wnsCredential">
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="packageSid"/>
                            <prop type="string" name="secretKey"/>
                            <prop type="string" name="windowsLiveEndpoint"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer" name="capacity"/>
                        <prop type="string" name="family"/>
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Free&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="size"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </schema>
                  </json>
                </body>
              </response>
              <response isError="True">
                <body>
                  <json>
                    <schema type="@MgmtErrorFormat"/>
                  </json>
                </body>
              </response>
            </http>
          </operation>
          <output type="object" ref="$Subresource" clientFlatten="True"/>
        </command>
      </commandGroup>
    </commandGroup>
  </commandGroup>
</CodeGen>
