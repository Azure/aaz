<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9/V/MjAyMS0xMC0wMQ=="/>
  <commandGroup name="sig image-definition">
    <command name="show" version="2021-10-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9/V/MjAyMS0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-definition gallery-image-name i" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery image definition to be retrieved."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery from which the Image Definitions are to be retrieved."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryImages_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}">
          <request method="get">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/images/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="architecture">
                      <enum>
                        <item value="&quot;Arm64&quot;"/>
                        <item value="&quot;x64&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="disallowed">
                      <prop type="array<string>" name="diskTypes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="dateTime" name="endOfLifeDate"/>
                    <prop type="string" name="eula"/>
                    <prop type="array<object>" name="features" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name"/>
                        <prop type="string" name="value"/>
                      </item>
                    </prop>
                    <prop type="string" name="hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="identifier" required="True">
                      <prop type="string" name="offer" required="True"/>
                      <prop type="string" name="publisher" required="True"/>
                      <prop type="string" name="sku" required="True"/>
                    </prop>
                    <prop type="string" name="osState" required="True">
                      <enum>
                        <item value="&quot;Generalized&quot;"/>
                        <item value="&quot;Specialized&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="privacyStatementUri"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan">
                      <prop type="string" name="name"/>
                      <prop type="string" name="product"/>
                      <prop type="string" name="publisher"/>
                    </prop>
                    <prop type="object" name="recommended">
                      <prop type="@ResourceRange_read" name="memory"/>
                      <prop type="object" name="vCPUs" cls="ResourceRange_read">
                        <prop type="integer32" name="max"/>
                        <prop type="integer32" name="min"/>
                      </prop>
                    </prop>
                    <prop type="string" name="releaseNoteUri"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2021-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9/V/MjAyMS0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-definition gallery-image-name i" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery image definition to be deleted."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the Image Definition is to be deleted."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryImages_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}">
          <request method="delete">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2021-10-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9/V/MjAyMS0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-name name n" required="True" idPart="child_name_1">
          <help short="The name of the gallery image definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" idPart="name">
          <help short="The name of the Shared Image Gallery in which the Image Definition is to be created."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryImage">
        <arg type="ResourceLocation" var="$galleryImage.location" options="location l" required="True" group="GalleryImage">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$galleryImage.tags" options="tags" group="GalleryImage">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$galleryImage.properties.architecture" options="architecture" group="Properties">
          <help short="The architecture of the image. Applicable to OS disks only."/>
          <enum>
            <item name="Arm64" value="&quot;Arm64&quot;"/>
            <item name="x64" value="&quot;x64&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$galleryImage.properties.description" options="description" group="Properties">
          <help short="The description of this gallery image definition resource. This property is updatable."/>
        </arg>
        <arg type="object" var="$galleryImage.properties.disallowed" options="disallowed" group="Properties">
          <help short="Describes the disallowed disk types."/>
          <arg type="array<string>" var="$galleryImage.properties.disallowed.diskTypes" options="disk-types">
            <help short="A list of disk types."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="dateTime" var="$galleryImage.properties.endOfLifeDate" options="end-of-life-date" group="Properties">
          <help short="The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable."/>
        </arg>
        <arg type="string" var="$galleryImage.properties.eula" options="eula" group="Properties">
          <help short="The Eula agreement for the gallery image definition."/>
        </arg>
        <arg type="array<object>" var="$galleryImage.properties.features" options="features" group="Properties">
          <help short="A list of gallery image features."/>
          <item type="object">
            <arg type="string" var="$galleryImage.properties.features[].name" options="name">
              <help short="The name of the gallery image feature."/>
            </arg>
            <arg type="string" var="$galleryImage.properties.features[].value" options="value">
              <help short="The value of the gallery image feature."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$galleryImage.properties.hyperVGeneration" options="hyper-v-generation" group="Properties">
          <help short="The hypervisor generation of the Virtual Machine. Applicable to OS disks only."/>
          <enum>
            <item name="V1" value="&quot;V1&quot;"/>
            <item name="V2" value="&quot;V2&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$galleryImage.properties.identifier" options="identifier" group="Properties">
          <help short="This is the gallery image definition identifier."/>
          <arg type="string" var="$galleryImage.properties.identifier.offer" options="offer" required="True">
            <help short="The name of the gallery image definition offer."/>
          </arg>
          <arg type="string" var="$galleryImage.properties.identifier.publisher" options="publisher" required="True">
            <help short="The name of the gallery image definition publisher."/>
          </arg>
          <arg type="string" var="$galleryImage.properties.identifier.sku" options="sku" required="True">
            <help short="The name of the gallery image definition SKU."/>
          </arg>
        </arg>
        <arg type="string" var="$galleryImage.properties.osState" options="os-state" group="Properties">
          <help short="This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'."/>
          <enum>
            <item name="Generalized" value="&quot;Generalized&quot;"/>
            <item name="Specialized" value="&quot;Specialized&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$galleryImage.properties.osType" options="os-type" group="Properties">
          <help short="This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**"/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$galleryImage.properties.privacyStatementUri" options="privacy-statement-uri" group="Properties">
          <help short="The privacy statement uri."/>
        </arg>
        <arg type="object" var="$galleryImage.properties.purchasePlan" options="purchase-plan" group="Properties">
          <help short="Describes the gallery image definition purchase plan. This is used by marketplace images."/>
          <arg type="string" var="$galleryImage.properties.purchasePlan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg type="string" var="$galleryImage.properties.purchasePlan.product" options="product">
            <help short="The product ID."/>
          </arg>
          <arg type="string" var="$galleryImage.properties.purchasePlan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg type="object" var="$galleryImage.properties.recommended" options="recommended" group="Properties">
          <help short="The properties describe the recommended machine configuration for this Image Definition. These properties are updatable."/>
          <arg type="@ResourceRange_create" var="$galleryImage.properties.recommended.memory" options="memory"/>
          <arg type="object" var="$galleryImage.properties.recommended.vCPUs" options="v-cp-us" cls="ResourceRange_create">
            <help short="Describes the resource range."/>
            <arg type="integer32" var="@ResourceRange_create.max" options="max">
              <help short="The maximum number of the resource."/>
            </arg>
            <arg type="integer32" var="@ResourceRange_create.min" options="min">
              <help short="The minimum number of the resource."/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$galleryImage.properties.releaseNoteUri" options="release-note-uri" group="Properties">
          <help short="The release note uri."/>
        </arg>
      </argGroup>
      <operation operationId="GalleryImages_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}">
          <request method="put">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="galleryImage" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$galleryImage.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="architecture" arg="$galleryImage.properties.architecture">
                      <enum>
                        <item value="&quot;Arm64&quot;"/>
                        <item value="&quot;x64&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$galleryImage.properties.description"/>
                    <prop type="object" name="disallowed" arg="$galleryImage.properties.disallowed">
                      <prop type="array<string>" name="diskTypes" arg="$galleryImage.properties.disallowed.diskTypes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="dateTime" name="endOfLifeDate" arg="$galleryImage.properties.endOfLifeDate"/>
                    <prop type="string" name="eula" arg="$galleryImage.properties.eula"/>
                    <prop type="array<object>" name="features" arg="$galleryImage.properties.features" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" arg="$galleryImage.properties.features[].name"/>
                        <prop type="string" name="value" arg="$galleryImage.properties.features[].value"/>
                      </item>
                    </prop>
                    <prop type="string" name="hyperVGeneration" arg="$galleryImage.properties.hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="identifier" arg="$galleryImage.properties.identifier" required="True">
                      <prop type="string" name="offer" arg="$galleryImage.properties.identifier.offer" required="True"/>
                      <prop type="string" name="publisher" arg="$galleryImage.properties.identifier.publisher" required="True"/>
                      <prop type="string" name="sku" arg="$galleryImage.properties.identifier.sku" required="True"/>
                    </prop>
                    <prop type="string" name="osState" arg="$galleryImage.properties.osState" required="True">
                      <enum>
                        <item value="&quot;Generalized&quot;"/>
                        <item value="&quot;Specialized&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osType" arg="$galleryImage.properties.osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="privacyStatementUri" arg="$galleryImage.properties.privacyStatementUri"/>
                    <prop type="object" name="purchasePlan" arg="$galleryImage.properties.purchasePlan">
                      <prop type="string" name="name" arg="$galleryImage.properties.purchasePlan.name"/>
                      <prop type="string" name="product" arg="$galleryImage.properties.purchasePlan.product"/>
                      <prop type="string" name="publisher" arg="$galleryImage.properties.purchasePlan.publisher"/>
                    </prop>
                    <prop type="object" name="recommended" arg="$galleryImage.properties.recommended">
                      <prop type="@ResourceRange_create" name="memory" arg="$galleryImage.properties.recommended.memory"/>
                      <prop type="object" name="vCPUs" arg="$galleryImage.properties.recommended.vCPUs" cls="ResourceRange_create">
                        <prop type="integer32" name="max" arg="@ResourceRange_create.max"/>
                        <prop type="integer32" name="min" arg="@ResourceRange_create.min"/>
                      </prop>
                    </prop>
                    <prop type="string" name="releaseNoteUri" arg="$galleryImage.properties.releaseNoteUri"/>
                  </prop>
                  <prop type="object" name="tags" arg="$galleryImage.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryImage_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/images/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="architecture">
                      <enum>
                        <item value="&quot;Arm64&quot;"/>
                        <item value="&quot;x64&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="disallowed">
                      <prop type="array<string>" name="diskTypes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="dateTime" name="endOfLifeDate"/>
                    <prop type="string" name="eula"/>
                    <prop type="array<object>" name="features" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name"/>
                        <prop type="string" name="value"/>
                      </item>
                    </prop>
                    <prop type="string" name="hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="identifier" required="True">
                      <prop type="string" name="offer" required="True"/>
                      <prop type="string" name="publisher" required="True"/>
                      <prop type="string" name="sku" required="True"/>
                    </prop>
                    <prop type="string" name="osState" required="True">
                      <enum>
                        <item value="&quot;Generalized&quot;"/>
                        <item value="&quot;Specialized&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="privacyStatementUri"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan">
                      <prop type="string" name="name"/>
                      <prop type="string" name="product"/>
                      <prop type="string" name="publisher"/>
                    </prop>
                    <prop type="object" name="recommended">
                      <prop type="@ResourceRange_read" name="memory"/>
                      <prop type="object" name="vCPUs" cls="ResourceRange_read">
                        <prop type="integer32" name="max"/>
                        <prop type="integer32" name="min"/>
                      </prop>
                    </prop>
                    <prop type="string" name="releaseNoteUri"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@GalleryImage_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-10-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9/V/MjAyMS0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-name name n" required="True" idPart="child_name_1">
          <help short="The name of the gallery image definition to be retrieved."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" idPart="name">
          <help short="The name of the Shared Image Gallery from which the Image Definitions are to be retrieved."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryImage">
        <arg type="ResourceLocation" var="$galleryImage.location" options="location l" group="GalleryImage">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$galleryImage.tags" options="tags" group="GalleryImage">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$galleryImage.properties.architecture" options="architecture" group="Properties">
          <help short="The architecture of the image. Applicable to OS disks only."/>
          <enum>
            <item name="Arm64" value="&quot;Arm64&quot;"/>
            <item name="x64" value="&quot;x64&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$galleryImage.properties.description" options="description" group="Properties">
          <help short="The description of this gallery image definition resource. This property is updatable."/>
        </arg>
        <arg nullable="True" type="object" var="$galleryImage.properties.disallowed" options="disallowed" group="Properties">
          <help short="Describes the disallowed disk types."/>
          <arg nullable="True" type="array<string>" var="$galleryImage.properties.disallowed.diskTypes" options="disk-types">
            <help short="A list of disk types."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="dateTime" var="$galleryImage.properties.endOfLifeDate" options="end-of-life-date" group="Properties">
          <help short="The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable."/>
        </arg>
        <arg nullable="True" type="string" var="$galleryImage.properties.eula" options="eula" group="Properties">
          <help short="The Eula agreement for the gallery image definition."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$galleryImage.properties.features" options="features" group="Properties">
          <help short="A list of gallery image features."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$galleryImage.properties.features[].name" options="name">
              <help short="The name of the gallery image feature."/>
            </arg>
            <arg nullable="True" type="string" var="$galleryImage.properties.features[].value" options="value">
              <help short="The value of the gallery image feature."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$galleryImage.properties.hyperVGeneration" options="hyper-v-generation" group="Properties">
          <help short="The hypervisor generation of the Virtual Machine. Applicable to OS disks only."/>
          <enum>
            <item name="V1" value="&quot;V1&quot;"/>
            <item name="V2" value="&quot;V2&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$galleryImage.properties.identifier" options="identifier" group="Properties">
          <help short="This is the gallery image definition identifier."/>
          <arg type="string" var="$galleryImage.properties.identifier.offer" options="offer">
            <help short="The name of the gallery image definition offer."/>
          </arg>
          <arg type="string" var="$galleryImage.properties.identifier.publisher" options="publisher">
            <help short="The name of the gallery image definition publisher."/>
          </arg>
          <arg type="string" var="$galleryImage.properties.identifier.sku" options="sku">
            <help short="The name of the gallery image definition SKU."/>
          </arg>
        </arg>
        <arg type="string" var="$galleryImage.properties.osState" options="os-state" group="Properties">
          <help short="This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'."/>
          <enum>
            <item name="Generalized" value="&quot;Generalized&quot;"/>
            <item name="Specialized" value="&quot;Specialized&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$galleryImage.properties.osType" options="os-type" group="Properties">
          <help short="This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**"/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$galleryImage.properties.privacyStatementUri" options="privacy-statement-uri" group="Properties">
          <help short="The privacy statement uri."/>
        </arg>
        <arg nullable="True" type="object" var="$galleryImage.properties.purchasePlan" options="purchase-plan" group="Properties">
          <help short="Describes the gallery image definition purchase plan. This is used by marketplace images."/>
          <arg nullable="True" type="string" var="$galleryImage.properties.purchasePlan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg nullable="True" type="string" var="$galleryImage.properties.purchasePlan.product" options="product">
            <help short="The product ID."/>
          </arg>
          <arg nullable="True" type="string" var="$galleryImage.properties.purchasePlan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$galleryImage.properties.recommended" options="recommended" group="Properties">
          <help short="The properties describe the recommended machine configuration for this Image Definition. These properties are updatable."/>
          <arg nullable="True" type="@ResourceRange_update" var="$galleryImage.properties.recommended.memory" options="memory"/>
          <arg nullable="True" type="object" var="$galleryImage.properties.recommended.vCPUs" options="v-cp-us" cls="ResourceRange_update">
            <help short="Describes the resource range."/>
            <arg nullable="True" type="integer32" var="@ResourceRange_update.max" options="max">
              <help short="The maximum number of the resource."/>
            </arg>
            <arg nullable="True" type="integer32" var="@ResourceRange_update.min" options="min">
              <help short="The minimum number of the resource."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$galleryImage.properties.releaseNoteUri" options="release-note-uri" group="Properties">
          <help short="The release note uri."/>
        </arg>
      </argGroup>
      <operation operationId="GalleryImages_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}">
          <request method="get">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryImage_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/images/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="architecture">
                      <enum>
                        <item value="&quot;Arm64&quot;"/>
                        <item value="&quot;x64&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="disallowed">
                      <prop type="array<string>" name="diskTypes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="dateTime" name="endOfLifeDate"/>
                    <prop type="string" name="eula"/>
                    <prop type="array<object>" name="features" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name"/>
                        <prop type="string" name="value"/>
                      </item>
                    </prop>
                    <prop type="string" name="hyperVGeneration">
                      <enum>
                        <item value="&quot;V1&quot;"/>
                        <item value="&quot;V2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="identifier" required="True">
                      <prop type="string" name="offer" required="True"/>
                      <prop type="string" name="publisher" required="True"/>
                      <prop type="string" name="sku" required="True"/>
                    </prop>
                    <prop type="string" name="osState" required="True">
                      <enum>
                        <item value="&quot;Generalized&quot;"/>
                        <item value="&quot;Specialized&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osType" required="True">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="privacyStatementUri"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="purchasePlan">
                      <prop type="string" name="name"/>
                      <prop type="string" name="product"/>
                      <prop type="string" name="publisher"/>
                    </prop>
                    <prop type="object" name="recommended">
                      <prop type="@ResourceRange_read" name="memory"/>
                      <prop type="object" name="vCPUs" cls="ResourceRange_read">
                        <prop type="integer32" name="max"/>
                        <prop type="integer32" name="min"/>
                      </prop>
                    </prop>
                    <prop type="string" name="releaseNoteUri"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="galleryImage" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$galleryImage.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="architecture" arg="$galleryImage.properties.architecture">
                  <enum>
                    <item value="&quot;Arm64&quot;"/>
                    <item value="&quot;x64&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$galleryImage.properties.description"/>
                <prop type="object" name="disallowed" arg="$galleryImage.properties.disallowed">
                  <prop type="array<string>" name="diskTypes" arg="$galleryImage.properties.disallowed.diskTypes">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="dateTime" name="endOfLifeDate" arg="$galleryImage.properties.endOfLifeDate"/>
                <prop type="string" name="eula" arg="$galleryImage.properties.eula"/>
                <prop type="array<object>" name="features" arg="$galleryImage.properties.features" identifiers="name">
                  <item type="object">
                    <prop type="string" name="name" arg="$galleryImage.properties.features[].name"/>
                    <prop type="string" name="value" arg="$galleryImage.properties.features[].value"/>
                  </item>
                </prop>
                <prop type="string" name="hyperVGeneration" arg="$galleryImage.properties.hyperVGeneration">
                  <enum>
                    <item value="&quot;V1&quot;"/>
                    <item value="&quot;V2&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="identifier" arg="$galleryImage.properties.identifier" required="True">
                  <prop type="string" name="offer" arg="$galleryImage.properties.identifier.offer" required="True"/>
                  <prop type="string" name="publisher" arg="$galleryImage.properties.identifier.publisher" required="True"/>
                  <prop type="string" name="sku" arg="$galleryImage.properties.identifier.sku" required="True"/>
                </prop>
                <prop type="string" name="osState" arg="$galleryImage.properties.osState" required="True">
                  <enum>
                    <item value="&quot;Generalized&quot;"/>
                    <item value="&quot;Specialized&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="osType" arg="$galleryImage.properties.osType" required="True">
                  <enum>
                    <item value="&quot;Linux&quot;"/>
                    <item value="&quot;Windows&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="privacyStatementUri" arg="$galleryImage.properties.privacyStatementUri"/>
                <prop type="object" name="purchasePlan" arg="$galleryImage.properties.purchasePlan">
                  <prop type="string" name="name" arg="$galleryImage.properties.purchasePlan.name"/>
                  <prop type="string" name="product" arg="$galleryImage.properties.purchasePlan.product"/>
                  <prop type="string" name="publisher" arg="$galleryImage.properties.purchasePlan.publisher"/>
                </prop>
                <prop type="object" name="recommended" arg="$galleryImage.properties.recommended">
                  <prop type="@ResourceRange_update" name="memory" arg="$galleryImage.properties.recommended.memory"/>
                  <prop type="object" name="vCPUs" arg="$galleryImage.properties.recommended.vCPUs" cls="ResourceRange_update">
                    <prop type="integer32" name="max" arg="@ResourceRange_update.max"/>
                    <prop type="integer32" name="min" arg="@ResourceRange_update.min"/>
                  </prop>
                </prop>
                <prop type="string" name="releaseNoteUri" arg="$galleryImage.properties.releaseNoteUri"/>
              </prop>
              <prop type="object" name="tags" arg="$galleryImage.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="GalleryImages_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}">
          <request method="put">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@GalleryImage_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@GalleryImage_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
