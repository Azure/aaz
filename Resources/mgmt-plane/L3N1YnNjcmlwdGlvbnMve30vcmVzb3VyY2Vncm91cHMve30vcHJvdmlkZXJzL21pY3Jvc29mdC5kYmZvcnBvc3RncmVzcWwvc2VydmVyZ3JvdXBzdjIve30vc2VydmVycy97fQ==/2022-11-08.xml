<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}/servers/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0vc2VydmVycy97c2VydmVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
  <commandGroup name="cosmosdb postgres cluster server">
    <command name="show" version="2022-11-08">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2/{}/servers/{}" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3YyL3tjbHVzdGVyTmFtZX0vc2VydmVycy97c2VydmVyTmFtZX0=/V/MjAyMi0xMS0wOA=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serverName" options="server-name name n" required="True" idPart="child_name_1">
          <help short="The name of the server."/>
          <format pattern="^[-\w\._]+$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Servers_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/servers/{serverName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serverName" arg="$Path.serverName" required="True">
                <format pattern="^[-\w\._]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}/servers/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administratorLogin"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="citusVersion"/>
                    <prop type="boolean" name="enableHa"/>
                    <prop readOnly="True" type="boolean" name="enablePublicIpAccess"/>
                    <prop readOnly="True" type="string" name="fullyQualifiedDomainName"/>
                    <prop readOnly="True" type="string" name="haState"/>
                    <prop readOnly="True" type="boolean" name="isReadOnly"/>
                    <prop type="string" name="postgresqlVersion"/>
                    <prop type="string" name="role">
                      <enum>
                        <item value="&quot;Coordinator&quot;"/>
                        <item value="&quot;Worker&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serverEdition"/>
                    <prop readOnly="True" type="string" name="state"/>
                    <prop type="integer32" name="storageQuotaInMb"/>
                    <prop type="integer32" name="vCores"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
