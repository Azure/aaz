<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}" version="2022-07-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMi0wNy0wMQ=="/>
  <commandGroup name="new-relic monitor">
    <command name="show" version="2022-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}" version="2022-07-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the Monitors resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Monitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accountCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="liftrResourceCategory">
                      <enum>
                        <item value="&quot;MonitorLogs&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                    <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                    <prop type="string" name="marketplaceSubscriptionStatus">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="newRelicAccountProperties">
                      <prop type="object" name="accountInfo">
                        <prop type="string" name="accountId"/>
                        <prop type="password" name="ingestionKey" secret="True"/>
                        <prop type="string" name="region"/>
                      </prop>
                      <prop type="object" name="organizationInfo">
                        <prop type="string" name="organizationId"/>
                      </prop>
                      <prop type="object" name="singleSignOnProperties">
                        <prop type="string" name="enterpriseAppId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnState">
                          <enum>
                            <item value="&quot;Disable&quot;"/>
                            <item value="&quot;Enable&quot;"/>
                            <item value="&quot;Existing&quot;"/>
                            <item value="&quot;Initial&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnUrl"/>
                      </prop>
                      <prop type="string" name="userId"/>
                    </prop>
                    <prop type="string" name="orgCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planData">
                      <prop type="string" name="billingCycle">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                          <item value="&quot;YEARLY&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="effectiveDate"/>
                      <prop type="string" name="planDetails"/>
                      <prop type="string" name="usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userInfo">
                      <prop type="string" name="country"/>
                      <prop type="string" name="emailAddress">
                        <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                      </prop>
                      <prop type="string" name="firstName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="lastName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="phoneNumber">
                        <format maxLength="40"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}" version="2022-07-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the Monitors resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.userEmail" options="user-email" required="True">
          <help short="User Email."/>
        </arg>
      </argGroup>
      <operation operationId="Monitors_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}">
          <request method="delete">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="userEmail" arg="$Query.userEmail" required="True"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}" version="2022-07-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the Monitors resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.accountCreationSource" options="account-creation-source account-source" group="Properties">
          <help short="Source of account creation"/>
          <enum>
            <item name="LIFTR" value="&quot;LIFTR&quot;"/>
            <item name="NEWRELIC" value="&quot;NEWRELIC&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.newRelicAccountProperties" options="new-relic-account" group="Properties">
          <help short="MarketplaceSubscriptionStatus of the resource"/>
          <arg type="object" var="$resource.properties.newRelicAccountProperties.accountInfo" options="account-info">
            <help short="NewRelic Account Information"/>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.accountInfo.accountId" options="account-id">
              <help short="Account id"/>
            </arg>
            <arg type="password" var="$resource.properties.newRelicAccountProperties.accountInfo.ingestionKey" options="ingestion-key">
              <help short="ingestion key of account"/>
              <prompt msg="Password:"/>
            </arg>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.accountInfo.region" options="region">
              <help short="NewRelic account region"/>
            </arg>
          </arg>
          <arg type="object" var="$resource.properties.newRelicAccountProperties.organizationInfo" options="organization-info">
            <help short="NewRelic Organization Information"/>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.organizationInfo.organizationId" options="organization-id">
              <help short="Organization id"/>
            </arg>
          </arg>
          <arg type="object" var="$resource.properties.newRelicAccountProperties.singleSignOnProperties" options="single-sign-on-properties">
            <help short="date when plan was applied"/>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.singleSignOnProperties.enterpriseAppId" options="enterprise-app-id">
              <help short="The Id of the Enterprise App used for Single sign-on."/>
            </arg>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.singleSignOnProperties.provisioningState" options="provisioning-state">
              <help short="Provisioning state"/>
              <enum>
                <item name="Accepted" value="&quot;Accepted&quot;"/>
                <item name="Canceled" value="&quot;Canceled&quot;"/>
                <item name="Creating" value="&quot;Creating&quot;"/>
                <item name="Deleted" value="&quot;Deleted&quot;"/>
                <item name="Deleting" value="&quot;Deleting&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
                <item name="Succeeded" value="&quot;Succeeded&quot;"/>
                <item name="Updating" value="&quot;Updating&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.singleSignOnProperties.singleSignOnState" options="single-sign-on-state">
              <help short="Single sign-on state"/>
              <enum>
                <item name="Disable" value="&quot;Disable&quot;"/>
                <item name="Enable" value="&quot;Enable&quot;"/>
                <item name="Existing" value="&quot;Existing&quot;"/>
                <item name="Initial" value="&quot;Initial&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$resource.properties.newRelicAccountProperties.singleSignOnProperties.singleSignOnUrl" options="single-sign-on-url">
              <help short="The login URL specific to this NewRelic Organization"/>
            </arg>
          </arg>
          <arg type="string" var="$resource.properties.newRelicAccountProperties.userId" options="user-id">
            <help short="User id"/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.orgCreationSource" options="org-creation-source" group="Properties">
          <help short="Source of org creation"/>
          <enum>
            <item name="LIFTR" value="&quot;LIFTR&quot;"/>
            <item name="NEWRELIC" value="&quot;NEWRELIC&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.planData" options="plan-data" group="Properties">
          <help short="Plan details"/>
          <arg type="string" var="$resource.properties.planData.billingCycle" options="billing-cycle">
            <help short="Different billing cycles like MONTHLY/WEEKLY. this could be enum"/>
            <enum>
              <item name="MONTHLY" value="&quot;MONTHLY&quot;"/>
              <item name="WEEKLY" value="&quot;WEEKLY&quot;"/>
              <item name="YEARLY" value="&quot;YEARLY&quot;"/>
            </enum>
          </arg>
          <arg type="dateTime" var="$resource.properties.planData.effectiveDate" options="effective-date">
            <help short="date when plan was applied"/>
          </arg>
          <arg type="string" var="$resource.properties.planData.planDetails" options="plan-details">
            <help short="plan id as published by NewRelic"/>
          </arg>
          <arg type="string" var="$resource.properties.planData.usageType" options="usage-type">
            <help short="Different usage type like PAYG/COMMITTED. this could be enum"/>
            <enum>
              <item name="COMMITTED" value="&quot;COMMITTED&quot;"/>
              <item name="PAYG" value="&quot;PAYG&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.userInfo" options="user-info" group="Properties">
          <help short="User Info"/>
          <arg type="string" var="$resource.properties.userInfo.country" options="country">
            <help short="country if user"/>
          </arg>
          <arg type="string" var="$resource.properties.userInfo.emailAddress" options="email-address">
            <help short="User Email"/>
            <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
          </arg>
          <arg type="string" var="$resource.properties.userInfo.firstName" options="first-name">
            <help short="First name"/>
            <format maxLength="50"/>
          </arg>
          <arg type="string" var="$resource.properties.userInfo.lastName" options="last-name">
            <help short="Last name"/>
            <format maxLength="50"/>
          </arg>
          <arg type="string" var="$resource.properties.userInfo.phoneNumber" options="phone-number">
            <help short="Contact phone number"/>
            <format maxLength="40"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Monitors_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accountCreationSource" arg="$resource.properties.accountCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="newRelicAccountProperties" arg="$resource.properties.newRelicAccountProperties">
                      <prop type="object" name="accountInfo" arg="$resource.properties.newRelicAccountProperties.accountInfo">
                        <prop type="string" name="accountId" arg="$resource.properties.newRelicAccountProperties.accountInfo.accountId"/>
                        <prop type="password" name="ingestionKey" arg="$resource.properties.newRelicAccountProperties.accountInfo.ingestionKey" secret="True"/>
                        <prop type="string" name="region" arg="$resource.properties.newRelicAccountProperties.accountInfo.region"/>
                      </prop>
                      <prop type="object" name="organizationInfo" arg="$resource.properties.newRelicAccountProperties.organizationInfo">
                        <prop type="string" name="organizationId" arg="$resource.properties.newRelicAccountProperties.organizationInfo.organizationId"/>
                      </prop>
                      <prop type="object" name="singleSignOnProperties" arg="$resource.properties.newRelicAccountProperties.singleSignOnProperties">
                        <prop type="string" name="enterpriseAppId" arg="$resource.properties.newRelicAccountProperties.singleSignOnProperties.enterpriseAppId"/>
                        <prop type="string" name="provisioningState" arg="$resource.properties.newRelicAccountProperties.singleSignOnProperties.provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnState" arg="$resource.properties.newRelicAccountProperties.singleSignOnProperties.singleSignOnState">
                          <enum>
                            <item value="&quot;Disable&quot;"/>
                            <item value="&quot;Enable&quot;"/>
                            <item value="&quot;Existing&quot;"/>
                            <item value="&quot;Initial&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnUrl" arg="$resource.properties.newRelicAccountProperties.singleSignOnProperties.singleSignOnUrl"/>
                      </prop>
                      <prop type="string" name="userId" arg="$resource.properties.newRelicAccountProperties.userId"/>
                    </prop>
                    <prop type="string" name="orgCreationSource" arg="$resource.properties.orgCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planData" arg="$resource.properties.planData">
                      <prop type="string" name="billingCycle" arg="$resource.properties.planData.billingCycle">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                          <item value="&quot;YEARLY&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="effectiveDate" arg="$resource.properties.planData.effectiveDate"/>
                      <prop type="string" name="planDetails" arg="$resource.properties.planData.planDetails"/>
                      <prop type="string" name="usageType" arg="$resource.properties.planData.usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="userInfo" arg="$resource.properties.userInfo">
                      <prop type="string" name="country" arg="$resource.properties.userInfo.country"/>
                      <prop type="string" name="emailAddress" arg="$resource.properties.userInfo.emailAddress">
                        <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                      </prop>
                      <prop type="string" name="firstName" arg="$resource.properties.userInfo.firstName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="lastName" arg="$resource.properties.userInfo.lastName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="phoneNumber" arg="$resource.properties.userInfo.phoneNumber">
                        <format maxLength="40"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accountCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="liftrResourceCategory">
                      <enum>
                        <item value="&quot;MonitorLogs&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                    <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                    <prop type="string" name="marketplaceSubscriptionStatus">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="newRelicAccountProperties">
                      <prop type="object" name="accountInfo">
                        <prop type="string" name="accountId"/>
                        <prop type="password" name="ingestionKey" secret="True"/>
                        <prop type="string" name="region"/>
                      </prop>
                      <prop type="object" name="organizationInfo">
                        <prop type="string" name="organizationId"/>
                      </prop>
                      <prop type="object" name="singleSignOnProperties">
                        <prop type="string" name="enterpriseAppId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnState">
                          <enum>
                            <item value="&quot;Disable&quot;"/>
                            <item value="&quot;Enable&quot;"/>
                            <item value="&quot;Existing&quot;"/>
                            <item value="&quot;Initial&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnUrl"/>
                      </prop>
                      <prop type="string" name="userId"/>
                    </prop>
                    <prop type="string" name="orgCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planData">
                      <prop type="string" name="billingCycle">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                          <item value="&quot;YEARLY&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="effectiveDate"/>
                      <prop type="string" name="planDetails"/>
                      <prop type="string" name="usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userInfo">
                      <prop type="string" name="country"/>
                      <prop type="string" name="emailAddress">
                        <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                      </prop>
                      <prop type="string" name="firstName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="lastName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="phoneNumber">
                        <format maxLength="40"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}" version="2022-07-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the Monitors resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Monitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NewRelicMonitorResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accountCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="liftrResourceCategory">
                      <enum>
                        <item value="&quot;MonitorLogs&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="liftrResourcePreference"/>
                    <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                    <prop type="string" name="marketplaceSubscriptionStatus">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="monitoringStatus">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="newRelicAccountProperties">
                      <prop type="object" name="accountInfo">
                        <prop type="string" name="accountId"/>
                        <prop type="password" name="ingestionKey" secret="True"/>
                        <prop type="string" name="region"/>
                      </prop>
                      <prop type="object" name="organizationInfo">
                        <prop type="string" name="organizationId"/>
                      </prop>
                      <prop type="object" name="singleSignOnProperties">
                        <prop type="string" name="enterpriseAppId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnState">
                          <enum>
                            <item value="&quot;Disable&quot;"/>
                            <item value="&quot;Enable&quot;"/>
                            <item value="&quot;Existing&quot;"/>
                            <item value="&quot;Initial&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="singleSignOnUrl"/>
                      </prop>
                      <prop type="string" name="userId"/>
                    </prop>
                    <prop type="string" name="orgCreationSource">
                      <enum>
                        <item value="&quot;LIFTR&quot;"/>
                        <item value="&quot;NEWRELIC&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="planData">
                      <prop type="string" name="billingCycle">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                          <item value="&quot;YEARLY&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="effectiveDate"/>
                      <prop type="string" name="planDetails"/>
                      <prop type="string" name="usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userInfo">
                      <prop type="string" name="country"/>
                      <prop type="string" name="emailAddress">
                        <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                      </prop>
                      <prop type="string" name="firstName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="lastName">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="phoneNumber">
                        <format maxLength="40"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$resource.identity">
                <prop type="string" name="type" arg="$resource.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Monitors_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NewRelicMonitorResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
