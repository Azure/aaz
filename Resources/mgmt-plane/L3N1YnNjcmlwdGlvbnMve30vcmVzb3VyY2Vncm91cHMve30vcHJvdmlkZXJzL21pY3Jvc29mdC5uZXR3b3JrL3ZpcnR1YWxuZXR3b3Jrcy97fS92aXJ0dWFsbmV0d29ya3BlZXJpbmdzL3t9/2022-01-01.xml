<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network vnet peering">
    <command name="show" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess"/>
                    <prop type="boolean" name="doNotVerifyRemoteGateways"/>
                    <prop type="string" name="peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="peeringSyncLevel">
                      <enum>
                        <item value="&quot;FullyInSync&quot;"/>
                        <item value="&quot;LocalAndRemoteNotInSync&quot;"/>
                        <item value="&quot;LocalNotInSync&quot;"/>
                        <item value="&quot;RemoteNotInSync&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteAddressSpace" cls="AddressSpace_read">
                      <prop type="array<string>" name="addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteBgpCommunities">
                      <prop readOnly="True" type="string" name="regionalCommunity"/>
                      <prop type="string" name="virtualNetworkCommunity" required="True"/>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="@AddressSpace_read" name="remoteVirtualNetworkAddressSpace"/>
                    <prop type="object" name="remoteVirtualNetworkEncryption">
                      <prop type="boolean" name="enabled" required="True"/>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;AllowUnencrypted&quot;"/>
                          <item value="&quot;DropUnencrypted&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                    <prop type="boolean" name="useRemoteGateways"/>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
        <arg type="string" var="$Query.syncRemoteAddressSpace" options="sync-remote" group="">
          <help short="Indicate the intention to sync the peering with the current address space on the remote VNet after it's updated."/>
          <enum>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic" options="allow-forwarded-traffic" group="">
          <help short="Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit" options="allow-gateway-transit" group="">
          <help short="If gateway links can be used in remote virtual networking to link to this virtual network."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess" options="allow-vnet-access" group="">
          <help short="Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."/>
          <default value="false"/>
        </arg>
        <arg type="string" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id" options="remote-vnet" group="">
          <help short="Name or ID of the remote VNet."/>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.useRemoteGateways" options="use-remote-gateways" group="">
          <help short="Allows VNet to use the remote VNet's gateway. Remote VNet gateway must have --allow-gateway-transit enabled for remote peering. Only 1 peering can have this flag enabled. Cannot be set if the VNet already has a gateway."/>
          <default value="false"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.doNotVerifyRemoteGateways" options="do-not-verify-remote-gateways" hide="True" group="Properties">
          <help short="If we need to verify the provisioning state of the remote gateway."/>
        </arg>
        <arg type="string" var="$VirtualNetworkPeeringParameters.properties.peeringState" options="peering-state" hide="True" group="Properties">
          <help short="The status of the virtual network peering."/>
          <enum>
            <item name="Connected" value="&quot;Connected&quot;"/>
            <item name="Disconnected" value="&quot;Disconnected&quot;"/>
            <item name="Initiated" value="&quot;Initiated&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$VirtualNetworkPeeringParameters.properties.peeringSyncLevel" options="peering-sync-level" hide="True" group="Properties">
          <help short="The peering sync status of the virtual network peering."/>
          <enum>
            <item name="FullyInSync" value="&quot;FullyInSync&quot;"/>
            <item name="LocalAndRemoteNotInSync" value="&quot;LocalAndRemoteNotInSync&quot;"/>
            <item name="LocalNotInSync" value="&quot;LocalNotInSync&quot;"/>
            <item name="RemoteNotInSync" value="&quot;RemoteNotInSync&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace" options="remote-address-space" hide="True" group="Properties" cls="AddressSpace_create">
          <help short="The reference to the address space peered with the remote virtual network."/>
          <arg type="array<string>" var="@AddressSpace_create.addressPrefixes" options="address-prefixes">
            <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities" options="remote-bgp-communities" hide="True" group="Properties">
          <help short="The reference to the remote virtual network's Bgp Communities."/>
          <arg type="string" var="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities.virtualNetworkCommunity" options="virtual-network-community" required="True">
            <help short="The BGP community associated with the virtual network."/>
          </arg>
        </arg>
        <arg type="@AddressSpace_create" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetworkAddressSpace" options="remote-virtual-network-address-space" hide="True" group="Properties">
          <help short="The reference to the current address space of the remote virtual network."/>
        </arg>
      </argGroup>
      <argGroup name="VirtualNetworkPeeringParameters">
        <arg type="ResourceId" var="$VirtualNetworkPeeringParameters.id" options="id" hide="True" group="VirtualNetworkPeeringParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
        </arg>
        <arg type="string" var="$VirtualNetworkPeeringParameters.type" options="type" hide="True" group="VirtualNetworkPeeringParameters">
          <help short="Resource type."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <param type="string" name="syncRemoteAddressSpace" arg="$Query.syncRemoteAddressSpace">
                <enum>
                  <item value="&quot;true&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="VirtualNetworkPeeringParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$VirtualNetworkPeeringParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$Path.virtualNetworkPeeringName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic" arg="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit" arg="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess" arg="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess"/>
                    <prop type="boolean" name="doNotVerifyRemoteGateways" arg="$VirtualNetworkPeeringParameters.properties.doNotVerifyRemoteGateways"/>
                    <prop type="string" name="peeringState" arg="$VirtualNetworkPeeringParameters.properties.peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="peeringSyncLevel" arg="$VirtualNetworkPeeringParameters.properties.peeringSyncLevel">
                      <enum>
                        <item value="&quot;FullyInSync&quot;"/>
                        <item value="&quot;LocalAndRemoteNotInSync&quot;"/>
                        <item value="&quot;LocalNotInSync&quot;"/>
                        <item value="&quot;RemoteNotInSync&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteAddressSpace" arg="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace" cls="AddressSpace_create">
                      <prop type="array<string>" name="addressPrefixes" arg="@AddressSpace_create.addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteBgpCommunities" arg="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities">
                      <prop type="string" name="virtualNetworkCommunity" arg="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities.virtualNetworkCommunity" required="True"/>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id"/>
                    </prop>
                    <prop type="@AddressSpace_create" name="remoteVirtualNetworkAddressSpace" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetworkAddressSpace"/>
                    <prop type="boolean" name="useRemoteGateways" arg="$VirtualNetworkPeeringParameters.properties.useRemoteGateways"/>
                  </prop>
                  <prop type="string" name="type" arg="$VirtualNetworkPeeringParameters.type"/>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess"/>
                    <prop type="boolean" name="doNotVerifyRemoteGateways"/>
                    <prop type="string" name="peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="peeringSyncLevel">
                      <enum>
                        <item value="&quot;FullyInSync&quot;"/>
                        <item value="&quot;LocalAndRemoteNotInSync&quot;"/>
                        <item value="&quot;LocalNotInSync&quot;"/>
                        <item value="&quot;RemoteNotInSync&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteAddressSpace" cls="AddressSpace_read">
                      <prop type="array<string>" name="addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteBgpCommunities">
                      <prop readOnly="True" type="string" name="regionalCommunity"/>
                      <prop type="string" name="virtualNetworkCommunity" required="True"/>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="@AddressSpace_read" name="remoteVirtualNetworkAddressSpace"/>
                    <prop type="object" name="remoteVirtualNetworkEncryption">
                      <prop type="boolean" name="enabled" required="True"/>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;AllowUnencrypted&quot;"/>
                          <item value="&quot;DropUnencrypted&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                    <prop type="boolean" name="useRemoteGateways"/>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
        <arg type="string" var="$Query.syncRemoteAddressSpace" options="sync-remote-address-space" hide="True" group="">
          <help short="Parameter indicates the intention to sync the peering with the current address space on the remote vNet after it's updated."/>
          <enum>
            <item name="true" value="&quot;true&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic" options="allow-forwarded-traffic" hide="True" group="">
          <help short="Allows forwarded traffic from the local VNet to the remote VNet."/>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit" options="allow-gateway-transit" hide="True" group="">
          <help short="Allows gateway link to be used in the remote VNet."/>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess" options="allow-vnet-access" hide="True" group="">
          <help short="Allows access from the local VNet to the remote VNet."/>
        </arg>
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id" options="remote-vnet" hide="True" group="">
          <help short="Name or ID of the remote VNet."/>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.useRemoteGateways" options="use-remote-gateways" hide="True" group="">
          <help short="Allows VNet to use the remote VNet's gateway. Remote VNet gateway must have --allow-gateway-transit enabled for remote peering. Only 1 peering can have this flag enabled. Cannot be set if the VNet already has a gateway."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.doNotVerifyRemoteGateways" options="do-not-verify-remote-gateways" hide="True" group="Properties">
          <help short="If we need to verify the provisioning state of the remote gateway."/>
        </arg>
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.properties.peeringState" options="peering-state" hide="True" group="Properties">
          <help short="The status of the virtual network peering."/>
          <enum>
            <item name="Connected" value="&quot;Connected&quot;"/>
            <item name="Disconnected" value="&quot;Disconnected&quot;"/>
            <item name="Initiated" value="&quot;Initiated&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.properties.peeringSyncLevel" options="peering-sync-level" hide="True" group="Properties">
          <help short="The peering sync status of the virtual network peering."/>
          <enum>
            <item name="FullyInSync" value="&quot;FullyInSync&quot;"/>
            <item name="LocalAndRemoteNotInSync" value="&quot;LocalAndRemoteNotInSync&quot;"/>
            <item name="LocalNotInSync" value="&quot;LocalNotInSync&quot;"/>
            <item name="RemoteNotInSync" value="&quot;RemoteNotInSync&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace" options="remote-address-space" hide="True" group="Properties" cls="AddressSpace_update">
          <help short="The reference to the address space peered with the remote virtual network."/>
          <arg nullable="True" type="array<string>" var="@AddressSpace_update.addressPrefixes" options="address-prefixes">
            <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities" options="remote-bgp-communities" hide="True" group="Properties">
          <help short="The reference to the remote virtual network's Bgp Communities."/>
          <arg type="string" var="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities.virtualNetworkCommunity" options="virtual-network-community">
            <help short="The BGP community associated with the virtual network."/>
          </arg>
        </arg>
        <arg nullable="True" type="@AddressSpace_update" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetworkAddressSpace" options="remote-virtual-network-address-space" hide="True" group="Properties">
          <help short="The reference to the current address space of the remote virtual network."/>
        </arg>
      </argGroup>
      <argGroup name="VirtualNetworkPeeringParameters">
        <arg nullable="True" type="ResourceId" var="$VirtualNetworkPeeringParameters.id" options="id" hide="True" group="VirtualNetworkPeeringParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
        </arg>
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.type" options="type" hide="True" group="VirtualNetworkPeeringParameters">
          <help short="Resource type."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkPeering_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess"/>
                    <prop type="boolean" name="doNotVerifyRemoteGateways"/>
                    <prop type="string" name="peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="peeringSyncLevel">
                      <enum>
                        <item value="&quot;FullyInSync&quot;"/>
                        <item value="&quot;LocalAndRemoteNotInSync&quot;"/>
                        <item value="&quot;LocalNotInSync&quot;"/>
                        <item value="&quot;RemoteNotInSync&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteAddressSpace" cls="AddressSpace_read">
                      <prop type="array<string>" name="addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteBgpCommunities">
                      <prop readOnly="True" type="string" name="regionalCommunity"/>
                      <prop type="string" name="virtualNetworkCommunity" required="True"/>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="@AddressSpace_read" name="remoteVirtualNetworkAddressSpace"/>
                    <prop type="object" name="remoteVirtualNetworkEncryption">
                      <prop type="boolean" name="enabled" required="True"/>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;AllowUnencrypted&quot;"/>
                          <item value="&quot;DropUnencrypted&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                    <prop type="boolean" name="useRemoteGateways"/>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="VirtualNetworkPeeringParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$VirtualNetworkPeeringParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
              </prop>
              <prop type="string" name="name" arg="$Path.virtualNetworkPeeringName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="allowForwardedTraffic" arg="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic"/>
                <prop type="boolean" name="allowGatewayTransit" arg="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit"/>
                <prop type="boolean" name="allowVirtualNetworkAccess" arg="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess"/>
                <prop type="boolean" name="doNotVerifyRemoteGateways" arg="$VirtualNetworkPeeringParameters.properties.doNotVerifyRemoteGateways"/>
                <prop type="string" name="peeringState" arg="$VirtualNetworkPeeringParameters.properties.peeringState">
                  <enum>
                    <item value="&quot;Connected&quot;"/>
                    <item value="&quot;Disconnected&quot;"/>
                    <item value="&quot;Initiated&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="peeringSyncLevel" arg="$VirtualNetworkPeeringParameters.properties.peeringSyncLevel">
                  <enum>
                    <item value="&quot;FullyInSync&quot;"/>
                    <item value="&quot;LocalAndRemoteNotInSync&quot;"/>
                    <item value="&quot;LocalNotInSync&quot;"/>
                    <item value="&quot;RemoteNotInSync&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="remoteAddressSpace" arg="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace" cls="AddressSpace_update">
                  <prop type="array<string>" name="addressPrefixes" arg="@AddressSpace_update.addressPrefixes">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="remoteBgpCommunities" arg="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities">
                  <prop type="string" name="virtualNetworkCommunity" arg="$VirtualNetworkPeeringParameters.properties.remoteBgpCommunities.virtualNetworkCommunity" required="True"/>
                </prop>
                <prop type="object" name="remoteVirtualNetwork">
                  <prop type="string" name="id" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id"/>
                </prop>
                <prop type="@AddressSpace_update" name="remoteVirtualNetworkAddressSpace" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetworkAddressSpace"/>
                <prop type="boolean" name="useRemoteGateways" arg="$VirtualNetworkPeeringParameters.properties.useRemoteGateways"/>
              </prop>
              <prop type="string" name="type" arg="$VirtualNetworkPeeringParameters.type"/>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualNetworkPeerings_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <param type="string" name="syncRemoteAddressSpace" arg="$Query.syncRemoteAddressSpace">
                <enum>
                  <item value="&quot;true&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualNetworkPeering_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
