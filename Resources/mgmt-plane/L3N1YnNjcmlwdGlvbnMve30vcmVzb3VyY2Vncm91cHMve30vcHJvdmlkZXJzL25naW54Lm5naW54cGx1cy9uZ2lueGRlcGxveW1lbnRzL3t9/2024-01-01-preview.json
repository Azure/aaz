{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}", "version": "2024-01-01-preview", "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyNC0wMS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "nginx deployment", "commands": [{"name": "show", "version": "2024-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}", "version": "2024-01-01-preview", "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyNC0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.deploymentName", "options": ["n", "name", "deployment-name"], "required": true, "idPart": "name", "help": {"short": "The name of targeted Nginx deployment"}, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Deployments_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "deploymentName", "arg": "$Path.deploymentName", "required": true, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "autoUpgradeProfile", "props": [{"type": "string", "name": "upgradeChannel", "required": true}]}, {"type": "boolean", "name": "enableDiagnosticsSupport"}, {"readOnly": true, "type": "string", "name": "ipAddress"}, {"type": "object", "name": "logging", "props": [{"type": "object", "name": "storageAccount", "props": [{"type": "string", "name": "accountName"}, {"type": "string", "name": "containerName"}]}]}, {"type": "string", "name": "managedResourceGroup"}, {"type": "object", "name": "networkProfile", "props": [{"type": "object", "name": "frontEndIPConfiguration", "props": [{"type": "array<object>", "name": "privateIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "subnetId"}]}}, {"type": "array<object>", "name": "publicIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "id"}]}}]}, {"type": "object", "name": "networkInterfaceConfiguration", "props": [{"type": "string", "name": "subnetId"}]}]}, {"readOnly": true, "type": "string", "name": "nginxVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "NotSpecified"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "scalingProperties", "props": [{"type": "object", "name": "autoScaleSettings", "props": [{"type": "array<object>", "name": "profiles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "capacity", "required": true, "props": [{"type": "integer32", "name": "max", "required": true, "format": {"minimum": 0}}, {"type": "integer32", "name": "min", "required": true, "format": {"minimum": 0}}]}, {"type": "string", "name": "name", "required": true}]}}], "clientFlatten": true}, {"type": "integer32", "name": "capacity"}]}, {"type": "object", "name": "userProfile", "props": [{"type": "string", "name": "preferredEmail", "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "required": true}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}", "version": "2024-01-01-preview", "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyNC0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.deploymentName", "options": ["n", "name", "deployment-name"], "required": true, "idPart": "name", "help": {"short": "The name of targeted NGINX deployment"}, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Deployments_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "deploymentName", "arg": "$Path.deploymentName", "required": true, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}", "version": "2024-01-01-preview", "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyNC0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.deploymentName", "options": ["n", "name", "deployment-name"], "required": true, "idPart": "name", "help": {"short": "The name of the targeted NGINX deployment", "lines": ["It should contain only alphanumeric characters, up to 30 characters long; and cannot begin or end with a hyphen."]}, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Body", "args": [{"type": "object", "var": "$body.identity", "options": ["identity"], "group": "Body", "help": {"short": "Managed identity to perform operations on Azure key vault or storage account", "lines": ["The managed identity should have necessary access roles on the Azure resources. For certificate access, the managed identity should have cert read access on Azure key vault. For storage account logging, it should have blob contributor role.", "Usage: --identity '{\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"/subscriptions/subscriptionId/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myUserAssigneMI\":{}}}'", "Type is an enum that accepts values UserAssigned or SystemAssigned"]}, "args": [{"type": "string", "var": "$body.identity.type", "options": ["type"], "group": "", "help": {"short": "Type of managed identity to use"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"type": "object", "var": "$body.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"type": "ResourceLocation", "var": "$body.location", "options": ["l", "location"], "group": "Body"}, {"type": "object", "var": "$body.sku", "options": ["sku"], "group": "Body", "help": {"short": "The billing information for the resource", "lines": ["More information on https://docs.nginx.com/nginx-for-azure/billing/overview/", "Usage: --sku name=XXX"]}, "args": [{"type": "string", "var": "$body.sku.name", "options": ["name"], "required": true, "help": {"short": "Name of the SKU."}}]}, {"type": "object", "var": "$body.tags", "options": ["tags"], "group": "Body", "help": {"short": "Tags for deployment.", "lines": ["Usage: --tags tag1=\"value1\" tag2=\"value2\""]}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$body.properties.autoUpgradeProfile", "options": ["auto-upgrade-profile"], "group": "Properties", "help": {"short": "Autoupgrade settings of a deployment. can be stable or preview"}, "args": [{"type": "string", "var": "$body.properties.autoUpgradeProfile.upgradeChannel", "options": ["upgrade-channel"], "required": true, "help": {"short": "Channel used for autoupgrade."}}]}, {"type": "boolean", "var": "$body.properties.enableDiagnosticsSupport", "options": ["enable-diagnostics"], "group": "Properties", "help": {"short": "Boolean to enable/disable diagnostics support"}}, {"type": "object", "var": "$body.properties.logging", "options": ["logging"], "group": "Properties", "help": {"short": "To have logs sent to your storage account. Must specify managed identity with blob contributor role on Azure storage account", "lines": ["Usage: --logging storage-account='{\"account-name\":\"<storageaccount>\", \"container-name\":<containername>}'"]}, "args": [{"type": "object", "var": "$body.properties.logging.storageAccount", "options": ["storage-account"], "args": [{"type": "string", "var": "$body.properties.logging.storageAccount.accountName", "options": ["account-name"]}, {"type": "string", "var": "$body.properties.logging.storageAccount.containerName", "options": ["container-name"]}]}]}, {"type": "string", "var": "$body.properties.managedResourceGroup", "options": ["managed-resource-group"], "hide": true, "group": "Properties", "help": {"short": "The managed resource group to deploy VNet injection related network resources."}}, {"type": "object", "var": "$body.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "IP address and VNet + subnet information", "lines": ["Usage: --network-profile front-end-ip-configuration=\"<private or public IP address information>\" network-interface-configuration=\"<subnet information>\"", "front-end-ip-configuration: IP information, public or private IP addresses.", "network-interface-configuration: A subnet within your virtual network. This subnet should be delegated to NGINX.NGINXPLUS/nginxDeployments"]}, "args": [{"type": "object", "var": "$body.properties.networkProfile.frontEndIPConfiguration", "options": ["front-end-ip-configuration"], "args": [{"type": "array<object>", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses", "options": ["private-ip-addresses"], "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress", "options": ["private-ip-address"]}, {"type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId", "options": ["subnet-id"]}]}}, {"type": "array<object>", "var": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses", "options": ["public-ip-addresses"], "item": {"type": "object", "args": [{"type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id", "options": ["id"]}]}}]}, {"type": "object", "var": "$body.properties.networkProfile.networkInterfaceConfiguration", "options": ["network-interface-configuration"], "args": [{"type": "string", "var": "$body.properties.networkProfile.networkInterfaceConfiguration.subnetId", "options": ["subnet-id"]}]}]}, {"type": "object", "var": "$body.properties.scalingProperties", "options": ["scaling-properties"], "group": "Properties", "help": {"short": "Scaling for NGINX capacity units (NCUs)", "lines": ["For more information- https://docs.nginx.com/nginxaas/azure/billing/overview/", "Usage: --scaling-properties capacity=<NCU value>"]}, "args": [{"type": "array<object>", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles", "options": ["profiles"], "group": "AutoScaleSettings", "item": {"type": "object", "args": [{"type": "object", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity", "options": ["capacity"], "required": true, "help": {"short": "The capacity parameters of the profile."}, "args": [{"type": "integer32", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.max", "options": ["max"], "required": true, "help": {"short": "The maximum number of NCUs the deployment can be autoscaled to."}, "format": {"minimum": 0}}, {"type": "integer32", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.min", "options": ["min"], "required": true, "help": {"short": "The minimum number of NCUs the deployment can be autoscaled to."}, "format": {"minimum": 0}}]}, {"type": "string", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].name", "options": ["name"], "required": true}]}}, {"type": "integer32", "var": "$body.properties.scalingProperties.capacity", "options": ["capacity"]}]}, {"type": "object", "var": "$body.properties.userProfile", "options": ["user-profile"], "group": "Properties", "help": {"short": "Optional: Preferred communication email", "lines": ["Usage --user-profile preferred-email=xyz@abc.com"]}, "args": [{"type": "string", "var": "$body.properties.userProfile.preferredEmail", "options": ["preferred-email"], "help": {"short": "The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address."}, "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Deployments_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "deploymentName", "arg": "$Path.deploymentName", "required": true, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "props": [{"type": "IdentityObject", "name": "identity", "arg": "$body.identity", "props": [{"type": "string", "name": "type", "arg": "$body.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$body.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$body.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "autoUpgradeProfile", "arg": "$body.properties.autoUpgradeProfile", "props": [{"type": "string", "name": "upgradeChannel", "arg": "$body.properties.autoUpgradeProfile.upgradeChannel", "required": true}]}, {"type": "boolean", "name": "enableDiagnosticsSupport", "arg": "$body.properties.enableDiagnosticsSupport"}, {"type": "object", "name": "logging", "arg": "$body.properties.logging", "props": [{"type": "object", "name": "storageAccount", "arg": "$body.properties.logging.storageAccount", "props": [{"type": "string", "name": "accountName", "arg": "$body.properties.logging.storageAccount.accountName"}, {"type": "string", "name": "containerName", "arg": "$body.properties.logging.storageAccount.containerName"}]}]}, {"type": "string", "name": "managedResourceGroup", "arg": "$body.properties.managedResourceGroup"}, {"type": "object", "name": "networkProfile", "arg": "$body.properties.networkProfile", "props": [{"type": "object", "name": "frontEndIPConfiguration", "arg": "$body.properties.networkProfile.frontEndIPConfiguration", "props": [{"type": "array<object>", "name": "privateIPAddresses", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "privateIPAddress", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "subnetId", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId"}]}}, {"type": "array<object>", "name": "publicIPAddresses", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id"}]}}]}, {"type": "object", "name": "networkInterfaceConfiguration", "arg": "$body.properties.networkProfile.networkInterfaceConfiguration", "props": [{"type": "string", "name": "subnetId", "arg": "$body.properties.networkProfile.networkInterfaceConfiguration.subnetId"}]}]}, {"type": "object", "name": "scalingProperties", "arg": "$body.properties.scalingProperties", "props": [{"type": "object", "name": "autoScaleSettings", "props": [{"type": "array<object>", "name": "profiles", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "capacity", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity", "required": true, "props": [{"type": "integer32", "name": "max", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.max", "required": true, "format": {"minimum": 0}}, {"type": "integer32", "name": "min", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.min", "required": true, "format": {"minimum": 0}}]}, {"type": "string", "name": "name", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].name", "required": true}]}}], "clientFlatten": true}, {"type": "integer32", "name": "capacity", "arg": "$body.properties.scalingProperties.capacity"}]}, {"type": "object", "name": "userProfile", "arg": "$body.properties.userProfile", "props": [{"type": "string", "name": "preferredEmail", "arg": "$body.properties.userProfile.preferredEmail", "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}, {"type": "object", "name": "sku", "arg": "$body.sku", "props": [{"type": "string", "name": "name", "arg": "$body.sku.name", "required": true}]}, {"type": "object", "name": "tags", "arg": "$body.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "autoUpgradeProfile", "props": [{"type": "string", "name": "upgradeChannel", "required": true}]}, {"type": "boolean", "name": "enableDiagnosticsSupport"}, {"readOnly": true, "type": "string", "name": "ipAddress"}, {"type": "object", "name": "logging", "props": [{"type": "object", "name": "storageAccount", "props": [{"type": "string", "name": "accountName"}, {"type": "string", "name": "containerName"}]}]}, {"type": "string", "name": "managedResourceGroup"}, {"type": "object", "name": "networkProfile", "props": [{"type": "object", "name": "frontEndIPConfiguration", "props": [{"type": "array<object>", "name": "privateIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "subnetId"}]}}, {"type": "array<object>", "name": "publicIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "id"}]}}]}, {"type": "object", "name": "networkInterfaceConfiguration", "props": [{"type": "string", "name": "subnetId"}]}]}, {"readOnly": true, "type": "string", "name": "nginxVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "NotSpecified"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "scalingProperties", "props": [{"type": "object", "name": "autoScaleSettings", "props": [{"type": "array<object>", "name": "profiles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "capacity", "required": true, "props": [{"type": "integer32", "name": "max", "required": true, "format": {"minimum": 0}}, {"type": "integer32", "name": "min", "required": true, "format": {"minimum": 0}}]}, {"type": "string", "name": "name", "required": true}]}}], "clientFlatten": true}, {"type": "integer32", "name": "capacity"}]}, {"type": "object", "name": "userProfile", "props": [{"type": "string", "name": "preferredEmail", "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "required": true}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}", "version": "2024-01-01-preview", "swagger": "mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9/V/MjAyNC0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.deploymentName", "options": ["n", "name", "deployment-name"], "required": true, "idPart": "name", "help": {"short": "The name of targeted Nginx deployment"}, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Body", "args": [{"nullable": true, "type": "object", "var": "$body.identity", "options": ["identity"], "group": "Body", "help": {"short": "Managed identity to perform operations on Azure key vault or storage account", "lines": ["The managed identity should have necessary access roles on the Azure resources. For certificate access, the managed identity should have cert read access on Azure key vault. For storage account logging, it should have blob contributor role.", "Usage: --identity '{\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"/subscriptions/subscriptionId/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myUserAssigneMI\":{}}}'", "Type is an enum that accepts values UserAssigned or SystemAssigned"]}, "args": [{"nullable": true, "type": "string", "var": "$body.identity.type", "options": ["type"], "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$body.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"nullable": true, "type": "ResourceLocation", "var": "$body.location", "options": ["l", "location"], "group": "Body"}, {"nullable": true, "type": "object", "var": "$body.sku", "options": ["sku"], "group": "Body", "help": {"short": "The billing information for the resource", "lines": ["More information on https://docs.nginx.com/nginx-for-azure/billing/overview/", "Usage: --sku name=XXX"]}, "args": [{"type": "string", "var": "$body.sku.name", "options": ["name"], "help": {"short": "Name of the SKU."}}]}, {"nullable": true, "type": "object", "var": "$body.tags", "options": ["tags"], "group": "Body", "help": {"short": "Tags for deployment.", "lines": ["Usage: --tags tag1=\"value1\" tag2=\"value2\""]}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "object", "var": "$body.properties.autoUpgradeProfile", "options": ["auto-upgrade-profile"], "group": "Properties", "help": {"short": "Autoupgrade settings of a deployment."}, "args": [{"type": "string", "var": "$body.properties.autoUpgradeProfile.upgradeChannel", "options": ["upgrade-channel"], "help": {"short": "Channel used for autoupgrade."}}]}, {"nullable": true, "type": "boolean", "var": "$body.properties.enableDiagnosticsSupport", "options": ["enable-diagnostics"], "group": "Properties", "help": {"short": "Boolean to enable/disable diagnostics support"}}, {"nullable": true, "type": "object", "var": "$body.properties.logging", "options": ["logging"], "group": "Properties", "help": {"short": "To have logs sent to your storage account. Must specify managed identity with blob contributor role on Azure storage account", "lines": ["Usage: --logging storage-account='{\"account-name\":\"<storageaccount>\", \"container-name\":<containername>}'"]}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.logging.storageAccount", "options": ["storage-account"], "args": [{"nullable": true, "type": "string", "var": "$body.properties.logging.storageAccount.accountName", "options": ["account-name"]}, {"nullable": true, "type": "string", "var": "$body.properties.logging.storageAccount.containerName", "options": ["container-name"]}]}]}, {"nullable": true, "type": "string", "var": "$body.properties.managedResourceGroup", "options": ["managed-resource-group"], "hide": true, "group": "Properties", "help": {"short": "The managed resource group to deploy VNet injection related network resources."}}, {"nullable": true, "type": "object", "var": "$body.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "IP address and VNet + subnet information", "lines": ["Usage: --network-profile front-end-ip-configuration=\"<private or public IP address information>\" network-interface-configuration=\"<subnet information>\"", "front-end-ip-configuration: IP information, public or private IP addresses.", "network-interface-configuration: A subnet within your virtual network. This subnet should be delegated to NGINX.NGINXPLUS/nginxDeployments"]}, "args": [{"nullable": true, "type": "object", "var": "$body.properties.networkProfile.frontEndIPConfiguration", "options": ["front-end-ip-configuration"], "args": [{"nullable": true, "type": "array<object>", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses", "options": ["private-ip-addresses"], "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress", "options": ["private-ip-address"]}, {"nullable": true, "type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod", "options": ["private-ip-allocation-method"], "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"nullable": true, "type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId", "options": ["subnet-id"]}]}}, {"nullable": true, "type": "array<object>", "var": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses", "options": ["public-ip-addresses"], "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id", "options": ["id"]}]}}]}, {"nullable": true, "type": "object", "var": "$body.properties.networkProfile.networkInterfaceConfiguration", "options": ["network-interface-configuration"], "args": [{"nullable": true, "type": "string", "var": "$body.properties.networkProfile.networkInterfaceConfiguration.subnetId", "options": ["subnet-id"]}]}]}, {"nullable": true, "type": "object", "var": "$body.properties.scalingProperties", "options": ["scaling-properties"], "group": "Properties", "help": {"short": "Scaling for NGINX capacity units (NCUs)", "lines": ["For more information- https://docs.nginx.com/nginxaas/azure/billing/overview/", "Usage: --scaling-properties capacity=<NCU value>"]}, "args": [{"type": "array<object>", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles", "options": ["profiles"], "group": "AutoScaleSettings", "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity", "options": ["capacity"], "help": {"short": "The capacity parameters of the profile."}, "args": [{"type": "integer32", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.max", "options": ["max"], "help": {"short": "The maximum number of NCUs the deployment can be autoscaled to."}, "format": {"minimum": 0}}, {"type": "integer32", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.min", "options": ["min"], "help": {"short": "The minimum number of NCUs the deployment can be autoscaled to."}, "format": {"minimum": 0}}]}, {"type": "string", "var": "$body.properties.scalingProperties.autoScaleSettings.profiles[].name", "options": ["name"]}]}}, {"nullable": true, "type": "integer32", "var": "$body.properties.scalingProperties.capacity", "options": ["capacity"]}]}, {"nullable": true, "type": "object", "var": "$body.properties.userProfile", "options": ["user-profile"], "group": "Properties", "help": {"short": "Optional: Preferred communication email", "lines": ["Usage --user-profile preferred-email=xyz@abc.com"]}, "args": [{"nullable": true, "type": "string", "var": "$body.properties.userProfile.preferredEmail", "options": ["preferred-email"], "help": {"short": "The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address."}, "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}], "operations": [{"operationId": "Deployments_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "deploymentName", "arg": "$Path.deploymentName", "required": true, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "autoUpgradeProfile", "props": [{"type": "string", "name": "upgradeChannel", "required": true}]}, {"type": "boolean", "name": "enableDiagnosticsSupport"}, {"readOnly": true, "type": "string", "name": "ipAddress"}, {"type": "object", "name": "logging", "props": [{"type": "object", "name": "storageAccount", "props": [{"type": "string", "name": "accountName"}, {"type": "string", "name": "containerName"}]}]}, {"type": "string", "name": "managedResourceGroup"}, {"type": "object", "name": "networkProfile", "props": [{"type": "object", "name": "frontEndIPConfiguration", "props": [{"type": "array<object>", "name": "privateIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "subnetId"}]}}, {"type": "array<object>", "name": "publicIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "id"}]}}]}, {"type": "object", "name": "networkInterfaceConfiguration", "props": [{"type": "string", "name": "subnetId"}]}]}, {"readOnly": true, "type": "string", "name": "nginxVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleted"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "NotSpecified"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "scalingProperties", "props": [{"type": "object", "name": "autoScaleSettings", "props": [{"type": "array<object>", "name": "profiles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "capacity", "required": true, "props": [{"type": "integer32", "name": "max", "required": true, "format": {"minimum": 0}}, {"type": "integer32", "name": "min", "required": true, "format": {"minimum": 0}}]}, {"type": "string", "name": "name", "required": true}]}}], "clientFlatten": true}, {"type": "integer32", "name": "capacity"}]}, {"type": "object", "name": "userProfile", "props": [{"type": "string", "name": "preferredEmail", "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "required": true}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "NginxDeployment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "body", "props": [{"type": "IdentityObject", "name": "identity", "arg": "$body.identity", "props": [{"type": "string", "name": "type", "arg": "$body.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$body.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$body.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "autoUpgradeProfile", "arg": "$body.properties.autoUpgradeProfile", "props": [{"type": "string", "name": "upgradeChannel", "arg": "$body.properties.autoUpgradeProfile.upgradeChannel", "required": true}]}, {"type": "boolean", "name": "enableDiagnosticsSupport", "arg": "$body.properties.enableDiagnosticsSupport"}, {"type": "object", "name": "logging", "arg": "$body.properties.logging", "props": [{"type": "object", "name": "storageAccount", "arg": "$body.properties.logging.storageAccount", "props": [{"type": "string", "name": "accountName", "arg": "$body.properties.logging.storageAccount.accountName"}, {"type": "string", "name": "containerName", "arg": "$body.properties.logging.storageAccount.containerName"}]}]}, {"type": "string", "name": "managedResourceGroup", "arg": "$body.properties.managedResourceGroup"}, {"type": "object", "name": "networkProfile", "arg": "$body.properties.networkProfile", "props": [{"type": "object", "name": "frontEndIPConfiguration", "arg": "$body.properties.networkProfile.frontEndIPConfiguration", "props": [{"type": "array<object>", "name": "privateIPAddresses", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "privateIPAddress", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAddress"}, {"type": "string", "name": "privateIPAllocationMethod", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].privateIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "subnetId", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.privateIPAddresses[].subnetId"}]}}, {"type": "array<object>", "name": "publicIPAddresses", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$body.properties.networkProfile.frontEndIPConfiguration.publicIPAddresses[].id"}]}}]}, {"type": "object", "name": "networkInterfaceConfiguration", "arg": "$body.properties.networkProfile.networkInterfaceConfiguration", "props": [{"type": "string", "name": "subnetId", "arg": "$body.properties.networkProfile.networkInterfaceConfiguration.subnetId"}]}]}, {"type": "object", "name": "scalingProperties", "arg": "$body.properties.scalingProperties", "props": [{"type": "object", "name": "autoScaleSettings", "props": [{"type": "array<object>", "name": "profiles", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "capacity", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity", "required": true, "props": [{"type": "integer32", "name": "max", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.max", "required": true, "format": {"minimum": 0}}, {"type": "integer32", "name": "min", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].capacity.min", "required": true, "format": {"minimum": 0}}]}, {"type": "string", "name": "name", "arg": "$body.properties.scalingProperties.autoScaleSettings.profiles[].name", "required": true}]}}], "clientFlatten": true}, {"type": "integer32", "name": "capacity", "arg": "$body.properties.scalingProperties.capacity"}]}, {"type": "object", "name": "userProfile", "arg": "$body.properties.userProfile", "props": [{"type": "string", "name": "preferredEmail", "arg": "$body.properties.userProfile.preferredEmail", "format": {"pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"}}]}]}, {"type": "object", "name": "sku", "arg": "$body.sku", "props": [{"type": "string", "name": "name", "arg": "$body.sku.name", "required": true}]}, {"type": "object", "name": "tags", "arg": "$body.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Deployments_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "deploymentName", "arg": "$Path.deploymentName", "required": true, "format": {"pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@NginxDeployment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}