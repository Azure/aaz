<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.timeseriesinsights/environments/{}" version="2020-05-15" swagger="mgmt-plane/timeseriesinsights/ResourceProviders/Microsoft.TimeSeriesInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuVGltZVNlcmllc0luc2lnaHRzL2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnROYW1lfQ==/V/MjAyMC0wNS0xNQ=="/>
  <commandGroup name="tsi environment">
    <command name="show" version="2020-05-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.timeseriesinsights/environments/{}" version="2020-05-15" swagger="mgmt-plane/timeseriesinsights/ResourceProviders/Microsoft.TimeSeriesInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuVGltZVNlcmllc0luc2lnaHRzL2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnROYW1lfQ==/V/MjAyMC0wNS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentName" options="environment-name name n" required="True" idPart="name">
          <help short="The name of the Time Series Insights environment associated with the specified resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service."/>
        </arg>
      </argGroup>
      <operation operationId="Environments_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}">
          <request method="get">
            <path>
              <param type="string" name="environmentName" arg="$Path.environmentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-05-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.TimeSeriesInsights/environments/{}"/>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item value="&quot;Gen1&quot;"/>
                      <item value="&quot;Gen2&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer32" name="capacity" required="True">
                      <format maximum="10" minimum="1"/>
                    </prop>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;L1&quot;"/>
                        <item value="&quot;P1&quot;"/>
                        <item value="&quot;S1&quot;"/>
                        <item value="&quot;S2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <discriminator property="kind" value="Gen1">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="creationTime"/>
                      <prop readOnly="True" type="string" name="dataAccessFqdn"/>
                      <prop readOnly="True" type="uuid" name="dataAccessId"/>
                      <prop type="duration" name="dataRetentionTime" required="True"/>
                      <prop type="array<object>" name="partitionKeyProperties" identifiers="name">
                        <item type="object" cls="TimeSeriesIdProperty_read">
                          <prop type="string" name="name"/>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="status" cls="EnvironmentStatus_read">
                        <prop readOnly="True" type="object" name="ingress">
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Paused&quot;"/>
                              <item value="&quot;Ready&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="object" name="stateDetails">
                            <prop type="string" name="code"/>
                            <prop type="string" name="message"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="warmStorage">
                          <prop readOnly="True" type="object" name="propertiesUsage" clientFlatten="True">
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Ok&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="object" name="stateDetails" clientFlatten="True">
                              <prop type="integer32" name="currentCount">
                                <format maximum="10" minimum="1"/>
                              </prop>
                              <prop type="integer32" name="maxCount">
                                <format maximum="10" minimum="1"/>
                              </prop>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="storageLimitExceededBehavior">
                        <enum>
                          <item value="&quot;PauseIngress&quot;"/>
                          <item value="&quot;PurgeOldData&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </discriminator>
                  <discriminator property="kind" value="Gen2">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="creationTime"/>
                      <prop readOnly="True" type="string" name="dataAccessFqdn"/>
                      <prop readOnly="True" type="uuid" name="dataAccessId"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="@EnvironmentStatus_read" name="status"/>
                      <prop type="object" name="storageConfiguration" required="True">
                        <prop type="string" name="accountName" required="True"/>
                      </prop>
                      <prop type="array<@TimeSeriesIdProperty_read>" name="timeSeriesIdProperties" required="True" identifiers="name">
                        <item type="@TimeSeriesIdProperty_read"/>
                      </prop>
                      <prop type="object" name="warmStoreConfiguration">
                        <prop type="duration" name="dataRetention" required="True"/>
                      </prop>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2020-05-15" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.timeseriesinsights/environments/{}" version="2020-05-15" swagger="mgmt-plane/timeseriesinsights/ResourceProviders/Microsoft.TimeSeriesInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuVGltZVNlcmllc0luc2lnaHRzL2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnROYW1lfQ==/V/MjAyMC0wNS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentName" options="environment-name name n" required="True" idPart="name">
          <help short="The name of the Time Series Insights environment associated with the specified resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Environments_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}">
          <request method="delete">
            <path>
              <param type="string" name="environmentName" arg="$Path.environmentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-05-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2020-05-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.timeseriesinsights/environments/{}" version="2020-05-15" swagger="mgmt-plane/timeseriesinsights/ResourceProviders/Microsoft.TimeSeriesInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuVGltZVNlcmllc0luc2lnaHRzL2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnROYW1lfQ==/V/MjAyMC0wNS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentName" options="environment-name name n" required="True" idPart="name">
          <help short="Name of the environment"/>
          <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.Gen1" options="gen1" group="Parameters">
          <arg type="duration" var="$parameters.Gen1.properties.dataRetentionTime" options="data-retention-time" required="True" group="Properties">
            <help short="ISO8601 timespan specifying the minimum number of days the environment's events will be available for query."/>
          </arg>
          <arg type="array<object>" var="$parameters.Gen1.properties.partitionKeyProperties" options="partition-key-properties key-properties" group="Properties">
            <help short="The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported."/>
            <item type="object">
              <arg type="string" var="$parameters.Gen1.properties.partitionKeyProperties[].name" options="name"/>
              <arg type="string" var="$parameters.Gen1.properties.partitionKeyProperties[].type" options="type">
                <enum>
                  <item name="String" value="&quot;String&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$parameters.Gen1.properties.storageLimitExceededBehavior" options="storage-limit-exceeded-behavior exceeded-behavior" group="Properties">
            <help short="The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If &quot;PauseIngress&quot; is specified, new events will not be read from the event source. If &quot;PurgeOldData&quot; is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData."/>
            <enum>
              <item name="PauseIngress" value="&quot;PauseIngress&quot;"/>
              <item name="PurgeOldData" value="&quot;PurgeOldData&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$parameters.Gen2" options="gen2" group="Parameters">
          <arg type="object" var="$parameters.Gen2.properties.storageConfiguration" options="storage-configuration storage-config" required="True" group="Properties">
            <help short="The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data."/>
            <arg type="string" var="$parameters.Gen2.properties.storageConfiguration.accountName" options="account-name" required="True">
              <help short="The name of the storage account that will hold the environment's Gen2 data."/>
            </arg>
            <arg type="string" var="$parameters.Gen2.properties.storageConfiguration.managementKey" options="management-key" required="True">
              <help short="The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses."/>
            </arg>
          </arg>
          <arg type="array<object>" var="$parameters.Gen2.properties.timeSeriesIdProperties" options="time-series-id-properties id-properties" required="True" group="Properties">
            <help short="The list of event properties which will be used to define the environment's time series id."/>
            <item type="object">
              <arg type="string" var="$parameters.Gen2.properties.timeSeriesIdProperties[].name" options="name"/>
              <arg type="string" var="$parameters.Gen2.properties.timeSeriesIdProperties[].type" options="type">
                <enum>
                  <item name="String" value="&quot;String&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="object" var="$parameters.Gen2.properties.warmStoreConfiguration" options="warm-store-configuration warm-store-config" group="Properties">
            <help short="The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query."/>
            <arg type="duration" var="$parameters.Gen2.properties.warmStoreConfiguration.dataRetention" options="data-retention" required="True">
              <help short="ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store."/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The location of the resource."/>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" required="True" group="Parameters">
          <help short="The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate."/>
          <arg type="integer32" var="$parameters.sku.capacity" options="capacity" required="True">
            <help short="The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created."/>
            <format maximum="10" minimum="1"/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name" required="True">
            <help short="The name of this SKU."/>
            <enum>
              <item name="L1" value="&quot;L1&quot;"/>
              <item name="P1" value="&quot;P1&quot;"/>
              <item name="S1" value="&quot;S1&quot;"/>
              <item name="S2" value="&quot;S2&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Key-value pairs of additional properties for the resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Environments_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}">
          <request method="put">
            <path>
              <param type="string" name="environmentName" arg="$Path.environmentName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-05-15&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item arg="$parameters.Gen1" value="&quot;Gen1&quot;"/>
                      <item arg="$parameters.Gen2" value="&quot;Gen2&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="sku" arg="$parameters.sku" required="True">
                    <prop type="integer32" name="capacity" arg="$parameters.sku.capacity" required="True">
                      <format maximum="10" minimum="1"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.sku.name" required="True">
                      <enum>
                        <item value="&quot;L1&quot;"/>
                        <item value="&quot;P1&quot;"/>
                        <item value="&quot;S1&quot;"/>
                        <item value="&quot;S2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <discriminator property="kind" value="Gen1">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="duration" name="dataRetentionTime" arg="$parameters.Gen1.properties.dataRetentionTime" required="True"/>
                      <prop type="array<object>" name="partitionKeyProperties" arg="$parameters.Gen1.properties.partitionKeyProperties" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$parameters.Gen1.properties.partitionKeyProperties[].name"/>
                          <prop type="string" name="type" arg="$parameters.Gen1.properties.partitionKeyProperties[].type">
                            <enum>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="storageLimitExceededBehavior" arg="$parameters.Gen1.properties.storageLimitExceededBehavior">
                        <enum>
                          <item value="&quot;PauseIngress&quot;"/>
                          <item value="&quot;PurgeOldData&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </discriminator>
                  <discriminator property="kind" value="Gen2">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="object" name="storageConfiguration" arg="$parameters.Gen2.properties.storageConfiguration" required="True">
                        <prop type="string" name="accountName" arg="$parameters.Gen2.properties.storageConfiguration.accountName" required="True"/>
                        <prop type="string" name="managementKey" arg="$parameters.Gen2.properties.storageConfiguration.managementKey" required="True"/>
                      </prop>
                      <prop type="array<object>" name="timeSeriesIdProperties" arg="$parameters.Gen2.properties.timeSeriesIdProperties" required="True" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$parameters.Gen2.properties.timeSeriesIdProperties[].name"/>
                          <prop type="string" name="type" arg="$parameters.Gen2.properties.timeSeriesIdProperties[].type">
                            <enum>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="warmStoreConfiguration" arg="$parameters.Gen2.properties.warmStoreConfiguration">
                        <prop type="duration" name="dataRetention" arg="$parameters.Gen2.properties.warmStoreConfiguration.dataRetention" required="True"/>
                      </prop>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.TimeSeriesInsights/environments/{}"/>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item value="&quot;Gen1&quot;"/>
                      <item value="&quot;Gen2&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer32" name="capacity" required="True">
                      <format maximum="10" minimum="1"/>
                    </prop>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;L1&quot;"/>
                        <item value="&quot;P1&quot;"/>
                        <item value="&quot;S1&quot;"/>
                        <item value="&quot;S2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <discriminator property="kind" value="Gen1">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="creationTime"/>
                      <prop readOnly="True" type="string" name="dataAccessFqdn"/>
                      <prop readOnly="True" type="uuid" name="dataAccessId"/>
                      <prop type="duration" name="dataRetentionTime" required="True"/>
                      <prop type="array<object>" name="partitionKeyProperties" identifiers="name">
                        <item type="object" cls="TimeSeriesIdProperty_read">
                          <prop type="string" name="name"/>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="status" cls="EnvironmentStatus_read">
                        <prop readOnly="True" type="object" name="ingress">
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Paused&quot;"/>
                              <item value="&quot;Ready&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="object" name="stateDetails">
                            <prop type="string" name="code"/>
                            <prop type="string" name="message"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="warmStorage">
                          <prop readOnly="True" type="object" name="propertiesUsage" clientFlatten="True">
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Ok&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="object" name="stateDetails" clientFlatten="True">
                              <prop type="integer32" name="currentCount">
                                <format maximum="10" minimum="1"/>
                              </prop>
                              <prop type="integer32" name="maxCount">
                                <format maximum="10" minimum="1"/>
                              </prop>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="storageLimitExceededBehavior">
                        <enum>
                          <item value="&quot;PauseIngress&quot;"/>
                          <item value="&quot;PurgeOldData&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </discriminator>
                  <discriminator property="kind" value="Gen2">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="creationTime"/>
                      <prop readOnly="True" type="string" name="dataAccessFqdn"/>
                      <prop readOnly="True" type="uuid" name="dataAccessId"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="@EnvironmentStatus_read" name="status"/>
                      <prop type="object" name="storageConfiguration" required="True">
                        <prop type="string" name="accountName" required="True"/>
                      </prop>
                      <prop type="array<@TimeSeriesIdProperty_read>" name="timeSeriesIdProperties" required="True" identifiers="name">
                        <item type="@TimeSeriesIdProperty_read"/>
                      </prop>
                      <prop type="object" name="warmStoreConfiguration">
                        <prop type="duration" name="dataRetention" required="True"/>
                      </prop>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2020-05-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.timeseriesinsights/environments/{}" version="2020-05-15" swagger="mgmt-plane/timeseriesinsights/ResourceProviders/Microsoft.TimeSeriesInsights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuVGltZVNlcmllc0luc2lnaHRzL2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnROYW1lfQ==/V/MjAyMC0wNS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.environmentName" options="environment-name name n" required="True" idPart="name">
          <help short="The name of the Time Series Insights environment associated with the specified resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.Gen1" options="gen1" group="Parameters">
          <arg type="duration" var="$parameters.Gen1.properties.dataRetentionTime" options="data-retention-time" group="Properties">
            <help short="ISO8601 timespan specifying the minimum number of days the environment's events will be available for query."/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.Gen1.properties.partitionKeyProperties" options="partition-key-properties key-properties" group="Properties">
            <help short="The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.Gen1.properties.partitionKeyProperties[].name" options="name"/>
              <arg nullable="True" type="string" var="$parameters.Gen1.properties.partitionKeyProperties[].type" options="type">
                <enum>
                  <item name="String" value="&quot;String&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$parameters.Gen1.properties.storageLimitExceededBehavior" options="storage-limit-exceeded-behavior exceeded-behavior" group="Properties">
            <help short="The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If &quot;PauseIngress&quot; is specified, new events will not be read from the event source. If &quot;PurgeOldData&quot; is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData."/>
            <enum>
              <item name="PauseIngress" value="&quot;PauseIngress&quot;"/>
              <item name="PurgeOldData" value="&quot;PurgeOldData&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$parameters.Gen2" options="gen2" group="Parameters">
          <arg type="object" var="$parameters.Gen2.properties.storageConfiguration" options="storage-configuration" group="Properties">
            <help short="The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data."/>
            <arg type="string" var="$parameters.Gen2.properties.storageConfiguration.accountName" options="account-name">
              <help short="The name of the storage account that will hold the environment's Gen2 data."/>
            </arg>
            <arg type="string" var="$parameters.Gen2.properties.storageConfiguration.managementKey" options="management-key">
              <help short="The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses."/>
            </arg>
          </arg>
          <arg type="array<object>" var="$parameters.Gen2.properties.timeSeriesIdProperties" options="time-series-id-properties id-properties" group="Properties">
            <help short="The list of event properties which will be used to define the environment's time series id."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.Gen2.properties.timeSeriesIdProperties[].name" options="name"/>
              <arg nullable="True" type="string" var="$parameters.Gen2.properties.timeSeriesIdProperties[].type" options="type">
                <enum>
                  <item name="String" value="&quot;String&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$parameters.Gen2.properties.warmStoreConfiguration" options="warm-store-configuration warm-store-config" group="Properties">
            <help short="The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query."/>
            <arg type="duration" var="$parameters.Gen2.properties.warmStoreConfiguration.dataRetention" options="data-retention">
              <help short="ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store."/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" group="Parameters">
          <help short="The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate."/>
          <arg type="integer32" var="$parameters.sku.capacity" options="capacity">
            <help short="The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created."/>
            <format maximum="10" minimum="1"/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name">
            <help short="The name of this SKU."/>
            <enum>
              <item name="L1" value="&quot;L1&quot;"/>
              <item name="P1" value="&quot;P1&quot;"/>
              <item name="S1" value="&quot;S1&quot;"/>
              <item name="S2" value="&quot;S2&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Key-value pairs of additional properties for the resource."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Environments_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}">
          <request method="get">
            <path>
              <param type="string" name="environmentName" arg="$Path.environmentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-05-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="EnvironmentResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.TimeSeriesInsights/environments/{}"/>
                  </prop>
                  <prop type="string" name="kind" required="True">
                    <enum>
                      <item value="&quot;Gen1&quot;"/>
                      <item value="&quot;Gen2&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer32" name="capacity" required="True">
                      <format maximum="10" minimum="1"/>
                    </prop>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;L1&quot;"/>
                        <item value="&quot;P1&quot;"/>
                        <item value="&quot;S1&quot;"/>
                        <item value="&quot;S2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <discriminator property="kind" value="Gen1">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="creationTime"/>
                      <prop readOnly="True" type="string" name="dataAccessFqdn"/>
                      <prop readOnly="True" type="uuid" name="dataAccessId"/>
                      <prop type="duration" name="dataRetentionTime" required="True"/>
                      <prop type="array<object>" name="partitionKeyProperties" identifiers="name">
                        <item type="object" cls="TimeSeriesIdProperty_read">
                          <prop type="string" name="name"/>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="status" cls="EnvironmentStatus_read">
                        <prop readOnly="True" type="object" name="ingress">
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Paused&quot;"/>
                              <item value="&quot;Ready&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="object" name="stateDetails">
                            <prop type="string" name="code"/>
                            <prop type="string" name="message"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="warmStorage">
                          <prop readOnly="True" type="object" name="propertiesUsage" clientFlatten="True">
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Ok&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="object" name="stateDetails" clientFlatten="True">
                              <prop type="integer32" name="currentCount">
                                <format maximum="10" minimum="1"/>
                              </prop>
                              <prop type="integer32" name="maxCount">
                                <format maximum="10" minimum="1"/>
                              </prop>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="storageLimitExceededBehavior">
                        <enum>
                          <item value="&quot;PauseIngress&quot;"/>
                          <item value="&quot;PurgeOldData&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </discriminator>
                  <discriminator property="kind" value="Gen2">
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="dateTime" name="creationTime"/>
                      <prop readOnly="True" type="string" name="dataAccessFqdn"/>
                      <prop readOnly="True" type="uuid" name="dataAccessId"/>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="@EnvironmentStatus_read" name="status"/>
                      <prop type="object" name="storageConfiguration" required="True">
                        <prop type="string" name="accountName" required="True"/>
                      </prop>
                      <prop type="array<@TimeSeriesIdProperty_read>" name="timeSeriesIdProperties" required="True" identifiers="name">
                        <item type="@TimeSeriesIdProperty_read"/>
                      </prop>
                      <prop type="object" name="warmStoreConfiguration">
                        <prop type="duration" name="dataRetention" required="True"/>
                      </prop>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="sku" arg="$parameters.sku" required="True">
                <prop type="integer32" name="capacity" arg="$parameters.sku.capacity" required="True">
                  <format maximum="10" minimum="1"/>
                </prop>
                <prop type="string" name="name" arg="$parameters.sku.name" required="True">
                  <enum>
                    <item value="&quot;L1&quot;"/>
                    <item value="&quot;P1&quot;"/>
                    <item value="&quot;S1&quot;"/>
                    <item value="&quot;S2&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
              <discriminator property="kind" value="Gen1">
                <prop type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="duration" name="dataRetentionTime" arg="$parameters.Gen1.properties.dataRetentionTime" required="True"/>
                  <prop type="array<object>" name="partitionKeyProperties" arg="$parameters.Gen1.properties.partitionKeyProperties" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$parameters.Gen1.properties.partitionKeyProperties[].name"/>
                      <prop type="string" name="type" arg="$parameters.Gen1.properties.partitionKeyProperties[].type">
                        <enum>
                          <item value="&quot;String&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="string" name="storageLimitExceededBehavior" arg="$parameters.Gen1.properties.storageLimitExceededBehavior">
                    <enum>
                      <item value="&quot;PauseIngress&quot;"/>
                      <item value="&quot;PurgeOldData&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </discriminator>
              <discriminator property="kind" value="Gen2">
                <prop type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="object" name="storageConfiguration" arg="$parameters.Gen2.properties.storageConfiguration" required="True">
                    <prop type="string" name="accountName" arg="$parameters.Gen2.properties.storageConfiguration.accountName" required="True"/>
                    <prop type="string" name="managementKey" arg="$parameters.Gen2.properties.storageConfiguration.managementKey" required="True"/>
                  </prop>
                  <prop type="array<object>" name="timeSeriesIdProperties" arg="$parameters.Gen2.properties.timeSeriesIdProperties" required="True" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$parameters.Gen2.properties.timeSeriesIdProperties[].name"/>
                      <prop type="string" name="type" arg="$parameters.Gen2.properties.timeSeriesIdProperties[].type">
                        <enum>
                          <item value="&quot;String&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="object" name="warmStoreConfiguration" arg="$parameters.Gen2.properties.warmStoreConfiguration">
                    <prop type="duration" name="dataRetention" arg="$parameters.Gen2.properties.warmStoreConfiguration.dataRetention" required="True"/>
                  </prop>
                </prop>
              </discriminator>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Environments_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}">
          <request method="put">
            <path>
              <param type="string" name="environmentName" arg="$Path.environmentName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-05-15&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@EnvironmentResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
