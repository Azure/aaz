<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}/versions/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfS92ZXJzaW9ucy97aW5WTUFjY2Vzc0NvbnRyb2xQcm9maWxlVmVyc2lvbk5hbWV9/V/MjAyNC0wMy0wMw=="/>
  <commandGroup name="sig in-vm-access-control-profile-version">
    <command name="show" version="2024-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}/versions/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfS92ZXJzaW9ucy97aW5WTUFjY2Vzc0NvbnRyb2xQcm9maWxlVmVyc2lvbk5hbWV9/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the in VM access control profile resides."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="profile-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile in which the in VM access control profile version is to be created."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileVersionName" options="profile-version version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery in VM access control profile version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: MajorVersion.MinorVersion.Patch"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfileVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}/versions/{inVMAccessControlProfileVersionName}">
          <request method="get">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True"/>
              <param type="string" name="inVMAccessControlProfileVersionName" arg="$Path.inVMAccessControlProfileVersionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/inVMAccessControlProfiles/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAccess" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="excludeFromLatest"/>
                    <prop type="string" name="mode" required="True">
                      <enum>
                        <item value="&quot;Audit&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enforce&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="publishedDate"/>
                    <prop readOnly="True" type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary" identifiers="region">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="rules">
                      <prop type="array<object>" name="identities" identifiers="name">
                        <item type="object">
                          <prop type="string" name="exePath"/>
                          <prop type="string" name="groupName"/>
                          <prop type="string" name="name" required="True"/>
                          <prop type="string" name="processName"/>
                          <prop type="string" name="userName"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="privileges" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="string" name="path" required="True"/>
                          <prop type="object" name="queryParameters">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roleAssignments" identifiers="role">
                        <item type="object">
                          <prop type="array<string>" name="identities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="role" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roles" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="array<string>" name="privileges" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="targetLocations" identifiers="name">
                      <item type="object">
                        <prop type="array<object>" name="additionalReplicaSets">
                          <item type="object">
                            <prop type="integer32" name="regionalReplicaCount"/>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;Standard_ZRS&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="encryption">
                          <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                            <item type="object">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="integer32" name="lun" required="True"/>
                            </item>
                          </prop>
                          <prop type="object" name="osDiskImage">
                            <prop type="string" name="diskEncryptionSetId"/>
                            <prop type="object" name="securityProfile">
                              <prop type="string" name="confidentialVMEncryptionType">
                                <enum>
                                  <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                  <item value="&quot;EncryptedWithCmk&quot;"/>
                                  <item value="&quot;EncryptedWithPmk&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="secureVMDiskEncryptionSetId"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="excludeFromLatest"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="integer32" name="regionalReplicaCount"/>
                        <prop type="string" name="storageAccountType">
                          <enum>
                            <item value="&quot;PremiumV2_LRS&quot;"/>
                            <item value="&quot;Premium_LRS&quot;"/>
                            <item value="&quot;Standard_LRS&quot;"/>
                            <item value="&quot;Standard_ZRS&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-03-03" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}/versions/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfS92ZXJzaW9ucy97aW5WTUFjY2Vzc0NvbnRyb2xQcm9maWxlVmVyc2lvbk5hbWV9/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the in VM access control profile resides."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="profile-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile in which the in VM access control profile version is to be created."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileVersionName" options="profile-version version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery in VM access control profile version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: MajorVersion.MinorVersion.Patch"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfileVersions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}/versions/{inVMAccessControlProfileVersionName}">
          <request method="delete">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True"/>
              <param type="string" name="inVMAccessControlProfileVersionName" arg="$Path.inVMAccessControlProfileVersionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}/versions/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfS92ZXJzaW9ucy97aW5WTUFjY2Vzc0NvbnRyb2xQcm9maWxlVmVyc2lvbk5hbWV9/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the in VM access control profile resides."/>
          <format pattern="^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="profile-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile in which the in VM access control profile version is to be created."/>
          <format pattern="^[a-zA-Z0-9]+([-._]?[a-zA-Z0-9]+)*$" maxLength="80"/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileVersionName" options="profile-version version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery in VM access control profile version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: MajorVersion.MinorVersion.Patch"/>
          <format pattern="^[0-9]+\.[0-9]+\.[0-9]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryInVMAccessControlProfileVersion">
        <arg type="ResourceLocation" var="$galleryInVMAccessControlProfileVersion.location" options="location l" required="True" group="GalleryInVMAccessControlProfileVersion">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$galleryInVMAccessControlProfileVersion.tags" options="tags" hide="True" group="GalleryInVMAccessControlProfileVersion">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.defaultAccess" options="default-access" group="Properties">
          <help short="This property allows you to specify if the requests will be allowed to access the host endpoints. Possible values are: 'Allow', 'Deny'."/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$galleryInVMAccessControlProfileVersion.properties.excludeFromLatest" options="exclude-from-latest" group="Properties">
          <help short="If set to true, Virtual Machines deployed from the latest version of the Resource Profile won't use this Profile version."/>
        </arg>
        <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.mode" options="mode" group="Properties">
          <help short="This property allows you to specify whether the access control rules are in Audit mode, in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'."/>
          <enum>
            <item name="Audit" value="&quot;Audit&quot;"/>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enforce" value="&quot;Enforce&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$galleryInVMAccessControlProfileVersion.properties.rules" options="rules" group="Properties">
          <help short="This is the Access Control Rules specification for an in VM access control profile version."/>
          <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities" options="identities">
            <help short="A list of identities."/>
            <item type="object">
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].exePath" options="exe-path">
                <help short="The path to the executable."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].groupName" options="group-name">
                <help short="The groupName corresponding to this identity."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].name" options="name" required="True">
                <help short="The name of the identity."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].processName" options="process-name">
                <help short="The process name of the executable."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].userName" options="user-name">
                <help short="The username corresponding to this identity."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges" options="privileges">
            <help short="A list of privileges."/>
            <item type="object">
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].name" options="name" required="True">
                <help short="The name of the privilege."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].path" options="path" required="True">
                <help short="The HTTP path corresponding to the privilege."/>
              </arg>
              <arg type="object" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].queryParameters" options="query-parameters">
                <help short="The query parameters to match in the path."/>
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments" options="role-assignments">
            <help short="A list of role assignments."/>
            <item type="object">
              <arg type="array<string>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].identities" options="identities" required="True">
                <help short="A list of identities that can access the privileges defined by the role."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].role" options="role" required="True">
                <help short="The name of the role."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roles" options="roles">
            <help short="A list of roles."/>
            <item type="object">
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].name" options="name" required="True">
                <help short="The name of the role."/>
              </arg>
              <arg type="array<string>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].privileges" options="privileges" required="True">
                <help short="A list of privileges needed by this role."/>
                <item type="string"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations" options="target-locations" group="Properties">
          <help short="The target regions where the Resource Profile version is going to be replicated to. This property is updatable."/>
          <item type="object">
            <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets" options="additional-replica-sets">
              <help short="List of storage sku with replica count to create direct drive replicas."/>
              <item type="object">
                <arg type="integer32" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].regionalReplicaCount" options="regional-replica-count">
                  <help short="The number of direct drive replicas of the Image Version to be created.This Property is updatable"/>
                </arg>
                <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].storageAccountType" options="storage-account-type">
                  <help short="Specifies the storage account type to be used to create the direct drive replicas"/>
                  <enum>
                    <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                    <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                    <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                    <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="object" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption" options="encryption">
              <help short="Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact."/>
              <arg type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages" options="data-disk-images">
                <help short="A list of encryption specifications for data disk images."/>
                <item type="object">
                  <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].diskEncryptionSetId" options="disk-encryption-set-id">
                    <help short="A relative URI containing the resource ID of the disk encryption set."/>
                  </arg>
                  <arg type="integer32" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].lun" options="lun" required="True">
                    <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
                  </arg>
                </item>
              </arg>
              <arg type="object" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage" options="os-disk-image">
                <help short="Contains encryption settings for an OS disk image."/>
                <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.diskEncryptionSetId" options="disk-encryption-set-id">
                  <help short="A relative URI containing the resource ID of the disk encryption set."/>
                </arg>
                <arg type="object" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile" options="security-profile">
                  <help short="This property specifies the security profile of an OS disk image."/>
                  <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.confidentialVMEncryptionType" options="confidential-vm-encryption-type">
                    <help short="confidential VM encryption types"/>
                    <enum>
                      <item name="EncryptedVMGuestStateOnlyWithPmk" value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                      <item name="EncryptedWithCmk" value="&quot;EncryptedWithCmk&quot;"/>
                      <item name="EncryptedWithPmk" value="&quot;EncryptedWithPmk&quot;"/>
                      <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
                    <help short="secure VM disk encryption set id"/>
                  </arg>
                </arg>
              </arg>
            </arg>
            <arg type="boolean" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].excludeFromLatest" options="exclude-from-latest">
              <help short="Contains the flag setting to hide an image when users specify version='latest'"/>
            </arg>
            <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].name" options="name" required="True">
              <help short="The name of the region."/>
            </arg>
            <arg type="integer32" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].regionalReplicaCount" options="regional-replica-count">
              <help short="The number of replicas of the Image Version to be created per region. This property is updatable."/>
            </arg>
            <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].storageAccountType" options="storage-account-type">
              <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
              <enum>
                <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfileVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}/versions/{inVMAccessControlProfileVersionName}">
          <request method="put">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True">
                <format pattern="^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"/>
              </param>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True">
                <format pattern="^[a-zA-Z0-9]+([-._]?[a-zA-Z0-9]+)*$" maxLength="80"/>
              </param>
              <param type="string" name="inVMAccessControlProfileVersionName" arg="$Path.inVMAccessControlProfileVersionName" required="True">
                <format pattern="^[0-9]+\.[0-9]+\.[0-9]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="galleryInVMAccessControlProfileVersion" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$galleryInVMAccessControlProfileVersion.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAccess" arg="$galleryInVMAccessControlProfileVersion.properties.defaultAccess" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="excludeFromLatest" arg="$galleryInVMAccessControlProfileVersion.properties.excludeFromLatest"/>
                    <prop type="string" name="mode" arg="$galleryInVMAccessControlProfileVersion.properties.mode" required="True">
                      <enum>
                        <item value="&quot;Audit&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enforce&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="rules" arg="$galleryInVMAccessControlProfileVersion.properties.rules">
                      <prop type="array<object>" name="identities" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities" identifiers="name">
                        <item type="object">
                          <prop type="string" name="exePath" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].exePath"/>
                          <prop type="string" name="groupName" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].groupName"/>
                          <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].name" required="True"/>
                          <prop type="string" name="processName" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].processName"/>
                          <prop type="string" name="userName" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].userName"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="privileges" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].name" required="True"/>
                          <prop type="string" name="path" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].path" required="True"/>
                          <prop type="object" name="queryParameters" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].queryParameters">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roleAssignments" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments" identifiers="role">
                        <item type="object">
                          <prop type="array<string>" name="identities" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].identities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="role" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].role" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roles" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roles" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].name" required="True"/>
                          <prop type="array<string>" name="privileges" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].privileges" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="targetLocations" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations" identifiers="name">
                      <item type="object">
                        <prop type="array<object>" name="additionalReplicaSets" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets">
                          <item type="object">
                            <prop type="integer32" name="regionalReplicaCount" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].regionalReplicaCount"/>
                            <prop type="string" name="storageAccountType" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;Standard_ZRS&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="encryption" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption">
                          <prop type="array<object>" name="dataDiskImages" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages" identifiers="lun">
                            <item type="object">
                              <prop type="string" name="diskEncryptionSetId" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].diskEncryptionSetId"/>
                              <prop type="integer32" name="lun" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].lun" required="True"/>
                            </item>
                          </prop>
                          <prop type="object" name="osDiskImage" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage">
                            <prop type="string" name="diskEncryptionSetId" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.diskEncryptionSetId"/>
                            <prop type="object" name="securityProfile" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile">
                              <prop type="string" name="confidentialVMEncryptionType" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.confidentialVMEncryptionType">
                                <enum>
                                  <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                  <item value="&quot;EncryptedWithCmk&quot;"/>
                                  <item value="&quot;EncryptedWithPmk&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="secureVMDiskEncryptionSetId" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.secureVMDiskEncryptionSetId"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="excludeFromLatest" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].excludeFromLatest"/>
                        <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].name" required="True"/>
                        <prop type="integer32" name="regionalReplicaCount" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].regionalReplicaCount"/>
                        <prop type="string" name="storageAccountType" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].storageAccountType">
                          <enum>
                            <item value="&quot;PremiumV2_LRS&quot;"/>
                            <item value="&quot;Premium_LRS&quot;"/>
                            <item value="&quot;Standard_LRS&quot;"/>
                            <item value="&quot;Standard_ZRS&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$galleryInVMAccessControlProfileVersion.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/inVMAccessControlProfiles/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAccess" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="excludeFromLatest"/>
                    <prop type="string" name="mode" required="True">
                      <enum>
                        <item value="&quot;Audit&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enforce&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="publishedDate"/>
                    <prop readOnly="True" type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary" identifiers="region">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="rules">
                      <prop type="array<object>" name="identities" identifiers="name">
                        <item type="object">
                          <prop type="string" name="exePath"/>
                          <prop type="string" name="groupName"/>
                          <prop type="string" name="name" required="True"/>
                          <prop type="string" name="processName"/>
                          <prop type="string" name="userName"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="privileges" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="string" name="path" required="True"/>
                          <prop type="object" name="queryParameters">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roleAssignments" identifiers="role">
                        <item type="object">
                          <prop type="array<string>" name="identities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="role" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roles" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="array<string>" name="privileges" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="targetLocations" identifiers="name">
                      <item type="object">
                        <prop type="array<object>" name="additionalReplicaSets">
                          <item type="object">
                            <prop type="integer32" name="regionalReplicaCount"/>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;Standard_ZRS&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="encryption">
                          <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                            <item type="object">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="integer32" name="lun" required="True"/>
                            </item>
                          </prop>
                          <prop type="object" name="osDiskImage">
                            <prop type="string" name="diskEncryptionSetId"/>
                            <prop type="object" name="securityProfile">
                              <prop type="string" name="confidentialVMEncryptionType">
                                <enum>
                                  <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                  <item value="&quot;EncryptedWithCmk&quot;"/>
                                  <item value="&quot;EncryptedWithPmk&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="secureVMDiskEncryptionSetId"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="excludeFromLatest"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="integer32" name="regionalReplicaCount"/>
                        <prop type="string" name="storageAccountType">
                          <enum>
                            <item value="&quot;PremiumV2_LRS&quot;"/>
                            <item value="&quot;Premium_LRS&quot;"/>
                            <item value="&quot;Standard_LRS&quot;"/>
                            <item value="&quot;Standard_ZRS&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/invmaccesscontrolprofiles/{}/versions/{}" version="2024-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pblZNQWNjZXNzQ29udHJvbFByb2ZpbGVzL3tpblZNQWNjZXNzQ29udHJvbFByb2ZpbGVOYW1lfS92ZXJzaW9ucy97aW5WTUFjY2Vzc0NvbnRyb2xQcm9maWxlVmVyc2lvbk5hbWV9/V/MjAyNC0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryName" options="gallery-name" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the in VM access control profile resides."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileName" options="profile-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery in VM access control profile in which the in VM access control profile version is to be created."/>
        </arg>
        <arg type="string" var="$Path.inVMAccessControlProfileVersionName" options="profile-version version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery in VM access control profile version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: MajorVersion.MinorVersion.Patch"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryInVMAccessControlProfileVersion">
        <arg type="ResourceLocation" var="$galleryInVMAccessControlProfileVersion.location" options="location l" hide="True" group="GalleryInVMAccessControlProfileVersion">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$galleryInVMAccessControlProfileVersion.tags" options="tags" hide="True" group="GalleryInVMAccessControlProfileVersion">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.defaultAccess" options="default-access" group="Properties">
          <help short="This property allows you to specify if the requests will be allowed to access the host endpoints. Possible values are: 'Allow', 'Deny'."/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$galleryInVMAccessControlProfileVersion.properties.excludeFromLatest" options="exclude-from-latest" group="Properties">
          <help short="If set to true, Virtual Machines deployed from the latest version of the Resource Profile won't use this Profile version."/>
        </arg>
        <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.mode" options="mode" group="Properties">
          <help short="This property allows you to specify whether the access control rules are in Audit mode, in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'."/>
          <enum>
            <item name="Audit" value="&quot;Audit&quot;"/>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enforce" value="&quot;Enforce&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$galleryInVMAccessControlProfileVersion.properties.rules" options="rules" group="Properties">
          <help short="This is the Access Control Rules specification for an in VM access control profile version."/>
          <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities" options="identities">
            <help short="A list of identities."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].exePath" options="exe-path">
                <help short="The path to the executable."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].groupName" options="group-name">
                <help short="The groupName corresponding to this identity."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].name" options="name">
                <help short="The name of the identity."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].processName" options="process-name">
                <help short="The process name of the executable."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].userName" options="user-name">
                <help short="The username corresponding to this identity."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges" options="privileges">
            <help short="A list of privileges."/>
            <item nullable="True" type="object">
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].name" options="name">
                <help short="The name of the privilege."/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].path" options="path">
                <help short="The HTTP path corresponding to the privilege."/>
              </arg>
              <arg nullable="True" type="object" var="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].queryParameters" options="query-parameters">
                <help short="The query parameters to match in the path."/>
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments" options="role-assignments">
            <help short="A list of role assignments."/>
            <item nullable="True" type="object">
              <arg type="array<string>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].identities" options="identities">
                <help short="A list of identities that can access the privileges defined by the role."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].role" options="role">
                <help short="The name of the role."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roles" options="roles">
            <help short="A list of roles."/>
            <item nullable="True" type="object">
              <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].name" options="name">
                <help short="The name of the role."/>
              </arg>
              <arg type="array<string>" var="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].privileges" options="privileges">
                <help short="A list of privileges needed by this role."/>
                <item nullable="True" type="string"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations" options="target-locations" group="Properties">
          <help short="The target regions where the Resource Profile version is going to be replicated to. This property is updatable."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets" options="additional-replica-sets">
              <help short="List of storage sku with replica count to create direct drive replicas."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="integer32" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].regionalReplicaCount" options="regional-replica-count">
                  <help short="The number of direct drive replicas of the Image Version to be created.This Property is updatable"/>
                </arg>
                <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].storageAccountType" options="storage-account-type">
                  <help short="Specifies the storage account type to be used to create the direct drive replicas"/>
                  <enum>
                    <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                    <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                    <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                    <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="object" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption" options="encryption">
              <help short="Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact."/>
              <arg nullable="True" type="array<object>" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages" options="data-disk-images">
                <help short="A list of encryption specifications for data disk images."/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].diskEncryptionSetId" options="disk-encryption-set-id">
                    <help short="A relative URI containing the resource ID of the disk encryption set."/>
                  </arg>
                  <arg type="integer32" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].lun" options="lun">
                    <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="object" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage" options="os-disk-image">
                <help short="Contains encryption settings for an OS disk image."/>
                <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.diskEncryptionSetId" options="disk-encryption-set-id">
                  <help short="A relative URI containing the resource ID of the disk encryption set."/>
                </arg>
                <arg nullable="True" type="object" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile" options="security-profile">
                  <help short="This property specifies the security profile of an OS disk image."/>
                  <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.confidentialVMEncryptionType" options="confidential-vm-encryption-type">
                    <help short="confidential VM encryption types"/>
                    <enum>
                      <item name="EncryptedVMGuestStateOnlyWithPmk" value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                      <item name="EncryptedWithCmk" value="&quot;EncryptedWithCmk&quot;"/>
                      <item name="EncryptedWithPmk" value="&quot;EncryptedWithPmk&quot;"/>
                      <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
                    <help short="secure VM disk encryption set id"/>
                  </arg>
                </arg>
              </arg>
            </arg>
            <arg nullable="True" type="boolean" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].excludeFromLatest" options="exclude-from-latest">
              <help short="Contains the flag setting to hide an image when users specify version='latest'"/>
            </arg>
            <arg type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].name" options="name">
              <help short="The name of the region."/>
            </arg>
            <arg nullable="True" type="integer32" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].regionalReplicaCount" options="regional-replica-count">
              <help short="The number of replicas of the Image Version to be created per region. This property is updatable."/>
            </arg>
            <arg nullable="True" type="string" var="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].storageAccountType" options="storage-account-type">
              <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
              <enum>
                <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="GalleryInVMAccessControlProfileVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}/versions/{inVMAccessControlProfileVersionName}">
          <request method="get">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True"/>
              <param type="string" name="inVMAccessControlProfileVersionName" arg="$Path.inVMAccessControlProfileVersionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryInVMAccessControlProfileVersion_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/inVMAccessControlProfiles/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="defaultAccess" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="excludeFromLatest"/>
                    <prop type="string" name="mode" required="True">
                      <enum>
                        <item value="&quot;Audit&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enforce&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="publishedDate"/>
                    <prop readOnly="True" type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary" identifiers="region">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="rules">
                      <prop type="array<object>" name="identities" identifiers="name">
                        <item type="object">
                          <prop type="string" name="exePath"/>
                          <prop type="string" name="groupName"/>
                          <prop type="string" name="name" required="True"/>
                          <prop type="string" name="processName"/>
                          <prop type="string" name="userName"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="privileges" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="string" name="path" required="True"/>
                          <prop type="object" name="queryParameters">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roleAssignments" identifiers="role">
                        <item type="object">
                          <prop type="array<string>" name="identities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="role" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="roles" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="array<string>" name="privileges" required="True">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="targetLocations" identifiers="name">
                      <item type="object">
                        <prop type="array<object>" name="additionalReplicaSets">
                          <item type="object">
                            <prop type="integer32" name="regionalReplicaCount"/>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;Standard_ZRS&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="encryption">
                          <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                            <item type="object">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="integer32" name="lun" required="True"/>
                            </item>
                          </prop>
                          <prop type="object" name="osDiskImage">
                            <prop type="string" name="diskEncryptionSetId"/>
                            <prop type="object" name="securityProfile">
                              <prop type="string" name="confidentialVMEncryptionType">
                                <enum>
                                  <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                  <item value="&quot;EncryptedWithCmk&quot;"/>
                                  <item value="&quot;EncryptedWithPmk&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="secureVMDiskEncryptionSetId"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="excludeFromLatest"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="integer32" name="regionalReplicaCount"/>
                        <prop type="string" name="storageAccountType">
                          <enum>
                            <item value="&quot;PremiumV2_LRS&quot;"/>
                            <item value="&quot;Premium_LRS&quot;"/>
                            <item value="&quot;Standard_LRS&quot;"/>
                            <item value="&quot;Standard_ZRS&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="galleryInVMAccessControlProfileVersion" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$galleryInVMAccessControlProfileVersion.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="defaultAccess" arg="$galleryInVMAccessControlProfileVersion.properties.defaultAccess" required="True">
                  <enum>
                    <item value="&quot;Allow&quot;"/>
                    <item value="&quot;Deny&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="excludeFromLatest" arg="$galleryInVMAccessControlProfileVersion.properties.excludeFromLatest"/>
                <prop type="string" name="mode" arg="$galleryInVMAccessControlProfileVersion.properties.mode" required="True">
                  <enum>
                    <item value="&quot;Audit&quot;"/>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enforce&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="rules" arg="$galleryInVMAccessControlProfileVersion.properties.rules">
                  <prop type="array<object>" name="identities" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities" identifiers="name">
                    <item type="object">
                      <prop type="string" name="exePath" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].exePath"/>
                      <prop type="string" name="groupName" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].groupName"/>
                      <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].name" required="True"/>
                      <prop type="string" name="processName" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].processName"/>
                      <prop type="string" name="userName" arg="$galleryInVMAccessControlProfileVersion.properties.rules.identities[].userName"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="privileges" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].name" required="True"/>
                      <prop type="string" name="path" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].path" required="True"/>
                      <prop type="object" name="queryParameters" arg="$galleryInVMAccessControlProfileVersion.properties.rules.privileges[].queryParameters">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="roleAssignments" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments" identifiers="role">
                    <item type="object">
                      <prop type="array<string>" name="identities" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].identities" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="role" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roleAssignments[].role" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="roles" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roles" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].name" required="True"/>
                      <prop type="array<string>" name="privileges" arg="$galleryInVMAccessControlProfileVersion.properties.rules.roles[].privileges" required="True">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="array<object>" name="targetLocations" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations" identifiers="name">
                  <item type="object">
                    <prop type="array<object>" name="additionalReplicaSets" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets">
                      <item type="object">
                        <prop type="integer32" name="regionalReplicaCount" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].regionalReplicaCount"/>
                        <prop type="string" name="storageAccountType" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].additionalReplicaSets[].storageAccountType">
                          <enum>
                            <item value="&quot;PremiumV2_LRS&quot;"/>
                            <item value="&quot;Premium_LRS&quot;"/>
                            <item value="&quot;Standard_LRS&quot;"/>
                            <item value="&quot;Standard_ZRS&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="encryption" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption">
                      <prop type="array<object>" name="dataDiskImages" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="diskEncryptionSetId" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].diskEncryptionSetId"/>
                          <prop type="integer32" name="lun" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.dataDiskImages[].lun" required="True"/>
                        </item>
                      </prop>
                      <prop type="object" name="osDiskImage" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage">
                        <prop type="string" name="diskEncryptionSetId" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.diskEncryptionSetId"/>
                        <prop type="object" name="securityProfile" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile">
                          <prop type="string" name="confidentialVMEncryptionType" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.confidentialVMEncryptionType">
                            <enum>
                              <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                              <item value="&quot;EncryptedWithCmk&quot;"/>
                              <item value="&quot;EncryptedWithPmk&quot;"/>
                              <item value="&quot;NonPersistedTPM&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="secureVMDiskEncryptionSetId" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].encryption.osDiskImage.securityProfile.secureVMDiskEncryptionSetId"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="boolean" name="excludeFromLatest" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].excludeFromLatest"/>
                    <prop type="string" name="name" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].name" required="True"/>
                    <prop type="integer32" name="regionalReplicaCount" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].regionalReplicaCount"/>
                    <prop type="string" name="storageAccountType" arg="$galleryInVMAccessControlProfileVersion.properties.targetLocations[].storageAccountType">
                      <enum>
                        <item value="&quot;PremiumV2_LRS&quot;"/>
                        <item value="&quot;Premium_LRS&quot;"/>
                        <item value="&quot;Standard_LRS&quot;"/>
                        <item value="&quot;Standard_ZRS&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$galleryInVMAccessControlProfileVersion.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="GalleryInVMAccessControlProfileVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{inVMAccessControlProfileName}/versions/{inVMAccessControlProfileVersionName}">
          <request method="put">
            <path>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True">
                <format pattern="^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"/>
              </param>
              <param type="string" name="inVMAccessControlProfileName" arg="$Path.inVMAccessControlProfileName" required="True">
                <format pattern="^[a-zA-Z0-9]+([-._]?[a-zA-Z0-9]+)*$" maxLength="80"/>
              </param>
              <param type="string" name="inVMAccessControlProfileVersionName" arg="$Path.inVMAccessControlProfileVersionName" required="True">
                <format pattern="^[0-9]+\.[0-9]+\.[0-9]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-03&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@GalleryInVMAccessControlProfileVersion_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
