<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkanalytics/dataproducts/{}" version="2023-11-15" swagger="mgmt-plane/networkanalytics/ResourceProviders/Microsoft.NetworkAnalytics/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0FuYWx5dGljcy9kYXRhUHJvZHVjdHMve2RhdGFQcm9kdWN0TmFtZX0=/V/MjAyMy0xMS0xNQ=="/>
  <commandGroup name="network-analytics data-product">
    <command name="show" version="2023-11-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkanalytics/dataproducts/{}" version="2023-11-15" swagger="mgmt-plane/networkanalytics/ResourceProviders/Microsoft.NetworkAnalytics/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0FuYWx5dGljcy9kYXRhUHJvZHVjdHMve2RhdGFQcm9kdWN0TmFtZX0=/V/MjAyMy0xMS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataProductName" options="data-product-name name n" required="True" idPart="name">
          <help short="The data product resource name"/>
          <format pattern="^[a-z][a-z0-9]*$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DataProducts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataProducts/{dataProductName}">
          <request method="get">
            <path>
              <param type="string" name="dataProductName" arg="$Path.dataProductName" required="True">
                <format pattern="^[a-z][a-z0-9]*$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkAnalytics/dataProducts/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<string>" name="availableMinorVersions">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="consumptionEndpoints">
                      <prop readOnly="True" type="ResourceId" name="fileAccessResourceId"/>
                      <prop readOnly="True" type="string" name="fileAccessUrl"/>
                      <prop readOnly="True" type="ResourceId" name="ingestionResourceId"/>
                      <prop readOnly="True" type="string" name="ingestionUrl"/>
                      <prop readOnly="True" type="ResourceId" name="queryResourceId"/>
                      <prop readOnly="True" type="string" name="queryUrl"/>
                    </prop>
                    <prop type="string" name="currentMinorVersion"/>
                    <prop type="object" name="customerEncryptionKey">
                      <prop type="string" name="keyName" required="True"/>
                      <prop type="string" name="keyVaultUri" required="True"/>
                      <prop type="string" name="keyVersion" required="True"/>
                    </prop>
                    <prop type="string" name="customerManagedKeyEncryptionEnabled">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="documentation"/>
                    <prop readOnly="True" type="string" name="keyVaultUrl"/>
                    <prop type="string" name="majorVersion" required="True"/>
                    <prop type="object" name="networkacls">
                      <prop type="array<string>" name="allowedQueryIpRangeList" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="defaultAction" required="True">
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules" required="True">
                        <item type="object">
                          <prop type="string" name="action" required="True"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="virtualNetworkRule" required="True">
                        <item type="object">
                          <prop type="string" name="action"/>
                          <prop type="string" name="id" required="True"/>
                          <prop type="string" name="state"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="owners">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="privateLinksEnabled">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="purviewAccount"/>
                    <prop type="string" name="purviewCollection"/>
                    <prop type="string" name="redundancy">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-11-15" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkanalytics/dataproducts/{}" version="2023-11-15" swagger="mgmt-plane/networkanalytics/ResourceProviders/Microsoft.NetworkAnalytics/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0FuYWx5dGljcy9kYXRhUHJvZHVjdHMve2RhdGFQcm9kdWN0TmFtZX0=/V/MjAyMy0xMS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataProductName" options="data-product-name name n" required="True" idPart="name">
          <help short="The data product resource name"/>
          <format pattern="^[a-z][a-z0-9]*$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DataProducts_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataProducts/{dataProductName}">
          <request method="delete">
            <path>
              <param type="string" name="dataProductName" arg="$Path.dataProductName" required="True">
                <format pattern="^[a-z][a-z0-9]*$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-11-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkanalytics/dataproducts/{}" version="2023-11-15" swagger="mgmt-plane/networkanalytics/ResourceProviders/Microsoft.NetworkAnalytics/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0FuYWx5dGljcy9kYXRhUHJvZHVjdHMve2RhdGFQcm9kdWN0TmFtZX0=/V/MjAyMy0xMS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataProductName" options="data-product-name name n" required="True" idPart="name">
          <help short="The data product resource name"/>
          <format pattern="^[a-z][a-z0-9]*$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.customerEncryptionKey" options="encryption-key" group="Properties">
          <help short="Customer managed encryption key details for data product."/>
          <arg type="string" var="$resource.properties.customerEncryptionKey.keyName" options="key-name" required="True">
            <help short="The name of the key vault key."/>
          </arg>
          <arg type="string" var="$resource.properties.customerEncryptionKey.keyVaultUri" options="key-vault-uri" required="True">
            <help short="The Uri of the key vault."/>
          </arg>
          <arg type="string" var="$resource.properties.customerEncryptionKey.keyVersion" options="key-version" required="True">
            <help short="The version of the key vault key."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.customerManagedKeyEncryptionEnabled" options="key-encryption-enable" group="Properties">
          <help short="Flag to enable customer managed key encryption for data product."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.majorVersion" options="major-version" group="Properties">
          <help short="Major version of data product."/>
        </arg>
        <arg type="object" var="$resource.properties.managedResourceGroupConfiguration" options="managed-rg" group="Properties">
          <help short="Managed resource group configuration."/>
          <arg type="string" var="$resource.properties.managedResourceGroupConfiguration.location" options="location" required="True">
            <help short="Managed Resource Group location"/>
          </arg>
          <arg type="string" var="$resource.properties.managedResourceGroupConfiguration.name" options="name" required="True">
            <help short="Name of managed resource group"/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.networkacls" options="networkacls" group="Properties">
          <help short="Network rule set for data product."/>
          <arg type="array<string>" var="$resource.properties.networkacls.allowedQueryIpRangeList" options="allowed-query-ip-range-list" required="True">
            <help short="The list of query ips in the format of CIDR allowed to connect to query/visualization endpoint."/>
            <item type="string"/>
          </arg>
          <arg type="string" var="$resource.properties.networkacls.defaultAction" options="default-action" required="True">
            <help short="Default Action"/>
            <enum>
              <item name="Allow" value="&quot;Allow&quot;"/>
              <item name="Deny" value="&quot;Deny&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$resource.properties.networkacls.ipRules" options="ip-rules" required="True">
            <help short="IP rule with specific IP or IP range in CIDR format."/>
            <item type="object">
              <arg type="string" var="$resource.properties.networkacls.ipRules[].action" options="action" required="True">
                <help short="The action of virtual network rule."/>
              </arg>
              <arg type="string" var="$resource.properties.networkacls.ipRules[].value" options="value">
                <help short="IP Rules Value"/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$resource.properties.networkacls.virtualNetworkRule" options="virtual-network-rule" required="True">
            <help short="Virtual Network Rule"/>
            <item type="object">
              <arg type="string" var="$resource.properties.networkacls.virtualNetworkRule[].action" options="action">
                <help short="The action of virtual network rule."/>
              </arg>
              <arg type="string" var="$resource.properties.networkacls.virtualNetworkRule[].id" options="id" required="True">
                <help short="Resource ID of a subnet"/>
              </arg>
              <arg type="string" var="$resource.properties.networkacls.virtualNetworkRule[].state" options="state">
                <help short="Gets the state of virtual network rule."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="array<string>" var="$resource.properties.owners" options="owners" group="Properties">
          <help short="List of name or email associated with data product resource deployment."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.privateLinksEnabled" options="private-links-enabled" group="Properties">
          <help short="Flag to enable or disable private link for data product resource."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.product" options="product" group="Properties">
          <help short="Product name of data product."/>
        </arg>
        <arg type="string" var="$resource.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Flag to enable or disable public access of data product resource."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.publisher" options="publisher" group="Properties">
          <help short="Data product publisher name."/>
        </arg>
        <arg type="string" var="$resource.properties.purviewAccount" options="purview-account" group="Properties">
          <help short="Purview account url for data product to connect to."/>
        </arg>
        <arg type="string" var="$resource.properties.purviewCollection" options="purview-collection" group="Properties">
          <help short="Purview collection url for data product to connect to."/>
        </arg>
        <arg type="string" var="$resource.properties.redundancy" options="redundancy" group="Properties">
          <help short="Flag to enable or disable redundancy for data product."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="DataProducts_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataProducts/{dataProductName}">
          <request method="put">
            <path>
              <param type="string" name="dataProductName" arg="$Path.dataProductName" required="True">
                <format pattern="^[a-z][a-z0-9]*$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="customerEncryptionKey" arg="$resource.properties.customerEncryptionKey">
                      <prop type="string" name="keyName" arg="$resource.properties.customerEncryptionKey.keyName" required="True"/>
                      <prop type="string" name="keyVaultUri" arg="$resource.properties.customerEncryptionKey.keyVaultUri" required="True"/>
                      <prop type="string" name="keyVersion" arg="$resource.properties.customerEncryptionKey.keyVersion" required="True"/>
                    </prop>
                    <prop type="string" name="customerManagedKeyEncryptionEnabled" arg="$resource.properties.customerManagedKeyEncryptionEnabled">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="majorVersion" arg="$resource.properties.majorVersion" required="True"/>
                    <prop type="object" name="managedResourceGroupConfiguration" arg="$resource.properties.managedResourceGroupConfiguration">
                      <prop type="string" name="location" arg="$resource.properties.managedResourceGroupConfiguration.location" required="True"/>
                      <prop type="string" name="name" arg="$resource.properties.managedResourceGroupConfiguration.name" required="True"/>
                    </prop>
                    <prop type="object" name="networkacls" arg="$resource.properties.networkacls">
                      <prop type="array<string>" name="allowedQueryIpRangeList" arg="$resource.properties.networkacls.allowedQueryIpRangeList" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="defaultAction" arg="$resource.properties.networkacls.defaultAction" required="True">
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules" arg="$resource.properties.networkacls.ipRules" required="True">
                        <item type="object">
                          <prop type="string" name="action" arg="$resource.properties.networkacls.ipRules[].action" required="True"/>
                          <prop type="string" name="value" arg="$resource.properties.networkacls.ipRules[].value"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="virtualNetworkRule" arg="$resource.properties.networkacls.virtualNetworkRule" required="True">
                        <item type="object">
                          <prop type="string" name="action" arg="$resource.properties.networkacls.virtualNetworkRule[].action"/>
                          <prop type="string" name="id" arg="$resource.properties.networkacls.virtualNetworkRule[].id" required="True"/>
                          <prop type="string" name="state" arg="$resource.properties.networkacls.virtualNetworkRule[].state"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="owners" arg="$resource.properties.owners">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="privateLinksEnabled" arg="$resource.properties.privateLinksEnabled">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="product" arg="$resource.properties.product" required="True"/>
                    <prop type="string" name="publicNetworkAccess" arg="$resource.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publisher" arg="$resource.properties.publisher" required="True"/>
                    <prop type="string" name="purviewAccount" arg="$resource.properties.purviewAccount"/>
                    <prop type="string" name="purviewCollection" arg="$resource.properties.purviewCollection"/>
                    <prop type="string" name="redundancy" arg="$resource.properties.redundancy">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkAnalytics/dataProducts/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<string>" name="availableMinorVersions">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="consumptionEndpoints">
                      <prop readOnly="True" type="ResourceId" name="fileAccessResourceId"/>
                      <prop readOnly="True" type="string" name="fileAccessUrl"/>
                      <prop readOnly="True" type="ResourceId" name="ingestionResourceId"/>
                      <prop readOnly="True" type="string" name="ingestionUrl"/>
                      <prop readOnly="True" type="ResourceId" name="queryResourceId"/>
                      <prop readOnly="True" type="string" name="queryUrl"/>
                    </prop>
                    <prop type="string" name="currentMinorVersion"/>
                    <prop type="object" name="customerEncryptionKey">
                      <prop type="string" name="keyName" required="True"/>
                      <prop type="string" name="keyVaultUri" required="True"/>
                      <prop type="string" name="keyVersion" required="True"/>
                    </prop>
                    <prop type="string" name="customerManagedKeyEncryptionEnabled">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="documentation"/>
                    <prop readOnly="True" type="string" name="keyVaultUrl"/>
                    <prop type="string" name="majorVersion" required="True"/>
                    <prop type="object" name="networkacls">
                      <prop type="array<string>" name="allowedQueryIpRangeList" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="defaultAction" required="True">
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules" required="True">
                        <item type="object">
                          <prop type="string" name="action" required="True"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="array<object>" name="virtualNetworkRule" required="True">
                        <item type="object">
                          <prop type="string" name="action"/>
                          <prop type="string" name="id" required="True"/>
                          <prop type="string" name="state"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="owners">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="privateLinksEnabled">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="purviewAccount"/>
                    <prop type="string" name="purviewCollection"/>
                    <prop type="string" name="redundancy">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
